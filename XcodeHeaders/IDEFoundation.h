#import "DVTFoundation.h"

@class IDEExecutionRunnableTracker;
@class IDERunOperationWorker;
@class IDERunOperationWorkerGroup;
@class IDERunDestination;
@class IDELaunchParametersSnapshot;
@class IDEExecutionTracker;

//struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > {
//    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > __data_;
//};
//
//struct _sourcekit_response_s {
//};
//
//struct __CFArray {
//};
//
//struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > > {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> * * __value_;
//    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > __value_;
//};
//
//struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > > {
//    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > > __ptr_;
//};
//
//struct __hash_table<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::hash<__NStatSource *>, true>, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::equal_to<__NStatSource *>, true>, std::__1::allocator<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo> > > {
//    struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > > __bucket_list_;
//    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> > > __p1_;
//    struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::hash<__NStatSource *>, true> > __p2_;
//    struct __compressed_pair<float, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::equal_to<__NStatSource *>, true> > __p3_;
//};
//
//struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::hash<_sourcekit_uid_s *>, true> > {
//    unsigned long long __value_;
//};
//
//struct __CFSet {
//};
//
//struct _IDEDataMatrixDescriptor {
//    char * field_1;
//    unsigned char field_2;
//    unsigned char field_3;
//    struct _IDEDataMatrixColumnDescriptor field_4[0];
//};
//
//struct anonymous_type_9 {
//    unsigned long long data[4];
//};
//
//struct os_unfair_lock_s {
//    unsigned int _os_unfair_lock_opaque;
//};
//
//struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > {
//    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > __data_;
//};
//
//struct _IDEDataMatrixRowOp {
//    int field_1;
//    struct _NSRange field_2;
//};
//
//struct anonymous_type_79 {
//    unsigned long long field_1;
//    unsigned long long field_2;
//};
//
//struct _sourcekit_uid_s {
//};
//
//struct anonymous_type_93 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//union anonymous_type_75 {
//    unsigned char field_1;
//    struct anonymous_type_76 field_2;
//};
//
//struct anonymous_type_80 {
//    unsigned long long field_1;
//    unsigned long long field_2;
//};
//
//union anonymous_type_48 {
//    unsigned char field_1;
//    struct anonymous_type_49 field_2;
//};
//
//union anonymous_type_39 {
//    unsigned char field_1;
//    struct anonymous_type_40 field_2;
//};
//
//struct _sourcekit_connection_s {
//};
//
//struct anonymous_type_44 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//union anonymous_type_71 {
//    unsigned char field_1;
//    struct anonymous_type_72 field_2;
//};
//
//struct vector<long long, std::__1::allocator<long long> > {
//    long long * field_1;
//    long long * field_2;
//    struct __compressed_pair<long long *, std::__1::allocator<long long> > field_3;
//};
//
//struct anonymous_type_17 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct anonymous_type_40 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > > {
//    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > > __ptr_;
//};
//
//struct unordered_map<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *, std::__1::hash<_sourcekit_uid_s *>, std::__1::equal_to<_sourcekit_uid_s *>, std::__1::allocator<std::__1::pair<_sourcekit_uid_s *const, DVTSourceCodeSymbolKind *> > > {
//    struct __hash_table<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::__unordered_map_hasher<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::hash<_sourcekit_uid_s *>, true>, std::__1::__unordered_map_equal<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::equal_to<_sourcekit_uid_s *>, true>, std::__1::allocator<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *> > > __table_;
//};
//
//struct anonymous_type_2 {
//    unsigned long long field_1;
//    id * field_2;
//    unsigned long long * field_3;
//    unsigned long long field_4[5];
//};
//
//struct anonymous_type_13 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::hash<int>, true> > {
//    unsigned long long __value_;
//};
//
//struct __compressed_pair<long long *, std::__1::allocator<long long> > {
//    long long * field_1;
//};
//
//struct __sFILE {
//    char * field_1;
//    int field_2;
//    int field_3;
//    short field_4;
//    short field_5;
//    struct __sbuf field_6;
//    int field_7;
//    void * field_8;
//    void * * field_9;
//    void * * field_10;
//    void * * field_11;
//    void * * field_12;
//    struct __sbuf field_13;
//    struct __sFILEX * field_14;
//    int field_15;
//    unsigned char field_16[3];
//    unsigned char field_17[1];
//    struct __sbuf field_18;
//    int field_19;
//    long long field_20;
//};
//
//struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> > > {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> __value_;
//};
//
//struct __sFILEX; /* Incomplete type */
//
//struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> *> > {
//    unsigned long long __value_;
//};
//
//struct UIDContainer {
//    struct IDESourceKitUIDKeys keys;
//    struct IDESourceKitUIDRequests requests;
//    struct IDESourceKitUIDValues values;
//};
//
//struct _NSRange {
//    unsigned long long field_1;
//    unsigned long long field_2;
//};
//
//struct anonymous_type_3 {
//    unsigned long long field_1;
//    id * field_2;
//    unsigned long long * field_3;
//    unsigned long long field_4[5];
//};
//
//struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > {
//    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > __data_;
//};
//
//struct LLVMOpaqueCoverageMapping {
//};
//
//struct _IDEDataMatrixColumnDescriptor {
//    char * field_1;
//};
//
//struct anonymous_type_94 {
//    unsigned long long data[4];
//};
//
//struct __compressed_pair<float, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::equal_to<__NStatSource *>, true> > {
//    float __value_;
//};
//
//struct anonymous_type_76 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > > {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> * * __value_;
//    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > __value_;
//};
//
//struct anonymous_type_81 {
//    unsigned observingForBuildProductsRelative:1;
//    unsigned observingForCurrentSDKRelative:1;
//    unsigned observingForSourceTreeRelative:1;
//};
//
//struct anonymous_type_72 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct anonymous_type_49 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct LLVMOpaqueCoverageData {
//};
//
//union anonymous_type_45 {
//    unsigned char field_1;
//    struct anonymous_type_46 field_2;
//};
//
//struct IDESourceKitUIDKeys {
//    struct _sourcekit_uid_s * field_1;
//    struct _sourcekit_uid_s * field_2;
//    struct _sourcekit_uid_s * field_3;
//    struct _sourcekit_uid_s * field_4;
//    struct _sourcekit_uid_s * field_5;
//    struct _sourcekit_uid_s * field_6;
//    struct _sourcekit_uid_s * field_7;
//    struct _sourcekit_uid_s * field_8;
//    struct _sourcekit_uid_s * field_9;
//    struct _sourcekit_uid_s * field_10;
//    struct _sourcekit_uid_s * field_11;
//    struct _sourcekit_uid_s * field_12;
//    struct _sourcekit_uid_s * field_13;
//    struct _sourcekit_uid_s * field_14;
//    struct _sourcekit_uid_s * field_15;
//    struct _sourcekit_uid_s * field_16;
//    struct _sourcekit_uid_s * field_17;
//    struct _sourcekit_uid_s * field_18;
//    struct _sourcekit_uid_s * field_19;
//    struct _sourcekit_uid_s * field_20;
//    struct _sourcekit_uid_s * field_21;
//    struct _sourcekit_uid_s * field_22;
//    struct _sourcekit_uid_s * field_23;
//    struct _sourcekit_uid_s * field_24;
//    struct _sourcekit_uid_s * field_25;
//    struct _sourcekit_uid_s * field_26;
//    struct _sourcekit_uid_s * field_27;
//    struct _sourcekit_uid_s * field_28;
//    struct _sourcekit_uid_s * field_29;
//    struct _sourcekit_uid_s * field_30;
//    struct _sourcekit_uid_s * field_31;
//    struct _sourcekit_uid_s * field_32;
//    struct _sourcekit_uid_s * field_33;
//    struct _sourcekit_uid_s * field_34;
//    struct _sourcekit_uid_s * field_35;
//    struct _sourcekit_uid_s * field_36;
//    struct _sourcekit_uid_s * field_37;
//    struct _sourcekit_uid_s * field_38;
//    struct _sourcekit_uid_s * field_39;
//    struct _sourcekit_uid_s * field_40;
//    struct _sourcekit_uid_s * field_41;
//    struct _sourcekit_uid_s * field_42;
//    struct _sourcekit_uid_s * field_43;
//    struct _sourcekit_uid_s * field_44;
//    struct _sourcekit_uid_s * field_45;
//    struct _sourcekit_uid_s * field_46;
//    struct _sourcekit_uid_s * field_47;
//    struct _sourcekit_uid_s * field_48;
//    struct _sourcekit_uid_s * field_49;
//    struct _sourcekit_uid_s * field_50;
//    struct _sourcekit_uid_s * field_51;
//    struct _sourcekit_uid_s * field_52;
//    struct _sourcekit_uid_s * field_53;
//    struct _sourcekit_uid_s * field_54;
//    struct _sourcekit_uid_s * field_55;
//    struct _sourcekit_uid_s * field_56;
//    struct _sourcekit_uid_s * field_57;
//    struct _sourcekit_uid_s * field_58;
//    struct _sourcekit_uid_s * field_59;
//    struct _sourcekit_uid_s * field_60;
//    struct _sourcekit_uid_s * field_61;
//    struct _sourcekit_uid_s * field_62;
//    struct _sourcekit_uid_s * field_63;
//    struct _sourcekit_uid_s * field_64;
//    struct _sourcekit_uid_s * field_65;
//    struct _sourcekit_uid_s * field_66;
//    struct _sourcekit_uid_s * field_67;
//    struct _sourcekit_uid_s * field_68;
//    struct _sourcekit_uid_s * field_69;
//    struct _sourcekit_uid_s * field_70;
//    struct _sourcekit_uid_s * field_71;
//    struct _sourcekit_uid_s * field_72;
//    struct _sourcekit_uid_s * field_73;
//    struct _sourcekit_uid_s * field_74;
//    struct _sourcekit_uid_s * field_75;
//    struct _sourcekit_uid_s * field_76;
//    struct _sourcekit_uid_s * field_77;
//    struct _sourcekit_uid_s * field_78;
//    struct _sourcekit_uid_s * field_79;
//    struct _sourcekit_uid_s * field_80;
//    struct _sourcekit_uid_s * field_81;
//    struct _sourcekit_uid_s * field_82;
//    struct _sourcekit_uid_s * field_83;
//    struct _sourcekit_uid_s * field_84;
//    struct _sourcekit_uid_s * field_85;
//    struct _sourcekit_uid_s * field_86;
//    struct _sourcekit_uid_s * field_87;
//    struct _sourcekit_uid_s * field_88;
//    struct _sourcekit_uid_s * field_89;
//    struct _sourcekit_uid_s * field_90;
//    struct _sourcekit_uid_s * field_91;
//    struct _sourcekit_uid_s * field_92;
//    struct _sourcekit_uid_s * field_93;
//    struct _sourcekit_uid_s * field_94;
//    struct _sourcekit_uid_s * field_95;
//    struct _sourcekit_uid_s * field_96;
//    struct _sourcekit_uid_s * field_97;
//    struct _sourcekit_uid_s * field_98;
//    struct _sourcekit_uid_s * field_99;
//    struct _sourcekit_uid_s * field_100;
//    struct _sourcekit_uid_s * field_101;
//    struct _sourcekit_uid_s * field_102;
//    struct _sourcekit_uid_s * field_103;
//    struct _sourcekit_uid_s * field_104;
//    struct _sourcekit_uid_s * field_105;
//    struct _sourcekit_uid_s * field_106;
//    struct _sourcekit_uid_s * field_107;
//    struct _sourcekit_uid_s * field_108;
//    struct _sourcekit_uid_s * field_109;
//    struct _sourcekit_uid_s * field_110;
//    struct _sourcekit_uid_s * field_111;
//    struct _sourcekit_uid_s * field_112;
//    struct _sourcekit_uid_s * field_113;
//    struct _sourcekit_uid_s * field_114;
//    struct _sourcekit_uid_s * field_115;
//    struct _sourcekit_uid_s * field_116;
//    struct _sourcekit_uid_s * field_117;
//    struct _sourcekit_uid_s * field_118;
//    struct _sourcekit_uid_s * field_119;
//    struct _sourcekit_uid_s * field_120;
//    struct _sourcekit_uid_s * field_121;
//    struct _sourcekit_uid_s * field_122;
//    struct _sourcekit_uid_s * field_123;
//    struct _sourcekit_uid_s * field_124;
//    struct _sourcekit_uid_s * field_125;
//    struct _sourcekit_uid_s * field_126;
//    struct _sourcekit_uid_s * field_127;
//    struct _sourcekit_uid_s * field_128;
//    struct _sourcekit_uid_s * field_129;
//    struct _sourcekit_uid_s * field_130;
//    struct _sourcekit_uid_s * field_131;
//    struct _sourcekit_uid_s * field_132;
//    struct _sourcekit_uid_s * field_133;
//    struct _sourcekit_uid_s * field_134;
//    struct _sourcekit_uid_s * field_135;
//    struct _sourcekit_uid_s * field_136;
//    struct _sourcekit_uid_s * field_137;
//    struct _sourcekit_uid_s * field_138;
//    struct _sourcekit_uid_s * field_139;
//    struct _sourcekit_uid_s * field_140;
//    struct _sourcekit_uid_s * field_141;
//    struct _sourcekit_uid_s * field_142;
//    struct _sourcekit_uid_s * field_143;
//    struct _sourcekit_uid_s * field_144;
//    struct _sourcekit_uid_s * field_145;
//    struct _sourcekit_uid_s * field_146;
//    struct _sourcekit_uid_s * field_147;
//    struct _sourcekit_uid_s * field_148;
//    struct _sourcekit_uid_s * field_149;
//    struct _sourcekit_uid_s * field_150;
//    struct _sourcekit_uid_s * field_151;
//    struct _sourcekit_uid_s * field_152;
//    struct _sourcekit_uid_s * field_153;
//    struct _sourcekit_uid_s * field_154;
//    struct _sourcekit_uid_s * field_155;
//    struct _sourcekit_uid_s * field_156;
//    struct _sourcekit_uid_s * field_157;
//    struct _sourcekit_uid_s * field_158;
//    struct _sourcekit_uid_s * field_159;
//    struct _sourcekit_uid_s * field_160;
//    struct _sourcekit_uid_s * field_161;
//    struct _sourcekit_uid_s * field_162;
//    struct _sourcekit_uid_s * field_163;
//    struct _sourcekit_uid_s * field_164;
//    struct _sourcekit_uid_s * field_165;
//    struct _sourcekit_uid_s * field_166;
//    struct _sourcekit_uid_s * field_167;
//    struct _sourcekit_uid_s * field_168;
//    struct _sourcekit_uid_s * field_169;
//    struct _sourcekit_uid_s * field_170;
//    struct _sourcekit_uid_s * field_171;
//    struct _sourcekit_uid_s * field_172;
//    struct _sourcekit_uid_s * field_173;
//    struct _sourcekit_uid_s * field_174;
//    struct _sourcekit_uid_s * field_175;
//    struct _sourcekit_uid_s * field_176;
//    struct _sourcekit_uid_s * field_177;
//    struct _sourcekit_uid_s * field_178;
//    struct _sourcekit_uid_s * field_179;
//    struct _sourcekit_uid_s * field_180;
//    struct _sourcekit_uid_s * field_181;
//    struct _sourcekit_uid_s * field_182;
//    struct _sourcekit_uid_s * field_183;
//    struct _sourcekit_uid_s * field_184;
//    struct _sourcekit_uid_s * field_185;
//    struct _sourcekit_uid_s * field_186;
//    struct _sourcekit_uid_s * field_187;
//    struct _sourcekit_uid_s * field_188;
//    struct _sourcekit_uid_s * field_189;
//    struct _sourcekit_uid_s * field_190;
//    struct _sourcekit_uid_s * field_191;
//    struct _sourcekit_uid_s * field_192;
//    struct _sourcekit_uid_s * field_193;
//    struct _sourcekit_uid_s * field_194;
//    struct _sourcekit_uid_s * field_195;
//    struct _sourcekit_uid_s * field_196;
//    struct _sourcekit_uid_s * field_197;
//    struct _sourcekit_uid_s * field_198;
//    struct _sourcekit_uid_s * field_199;
//    struct _sourcekit_uid_s * field_200;
//    struct _sourcekit_uid_s * field_201;
//    struct _sourcekit_uid_s * field_202;
//    struct _sourcekit_uid_s * field_203;
//    struct _sourcekit_uid_s * field_204;
//    struct _sourcekit_uid_s * field_205;
//    struct _sourcekit_uid_s * field_206;
//    struct _sourcekit_uid_s * field_207;
//    struct _sourcekit_uid_s * field_208;
//    struct _sourcekit_uid_s * field_209;
//    struct _sourcekit_uid_s * field_210;
//    struct _sourcekit_uid_s * field_211;
//    struct _sourcekit_uid_s * field_212;
//    struct _sourcekit_uid_s * field_213;
//    struct _sourcekit_uid_s * field_214;
//    struct _sourcekit_uid_s * field_215;
//    struct _sourcekit_uid_s * field_216;
//    struct _sourcekit_uid_s * field_217;
//    struct _sourcekit_uid_s * field_218;
//    struct _sourcekit_uid_s * field_219;
//    struct _sourcekit_uid_s * field_220;
//    struct _sourcekit_uid_s * field_221;
//    struct _sourcekit_uid_s * field_222;
//    struct _sourcekit_uid_s * field_223;
//    struct _sourcekit_uid_s * field_224;
//    struct _sourcekit_uid_s * field_225;
//};
//
//struct __CFDictionary {
//};
//
//struct anonymous_type_18 {
//    long long field_1;
//    unsigned char field_2[0];
//};
//
//struct anonymous_type_90 {
//    id field_1;
//    long long field_2;
//    unsigned char field_3;
//};
//
//struct BKSWatchdogAssertion {
//};
//
//struct anonymous_type_14 {
//    unsigned _commandLineArgs:1;
//    unsigned _debugPauseAtEntry:1;
//    unsigned _toolchainLLDBFrameworkPath:1;
//    unsigned _enableAddressSanitizer:1;
//    unsigned _enableThreadSanitizer:1;
//    unsigned _isLaunchedForTesting:1;
//    unsigned _suppressSimulatorApplication:1;
//    unsigned _customLLDBInitFile:1;
//    unsigned _launchdServiceSpecifier:1;
//    unsigned _debugserverPort:1;
//    unsigned _debugserverConnectionAddress:1;
//    unsigned _attachingToiOSApp:1;
//    unsigned _enableMallocStackLoggingDuringAttach:1;
//    unsigned _queueDebuggingEnabled:1;
//    unsigned _runtimeProfileInfo:1;
//    unsigned _enableMallocStackLoggingLiteForXPCServices:1;
//    unsigned _memoryGraphOnResourceException:1;
//    unsigned _allowDeviceSensorReplayData:1;
//    unsigned _deviceSensorReplayFile:1;
//    unsigned _skipInstallForTest:1;
//    unsigned _enableGPUShaderValidationMode:1;
//    unsigned _storeKitConfigurationFileReference:1;
//    unsigned _processLauncherKind:1;
//};
//
//struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> * __next_;
//};
//
//struct anonymous_type_10 {
//    unsigned long long field_1[4];
//};
//
//struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > > {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> * * __value_;
//    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > __value_;
//};
//
//struct __NStatManager {
//};
//
//struct IDESourceKitUIDRequests {
//    struct _sourcekit_uid_s * field_1;
//    struct _sourcekit_uid_s * field_2;
//    struct _sourcekit_uid_s * field_3;
//    struct _sourcekit_uid_s * field_4;
//    struct _sourcekit_uid_s * field_5;
//    struct _sourcekit_uid_s * field_6;
//    struct _sourcekit_uid_s * field_7;
//    struct _sourcekit_uid_s * field_8;
//    struct _sourcekit_uid_s * field_9;
//    struct _sourcekit_uid_s * field_10;
//    struct _sourcekit_uid_s * field_11;
//    struct _sourcekit_uid_s * field_12;
//    struct _sourcekit_uid_s * field_13;
//    struct _sourcekit_uid_s * field_14;
//    struct _sourcekit_uid_s * field_15;
//    struct _sourcekit_uid_s * field_16;
//    struct _sourcekit_uid_s * field_17;
//    struct _sourcekit_uid_s * field_18;
//    struct _sourcekit_uid_s * field_19;
//    struct _sourcekit_uid_s * field_20;
//    struct _sourcekit_uid_s * field_21;
//    struct _sourcekit_uid_s * field_22;
//    struct _sourcekit_uid_s * field_23;
//    struct _sourcekit_uid_s * field_24;
//    struct _sourcekit_uid_s * field_25;
//    struct _sourcekit_uid_s * field_26;
//    struct _sourcekit_uid_s * field_27;
//    struct _sourcekit_uid_s * field_28;
//    struct _sourcekit_uid_s * field_29;
//    struct _sourcekit_uid_s * field_30;
//    struct _sourcekit_uid_s * field_31;
//    struct _sourcekit_uid_s * field_32;
//    struct _sourcekit_uid_s * field_33;
//    struct _sourcekit_uid_s * field_34;
//    struct _sourcekit_uid_s * field_35;
//    struct _sourcekit_uid_s * field_36;
//    struct _sourcekit_uid_s * field_37;
//    struct _sourcekit_uid_s * field_38;
//    struct _sourcekit_uid_s * field_39;
//    struct _sourcekit_uid_s * field_40;
//    struct _sourcekit_uid_s * field_41;
//    struct _sourcekit_uid_s * field_42;
//    struct _sourcekit_uid_s * field_43;
//    struct _sourcekit_uid_s * field_44;
//    struct _sourcekit_uid_s * field_45;
//    struct _sourcekit_uid_s * field_46;
//    struct _sourcekit_uid_s * field_47;
//    struct _sourcekit_uid_s * field_48;
//    struct _sourcekit_uid_s * field_49;
//    struct _sourcekit_uid_s * field_50;
//    struct _sourcekit_uid_s * field_51;
//    struct _sourcekit_uid_s * field_52;
//    struct _sourcekit_uid_s * field_53;
//    struct _sourcekit_uid_s * field_54;
//    struct _sourcekit_uid_s * field_55;
//    struct _sourcekit_uid_s * field_56;
//    struct _sourcekit_uid_s * field_57;
//    struct _sourcekit_uid_s * field_58;
//    struct _sourcekit_uid_s * field_59;
//    struct _sourcekit_uid_s * field_60;
//    struct _sourcekit_uid_s * field_61;
//    struct _sourcekit_uid_s * field_62;
//    struct _sourcekit_uid_s * field_63;
//    struct _sourcekit_uid_s * field_64;
//    struct _sourcekit_uid_s * field_65;
//    struct _sourcekit_uid_s * field_66;
//    struct _sourcekit_uid_s * field_67;
//    struct _sourcekit_uid_s * field_68;
//    struct _sourcekit_uid_s * field_69;
//    struct _sourcekit_uid_s * field_70;
//    struct _sourcekit_uid_s * field_71;
//    struct _sourcekit_uid_s * field_72;
//    struct _sourcekit_uid_s * field_73;
//    struct _sourcekit_uid_s * field_74;
//    struct _sourcekit_uid_s * field_75;
//    struct _sourcekit_uid_s * field_76;
//    struct _sourcekit_uid_s * field_77;
//    struct _sourcekit_uid_s * field_78;
//    struct _sourcekit_uid_s * field_79;
//    struct _sourcekit_uid_s * field_80;
//    struct _sourcekit_uid_s * field_81;
//    struct _sourcekit_uid_s * field_82;
//    struct _sourcekit_uid_s * field_83;
//    struct _sourcekit_uid_s * field_84;
//    struct _sourcekit_uid_s * field_85;
//    struct _sourcekit_uid_s * field_86;
//    struct _sourcekit_uid_s * field_87;
//    struct _sourcekit_uid_s * field_88;
//    struct _sourcekit_uid_s * field_89;
//    struct _sourcekit_uid_s * field_90;
//    struct _sourcekit_uid_s * field_91;
//    struct _sourcekit_uid_s * field_92;
//    struct _sourcekit_uid_s * field_93;
//    struct _sourcekit_uid_s * field_94;
//    struct _sourcekit_uid_s * field_95;
//};
//
//struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::hash<__NStatSource *>, true> > {
//    unsigned long long __value_;
//};
//
//struct _sourcekit_object_s {
//};
//
//struct __SecRequirement {
//};
//
//struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> * __next_;
//};
//
//struct unordered_map<__NStatSource *, (anonymous namespace)::SourceInfo, std::__1::hash<__NStatSource *>, std::__1::equal_to<__NStatSource *>, std::__1::allocator<std::__1::pair<__NStatSource *const, (anonymous namespace)::SourceInfo> > > {
//    struct __hash_table<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::hash<__NStatSource *>, true>, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, std::__1::equal_to<__NStatSource *>, true>, std::__1::allocator<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo> > > __table_;
//};
//
//struct __sbuf {
//    char * field_1;
//    int field_2;
//};
//
//struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> > > {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> __value_;
//};
//
//struct LLVMOpaqueCoverageSegment {
//};
//
//struct anonymous_type_95 {
//    unsigned long long field_1[4];
//};
//
//struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::equal_to<int>, true> > {
//    float __value_;
//};
//
//union anonymous_type_77 {
//    unsigned char field_1;
//    struct anonymous_type_78 field_2;
//};
//
//struct unordered_map<int, (anonymous namespace)::ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, (anonymous namespace)::ProcessInfo> > > {
//    struct __hash_table<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo> > > __table_;
//};
//
//union anonymous_type_82 {
//    unsigned char field_1;
//    struct anonymous_type_83 field_2;
//};
//
//union anonymous_type_73 {
//    unsigned char field_1;
//    struct anonymous_type_74 field_2;
//};
//
//struct anonymous_type_46 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//union anonymous_type_37 {
//    unsigned char field_1;
//    struct anonymous_type_38 field_2;
//};
//
//struct __hash_table<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::__unordered_map_hasher<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::hash<_sourcekit_uid_s *>, true>, std::__1::__unordered_map_equal<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::equal_to<_sourcekit_uid_s *>, true>, std::__1::allocator<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *> > > {
//    struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > > __bucket_list_;
//    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> > > __p1_;
//    struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::hash<_sourcekit_uid_s *>, true> > __p2_;
//    struct __compressed_pair<float, std::__1::__unordered_map_equal<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::equal_to<_sourcekit_uid_s *>, true> > __p3_;
//};
//
//struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> * __next_;
//};
//
//struct _NSZone {
//};
//
//struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > > {
//    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > > __ptr_;
//};
//
//struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> > > {
//    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, (anonymous namespace)::SourceInfo>, void *> *> __value_;
//};
//
//struct anonymous_type_78 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//union anonymous_type_92 {
//    unsigned char field_1;
//    struct anonymous_type_93 field_2;
//};
//
//struct anonymous_type_83 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct anonymous_type_74 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct IDESourceKitUIDValues {
//    struct _sourcekit_uid_s * field_1;
//    struct _sourcekit_uid_s * field_2;
//    struct _sourcekit_uid_s * field_3;
//    struct _sourcekit_uid_s * field_4;
//    struct _sourcekit_uid_s * field_5;
//    struct _sourcekit_uid_s * field_6;
//    struct _sourcekit_uid_s * field_7;
//    struct _sourcekit_uid_s * field_8;
//    struct _sourcekit_uid_s * field_9;
//    struct _sourcekit_uid_s * field_10;
//    struct _sourcekit_uid_s * field_11;
//    struct _sourcekit_uid_s * field_12;
//    struct _sourcekit_uid_s * field_13;
//    struct _sourcekit_uid_s * field_14;
//    struct _sourcekit_uid_s * field_15;
//    struct _sourcekit_uid_s * field_16;
//    struct _sourcekit_uid_s * field_17;
//    struct _sourcekit_uid_s * field_18;
//    struct _sourcekit_uid_s * field_19;
//    struct _sourcekit_uid_s * field_20;
//    struct _sourcekit_uid_s * field_21;
//    struct _sourcekit_uid_s * field_22;
//    struct _sourcekit_uid_s * field_23;
//    struct _sourcekit_uid_s * field_24;
//    struct _sourcekit_uid_s * field_25;
//    struct _sourcekit_uid_s * field_26;
//    struct _sourcekit_uid_s * field_27;
//    struct _sourcekit_uid_s * field_28;
//    struct _sourcekit_uid_s * field_29;
//    struct _sourcekit_uid_s * field_30;
//    struct _sourcekit_uid_s * field_31;
//    struct _sourcekit_uid_s * field_32;
//    struct _sourcekit_uid_s * field_33;
//    struct _sourcekit_uid_s * field_34;
//    struct _sourcekit_uid_s * field_35;
//    struct _sourcekit_uid_s * field_36;
//    struct _sourcekit_uid_s * field_37;
//    struct _sourcekit_uid_s * field_38;
//    struct _sourcekit_uid_s * field_39;
//    struct _sourcekit_uid_s * field_40;
//    struct _sourcekit_uid_s * field_41;
//    struct _sourcekit_uid_s * field_42;
//    struct _sourcekit_uid_s * field_43;
//    struct _sourcekit_uid_s * field_44;
//    struct _sourcekit_uid_s * field_45;
//    struct _sourcekit_uid_s * field_46;
//    struct _sourcekit_uid_s * field_47;
//    struct _sourcekit_uid_s * field_48;
//    struct _sourcekit_uid_s * field_49;
//    struct _sourcekit_uid_s * field_50;
//    struct _sourcekit_uid_s * field_51;
//    struct _sourcekit_uid_s * field_52;
//    struct _sourcekit_uid_s * field_53;
//    struct _sourcekit_uid_s * field_54;
//    struct _sourcekit_uid_s * field_55;
//    struct _sourcekit_uid_s * field_56;
//    struct _sourcekit_uid_s * field_57;
//    struct _sourcekit_uid_s * field_58;
//    struct _sourcekit_uid_s * field_59;
//    struct _sourcekit_uid_s * field_60;
//    struct _sourcekit_uid_s * field_61;
//    struct _sourcekit_uid_s * field_62;
//    struct _sourcekit_uid_s * field_63;
//    struct _sourcekit_uid_s * field_64;
//    struct _sourcekit_uid_s * field_65;
//    struct _sourcekit_uid_s * field_66;
//    struct _sourcekit_uid_s * field_67;
//    struct _sourcekit_uid_s * field_68;
//    struct _sourcekit_uid_s * field_69;
//    struct _sourcekit_uid_s * field_70;
//    struct _sourcekit_uid_s * field_71;
//    struct _sourcekit_uid_s * field_72;
//    struct _sourcekit_uid_s * field_73;
//    struct _sourcekit_uid_s * field_74;
//    struct _sourcekit_uid_s * field_75;
//    struct _sourcekit_uid_s * field_76;
//    struct _sourcekit_uid_s * field_77;
//    struct _sourcekit_uid_s * field_78;
//    struct _sourcekit_uid_s * field_79;
//    struct _sourcekit_uid_s * field_80;
//    struct _sourcekit_uid_s * field_81;
//    struct _sourcekit_uid_s * field_82;
//    struct _sourcekit_uid_s * field_83;
//    struct _sourcekit_uid_s * field_84;
//    struct _sourcekit_uid_s * field_85;
//    struct _sourcekit_uid_s * field_86;
//    struct _sourcekit_uid_s * field_87;
//    struct _sourcekit_uid_s * field_88;
//    struct _sourcekit_uid_s * field_89;
//    struct _sourcekit_uid_s * field_90;
//    struct _sourcekit_uid_s * field_91;
//    struct _sourcekit_uid_s * field_92;
//    struct _sourcekit_uid_s * field_93;
//    struct _sourcekit_uid_s * field_94;
//    struct _sourcekit_uid_s * field_95;
//    struct _sourcekit_uid_s * field_96;
//    struct _sourcekit_uid_s * field_97;
//    struct _sourcekit_uid_s * field_98;
//};
//
//struct anonymous_type_38 {
//    unsigned field_1:1;
//    unsigned field_2:1;
//    unsigned field_3:6;
//};
//
//struct __compressed_pair<float, std::__1::__unordered_map_equal<_sourcekit_uid_s *, std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, std::__1::equal_to<_sourcekit_uid_s *>, true> > {
//    float __value_;
//};
//
//union anonymous_type_43 {
//    unsigned char field_1;
//    struct anonymous_type_44 field_2;
//};
//
//struct LLVMOpaqueCoverageInstantiationGroup {
//};
//
//struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *>, void *> *> *> > {
//    unsigned long long __value_;
//};
//
//union anonymous_type_16 {
//    unsigned char field_1;
//    struct anonymous_type_17 field_2;
//};
//
//struct DVTFuzzyMatchCandidate {
//    unsigned int field_1;
//    unsigned long long field_2;
//    union anonymous_type_92 field_3;
//    unsigned char field_4[0];
//};
//
//struct __hash_table<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo> > > {
//    struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > > __bucket_list_;
//    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> > > __p1_;
//    struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::hash<int>, true> > __p2_;
//    struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, std::__1::equal_to<int>, true> > __p3_;
//};
//
//struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::ProcessInfo>, void *> *> *> > {
//    unsigned long long __value_;
//};
//
//struct anonymous_type_8 {
//    unsigned long long data[4];
//};
//
//union anonymous_type_12 {
//    unsigned char field_1;
//    struct anonymous_type_13 field_2;
//};
//
//
//
///*****************************************************************/
//
//@protocol NSObject
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (char)isEqual:(id)v1;
//- (Class)class;
//- (id)self;
//- (id)performSelector:(SEL)v1;
//- (id)performSelector:(SEL)v1 withObject:(id)v2;
//- (id)performSelector:(SEL)v1 withObject:(id)v2 withObject:(id)v3;
//- (char)isProxy;
//- (char)isKindOfClass:(Class)v1;
//- (char)isMemberOfClass:(Class)v1;
//- (char)conformsToProtocol:(id)v1;
//- (char)respondsToSelector:(SEL)v1;
//- (id)retain;
//- (oneway  void)release;
//- (id)autorelease;
//- (unsigned long long)retainCount;
//- (struct _NSZone *)zone;
//- (unsigned long long)hash;
//- (Class)superclass;
//- (id)description;
//
//@optional
//- (id)debugDescription;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributableContent<NSObject>
//@property (readonly) DVTFilePath * path;
//@property (readonly) NSString * bundleIdentifier;
//@property (readonly) NSString * bundleName;
//- (id)path;
//- (id)bundleIdentifier;
//- (id)bundleName;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributableApplication<IDEDistributableContent>
//@property (readonly) DVTPlatform * platform;
//- (id)platform;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningErrorProvider
//@property (readonly,nonatomic) long long environment;
//@property (readonly,nonatomic) long long task;
//@property (readonly,nonatomic) long long repairMode;
//- (id)userActionError:(id)v1;
//- (id)accountLogInFailureError:(id)v1;
//- (id)provisionableUnknownProvisioningFailureError:(id)v1;
//- (id)provisionableMissingBundleIdentifierError:(id)v1;
//- (id)provisionableMissingTeamSelectionError:(id)v1;
//- (id)provisionableMissingTeamSelectionForProfileSpecifierError:(id)v1 profileSpecifier:(id)v2;
//- (id)provisionableMissingTeamOrProfileSelectionError:(id)v1;
//- (id)noProfileTypeErrorForPlatform:(id)v1 purpose:(id)v2;
//- (id)provisionableHasProfileSpecifiedInAutomaticError:(id)v1 profileName:(id)v2;
//- (id)provisionableHasExplicitSigningIdentitySpecifiedInAutomaticError:(id)v1 signingIdentity:(id)v2 automaticSelector:(id)v3;
//- (id)provisionableProfileTypeDoesntMatchIdentitySelectorError:(id)v1 signingIdentity:(id)v2 automaticSelector:(id)v3;
//- (id)provisionableNoProfileSpecifiedError:(id)v1 requiredFeatureNames:(id)v2;
//- (id)provisionableProfileSpecifiedButUnsupportedError:(id)v1 profileName:(id)v2;
//- (id)provisionableUnknownPlatformError:(id)v1;
//- (id)provisionableEntitlementsFileNotFoundError:(id)v1 entitlementsFilePath:(id)v2;
//- (id)provisionableHasConflictingAutomaticSigningSettingsError:(id)v1 conflictingFeatures:(id)v2;
//- (id)provisionableEntitlementsRequireSigningError:(id)v1;
//- (id)provisionableEntitlementsRequireProfileError:(id)v1;
//- (id)provisionableEntitlementsRequireDevelopmentSigning:(id)v1 certificateIdentifier:(id)v2 sdk:(id)v3;
//- (id)provisionablePlatformMismatchForAssetError:(id)v1 assetType:(id)v2 platformName:(id)v3;
//- (id)provisionableUnableToRepairEntitlementsError:(id)v1 entitlements:(id)v2;
//- (id)noAccountsError;
//- (id)provisionableMissingMacCatalystBundleIdentifierPrefixInAutomaticError:(id)v1 bundleIdentifier:(id)v2;
//- (long long)environment;
//- (long long)task;
//- (long long)repairMode;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningBasicTeam<NSObject>
//@property (readonly,nonatomic) NSString * teamID;
//@property (readonly,nonatomic) NSString * teamName;
//@property (readonly,nonatomic,getter=isFreeProvisioningTeam) char freeProvisioningTeam;
//- (id)teamID;
//- (id)teamName;
//- (char)isFreeProvisioningTeam;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProductTypeProvider<NSObject>
//+ (id)productTypeForIdentifier:(id)v1 platform:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTXMLUnarchiving<NSObject>
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTInvalidation<NSObject>
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//- (void)primitiveInvalidate;
//
//@optional
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (char)supportsInvalidationPrevention;
//- (void)invalidate;
//- (void)addAutoInvalidatedObject:(id)v1;
//- (char)isValid;
//- (id)invalidationBacktrace;
//- (id)creationBacktrace;
//- (void)setCreationBacktrace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol NSFastEnumeration
//- (unsigned long long)countByEnumeratingWithState:(struct anonymous_type_2 *)v1 objects:(id *)v2 count:(unsigned long long)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTCancellable<NSObject>
//@property (readonly,getter=isCancelled) char cancelled;
//- (void)cancel;
//- (char)isCancelled;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningUserActionDelegate
//- (void)userActionWasAuthorized:(id)v1;
//- (void)userActionDidBegin:(id)v1;
//- (void)userActionDidFinish:(id)v1;
//- (void)userAction:(id)v1 didFailWithError:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol NSCopying
//- (id)copyWithZone:(struct _NSZone *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributableInAppContent<IDEDistributableContent>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEContainerCore<NSObject,DVTInvalidation>
//+ (id)containerFileType;
//+ (char)supportsFilePersistence;
//+ (id)containerDataFilePathsForFilePath:(id)v1;
//- (id)initWithFilePath:(id)v1 extension:(id)v2 error:(id *)v3;
//- (void)retainContainerCore;
//- (void)releaseContainerCore;
//- (id)rootGroup;
//- (id)filePath;
//- (id)containerExtension;
//- (int)currentActivity;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEFolderCore<IDEContainerCore>
//@end
//
//
///*****************************************************************/
//
//@protocol ITunesSoftwareServiceAuthenticationDelegate<NSObject>
//
//@optional
//- (id)newAuthenticationForOldContext:(id)v1 error:(id)v2 shouldRecover:(char *)v3 numberOfAttempts:(int)v4;
//- (id)nextUserForOldAuthentication:(id)v1 error:(id)v2 shouldRecover:(char *)v3;
//- (void)willAuthenticateWithContext:(id)v1;
//- (id)customEndPointForKey:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEITunesSoftwareServiceProtocol
//- (void)setLogFileURL:(id)v1;
//- (void)swinfoFilePathStringWithCallback:(void (^ /* unknown block signature */)(void))v1;
//- (void)configurationResponseForAccountCredentials:(id)v1 toolsBuildVersionName:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (void)configurationResponseForAccountCredentials:(id)v1 bundleID:(id)v2 toolsBuildVersionName:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (void)validationResponseForApplicationAtPath:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (void)uploadApplicationAtPath:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (void)cancelUploadWithCallback:(void (^ /* unknown block signature */)(void))v1;
//- (void)applicationsWithContentHostedInAppPurchasesForAccountCredentials:(id)v1 callback:(void (^ /* unknown block signature */)(void))v2;
//- (void)uploadInAppPurchaseContentArchiveAtPath:(id)v1 productID:(id)v2 application:(id)v3 accountCredentials:(id)v4 callback:(void (^ /* unknown block signature */)(void))v5;
//- (void)uploadDeveloperIDAppAtPath:(id)v1 bundleID:(id)v2 teamID:(id)v3 deviceToken:(id)v4 accountCredentials:(id)v5 callback:(void (^ /* unknown block signature */)(void))v6;
//- (void)developerIDStatusResponseForUploadIdentifier:(id)v1 accountCredentials:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (void)testDeveloperIDNotificationWithDeviceToken:(id)v1 accountCredentials:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (void)applicationDescriptionWithBundleIdentifier:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (void)applicationDescriptionsWithAccountCredentials:(id)v1 callback:(void (^ /* unknown block signature */)(void))v2;
//- (void)applicationVersionsForApplicationDecription:(id)v1 accountCredentials:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (void)dSYMURLForAdamID:(id)v1 bundleIdentifier:(id)v2 version:(id)v3 buildNumber:(id)v4 platformIdentifier:(id)v5 accountCredentials:(id)v6 callback:(void (^ /* unknown block signature */)(void))v7;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTPreparableDevice
//@property (readonly) NSArray * developerPrepErrors;
//@property (readonly) NSArray * developerPrepWarnings;
//- (void)addPrepError:(id)v1;
//- (void)addPrepWarning:(id)v1;
//- (unsigned long long)prepErrorsAndWarningsCount;
//- (id)developerPrepErrors;
//- (id)developerPrepWarnings;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTCodesignableDevice<NSObject>
//@property (readonly,copy,nonatomic) NSString * name;
//@property (readonly,copy) NSString * nameForDeveloperPortal;
//@property (readonly,copy,nonatomic) NSString * identifier;
//@property (readonly,copy) NSString * platformIdentifier;
//@property (readonly) DVTPlatform * platform;
//@property (readonly) char supportsProvisioning;
//@property (readonly,copy) NSSet * proxiedDevices;
//- (id)name;
//- (id)nameForDeveloperPortal;
//- (id)identifier;
//- (id)platformIdentifier;
//- (id)platform;
//- (char)supportsProvisioning;
//- (id)proxiedDevices;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTBasicDevice<DVTCodesignableDevice>
//@property (readonly,copy,nonatomic) NSString * modelName;
//@property (readonly,copy,nonatomic) NSString * modelCodename;
//@property (readonly,copy,nonatomic) NSString * modelCode;
//@property (readonly,copy,nonatomic) NSString * modelUTI;
//@property (readonly,copy) NSString * processorDescription;
//@property (readonly,copy) NSString * operatingSystemVersion;
//@property (readonly,copy) NSString * iOSSupportVersion;
//@property (readonly,copy) NSString * operatingSystemBuild;
//@property (readonly,copy,nonatomic) NSString * operatingSystemVersionWithBuildNumber;
//@property (readonly) DVTPlatform * platform;
//@property (readonly,copy) NSString * nativeArchitecture;
//@property (readonly) char isProxiedDevice;
//@property (readonly,getter=isAvailable) char available;
//@property (readonly) NSError * unavailabilityError;
//@property (readonly) bool deviceIsBusy;
//- (char)isAvailableWithError:(id *)v1;
//- (id)modelName;
//- (id)modelCodename;
//- (id)modelCode;
//- (id)modelUTI;
//- (id)processorDescription;
//- (id)operatingSystemVersion;
//- (id)iOSSupportVersion;
//- (id)operatingSystemBuild;
//- (id)operatingSystemVersionWithBuildNumber;
//- (id)platform;
//- (id)nativeArchitecture;
//- (char)isProxiedDevice;
//- (char)isAvailable;
//- (id)unavailabilityError;
//- (bool)deviceIsBusy;
//
//@optional
//- (id)primaryInstrumentsServer;
//- (void)cancelPrimaryInstrumentsServer;
//@end
//
//
///*****************************************************************/
//
@protocol IDEBuildableTargetDevice<DVTBasicDevice>
- (char)canBeRunDestination;
- (char)deviceSupportsBuildable:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (char)canBeDefaultDeviceForBuildable:(id)v1 buildParameters:(id)v2;
- (char)shouldPresentDeviceForPathRunnableWithArchitecture:(id)v1;
- (char)shouldPresentDeviceForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (id)supportedArchitecturesForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (id)supportedSDKsForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)v1 withBaselineParameters:(id)v2;
- (char)supportsExecutionForArchitecture:(id)v1 launchSession:(id)v2 error:(id *)v3;
- (char)isTranslationSupportInstalledForArchitecture:(id)v1;
- (void)installTranslationSupportForArchitecture:(id)v1 prompt:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
- (char)supportsRunningExecutableAtPath:(id)v1 usingArchitecture:(id)v2 error:(id *)v3;
- (char)supportsBuildingThinnedResourcesForPlatform:(id)v1;
- (id)assetCatalogFilterForDeviceModelForPlatform:(id)v1;
- (id)assetCatalogFilterForDeviceOSVersionForPlatform:(id)v1;
- (id)closestRelativeOfTargetArchitecture:(id)v1 forBuildArchitectures:(id)v2;
- (id)scriptingEnvironment;
- (char)canInstallBuildablesError:(id *)v1;
- (char)performInstallWithName:(id)v1 path:(id)v2 buildables:(id)v3 buildParameters:(id)v4 killProcesses:(id)v5 workspace:(id)v6 outError:(id *)v7;
- (id)analysisOperationWithAnalysisToolService:(id)v1 location:(id)v2 workingDirectory:(id)v3 workspaceFilePath:(id)v4 projectFilePath:(id)v5 packagesPaths:(id)v6 outError:(id *)v7;
@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisionable<NSObject>
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSOrderedSet * configurations;
//- (long long)provisioningStyleForBuildParameters:(id)v1;
//- (id)teamForBuildParameters:(id)v1;
//- (id)platformForBuildParameters:(id)v1;
//- (id)sdkForBuildParameters:(id)v1;
//- (id)sdkVariantForBuildParameters:(id)v1;
//- (long long)profileSupportForBuildParameters:(id)v1;
//- (char)wantsBundleIdentifierEditingForBuildParameters:(id)v1;
//- (id)bundleIdentifierForBuildParameters:(id)v1;
//- (id)provisioningProfileSpecifierForBuildParameters:(id)v1;
//- (id)signingCertificateIdentifierForBuildParameters:(id)v1;
//- (id)entitlementsFilePathForBuildParameters:(id)v1;
//- (id)appIDFeaturesForBuildParameters:(id)v1 entitlements:(id)v2 withEntitlementsExpansion:(id)v3;
//- (id)appIDFeaturesForBuildParameters:(id)v1;
//- (id)baseEntitlementsForBuildParameters:(id)v1;
//- (id)entitlementsExpansionForBuildParameters:(id)v1;
//- (unsigned long long)entitlementsDestinationForBuildParameters:(id)v1;
//- (void)noteProvisioningInputsChanged;
//- (char)allowSigningWithoutTeamSelectionForBuildParameters:(id)v1;
//- (char)signingRequiresTeamForBuildParameters:(id)v1;
//- (id)provisioningPurposeForBuildParameters:(id)v1;
//- (char)supportsIOSMacForBuildParameters:(id)v1;
//- (id)name;
//- (id)configurations;
//@end
//
//
///*****************************************************************/
//
//@protocol IDERepairable<NSObject>
//@property (readonly,nonatomic) NSString * repairableName;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) long long provisioningStyle;
//@property (readonly,nonatomic) DVTPortalCertificatePurpose * certificatePurpose;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,nonatomic) NSString * machineName;
//@property (readonly,nonatomic) NSString * machineID;
//@property (readonly,nonatomic) IDEProvisionableDestinationRequirement * destinationRequirement;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicProfile> * profile;
//@property (readonly,nonatomic) DVTPortalProfileType * profileType;
//@property (readonly,nonatomic) char wantsRepairStatusSuppressed;
//@property (readonly,nonatomic) NSArray * instigatingErrors;
//- (id)profileQualificationWithProfile:(id)v1;
//- (char)profileCharacteristicsWithContext:(id)v1 profileCharacteristics:(id *)v2 error:(id *)v3;
//- (id)repairableName;
//- (id)team;
//- (long long)provisioningStyle;
//- (id)certificatePurpose;
//- (id)platform;
//- (id)machineName;
//- (id)machineID;
//- (id)destinationRequirement;
//- (id)profile;
//- (id)profileType;
//- (char)wantsRepairStatusSuppressed;
//- (id)instigatingErrors;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTServicesJSONSerialization<NSObject>
//- (id)JSONRepresentation;
//
//@optional
//+ (id)objectFromJSONRepresentation:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIssueLogDataSource<DVTInvalidation>
//@property (readonly) IDEActivityLogSection * issueLog;
//- (void)analyzeModelForIssues;
//- (id)issueLog;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorConfigurationManagerProviderProtocol
//@property (readonly,nonatomic) NSObject<IDESigningEditorConfigurationManagerProtocol> * signingEditorConfigurationManager;
//
//@optional
//- (id)signingEditorConfigurationManager;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBlueprint<NSObject,IDEIssueLogDataSource,IDESigningEditorConfigurationManagerProviderProtocol>
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * localizedDescription;
//@property (readonly,copy) NSString * blueprintIdentifier;
//@property (readonly) NSObject<IDEBuildable> * primaryBuildable;
//@property (readonly) NSArray * buildables;
//@property (readonly) NSArray * buildableProducts;
//@property (readonly,copy) NSArray * availableConfigurationNames;
//@property (readonly,copy) NSString * defaultConfigurationName;
//@property (readonly) char correctlyEvaluatesArchitectures;
//@property (readonly,copy) NSString * compilerSpecificationIdentifier;
//@property (readonly) char containsSwift;
//@property (readonly) char containsOnlySwift;
//@property (readonly) char usesPackageProducts;
//@property (retain) IDETestBlueprintHostSettings * testBlueprintHostSettings;
//@property (retain) IDETestBlueprintHostSettings * testBlueprintUITestingTargetAppSettings;
//@property (readonly,getter=isUnitTest) char unitTest;
//@property (readonly,copy) DVTFilePath * bundleBaselineRecordFilePath;
//@property (readonly) DVTToolsVersion * createdOnToolsVersion;
//@property (readonly) NSSet * knownAssetTags;
//@property (readonly) NSObject<IDEProvisionable> * provisionable;
//@property (readonly,copy) IDEPIFGUID * PIFGUID;
//@property (readonly) IDETypeIdentifier * activityLogDomainType;
//@property (readonly) char participatesInSchemeAutocreation;
//@property (readonly) char shouldHideInUI;
//@property (readonly) char isTransparentForRunDestinations;
//@property (readonly) NSString * dynamicVariantBlueprintIdentifier;
//@property (readonly) char alwaysDisplayIssuesIndependentOfActiveSchemeFilter;
//- (id)blueprintProvider;
//- (id)customDataStore;
//- (id)buildableForIdentifier:(id)v1;
//- (id)moduleNamesInWorkspace:(id)v1;
//- (char)containsFileReference:(id)v1;
//- (char)containsFilePath:(id)v1;
//- (void)addFileReference:(id)v1 toBuildablesContainingFileReference:(id)v2;
//- (id)entitlementsFilePathForBuildConfiguration:(id)v1;
//- (id)name;
//- (id)localizedDescription;
//- (id)blueprintIdentifier;
//- (id)primaryBuildable;
//- (id)buildables;
//- (id)buildableProducts;
//
//@optional
//- (id)availableArchitecturesForBuildParameters:(id)v1;
//- (id)availableArchitecturesForConfiguration:(id)v1 workspaceArenaSnapshot:(id)v2;
//- (id)architecturesForBuildParameters:(id)v1;
//- (id)supportedPlatformsForBuildParameters:(id)v1;
//- (id)supportedPlatformsForConfiguration:(id)v1 workspaceArenaSnapshot:(id)v2;
//- (id)baseSDKForBuildConfigurationName:(id)v1;
//- (id)specifiedBaseSDKForBuildConfigurationName:(id)v1;
//- (id)simulatorSDKFor:(id)v1 SDKs:(id)v2;
//- (id)deviceSDKFor:(id)v1 SDKs:(id)v2;
//- (void)convertToUseClang;
//- (void)convertToBuild64bitOnly;
//- (void)convertToStandardArchitectures;
//- (char)canConvertToUseARC;
//- (void)convertToUseARC;
//- (char)canConvertToEnableCodeGenerationForIBAndAssetCatalogs;
//- (void)convertToEnableCodeGenerationForIBAndAssetCatalogs;
//- (void)convertToUseModernObjCSyntax;
//- (char)lastSwiftMigrationIsCurrent;
//- (void)updateLastSwiftMigrationToCurrent;
//- (void)resetLastSwiftMigration;
//- (void)updateSwiftCompilerTo:(id)v1;
//- (void)setEnablePreviews;
//- (char)isConfiguredToBuildWithOptimizationProfile;
//- (char)configureToBuildWithOptimizationProfileReturningErrorString:(id *)v1;
//- (char)isMixedTarget;
//- (char)canUseBridgingHeader;
//- (char)wouldBecomeMixedTargetAfterAddingFiles:(id)v1;
//- (char)wouldBecomeMixedTargetAfterAddingTypes:(id)v1;
//- (char)isConfiguredToBuildMixedTarget;
//- (char)configureToBuildMixedTargetWithDestinationGroup:(id)v1 configureBridgingHeader:(char)v2 returningErrorString:(id *)v3;
//- (id)predominantSourceCodeLanguage;
//- (id)sourceCodeBuildFileReferences;
//- (id)localizableSourceBuildFileReferences;
//- (id)allBuildFileReferences;
//- (id)allResourceFilesBreakingOutLocalizableVariants:(char)v1;
//- (id)allPublicHeaderFiles;
//- (id)allPrivateHeaderFiles;
//- (id)allProjectHeaderFiles;
//- (id)linkedBinaries;
//- (void)setAdditionalCompilerArguments:(id)v1 forSourceCodeBuildFileReference:(id)v2;
//- (id)additionalCompilerArgumentsForSourceCodeBuildFileReference:(id)v1;
//- (void)setOverridingAdditionalCompilerArguments:(id)v1 forSourceCodeBuildFileReference:(id)v2;
//- (id)additionalOverridingCompilerArgumentsForSourceCodeBuildFileReference:(id)v1;
//- (id)pathToLargestAssetCatalogAppIconPassingTest:(void (^ /* unknown block signature */)(void))v1;
//- (id)infoDictionaryForConfiguration:(id)v1;
//- (id)resolvedInfoDictionaryForBuildParameters:(id)v1;
//- (id)infoDictionaryFilePathForConfiguration:(id)v1;
//- (void)addTagsToKnownAssetTags:(id)v1;
//- (void)removeTagsFromKnownAssetTags:(id)v1;
//- (id)sourceFileBuildInfoForFileAtPath:(id)v1;
//- (void)removeFileReferenceFromBuildables:(id)v1;
//- (char)setEnabledForMacCatalyst:(char)v1 error:(id *)v2;
//- (id)availableConfigurationNames;
//- (id)defaultConfigurationName;
//- (char)correctlyEvaluatesArchitectures;
//- (id)compilerSpecificationIdentifier;
//- (char)containsSwift;
//- (char)containsOnlySwift;
//- (char)usesPackageProducts;
//- (id)testBlueprintHostSettings;
//- (void)setTestBlueprintHostSettings:(id)v1;
//- (id)testBlueprintUITestingTargetAppSettings;
//- (void)setTestBlueprintUITestingTargetAppSettings:(id)v1;
//- (char)isUnitTest;
//- (id)bundleBaselineRecordFilePath;
//- (id)createdOnToolsVersion;
//- (id)knownAssetTags;
//- (id)provisionable;
//- (id)PIFGUID;
//- (id)activityLogDomainType;
//- (char)participatesInSchemeAutocreation;
//- (char)shouldHideInUI;
//- (char)isTransparentForRunDestinations;
//- (id)dynamicVariantBlueprintIdentifier;
//- (char)alwaysDisplayIssuesIndependentOfActiveSchemeFilter;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildable<DVTInvalidation,NSObject>
//@property (readonly,copy) NSString * productTypeIdentifier;
//@property (readonly,copy) NSString * buildableIdentifier;
//@property (readonly,copy) IDEEntityIdentifier * entityIdentifier;
//@property (readonly) NSObject<IDEBlueprint> * blueprint;
//@property (readonly) NSString * displayName;
//@property (readonly) NSString * toolTip;
//@property (readonly) NSSet * namesOfLinkedBinaries;
//@property (readonly) NSString * productModuleName;
//@property (readonly,copy) NSString * legacyIdentifier;
//- (id)productTypeWithBuildParameters:(id)v1;
//- (id)allBuildSettingNamesWithBuildParameters:(id)v1;
//- (id)evaluatedStringValueForBuildSetting:(id)v1 withBuildParameters:(id)v2;
//- (id)evaluatedStringListValueForBuildSetting:(id)v1 withBuildParameters:(id)v2;
//- (id)stringByEvaluatingBuildSettingExpressionString:(id)v1 withBuildParameters:(id)v2;
//- (id)absolutePathByEvaluatingBuildSettingExpressionString:(id)v1 withBuildParameters:(id)v2;
//- (id)toolSearchPathWithBuildParameters:(id)v1;
//- (id)orderedRecursiveDependenciesIncludingSelf:(char)v1 includingPackages:(char)v2;
//- (id)orderedRecursiveDependenciesIncludingSelf:(char)v1;
//- (id)directDependencies;
//- (id)implicitDependenciesForBuildParameters:(id)v1 executionEnvironment:(id)v2 returningMessages:(id *)v3;
//- (id)createBuilderForBuildCommand:(long long)v1 withBuildTaskQueueSet:(id)v2 parameters:(id)v3 buildOnlyTheseFiles:(id)v4 restorePersistedBuildResults:(char)v5 withManager:(id)v6;
//- (id)productTypeIdentifier;
//- (id)buildableIdentifier;
//- (id)entityIdentifier;
//- (id)blueprint;
//- (id)displayName;
//- (id)toolTip;
//- (id)namesOfLinkedBinaries;
//- (id)productModuleName;
//- (id)legacyIdentifier;
//
//@optional
//- (Class)buildOperationManagerClass;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildableProduct<IDEBuildable>
//@property (readonly) DVTFilePath * filePath;
//@property (readonly,copy) DVTFileDataType * fileDataType;
//@property (readonly) NSString * iconPath;
//@property (readonly) NSDictionary * productSettings;
//@property (readonly) char productIsExecutable;
//@property (readonly) char isWatchOnlyApplication;
//@property (readonly) char isWatchAppRunsIndependentlyOfCompanionApplication;
//@property (readonly) char productIsApp;
//@property (readonly) NSString * extensionPointIdentifier;
//@property (readonly) char isWidgetKitExtension;
//@property (readonly) char isEmbeddablePackageProduct;
//- (id)filePathForBuildParameters:(id)v1;
//- (id)productSettingForKey:(id)v1;
//- (void)setProductSetting:(id)v1 forKey:(id)v2;
//- (id)filePath;
//- (id)fileDataType;
//- (id)iconPath;
//- (id)productSettings;
//- (char)productIsExecutable;
//- (char)isWatchOnlyApplication;
//- (char)isWatchAppRunsIndependentlyOfCompanionApplication;
//- (char)productIsApp;
//- (id)extensionPointIdentifier;
//- (char)isWidgetKitExtension;
//
//@optional
//- (char)isEmbeddablePackageProduct;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECodeCoverageProviding
//@property (readonly,nonatomic,getter=isCodeCoverageEnabled) char codeCoverageEnabled;
//- (char)isCodeCoverageEnabled;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECodeCoverageMutating<IDECodeCoverageProviding>
//@property (nonatomic,getter=isCodeCoverageEnabled) char codeCoverageEnabled;
//@property (nonatomic) char onlyGenerateCoverageForSpecifiedTargets;
//@property (readonly,nonatomic) NSArray * codeCoverageTargets;
//- (void)addCodeCoverageTarget:(id)v1;
//- (void)removeCodeCoverageTarget:(id)v1;
//- (char)isCodeCoverageEnabled;
//- (void)setCodeCoverageEnabled:(char)v1;
//- (char)onlyGenerateCoverageForSpecifiedTargets;
//- (void)setOnlyGenerateCoverageForSpecifiedTargets:(char)v1;
//- (id)codeCoverageTargets;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildOperationObserver<NSObject>
//- (void)buildOperationWasCompleted:(id)v1 forWorkspace:(id)v2;
//- (void)buildOperationWasSlowerThanExpected:(id)v1 forWorkspace:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBlueprintProvider<DVTInvalidation,NSObject>
//@property (readonly,copy) NSArray * blueprints;
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * organizationName;
//@property (readonly,copy) NSString * classPrefix;
//@property (readonly) NSObject<IDETestableProvider> * testableProvider;
//@property int buildSystemType;
//@property (readonly) NSArray * sourcePackageReferences;
//@property (readonly) char supportsSourceFolders;
//+ (id)availableSwiftVersions;
//- (id)blueprintForIdentifier:(id)v1;
//- (id)blueprintForName:(id)v1;
//- (id)blueprints;
//- (id)name;
//- (id)organizationName;
//- (id)classPrefix;
//- (id)testableProvider;
//
//@optional
//- (int)buildSystemType;
//- (void)setBuildSystemType:(int)v1;
//- (id)sourcePackageReferences;
//- (char)supportsSourceFolders;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIssueRuntimeGroupingObject<NSObject>
//@property (copy) NSString * name;
//@property (copy) id issueTypeIdentifier;
//@property (copy) NSArray * subgroupTypeIdentifiers;
//@property (copy) NSMutableDictionary * typeIdentifierToSubgroupTypeIdenfiers;
//- (id)name;
//- (void)setName:(id)v1;
//
//@optional
//- (id)issueTypeIdentifier;
//- (void)setIssueTypeIdentifier:(id)v1;
//- (id)subgroupTypeIdentifiers;
//- (void)setSubgroupTypeIdentifiers:(id)v1;
//- (id)typeIdentifierToSubgroupTypeIdenfiers;
//- (void)setTypeIdentifierToSubgroupTypeIdenfiers:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESwiftPackageContainer
//@property (readonly) char isRemotePackage;
//- (char)isRemotePackage;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTProgressReporting<NSObject>
//@property (readonly) long long progress;
//- (long long)progress;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestRunSessionEvents<NSObject>
//- (void)testRunSessionDidFinish:(id)v1 withCancellation:(char)v2;
//- (void)testTargetRunnerDidStart:(id)v1;
//- (void)testTargetRunner:(id)v1 didEndWithError:(id)v2 wasCanceled:(char)v3;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didLaunchWithDiagnosticLogPath:(id)v3;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 willFinishWithSuccess:(char)v3 withError:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 didStartAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 willFinishAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuiteDidFinishWithRunCount:(unsigned long long)v3 skipCount:(unsigned long long)v4 failureCount:(unsigned long long)v5 unexpectedFailureCount:(unsigned long long)v6 testDuration:(double)v7 totalDuration:(double)v8 rawOutput:(id)v9;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didStartTestWithIdentifier:(id)v3 withRawOutput:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didMeasurePerformanceMetric:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 willStartActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didFinishActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testCaseWithIdentifier:(id)v3 didRecordIssue:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didSkipTestWithIdentifier:(id)v3 withTestResultMessage:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didFinishTestWithIdentifier:(id)v3 withTestResult:(id)v4 rawOutput:(id)v5;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitRefactoringEdit
//@property (readonly) long long line;
//@property (readonly) long long column;
//@property (readonly) long long endLine;
//@property (readonly) long long endColumn;
//@property (readonly) NSString * sourceText;
//@property (readonly) NSArray * renameRanges;
//- (long long)line;
//- (long long)column;
//- (long long)endLine;
//- (long long)endColumn;
//- (id)sourceText;
//- (id)renameRanges;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitRefactoringFileEdits
//@property (readonly) NSString * filePath;
//@property (readonly) NSString * newName;
//@property (readonly) NSArray * edits;
//- (id)filePath;
//- (id)newName;
//- (id)edits;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitRenameRange
//@property (readonly) unsigned long long kind;
//@property (readonly) NSNumber * argIndex;
//@property (readonly) long long line;
//@property (readonly) long long column;
//@property (readonly) long long endLine;
//@property (readonly) long long endColumn;
//- (unsigned long long)kind;
//- (id)argIndex;
//- (long long)line;
//- (long long)column;
//- (long long)endLine;
//- (long long)endColumn;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitRenameRangeGroup
//@property (readonly) unsigned long long category;
//@property (readonly) NSArray * ranges;
//- (unsigned long long)category;
//- (id)ranges;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitRefactoringFileRenameRanges
//@property (readonly) NSString * filePath;
//@property (readonly) char shouldRenameFile;
//@property (readonly) NSArray * categorizedRanges;
//- (id)filePath;
//- (char)shouldRenameFile;
//- (id)categorizedRanges;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitAvailableRefactoring
//@property (readonly) long long kind;
//@property (readonly) long long ident;
//@property (readonly) NSString * name;
//- (long long)kind;
//- (long long)ident;
//- (id)name;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexSymbolNameResults<NSObject>
//@property (readonly) unsigned long long count;
//- (const  char *)cStringAtIndex:(unsigned long long)v1;
//- (void)enumerateNamesUsingBlock:(void (^ /* unknown block signature */)(void))v1;
//- (unsigned long long)count;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexCustomIndexStorePathProvider<NSObject>
//@property (readonly,copy) DVTFilePath * customIndexStorePath;
//- (id)customIndexStorePath;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexable<NSObject,NSCopying>
//@property (readonly,copy) NSString * identifier;
//@property (readonly,copy) NSString * indexName;
//@property (readonly,copy) NSArray * indexableFiles;
//@property (readonly) char requiresMainThread;
//@property (readonly,copy) NSString * localizedIndexableDescription;
//@property (nonatomic) NSObject<IDEIndexable> * proxy;
//@property (readonly,copy) NSString * productType;
//@property (readonly,getter=isUnitTest) char unitTest;
//@property (readonly) NSSet * supportedPlatformsForIndexing;
//- (id)containerForIndexables:(id)v1 rootPaths:(id)v2;
//- (void)productHeadersInWorkspace:(id)v1 withCompletionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (char)writeProductHeaders:(id)v1 toFile:(id)v2 error:(id *)v3;
//- (void)languageOfMainFile:(id)v1 workspace:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)buildSettingsForMainFile:(id)v1 workspace:(id)v2;
//- (id)identifier;
//- (id)indexName;
//- (id)indexableFiles;
//- (char)requiresMainThread;
//- (id)localizedIndexableDescription;
//
//@optional
//- (void)settingsForFilesInWorkspace:(id)v1 shouldWriteAuxiliaryFiles:(char)v2 withCompletionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)settingsForFilesInWorkspace:(id)v1 shouldWriteAuxiliaryFiles:(char)v2 queue:(id)v3 withCompletionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)settingsForFile:(id)v1;
//- (void)clearCachedBuildSettings;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)productNameWithBuildSetting:(id)v1 workspace:(id)v2;
//- (id)proxy;
//- (void)setProxy:(id)v1;
//- (id)productType;
//- (char)isUnitTest;
//- (id)supportedPlatformsForIndexing;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexStringSetFileWatcherDelegate<NSObject>
//- (void)fileAddedStrings:(id)v1 removedStrings:(id)v2 watcher:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitWorkspaceDelegate<NSObject>
//- (long long)indexerToken;
//- (void)onInitiatePrebuild;
//- (void)onDidChange;
//- (void)onDidChangeState;
//- (void)onWillIndexWorkspace:(id)v1;
//- (void)onIsIndexingWorkspace:(id)v1;
//- (void)onDidIndexWorkspace;
//- (void)onDidSuspendIndexingWorkspace;
//- (void)onDidResumeIndexingWorkspace;
//- (void)onIndexWillPopulateDatabase;
//- (void)onIndexIsPopulatingDatabase:(id)v1;
//- (void)onIndexDidPopulateDatabase;
//- (void)onIndexWillFastScan;
//- (void)onIndexIsFastScanning:(id)v1;
//- (void)onIndexDidFastScan;
//- (void)onUnitTestsDidChange;
//- (void)onBuildSettingsForFile:(id)v1;
//- (void)onWriteHeaderMapWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)onGatherProductHeadersWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)onSettingsForIndexableWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)filesContainingWordWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitRefactoringActionDelegate<NSObject>
//- (long long)indexerToken;
//- (long long)refactoringActionToken;
//- (void)refactoringStateChanged:(id)v1;
//- (void)refactoringProgressUpdated:(id)v1;
//- (void)refactoringRenameRangesFound:(id)v1;
//- (void)refactoringUnhandledURLs:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTPortalServicesProviding
//- (id)personIDForAccount:(id)v1 error:(id *)v2;
//- (id)isRegisteredAppleDeveloper:(id)v1 session:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBatchFindQueryDelegate<NSObject>
//- (void)findNavigatorQuery:(id)v1 progressUpdate:(long long)v2;
//- (void)findNavigatorQuery:(id)v1 isStalledOnFilePaths:(id)v2;
//- (void)findNavigatorQueryDidComplete:(id)v1;
//- (void)findNavigatorQuery:(id)v1 didGenerateResults:(id)v2;
//- (void)findNavigatorQuery:(id)v1 didFinishGeneratingLazyChildrenOfResult:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTDiagnosticsClient<NSObject>
//- (void)collect:(id)v1;
//
//@optional
//- (void)willCollect;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDebugNavigableModel<NSObject>
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//- (id)associatedProcessUUID;
//- (id)launchSession;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDebugTopNavigableModel<IDEDebugNavigableModel,DVTInvalidation>
//@property (copy,nonatomic) NSString * name;
//@property (readonly,nonatomic) IDEDebugSession * parentDebugSession;
//- (id)contentDelegateUIExtensionIdentifier;
//- (id)name;
//- (void)setName:(id)v1;
//
//@optional
//- (id)parentDebugSession;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestingOutputStream
//- (void)writeString:(id)v1;
//- (void)finish;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDebuggingAddition<NSObject,DVTInvalidation>
//@property (readonly,nonatomic) IDELaunchSession * launchSession;
//@property (readonly) NSString * identifier;
//- (id)initInLaunchSession:(id)v1 withAppDisplayName:(id)v2 runDestination:(id)v3 fromExtension:(id)v4;
//- (id)launchSession;
//- (id)identifier;
//
//@optional
//+ (char)shouldInstantiateInLaunchSession:(id)v1;
//- (id)adjustedLaunchParametersForLaunchParameters:(id)v1;
//- (void)processFinalLaunchParameters:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceTreeProvider<NSObject>
//+ (id)stringByExpandingSourceTreeReferencesInString:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEMutableProvisionable<IDEProvisionable>
//- (void)setProvisioningStyle:(long long)v1 forConfigurationNamed:(id)v2;
//- (void)setBundleIdentifier:(id)v1 forConfigurationNamed:(id)v2 sdk:(id)v3;
//- (void)setTeam:(id)v1 forConfigurationNamed:(id)v2;
//- (void)setProvisioningProfile:(id)v1 forConfigurationNamed:(id)v2 sdk:(id)v3;
//- (void)setSigningCertificateIdentifier:(id)v1 forConfigurationNamed:(id)v2 sdk:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningManagerRepairObserver<DVTInvalidation>
//@property (readonly) char requiresImmediateUserActionResolution;
//- (char)requiresImmediateUserActionResolution;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningTeamsDataSource
//@property (readonly) NSOrderedSet * teams;
//- (id)teams;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningAssetSelectionDataSourceProvider<IDEProvisioningTeamsDataSource>
//@property (readonly,getter=isFinishedLoading) char finishedLoading;
//@property (readonly) NSArray * provisioningSelectionDataSources;
//@property NSObject<IDEProvisioningTeamsDataSourceDelegate> * delegate;
//- (void)setBundleIdentifier:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setTeam:(id)v1 forConfigurationsNamed:(id)v2;
//- (void)setSigningCertificateIdentifier:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setProvisioningProfile:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setProvisioningStyle:(long long)v1 forConfigurationsNamed:(id)v2 secondarySDK:(id)v3;
//- (void)refreshFromPortal;
//- (char)isFinishedLoading;
//- (id)provisioningSelectionDataSources;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningLedgerDelegate<NSObject>
//
//@optional
//- (void)provisioningLedger:(id)v1 didOpenLedgerEntry:(id)v2;
//- (void)provisioningLedger:(id)v1 didCloseLedgerEntry:(id)v2 withError:(id)v3;
//- (void)provisioningLedger:(id)v1 didAddDetails:(id)v2 toLedgerEntry:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEFlightChecking<DVTInvalidation>
//@property (readonly,copy,nonatomic) NSString * title;
//@property (readonly,copy,nonatomic) NSString * resolvingTitle;
//@property (readonly,copy,nonatomic) NSString * pastTitle;
//@property (readonly,nonatomic) char requiresAccountAndTeamSelection;
//@property (readonly,nonatomic,getter=isLongRunning) char longRunning;
//@property (readonly,nonatomic) int status;
//@property (readonly,nonatomic) NSError * resolutionError;
//@property (readonly,nonatomic) char failed;
//@property (readonly,nonatomic,getter=isAutomaticallyResolvable) char automaticallyResolvable;
//- (void)resolveWithContext:(id)v1;
//- (void)unresolve;
//- (void)validate;
//- (void)revert;
//- (id)title;
//- (id)resolvingTitle;
//- (id)pastTitle;
//- (char)requiresAccountAndTeamSelection;
//- (char)isLongRunning;
//- (int)status;
//- (id)resolutionError;
//- (char)failed;
//- (char)isAutomaticallyResolvable;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELogStoreManageable<NSObject>
//@property (readonly,copy) NSString * uniqueIdentifier;
//@property (readonly,copy) NSString * signature;
//@property (readonly,copy) NSString * title;
//@property (readonly) IDETypeIdentifier * domainType;
//@property (readonly) double timeStartedRecording;
//@property (readonly) double timeStoppedRecording;
//@property (readonly) char isRecording;
//@property (readonly) NSObject<IDELogStoreObservable> * primaryObservable;
//@property (readonly) NSObject<IDELogStoreObservable> * auxiliaryObservable;
//@property (readonly) char hasTests;
//@property (readonly) char hasCoverageData;
//@property (readonly) char hasTimelineData;
//@property (readonly) char hasPrimaryLog;
//@property (readonly) char hasAuxiliaryLog;
//@property (readonly) IDEActivityLogSection * primaryLogSectionIfInMemory;
//@property (readonly,copy) NSString * defaultFileName;
//@property (copy) DVTFilePath * filePath;
//@property (readonly,copy) _TtC13DVTFoundation14DVTFilePromise * coverageReportFilePromise;
//@property (readonly,copy) _TtC13DVTFoundation14DVTFilePromise * coverageArchiveFilePromise;
//+ (id)makeInstanceWithContentsOfFile:(id)v1 error:(id *)v2;
//- (char)writeToFile:(id)v1 error:(id *)v2;
//- (void)addCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)primaryLogSectionWithError:(id *)v1;
//- (id)auxiliaryLogSectionWithError:(id *)v1;
//- (id)primaryLogItems;
//- (id)auxiliaryLogItems;
//- (id)logSectionForItem:(id)v1 error:(id *)v2;
//- (id)uniqueIdentifier;
//- (id)signature;
//- (id)title;
//- (id)domainType;
//- (double)timeStartedRecording;
//- (double)timeStoppedRecording;
//- (char)isRecording;
//- (id)primaryObservable;
//- (id)auxiliaryObservable;
//- (char)hasTests;
//- (char)hasCoverageData;
//- (char)hasTimelineData;
//- (char)hasPrimaryLog;
//- (char)hasAuxiliaryLog;
//- (id)primaryLogSectionIfInMemory;
//- (id)defaultFileName;
//- (id)filePath;
//- (void)setFilePath:(id)v1;
//- (id)coverageReportFilePromise;
//- (id)coverageArchiveFilePromise;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELogStoreObservable<NSObject>
//@property (readonly) char isRecording;
//@property (readonly) unsigned long long totalNumberOfTestFailures;
//@property (readonly) unsigned long long totalNumberOfErrors;
//@property (readonly) unsigned long long totalNumberOfWarnings;
//@property (readonly) unsigned long long totalNumberOfAnalyzerResults;
//- (char)isRecording;
//- (unsigned long long)totalNumberOfTestFailures;
//- (unsigned long long)totalNumberOfErrors;
//- (unsigned long long)totalNumberOfWarnings;
//- (unsigned long long)totalNumberOfAnalyzerResults;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexCompletionItem<NSObject>
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * displayText;
//@property (readonly,copy) NSString * displayType;
//@property (readonly,copy) NSString * briefDisplayText;
//@property (readonly,copy) NSString * displaySignature;
//@property (readonly,copy) NSString * completionText;
//@property (readonly) DVTSourceCodeLanguage * language;
//@property (readonly,copy) NSString * parentText;
//@property (readonly) NSAttributedString * descriptionText;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) double priority;
//@property (nonatomic) double fuzzyMatchingScore;
//@property (retain) DVTRangeArray * fuzzyMatchingRanges;
//@property (readonly) char notRecommended;
//@property (readonly,copy) NSString * accessibilityLabel;
//- (id)name;
//- (id)displayText;
//- (id)displayType;
//- (id)briefDisplayText;
//- (id)displaySignature;
//- (id)completionText;
//- (id)language;
//- (id)parentText;
//- (id)descriptionText;
//- (id)symbolKind;
//- (double)priority;
//- (double)fuzzyMatchingScore;
//- (void)setFuzzyMatchingScore:(double)v1;
//- (id)fuzzyMatchingRanges;
//- (void)setFuzzyMatchingRanges:(id)v1;
//- (char)notRecommended;
//- (id)accessibilityLabel;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexSymbolOccurrence<NSObject>
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//- (id)correspondingSymbol;
//- (id)containingSymbol;
//- (long long)role;
//- (id)file;
//- (id)moduleURL;
//- (id)location;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexSymbol<IDEIndexSymbolOccurrence>
//@property (readonly) NSString * name;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly) NSString * resolution;
//@property (readonly) DVTSymbol * identifier;
//@property (readonly) NSString * moduleName;
//@property (readonly) char isVirtual;
//@property (readonly) char isSystem;
//@property (readonly) char hasOccurrence;
//@property (readonly) char navigationPrefersDefinition;
//- (char)isInProject;
//- (id)modelOccurrence;
//- (id)occurrence;
//- (id)occurrences;
//- (id)declarations;
//- (id)definitions;
//- (id)containerSymbols;
//- (id)containerSymbol;
//- (id)referencingFiles;
//- (id)references;
//- (id)ibRelationClass;
//- (id)displayName;
//- (id)qualifiedDisplayName;
//- (id)completionString;
//- (id)name;
//- (id)symbolKind;
//- (id)symbolLanguage;
//- (id)resolution;
//- (id)identifier;
//- (id)moduleName;
//- (char)isVirtual;
//- (char)isSystem;
//- (char)hasOccurrence;
//- (char)navigationPrefersDefinition;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexContainerSymbol<IDEIndexSymbol>
//- (id)children;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexClassSymbol<IDEIndexContainerSymbol>
//- (id)classMethods;
//- (id)instanceMethods;
//- (id)classVariables;
//- (id)instanceVariables;
//- (id)properties;
//- (id)ibActionMethods;
//- (id)ibOutlets;
//- (id)ibOutletVariables;
//- (id)ibOutletProperties;
//- (id)ibOutletCollections;
//- (id)ibOutletCollectionVariables;
//- (id)ibOutletCollectionProperties;
//- (id)gkInspectableProperties;
//- (id)categories;
//- (id)superclasses;
//- (id)allSuperclasses;
//- (id)subclasses;
//- (id)allSubclasses;
//- (id)protocols;
//- (id)allProtocols;
//- (id)interfaces;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTModelObject<NSObject>
//@property (readonly,nonatomic) DVTModelObjectGraph * objectGraph;
//- (id)objectGraph;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELocalizedContainer<DVTModelObject>
//- (id)name;
//- (id)localizations;
//- (id)developmentRegion;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELocalizedGroup<NSObject>
//- (id)subitems;
//- (id)localizedContainer;
//- (id)subitemForLocale:(id)v1;
//- (id)proposedFilePathForLocalization:(id)v1 fileType:(id)v2;
//- (void)addNewReferenceForLocale:(id)v1 filePath:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)addToTargetDefaultResourcesBuildPhase:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELocalizationWorkProgress<NSObject>
//@property (readonly) char complete;
//@property (readonly) long long progress;
//@property (readonly,copy) NSString * phase;
//@property (readonly,copy) NSString * workTitle;
//- (char)complete;
//- (long long)progress;
//- (id)phase;
//- (id)workTitle;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXCTestRunDecoder
//- (id)testRunFileWithDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 derivedDataPath:(id)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXCTestRunEncoder
//- (id)dictionaryRepresentationWithTestPlanInfo:(id)v1 testRunSpecificationGroups:(id)v2 codeCoverageBuildableInfos:(id)v3 testRootPathPlaceholder:(id)v4 derivedDataPathPlaceholder:(id)v5;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXCTestRunCoder<IDEXCTestRunDecoder,IDEXCTestRunEncoder>
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryAssetManagerSource
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemLibraryAssetManagerSourceDelegate> * delegate;
//- (void)refreshForContext:(id)v1;
//- (id)resultForContext:(id)v1;
//- (char)wantsRefreshForContext:(id)v1;
//- (char)isBusyForContext:(id)v1;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTCustomDataStoring<NSObject>
//@property (readonly) NSString * displayName;
//- (id)customDataSpecifiersForGrouping:(id)v1 ownership:(id)v2;
//- (id)customDataOwnershipsForGrouping:(id)v1;
//- (id)readCustomDataWithSpecifier:(id)v1 error:(id *)v2;
//- (void)writeCustomData:(id)v1 withSpecifier:(id)v2 forceOverwrite:(char)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)removeCustomDataWithSpecifier:(id)v1 completionQueue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)moveCustomDataWithSpecifier:(id)v1 toSpecifier:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (char)supportsCustomDataForOwnership:(id)v1;
//- (id)displayName;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECustomDataStoring<DVTCustomDataStoring>
//- (void)scmStatusForSpecifier:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)addSpecifier:(id)v1 inWorkspace:(id)v2 toSCMWithCompletionBlock:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTXMLUnarchiverDelegate<NSObject>
//
//@optional
//- (void)XMLUnarchiver:(id)v1 didReadToPosition:(long long)v2 ofTotal:(long long)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXMLPackageContainerCore<IDEContainerCore>
//- (id)initWithContentsOfFile:(id)v1 error:(id *)v2;
//- (char)writeToFile:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEClientTracking<NSObject>
//@property (readonly) char isCancelling;
//- (id)registerClientWithName:(id)v1 promptForCancellation:(char)v2 terminationSignpost:(void (^ /* unknown block signature */)(void))v3 cancellationBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)registerUncancellableClientWithName:(id)v1 terminationSignpost:(void (^ /* unknown block signature */)(void))v2;
//- (id)clientsRequiringCancellationPrompt;
//- (id)clientsNotSupportingCancellation;
//- (void)cancelTrackedClients;
//- (char)isCancelling;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEClientTrackingToken<NSObject>
//@property (readonly) NSString * clientName;
//- (void)unregisterClient;
//- (id)clientName;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTRadarSupport<NSObject>
//@property NSObject<DVTRadar_AttachmentDownloadDelegate> * attachmentDownloadDelegate;
//+ (id)sharedClient;
//- (void)showRadarUIForIssue:(id)v1 componentName:(id)v2 componentVersion:(id)v3 keywords:(id)v4 attachmentDownloadDelegate:(id)v5 attachedToWindow:(id)v6 completionBlock:(void (^ /* unknown block signature */)(void))v7;
//- (void)showRadarUIForIssues:(id)v1 bugTitle:(id)v2 componentName:(id)v3 componentVersion:(id)v4 keywords:(id)v5 attachmentDownloadDelegate:(id)v6 attachedToWindow:(id)v7 completionBlock:(void (^ /* unknown block signature */)(void))v8;
//- (void)showRadarNumberPromptForIssue:(id)v1 attachedToWindow:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)showRadarNumberPromptForIssues:(id)v1 attachedToWindow:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)problemsForProblemIDs:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)problemsForKeyword:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)associateProblem:(id)v1 withAssociate:(id)v2;
//- (id)attachmentFromFile:(id)v1;
//- (id)attachmentFromData:(id)v1 withFilename:(id)v2 isPicture:(char)v3;
//- (id)hltComponentForPaths;
//- (id)hltComponentForClassNames;
//- (id)hltComponentForBundleNames;
//- (id)defaultComponent;
//- (id)bestComponentForPath:(id)v1;
//- (id)bestComponentForFrame:(id)v1;
//- (id)bestComponentForClassName:(id)v1;
//- (id)bestComponentForBundleName:(id)v1;
//- (void)validateRadarComponentName:(id)v1 version:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (char)selfDiagnosisEnabled;
//- (void)asyncPrepareToReportSelfDiagnosisIssueWithBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)reportSelfDiagnosisIssueWithSignature:(id)v1 title:(id)v2 componentName:(id)v3 componentVersion:(id)v4 description:(id)v5 keywords:(id)v6 classification:(unsigned long long)v7 ownerProblemID:(id)v8 completionBlock:(void (^ /* unknown block signature */)(void))v9;
//- (void)reportSelfDiagnosisIssueWithSignature:(id)v1 title:(id)v2 componentName:(id)v3 componentVersion:(id)v4 description:(id)v5 keywords:(id)v6 classification:(unsigned long long)v7 ownerProblemID:(id)v8 canFileNewProblem:(char)v9 pathsToAttachments:(id)v10 completionBlock:(void (^ /* unknown block signature */)(void))v11;
//- (void)fetchRadarNumbersForSignatures:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)setUpToolchainIssueReporter;
//- (id)attachmentDownloadDelegate;
//- (void)setAttachmentDownloadDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEPrimitiveSchemeCommand<NSObject>
//@end
//
//
///*****************************************************************/
//
//@protocol NSCoding
//- (void)encodeWithCoder:(id)v1;
//- (id)initWithCoder:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol NSSecureCoding<NSCoding>
//+ (char)supportsSecureCoding;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETextFragmentProviderSeed<NSObject,NSSecureCoding,NSCopying>
//@end
//
//
///*****************************************************************/
//
//@protocol XCTTestSchedulerWorker<NSObject>
//- (void)executeTestIdentifiers:(id)v1 skippingTestIdentifiers:(id)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3 completionQueue:(id)v4;
//- (void)shutdown;
//@end
//
//
///*****************************************************************/
//
//@protocol XCTTestWorker<XCTTestSchedulerWorker>
//- (void)fetchDiscoveredTestClasses:(void (^ /* unknown block signature */)(void))v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestOperationCoordinatorEvents
//- (void)launchSessionStarted:(id)v1 diagnosticLogPath:(id)v2;
//- (void)testProcessDidBecomeReadyForWork:(id)v1;
//- (void)testSuiteWithIdentifier:(id)v1 didStartAt:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testSuiteWithIdentifier:(id)v1 didRecordIssue:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testCaseWithIdentifier:(id)v1 didStartWithRawOutput:(id)v2 sessionState:(id)v3;
//- (void)testCaseWithIdentifier:(id)v1 wasSkippedWithMessage:(id)v2 file:(id)v3 line:(long long)v4 rawOutput:(id)v5 sessionState:(id)v6;
//- (void)testCaseWithIdentifier:(id)v1 didRecordIssue:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testCaseWithIdentifier:(id)v1 willStartActivity:(id)v2 sessionState:(id)v3;
//- (void)testCaseWithIdentifier:(id)v1 didFinishActivity:(id)v2 sessionState:(id)v3;
//- (void)testCaseWithIdentifier:(id)v1 didMeasurePerformanceMetric:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testCaseWithIdentifier:(id)v1 didFinishWithStatus:(id)v2 duration:(double)v3 rawOutput:(id)v4 sessionState:(id)v5;
//- (void)testSuiteWithIdentifier:(id)v1 willFinishAt:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testSuiteDidFinishWithRunCount:(unsigned long long)v1 skipCount:(unsigned long long)v2 failureCount:(unsigned long long)v3 unexpectedFailureCount:(unsigned long long)v4 testDuration:(double)v5 totalDuration:(double)v6 rawOutput:(id)v7 sessionState:(id)v8;
//- (void)willFinishWithError:(id)v1 didCancel:(char)v2 sessionState:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestRunner<DVTInvalidation>
//@property (readonly) IDETestRunSpecification * testRunSpecification;
//@property (readonly) char finished;
//@property (readonly) IDERunDestination * runDestination;
//@property (readonly) int testRunnerPID;
//@property (readonly) DVTFilePath * runnerArtifactsDirectory;
//@property (readonly) NSString * currentDiagnosticLogPath;
//@property (readonly,copy) NSString * title;
//@property NSObject<IDETestRunnerEvents> * testEventsObserver;
//- (id)testOperationWithError:(id *)v1;
//- (void)fetchDiscoveredTestClasses:(void (^ /* unknown block signature */)(void))v1;
//- (void)executeTestIdentifiers:(id)v1 skippingTestIdentifiers:(id)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3 completionQueue:(id)v4;
//- (void)shutdown;
//- (id)testRunSpecification;
//- (char)finished;
//- (id)runDestination;
//- (int)testRunnerPID;
//- (id)runnerArtifactsDirectory;
//- (id)currentDiagnosticLogPath;
//- (id)title;
//- (id)testEventsObserver;
//- (void)setTestEventsObserver:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEInitialization
//+ (char)ide_initializeWithOptions:(unsigned long long)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildSystemServiceProvider<NSObject>
//@property (readonly,nonatomic) char isModern;
//- (id)macCatalystAppExtensionPointIdentifierWhitelist:(id *)v1;
//- (id)macCatalystFrameworkNameBlacklist:(id *)v1;
//- (id)isMacCatalystSupportedForProductTypeIdentifier:(id)v1 error:(id *)v2;
//- (id)createXCFramework:(id)v1 currentWorkingDirectory:(id)v2;
//- (void)setObjectRootPathOverride:(id)v1;
//- (id)createServiceForWorkspace:(id)v1;
//- (char)isModern;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningStyleSelectionDataSource
//@property (nonatomic) long long provisioningStyle;
//- (long long)provisioningStyle;
//- (void)setProvisioningStyle:(long long)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningTeamSelectionDataSource
//@property (readonly,nonatomic) char isTeamSelectionRequired;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//- (char)isTeamSelectionRequired;
//- (id)team;
//- (void)setTeam:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningRepairDataSource
//@property (readonly,getter=isRepairBusy) char repairBusy;
//- (char)isRepairBusy;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningSigningCertificateSelectionDataSource<IDEProvisioningTeamSelectionDataSource,IDEProvisioningRepairDataSource>
//@property (readonly) char isSigningIdentityChangeable;
//@property (readonly,nonatomic) NSOrderedSet * signingIdentities;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicSigningIdentity> * signingIdentity;
//@property (readonly) long long signingStyle;
//@property (readonly) char wantsTeamSelectionRegardlessOfSigningStyle;
//- (char)isSigningIdentityChangeable;
//- (id)signingIdentities;
//- (id)signingIdentity;
//- (void)setSigningIdentity:(id)v1;
//- (long long)signingStyle;
//- (char)wantsTeamSelectionRegardlessOfSigningStyle;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningProfileSelectionDataSource<IDEProvisioningRepairDataSource>
//@property (readonly,getter=isProfileChangeable) char profileChangeable;
//@property (readonly) long long profileSupport;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicProfile> * provisioningProfile;
//@property (readonly,nonatomic) IDEProfileQualification * profileQualification;
//@property (readonly,nonatomic) char showEmptyProfileSelectionPlaceholder;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2;
//- (id)provisioningProfileDownloaderContextWithError:(id *)v1;
//- (char)isProfileChangeable;
//- (long long)profileSupport;
//- (id)provisioningProfile;
//- (void)setProvisioningProfile:(id)v1;
//- (id)profileQualification;
//- (char)showEmptyProfileSelectionPlaceholder;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningBundleIdentifierDataSource
//@property (readonly) char wantsBundleIdentifierEditing;
//@property (readonly,nonatomic) char wantsBundleIdentifierEditingLabel;
//@property (retain,nonatomic) NSString * bundleIdentifier;
//@property (readonly) char isBundleIdentifierReadOnly;
//@property (readonly,nonatomic) NSString * bundleIdentifierPlaceholder;
//- (char)wantsBundleIdentifierEditing;
//- (char)wantsBundleIdentifierEditingLabel;
//- (id)bundleIdentifier;
//- (void)setBundleIdentifier:(id)v1;
//- (char)isBundleIdentifierReadOnly;
//- (id)bundleIdentifierPlaceholder;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningIssuesDataSource
//@property (readonly) NSArray * errors;
//- (id)errors;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningRepairBusyReasonDataSource
//@property (readonly) NSString * repairBusyReason;
//- (id)repairBusyReason;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningAssetSelectionDataSource<IDEProvisioningStyleSelectionDataSource,IDEProvisioningSigningCertificateSelectionDataSource,IDEProvisioningProfileSelectionDataSource,IDEProvisioningBundleIdentifierDataSource,IDEProvisioningTeamSelectionDataSource,IDEProvisioningIssuesDataSource,IDEProvisioningRepairBusyReasonDataSource,IDEProvisioningTeamSelectionDataSource,IDEProvisioningRepairDataSource>
//@property (readonly) NSString * configurationName;
//@property (readonly) NSObject<IDEProvisioningSigningCertificateSelectionDataSource><IDEProvisioningProfileSelectionDataSource><IDEProvisioningiOSMacBundleIdentifierDataSource> * iOSMacDataSource;
//- (id)configurationName;
//- (id)iOSMacDataSource;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProfileQualifier
//@property (readonly,nonatomic) IDEProfileQualifierResult * result;
//@property (readonly,nonatomic) char onlyDisplayOnError;
//@property (readonly,nonatomic) NSString * userFacingName;
//@property (readonly,copy,nonatomic) NSString * debugDescription;
//- (char)qualify;
//- (id)result;
//- (char)onlyDisplayOnError;
//- (id)userFacingName;
//- (id)debugDescription;
//@end
//
//
///*****************************************************************/
//
//@protocol IDERunDestinationRepresentedObject<NSObject>
//@property (readonly) IDERunDestination * runDestination;
//@property (readonly) char isWatchDestination;
//- (id)runDestination;
//- (char)isWatchDestination;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildTaskCallbacks<NSObject>
//- (void)buildTaskDidStartExecuting:(id)v1;
//- (void)buildTask:(id)v1 activityLogSectionDidChange:(id)v2;
//- (void)buildTask:(id)v1 didSetExitCode:(int)v2;
//- (void)buildTaskDidUpdateStatus:(id)v1;
//- (void)buildTask:(id)v1 addsPostprocessingBlocks:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEContainerDelegate<NSObject>
//
//@optional
//- (void)_container:(id)v1 didChangeFromFilePath:(id)v2 toFilePath:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEWorkspaceDelegate<IDEContainerDelegate>
//- (void)_workspace:(id)v1 failedToResolveContainerForProjectFile:(id)v2;
//
//@optional
//- (void)_workspace:(id)v1 didChangeFinishedLoadingTo:(char)v2;
//- (void)_workspace:(id)v1 didChangeSimpleFilesFocusedTo:(char)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEPlaygroundCommonReference<NSObject>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEPlaygroundReference<IDEPlaygroundCommonReference>
//- (id)filePath;
//- (id)displayName;
//- (char)hasPlaygroundContext;
//- (char)canBeMigrated;
//- (id)contextSwiftContentsFilePath;
//- (void)migrateContextWithMigrationDir:(id)v1 buildQueueSet:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)updateLastSwiftMigrationToCurrentIfNecessary;
//- (void)createNewPlaygroundPageTargeting:(id)v1 inWorkspaceTabController:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestableProvider<DVTInvalidation,NSObject>
//@property (readonly,copy) NSArray * testables;
//@property (readonly,copy) NSString * name;
//- (id)testableForBlueprint:(id)v1;
//- (id)testables;
//- (id)name;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourcePackage
//@property (readonly) NSString * packageURL;
//@property (readonly) DVTFilePath * packagePath;
//@property (readonly) NSString * packageName;
//@property (readonly) NSString * packageVersion;
//@property (readonly) char isRootPackage;
//@property (readonly) char isRemotePackage;
//@property (readonly) NSArray * packageProducts;
//- (id)packageURL;
//- (id)packagePath;
//- (id)packageName;
//- (id)packageVersion;
//- (char)isRootPackage;
//- (char)isRemotePackage;
//- (id)packageProducts;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEWorkspaceWrappingContainer
//- (void)becomeWorkspaceWrappingContainer;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexableProvider<DVTInvalidation,NSObject>
//@property (readonly,copy) NSArray * indexables;
//- (id)indexables;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisionableProvider<DVTInvalidation>
//@property (readonly,nonatomic) char finishedLoading;
//@property (readonly,nonatomic) NSSet * provisionables;
//@property (readonly,nonatomic) NSSet * provisionableDestinations;
//- (char)finishedLoading;
//- (id)provisionables;
//- (id)provisionableDestinations;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEPortalInfoDelegate<NSObject>
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * selectedProvisioningTeam;
//@property (readonly,nonatomic) DVTPlatform * platform;
//- (id)selectedProvisioningTeam;
//- (void)setSelectedProvisioningTeam:(id)v1;
//- (id)platform;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributionAppleProvidedContent
//@property (readonly) NSString * archiveOperationDestinationBuildSettingName;
//@property (readonly) NSString * archivePath;
//@property (readonly) NSString * packagePath;
//@property (readonly) NSString * mainAppStubCopySubpath;
//- (char)shouldCodeSignDistributionItem:(id)v1;
//- (char)shouldRemoveForAppStoreDistributionDistributionItem:(id)v1 shouldRemoveParentDirectory:(char *)v2;
//- (char)shouldCopySidecarContentFromArchive:(id)v1;
//- (id)isAppleProvidedContent:(id)v1 archive:(id)v2 error:(id *)v3;
//- (id)archiveOperationDestinationBuildSettingName;
//- (id)archivePath;
//- (id)packagePath;
//- (id)mainAppStubCopySubpath;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexProtocolSymbol<IDEIndexContainerSymbol>
//- (id)classMethods;
//- (id)instanceMethods;
//- (id)properties;
//- (id)subProtocols;
//- (id)implementingClasses;
//- (id)implementingSymbols;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributionEntitlementsFilter<NSObject>
//- (id)entitlementsWhitelistForDistributionItem:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestableDataSource<NSObject>
//@property char providesLiveUpdates;
//- (char)providesLiveUpdates;
//- (void)setProvidesLiveUpdates:(char)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestableDataSourceToken<DVTInvalidation>
//- (void)search;
//@end
//
//
///*****************************************************************/
//
//@protocol IDERunDestinationFallbackSelectorDeviceInfo<NSObject>
//@property (readonly,nonatomic) NSString * ide_fallbackSelectorDeviceGroupingFamily;
//- (id)ide_fallbackSelectorDeviceGroupingFamily;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTSysmonBridgeDelegate
//- (void)bridgeHasNewProcessInformation:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol XCTTestSchedulerDelegate
//- (void)testScheduler:(id)v1 queueDidChange:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestTargetRunner<DVTInvalidation>
//@property NSObject<IDETestTargetRunnerEvents> * testEventsObserver;
//@property (readonly) DVTOperation * operation;
//@property (readonly) IDETestRunSpecification * testRunSpecification;
//@property (readonly) _TtC13IDEFoundation28IDETestRunSpecificationGroup * testRunSpecificationGroup;
//@property (readonly) NSArray * testResults;
//@property (readonly) char finished;
//@property (readonly) NSURL * artifactsDirectory;
//@property (readonly) char successfullyBootstrapped;
//- (id)testEventsObserver;
//- (void)setTestEventsObserver:(id)v1;
//- (id)operation;
//- (id)testRunSpecification;
//- (id)testRunSpecificationGroup;
//- (id)testResults;
//- (char)finished;
//- (id)artifactsDirectory;
//- (char)successfullyBootstrapped;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestRunnerEvents
//- (void)testRunner:(id)v1 didLaunchWithDiagnosticLogPath:(id)v2;
//- (void)testRunnerDidBecomeReadyForWork:(id)v1;
//- (void)testRunner:(id)v1 willFinishWithError:(id)v2 didCancel:(char)v3;
//- (void)testRunner:(id)v1 testSuite:(id)v2 didStartAt:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 testSuite:(id)v2 willFinishAt:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 testSuiteDidFinishWithRunCount:(unsigned long long)v2 skipCount:(unsigned long long)v3 failureCount:(unsigned long long)v4 unexpectedFailureCount:(unsigned long long)v5 testDuration:(double)v6 totalDuration:(double)v7 rawOutput:(id)v8;
//- (void)testRunner:(id)v1 didStartTestWithIdentifier:(id)v2 rawOutput:(id)v3;
//- (void)testRunner:(id)v1 testWithIdentifier:(id)v2 willStartActivity:(id)v3;
//- (void)testRunner:(id)v1 testWithIdentifier:(id)v2 didFinishActivity:(id)v3;
//- (void)testRunner:(id)v1 testWithIdentifier:(id)v2 didMeasurePerformanceMetric:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 testCaseWithIdentifier:(id)v2 didRecordIssue:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 didSkipTestWithIdentifier:(id)v2 withTestResultMessage:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 didFinishTestWithIdentifier:(id)v2 withTestResult:(id)v3 rawOutput:(id)v4;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTMemoryFootprintMonitor
//+ (id)sharedFootprintMonitor;
//- (void)showAlertForAbandonedObjectAfterDuration:(double)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBatchFindPlistCodable
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)propertyListRepresentation;
//@end
//
//
///*****************************************************************/
//
//@protocol UNUserNotificationCenterDelegate<NSObject>
//
//@optional
//- (void)userNotificationCenter:(id)v1 willPresentNotification:(id)v2 withCompletionHandler:(void (^ /* unknown block signature */)(void))v3;
//- (void)userNotificationCenter:(id)v1 didReceiveNotificationResponse:(id)v2 withCompletionHandler:(void (^ /* unknown block signature */)(void))v3;
//- (void)userNotificationCenter:(id)v1 openSettingsForNotification:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEITunesSoftwareServiceDelegateProtocol
//- (void)uploadWillBegin;
//- (void)updateUploadPercentage:(double)v1;
//- (void)updateUploadMessage:(id)v1;
//- (void)uploadDidComplete;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESetResponsibleProcessForUITestingProtocol
//- (void)setResponsiblePID:(int)v1 forPID:(int)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceControlHostServiceEndpointProtocol<NSObject>
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitConnectionDelegate<NSObject>
//- (void)onLogOutput:(id)v1;
//- (void)onToolchainCompilerCrashed:(id)v1;
//- (void)onIndexCompileWillStart:(id)v1;
//- (void)onIndexCompileDidFinish:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTPortalDevice<NSObject>
//@property (readonly,copy,nonatomic) NSString * name;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,copy,nonatomic) NSString * identifier;
//- (id)name;
//- (id)platform;
//- (id)identifier;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBreakpointDelegate<NSObject>
//
//@optional
//- (void)breakpointEnablementChanged:(id)v1;
//- (char)breakpointShouldBeActivated:(id)v1;
//- (void)breakpointModificationChanged:(id)v1;
//- (void)breakpointNameChanged:(id)v1;
//- (void)breakpointTextFilterablePropertyChanged:(id)v1;
//- (void)breakpointLocationsAdded:(id)v1 removed:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEStructureEditing
//- (char)allowUserModificationOfSubitems;
//- (char)canStructureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (id)structureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (char)canStructureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2;
//- (id)structureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2 createGroupsForFolders:(char)v3;
//- (char)canStructureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)structureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)canStructureEditRemoveSubitemsAtIndexes:(id)v1;
//- (char)structureEditRemoveSubitemsAtIndexes:(id)v1 error:(id *)v2;
//- (char)canStructureEditName;
//- (char)structureEditName:(id)v1 inContext:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (char)allowRemovingContainerGroup;
//- (char)structureEditSetName:(id)v1 inContext:(id)v2;
//
//@optional
//- (id)allowedFileTypesOfChildItems;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestsSummariesBuilderDelegate<NSObject>
//- (void)builder:(id)v1 didStartTestWithName:(id)v2 identifier:(id)v3;
//- (void)builder:(id)v1 didFinishTestWithSummary:(id)v2;
//- (void)builder:(id)v1 didStartTestSuiteWithSummary:(id)v2;
//- (void)builder:(id)v1 didFinishTestSuiteWithSummary:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestsActivityLogBuilderDelegate<NSObject>
//- (id)fileURLForTestIdentifier:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestTargetRunnerEvents
//- (void)testTargetRunnerDidStart:(id)v1;
//- (void)testTargetRunner:(id)v1 didEndWithError:(id)v2 wasCanceled:(char)v3;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didLaunchWithDiagnosticLogPath:(id)v3;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 willFinishWithError:(id)v3 didCancel:(char)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testSuite:(id)v3 didStartAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testSuite:(id)v3 willFinishAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testSuiteDidFinishWithRunCount:(unsigned long long)v3 skipCount:(unsigned long long)v4 failureCount:(unsigned long long)v5 unexpectedFailureCount:(unsigned long long)v6 testDuration:(double)v7 totalDuration:(double)v8 rawOutput:(id)v9;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didStartTestWithIdentifier:(id)v3 rawOutput:(id)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testWithIdentifier:(id)v3 willStartActivity:(id)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testWithIdentifier:(id)v3 didFinishActivity:(id)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testWithIdentifier:(id)v3 didMeasurePerformanceMetric:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testCaseWithIdentifier:(id)v3 didRecordIssue:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didSkipTestWithIdentifier:(id)v3 withTestResultMessage:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didFinishTestWithIdentifier:(id)v3 withTestResult:(id)v4 rawOutput:(id)v5;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestablesObserver<NSObject>
//- (void)allTestablesChanged;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestObserver<NSObject,IDETestablesObserver>
//- (void)testsChanged:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestsInTestableObserver<IDETestObserver>
//- (void)testablesChanged:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestingActivityGenerating
//- (id)startActivityWithTitle:(id)v1;
//- (void)endActivity:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestContainer<NSObject>
//@property (readonly,copy) NSString * name;
//@property (readonly) char canHaveSubtests;
//@property (readonly,copy) NSSet * subtests;
//@property (readonly,copy) NSArray * arrangedSubtests;
//- (id)name;
//- (char)canHaveSubtests;
//- (id)subtests;
//- (id)arrangedSubtests;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestable<IDETestContainer,DVTInvalidation,NSObject>
//@property (readonly) NSObject<IDETestableProvider> * testableProvider;
//@property (readonly) NSSet * testFiles;
//@property (readonly) char isUITest;
//@property (readonly) char isSearchingForTests;
//@property (readonly) NSObject<IDEBuildable> * primaryBuildable;
//- (id)testRunSpecificationWithTestingSpecifier:(id)v1 forScheme:(id)v2 buildParameters:(id)v3 buildables:(id)v4 error:(id *)v5;
//- (void)searchForTestsInWorkspace:(id)v1;
//- (id)testHostBuildableInWorkspace:(id)v1 buildParameters:(id)v2;
//- (id)targetApplicationBuildableForWorkspace:(id)v1 withBuildParameters:(id)v2;
//- (id)parentBuildableInWorkspace:(id)v1;
//- (id)testForIdentifier:(id)v1 createIfNeeded:(char)v2;
//- (id)testsInFile:(id)v1;
//- (id)nameForTestWithIdentifier:(id)v1;
//- (id)supertestForTestWithIdentifier:(id)v1;
//- (char)canHaveSubtestsForTestWithIdentifier:(id)v1;
//- (void)removeSubtest:(id)v1;
//- (id)testableProvider;
//- (id)testFiles;
//- (char)isUITest;
//- (char)isSearchingForTests;
//- (id)primaryBuildable;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDeferredInitialization
//+ (char)ide_deferredInitializeWithOptions:(unsigned long long)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
@protocol IDEExecutingOperationTrackable<NSObject>
- (void)registerTracker:(id)v1;
@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitRequestDictionaryWrapper
//- (id)internalDictionary;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECodeCoverageBuildableResolving
//- (id)buildablesForAllSchemeCommandsIncludingDependencies:(char)v1;
//- (id)resolveImplicitDependenciesIfEnabledForBuildables:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildStatisticsData
//@property (readonly,copy) NSString * title;
//@property (readonly) unsigned long long ordinal;
//@property (readonly) double startWallClockTime;
//@property (readonly) double endWallClockTime;
//@property (readonly) double elapsedWallClockTime;
//@property (readonly) double elapsedUserTime;
//@property (readonly) double elapsedSystemTime;
//@property (readonly) long long numberOfVMPageins;
//@property (readonly) long long numberOfVMPageouts;
//- (id)defaultEmissionStringWithIndentLevel:(unsigned long long)v1;
//- (void)emitContentsForAspect:(id)v1 logLevel:(unsigned long long)v2 indentLevel:(unsigned long long)v3 withBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)title;
//- (unsigned long long)ordinal;
//- (double)startWallClockTime;
//- (double)endWallClockTime;
//- (double)elapsedWallClockTime;
//- (double)elapsedUserTime;
//- (double)elapsedSystemTime;
//- (long long)numberOfVMPageins;
//- (long long)numberOfVMPageouts;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTAnalyticsSnapshotFileSystemSerialization
//+ (id)objectFromFilePath:(id)v1 error:(id *)v2;
//- (id)snapshotWithError:(id *)v1;
//
//@optional
//- (id)deletionSnapshotWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTAnalyticsLogProtocol<DVTAnalyticsSnapshotFileSystemSerialization>
//@property (readonly) NSString * appName;
//@property (readonly) NSString * build;
//@property (readonly) NSString * version;
//@property (readonly) NSString * osVersion;
//@property (readonly) NSString * osBuild;
//@property (readonly) NSString * identifier;
//@property (readonly) NSString * hardwareModelDescription;
//@property (readonly) NSString * codeType;
//@property (readonly) NSString * blameThreadDescription;
//@property (readonly) NSString * longUserDescription;
//@property (readonly) char isLocallySymbolicatedCachePath;
//@property (readonly) char isFullySymbolicated;
//+ (id)fileNameExtension;
//- (void)symbolicateWithCallback:(void (^ /* unknown block signature */)(void))v1;
//- (id)appName;
//- (id)build;
//- (id)version;
//- (id)osVersion;
//- (id)osBuild;
//- (id)identifier;
//- (id)hardwareModelDescription;
//- (id)codeType;
//- (id)blameThreadDescription;
//- (id)longUserDescription;
//- (char)isLocallySymbolicatedCachePath;
//- (char)isFullySymbolicated;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTAnalyticsLogProtocol_IDEAdditions<DVTAnalyticsLogProtocol>
//@property (readonly) DVTCrashLogThread * crashingThread;
//- (void)demangleUsingToolchains:(id)v1 toolchainRegistry:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (id)crashingThread;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEContainerItemCore<NSObject>
//@property (retain) NSObject<IDEGroupCore> * parentGroup;
//@property (copy) NSString * path;
//@property (readonly) NSObject<IDEContainerCore> * parentContainer;
//- (id)parentGroup;
//- (void)setParentGroup:(id)v1;
//- (id)path;
//- (void)setPath:(id)v1;
//- (id)parentContainer;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETemplateOptionParent<NSObject>
//@property (readonly,copy) NSString * identifier;
//@property (retain,nonatomic) IDEWorkspace * workspace;
//- (void)valueDidChangeForOption:(id)v1;
//- (id)identifier;
//- (id)workspace;
//- (void)setWorkspace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECoalescableCapabilityEditingItem
//@property (nonatomic) NSObject<IDECoalescableCapabilityEditingItemDelegate> * delegate;
//@property (readonly) NSDictionary * coalescableWriteableKeyPathToDataSource;
//+ (id)coalescableReadOnlyKeyPaths;
//- (void)wantsUpdateKeyPath:(id)v1 value:(id)v2;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//- (id)coalescableWriteableKeyPathToDataSource;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapsuleViewStateRestorationRecordProvider
//@property (readonly,nonatomic) _TtC13IDEFoundation46SigningEditorCapsuleViewStateRestorationRecord * restorationRecord;
//@property (nonatomic) NSObject<IDESigningEditorCapsuleViewStateRestorationRecordProviderDelegate> * restorationRecordProviderDelegate;
//- (id)restorationRecord;
//
//@optional
//- (id)restorationRecordProviderDelegate;
//- (void)setRestorationRecordProviderDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexCategorySymbol<IDEIndexContainerSymbol>
//- (id)classMethods;
//- (id)instanceMethods;
//- (id)instanceVariables;
//- (id)properties;
//- (id)relatedClass;
//@end
//
//
///*****************************************************************/
//
//@protocol IDERunDestinationExtension<NSObject>
//- (id)runDestinationsForDevice:(id)v1 runDestinationManager:(id)v2;
//- (id)runDestinationsForScheme:(id)v1 executionEnvironment:(id)v2 runDestinationManager:(id)v3 deviceManager:(id)v4;
//- (id)adjustDisplayName:(id)v1 runDestination:(id)v2;
//- (char)isValidForRunDestination:(id)v1 scheme:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestingDiagnosticLogWriter<NSObject>
//- (void)writeLogData:(id)v1;
//- (void)writeLogStatus:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestOperationEventSourceEvents
//- (void)testOperationCancelledWithError:(id)v1;
//- (void)testOperationEncounteredError:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation31IDETestDaemonControllerObserver_
//
//@optional
//- (void)testDaemonControllerDidDisconnect:(id)v1;
//- (void)testDaemonController:(id)v1 willReceiveCrashReportForPID:(int)v2 isFatal:(char)v3;
//- (void)testDaemonController:(id)v1 receivedCrashReport:(id)v2 isFatal:(char)v3 crashingSymbol:(id)v4;
//@end
//
//
///*****************************************************************/
//
//@protocol XCTDebugLogDelegate<NSObject>
//- (void)logDebugMessage:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol XCTTestRunnerSessionDelegate<NSObject>
//- (void)testRunnerSessionDidAcquireConnection:(id)v1;
//- (void)testRunnerSessionDidBecomeReady:(id)v1;
//- (void)testRunnerSession:(id)v1 didFailInitializationWithError:(id)v2;
//- (void)testRunnerSessionDidDisconnect:(id)v1;
//- (void)testRunnerSession:(id)v1 didFailToBootstrapWithError:(id)v2;
//- (void)testRunnerSessionDidStartExecutingTests:(id)v1;
//- (void)testRunnerSessionDidFinishExecutingTests:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (void)testRunnerSessionDidStartInitializingForUITesting:(id)v1;
//- (void)testRunnerSession:(id)v1 initializationForUITestingDidFailWithError:(id)v2;
//- (void)testRunnerSession:(id)v1 testSuite:(id)v2 didStartAt:(id)v3;
//- (void)testRunnerSession:(id)v1 testSuiteWithIdentifier:(id)v2 didRecordIssue:(id)v3;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 didStallOnMainThreadAtSourceLocation:(id)v4;
//- (void)testRunnerSession:(id)v1 testSuite:(id)v2 didFinishAt:(id)v3 runCount:(unsigned long long)v4 skipCount:(unsigned long long)v5 failureCount:(unsigned long long)v6 unexpectedFailureCount:(unsigned long long)v7 testDuration:(double)v8 totalDuration:(double)v9;
//- (void)testRunnerSession:(id)v1 testCaseDidStartForTestClass:(id)v2 method:(id)v3;
//- (void)testRunnerSession:(id)v1 testCaseWasSkippedForTestClass:(id)v2 method:(id)v3 message:(id)v4 sourceLocation:(id)v5;
//- (void)testRunnerSession:(id)v1 testCaseWithIdentifier:(id)v2 didRecordIssue:(id)v3;
//- (void)testRunnerSession:(id)v1 testCaseDidFinishForTestClass:(id)v2 method:(id)v3 status:(id)v4 duration:(double)v5;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 willStartActivity:(id)v4;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 didFinishActivity:(id)v4;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 didMeasureMetric:(id)v4 sourceLocation:(id)v5;
//- (void)testRunnerSession:(id)v1 testWithIdentifier:(id)v2 didExceedExecutionTimeAllowance:(double)v3;
//- (void)testRunnerSession:(id)v1 launchProcessWithParameters:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)testRunnerSession:(id)v1 terminateProcessWithToken:(id)v2 error:(id *)v3;
//- (id)testRunnerSession:(id)v1 progressForLaunchWithToken:(id)v2 error:(id *)v3;
//- (void)testRunnerSession:(id)v1 didReceiveDebugLogMessage:(id)v2;
//- (void)testRunnerSession:(id)v1 didReportSelfDiagnosisIssue:(id)v2 description:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELaunchSessionEventSourceEvents
//- (void)launchSessionStarted;
//- (void)launchSessionEncounteredAlertError:(id)v1;
//- (void)launchSessionGotPID:(int)v1;
//- (void)launchSessionExpired;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestOperationStateMachineDelegate
//- (void)launchSessionWillFinalize;
//- (void)launchSessionDidFinalizeWithDescription:(id)v1;
//- (void)testRunnerHungAfterAcquiringPID;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningTeamAccountPairProvider<NSObject>
//- (id)pairForTeam:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourceKitOperationObserver<NSObject>
//- (void)serviceWasStartedWithPID:(int)v1;
//- (void)serviceCrashed;
//- (void)workspaceOpened:(id)v1;
//- (void)workspaceClosed:(id)v1;
//- (void)codeCompletionOperationWasCompleted:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEAppIDFeatureCoordination<DVTInvalidation>
//@property (readonly,nonatomic) DVTPortalAppIDFeatures * appIDFeatures;
//@property (readonly,nonatomic,getter=isCommunicatingWithPortal) char communicatingWithPortal;
//@property (readonly,nonatomic) NSArray * errors;
//@property (readonly,nonatomic) long long provisioningStyle;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//- (void)noteAppIDFeaturesChanged;
//- (char)allowsFeatures:(id)v1 missingFeatures:(id *)v2;
//- (id)appIDFeatures;
//- (char)isCommunicatingWithPortal;
//- (id)errors;
//- (long long)provisioningStyle;
//- (id)team;
//- (void)setTeam:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeWorkspace
//@property (readonly) IDENoticeCollator * noticeCollator;
//@property (readonly) NSObject<IDEBuildNoticeLogSection> * latestBuildLogForBuildNoticeProvider;
//- (id)activeBlueprintLogSectionIDs;
//- (id)observeLatestBuildLogIdentityDidChange:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeActiveBlueprintLogSectionIDs:(void (^ /* unknown block signature */)(void))v1;
//- (id)makeLogStoreForNoticeLogs;
//- (id)noticeCollator;
//- (id)latestBuildLogForBuildNoticeProvider;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogSection
//@property (readonly) char isRecording;
//@property (readonly) char isSealed;
//@property (readonly,copy) NSArray * subsections;
//@property (readonly) NSArray * messages;
//@property (readonly,copy) NSString * signature;
//@property (readonly) IDENoticeBlueprintID * buildNoticeLogSectionBlueprintID;
//- (id)observeAddedSections:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeSealedSections:(void (^ /* unknown block signature */)(void))v1;
//- (char)isRecording;
//- (char)isSealed;
//- (id)subsections;
//- (id)messages;
//- (id)signature;
//- (id)buildNoticeLogSectionBlueprintID;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogMessage
//@property (readonly) NSString * title;
//@property (readonly) NSString * shortTitle;
//@property (readonly) NSObject<IDEBuildNoticeLogSection> * supersection;
//@property (readonly) NSObject<IDEBuildNoticeLogMessage> * supermessage;
//@property (readonly) unsigned long long severity;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) NSArray * secondaryLocations;
//@property (readonly) NSArray * submessages;
//- (id)title;
//- (id)shortTitle;
//- (id)supersection;
//- (id)supermessage;
//- (unsigned long long)severity;
//- (id)location;
//- (id)secondaryLocations;
//- (id)submessages;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogStore<DVTInvalidation>
//@property (readonly) NSArray * logRecords;
//- (void)addBuildNoticeBlueprintLog:(id)v1 from:(id)v2 rootSignature:(id)v3;
//- (id)logRecords;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogRecord
//- (id)fullLogWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDERunDestinationScheme
//@property (readonly) NSString * name;
//@property (readonly) NSString * disambiguatedName;
//@property (readonly) char isTransient;
//@property (readonly) char schemeRunnableRequiresPairedProxyDevice;
//- (id)runnableForSchemeCommand:(id)v1;
//- (id)buildConfigurationForSchemeCommand:(id)v1;
//- (id)buildablesForSchemeCommand:(id)v1 testingSpecifiers:(id)v2 includingDependencies:(char)v3;
//- (id)primaryBuildablesForSchemeCommand:(id)v1;
//- (id)name;
//- (id)disambiguatedName;
//- (char)isTransient;
//- (char)schemeRunnableRequiresPairedProxyDevice;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProjectItem<NSObject>
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSString * imageName;
//@property (readonly,nonatomic) NSString * capabilityDescription;
//@property (readonly,nonatomic) NSString * identifier;
//@property (readonly,nonatomic) NSSet * entitlementsWithoutPortalFeature;
//@property (readonly,nonatomic) DVTPortalProfileFeature * feature;
//@property (readonly,nonatomic) DVTPortalContainerType * containerType;
//- (id)name;
//- (id)imageName;
//- (id)capabilityDescription;
//- (id)identifier;
//- (id)entitlementsWithoutPortalFeature;
//- (id)feature;
//- (id)containerType;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECapabilityItemLibraryAssetProtocol
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSString * capabilityDescription;
//@property (readonly,nonatomic) NSURL * imageURL;
//@property (readonly,nonatomic) NSString * identifier;
//- (id)name;
//- (id)capabilityDescription;
//- (id)imageURL;
//- (id)identifier;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryAssetContextProtocol<NSObject,IDECapabilityItemLibraryAssetProtocol>
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,nonatomic) IDEProductType * productType;
//@property (readonly,nonatomic) NSString * appExtensionPointIdentifier;
//@property (readonly,nonatomic) char isAvailableWithFreeProvisioningTeam;
//@property (readonly,nonatomic) char isMacCatalystException;
//- (id)platform;
//- (id)productType;
//- (id)appExtensionPointIdentifier;
//- (char)isAvailableWithFreeProvisioningTeam;
//- (char)isMacCatalystException;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXBSXcodebuildSupportProvider<NSObject>
//- (id)additionalOptionDefinitions;
//- (id)xbsParametersForBuildOptions:(id)v1;
//- (id)optionOverridesForParameters:(id)v1 performingAction:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol OSActivityStreamDelegate<NSObject>
//- (char)activityStream:(id)v1 results:(id)v2;
//
//@optional
//- (void)streamDidStart:(id)v1;
//- (void)streamDidFail:(id)v1 error:(id)v2;
//- (void)streamDidStop:(id)v1;
//- (char)activityStream:(id)v1 results:(id)v2 error:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexCallableSymbol<IDEIndexSymbol>
//@property (readonly,nonatomic) IDEIndexCollection * overriddenSymbols;
//@property (readonly,nonatomic) NSObject<IDEIndexPropertySymbol> * property;
//- (id)overriddenSymbols;
//- (id)property;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuilderCallbacks<NSObject>
//- (void)builder:(id)v1 activityLogSectionDidChange:(id)v2;
//- (void)builder:(id)v1 resultDidChange:(long long)v2;
//- (void)builderDidStartExecuting:(id)v1;
//- (void)builderDidFinishExecuting:(id)v1;
//- (void)builder:(id)v1 didUpdateBuildStatusWithStateDescription:(id)v2 fileProgressString:(id)v3 builderProgress:(double)v4;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildOperationProviding<NSObject>
//@property (readonly) long long result;
//@property (readonly,copy) NSDate * startTime;
//@property (readonly) NSArray * buildables;
//- (long long)result;
//- (id)startTime;
//- (id)buildables;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEActivityLogSectionCustomData<NSCopying>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEOnDiskActivityLogRecordManaging<NSObject>
//@property (readonly,copy) NSString * rootDirectoryPath;
//- (id)pathForFileName:(id)v1;
//- (id)cachedLogStoreManageableForLogRecord:(id)v1;
//- (void)cacheLogStoreManageable:(id)v1 forLogRecord:(id)v2;
//- (id)rootDirectoryPath;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEOnDiskLogStoreFoundationServicesProviding<NSObject>
//- (char)removeItemAtPath:(id)v1 error:(id *)v2;
//- (char)fileExistsAtPath:(id)v1;
//- (id)contentsOfDirectoryAtPath:(id)v1 error:(id *)v2;
//- (char)createDirectoryAtPath:(id)v1 withIntermediateDirectories:(char)v2 attributes:(id)v3 error:(id *)v4;
//- (char)copyItemAtPath:(id)v1 toPath:(id)v2 error:(id *)v3;
//- (id)dataWithContentsOfFile:(id)v1 options:(unsigned long long)v2 error:(id *)v3;
//- (id)propertyListWithData:(id)v1 options:(unsigned long long)v2 format:(unsigned long long *)v3 error:(id *)v4;
//- (id)dataWithPropertyList:(id)v1 format:(unsigned long long)v2 options:(unsigned long long)v3 error:(id *)v4;
//- (char)writeData:(id)v1 toFile:(id)v2 options:(unsigned long long)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEReadOnlyItem<NSObject>
//@property (readonly) int readOnlyStatus;
//@property (readonly) NSURL * readOnlyItemURL;
//- (char)makeWritableWithError:(id *)v1;
//- (int)readOnlyStatus;
//- (id)readOnlyItemURL;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELocalizationTestActivity<NSObject>
//@property (readonly,copy,nonatomic) NSString * scheme;
//@property (readonly,copy,nonatomic) NSString * device;
//@property (readonly,copy,nonatomic) NSDate * startTime;
//@property (readonly,copy,nonatomic) NSString * formattedLanguage;
//@property (readonly,nonatomic) long long screenshotCount;
//@property (readonly,nonatomic) long long screenshotCountSelected;
//@property (nonatomic,getter=isIncluded) char included;
//@property (readonly,nonatomic,getter=isIncludedEnabled) char includedEnabled;
//- (id)scheme;
//- (id)device;
//- (id)startTime;
//- (id)formattedLanguage;
//- (long long)screenshotCount;
//- (long long)screenshotCountSelected;
//- (char)isIncluded;
//- (void)setIncluded:(char)v1;
//- (char)isIncludedEnabled;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESchemeActionTestIdentifiable<NSObject>
//@property (readonly,copy) NSString * identifier;
//- (id)identifier;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESchemeActionTestSummaryContainer<NSObject>
//@property (readonly) NSArray * containedTestSummaries;
//@property (readonly) NSMutableArray * mutableContainedTestSummaries;
//- (id)containedTestSummaries;
//- (id)mutableContainedTestSummaries;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESchemeActionTestContainer<NSObject>
//- (id)addNewTestSummaryGroupWithName:(id)v1 identifier:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestMetadataDatabase
//- (void)updateMetadataRecord:(id)v1;
//- (void)updateFields:(id)v1 forMetadataRecord:(id)v2;
//- (void)purgeMetadataRecordsPassingTest:(void (^ /* unknown block signature */)(void))v1;
//- (id)metadataRecordsForIdentifier:(id)v1;
//- (id)save;
//- (void)updateWithSchemeActionRecord:(id)v1;
//- (void (^ /* unknown block signature */)(void))classBasedLPTPrioritizerWithFallbackExecutionOrdering:(long long)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEAppIDContainerFlightCheckDelegate
//- (id)containerIdentifiersForFlightCheck:(id)v1 error:(id *)v2;
//- (void)flightCheckWillUnresolve:(id)v1;
//- (void)flightCheckIsValidating:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTSimpleSerialization
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEOpenQuicklyResultConsumer<NSObject>
//- (id)resultConsumptionQueue;
//- (void)resultGenerator:(id)v1 didGenerateOrderedResults:(id)v2 generation:(long long)v3;
//- (void)resultGeneratorFinishedStarting:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECoverageUnarchiver
//- (id)unarchiveCoverageLinesForKey:(id)v1 error:(id *)v2;
//- (id)getKeys:(id *)v1;
//- (id)unarchiveAllCoverageLines:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESchemeActionIssueSummaryProducingTarget
//@property (readonly) NSString * ide_schemeActionIssueSummaryProducingTargetName;
//- (id)ide_schemeActionIssueSummaryProducingTargetName;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEGroupCore<IDEContainerItemCore>
//@property (retain) NSObject<IDEContainerCore> * parentContainer;
//@property (copy) NSString * name;
//@property (copy) NSArray * subitems;
//- (id)parentContainer;
//- (void)setParentContainer:(id)v1;
//- (id)name;
//- (void)setName:(id)v1;
//- (id)subitems;
//- (void)setSubitems:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBatchFindQueryTimestamp
//- (id)dvt_documentLocationTimestamp;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTReferenceResolverClient
//- (void)resolverStrategiesDidChange:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributionArchiveReformatter<NSObject>
//- (id)inspectablePropertyName;
//- (id)inspectablePropertyValueForArchive:(id)v1;
//- (char)supportsManifestDistribution;
//- (id)appTypeDescription;
//- (long long)sortOrder;
//- (char)isAppStoreContainerAppInfoDictionary:(id)v1;
//- (char)wantsReformattingForArchive:(id)v1 distributionMethod:(id)v2;
//- (id)targetBundleIdentifier:(id)v1 distributionMethod:(id)v2 error:(id *)v3;
//- (id)targetName:(id)v1 distributionMethod:(id)v2 error:(id *)v3;
//- (id)reformattedArchive:(id)v1 distributionMethod:(id)v2 temporaryDirectory:(id)v3 error:(id *)v4;
//- (id)reformatterWarnings:(id)v1 archive:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
@protocol IDEExecutionTrackerReporting<NSObject>
- (id)notFinishedReasonWithDepth:(unsigned long long)v1;
@end
//
//
///*****************************************************************/
//
//@protocol IDEPerformanceSignpostSerializable<NSObject>
//@property (readonly,copy) NSDictionary * serializedRepresentation;
//- (id)initFromSerialized:(id)v1;
//- (id)serializedRepresentation;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningBasicProfile<NSObject>
//@property (readonly) NSString * UUID;
//@property (readonly) NSString * automaticIdentitySelector;
//@property (readonly) NSString * name;
//@property (readonly) char existsOnDisk;
//@property (readonly) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly) IDEProfileSpecifier * specifier;
//- (id)UUID;
//- (id)automaticIdentitySelector;
//- (id)name;
//- (char)existsOnDisk;
//- (id)team;
//- (id)specifier;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningMechanicDelegate<DVTInvalidation>
//- (void)repairPendingForRepairable:(id)v1;
//- (void)repairDidBeginForRepairable:(id)v1;
//- (void)repairForRepairable:(id)v1 isExecutingStep:(id)v2;
//- (void)repairDidFinishForRepairable:(id)v1;
//- (void)repairForRepairable:(id)v1 didFailWithError:(id)v2;
//- (void)repairForRepairable:(id)v1 requiresUserAction:(id)v2;
//- (void)repairUserActionDidBeginForRepairable:(id)v1;
//- (void)repairUserAction:(id)v1 didFinishForRepairable:(id)v2;
//- (void)repairForRepairable:(id)v1 userAction:(id)v2 didFailWithError:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorProvisionableManagerProvider
//@property (readonly,getter=isFinishedLoading) char finishedLoading;
//- (id)managerForProvisionable:(id)v1;
//- (char)isFinishedLoading;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningMechanicContextProvider<NSObject>
//@property (readonly,nonatomic) DVTSigningCertificateManager * certificateManager;
//@property (readonly,nonatomic) DVTProvisioningProfileManager * profileManager;
//@property (readonly,nonatomic) IDEProvisioningLedger * ledger;
//- (id)certificateManager;
//- (id)profileManager;
//- (id)ledger;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEFileReferenceCore<IDEContainerItemCore>
//@property (copy) DVTFileDataType * assignedDataType;
//- (id)assignedDataType;
//- (void)setAssignedDataType:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEFlightCheckingContext<NSObject>
//- (id)initWithPortalInfoDelegate:(id)v1 item:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEFrameworkCore<IDEContainerCore>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEContainerErrorPresenter
//- (int)handleSaveError:(id)v1 forContainer:(id)v2 withAction:(int)v3;
//- (char)presentError:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEContainerReloadingDelegate
//- (int)responseToExternalChangesToBackingFileForContainer:(id)v1 fileWasRemoved:(char)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEContainerUnlockingDelegate
//- (void)container:(id)v1 attemptToUnlockItems:(id)v2 workspace:(id)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTDirectoryBasedCustomDataStoreDelegate<NSObject>
//
//@optional
//- (void)customDataStore:(id)v1 makeFilePathsWritable:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)customDataStore:(id)v1 writeData:(id)v2 toFilePath:(id)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)customDataStore:(id)v1 moveItemAtFilePath:(id)v2 toFilePath:(id)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)customDataStore:(id)v1 removeItemAtFilePath:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEUpgradeableItem
//- (void)enumerateUpgradeTasksWithBlock:(void (^ /* unknown block signature */)(void))v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECodeGeneratorOutputDelegate<NSObject>
//- (void)emitOutput:(id)v1;
//- (void)emitError:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexPropertySymbol<IDEIndexSymbol>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIssueCoalescingDocumentLocationIdentifiable
//@property (readonly,nonatomic) NSObject<NSCopying> * issueCoalescingGroupIdentifier;
//@property (readonly,nonatomic) NSObject<NSCopying> * issueCoalescingIdentifier;
//- (id)issueCoalescingGroupIdentifier;
//- (id)issueCoalescingIdentifier;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDiagnosticItemDelegate<NSObject>
//
//@optional
//- (void)diagnosticItemWasFixed:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP15XCSourceControl30XCSourceControlXPCBaseProtocol_
//- (void)cancelOperation:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (void)actionPullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 action:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)updateRepositoryPermissions:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)pullRequest:(id)v1 account:(id)v2 repository:(id)v3 identifier:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)user:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)validateCredentials:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)uploadSSHKey:(id)v1 account:(id)v2 publicSSHKey:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)listSSHKeys:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)repositoryBranches:(id)v1 account:(id)v2 repository:(id)v3 includeUpstream:(char)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)findUsers:(id)v1 matching:(id)v2 account:(id)v3 repository:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)shouldAllowAvatarFrom:(id)v1 withAccount:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)reply:(id)v1 commentEvent:(id)v2 withComment:(id)v3 pullRequest:(id)v4 account:(id)v5 repository:(id)v6 reply:(void (^ /* unknown block signature */)(void))v7;
//- (void)deleteComment:(id)v1 comment:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)uploadPullRequestAttachments:(id)v1 account:(id)v2 repository:(id)v3 fileURLs:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)pullRequests:(id)v1 account:(id)v2 repository:(id)v3 filter:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)requestPersonalAccessToken:(id)v1 account:(id)v2 twoFactorCode:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)repositories:(id)v1 account:(id)v2 type:(unsigned long long)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)searchRepositories:(id)v1 account:(id)v2 query:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)star:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)unstar:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)membership:(id)v1 account:(id)v2 options:(long long)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)avatar:(id)v1 account:(id)v2 email:(id)v3 username:(id)v4 url:(id)v5 size:(unsigned int)v6 reply:(void (^ /* unknown block signature */)(void))v7;
//- (void)createRepository:(id)v1 account:(id)v2 owner:(id)v3 name:(id)v4 description:(id)v5 homepage:(id)v6 private:(char)v7 reply:(void (^ /* unknown block signature */)(void))v8;
//- (void)branch:(id)v1 account:(id)v2 repositoryURL:(id)v3 branchName:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)repositoryMetadata:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)validateSSHKey:(id)v1 account:(id)v2 publicSSHKey:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)createFileDiscussion:(id)v1 discussion:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)createComment:(id)v1 comment:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)updateComment:(id)v1 comment:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)createPullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)updatePullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 force:(char)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)updatePullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 targetBranch:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)requestAuthCode:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 tag:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 branch:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 sha:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)webURLComponents:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (void)fetchEvents:(id)v1 pullRequest:(id)v2 account:(id)v3 repository:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)repositoryForURL:(id)v1 url:(id)v2 account:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)capabilities:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)fetchParticipants:(id)v1 account:(id)v2 repository:(id)v3 pullRequest:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)addParticipants:(id)v1 account:(id)v2 pullRequest:(id)v3 participants:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)removeParticipants:(id)v1 account:(id)v2 pullRequest:(id)v3 participants:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)endpointURL:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (void)username:(id)v1 url:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)commitDetails:(id)v1 account:(id)v2 repository:(id)v3 revision:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)listCommits:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)listCommits:(id)v1 account:(id)v2 pullRequest:(id)v3 file:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)statusAnnotation:(id)v1 account:(id)v2 repository:(id)v3 commit:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)createStatusAnnotation:(id)v1 account:(id)v2 repository:(id)v3 commit:(id)v4 statusAnnotation:(id)v5 reply:(void (^ /* unknown block signature */)(void))v6;
//- (void)labels:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)milestones:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)setLabels:(id)v1 account:(id)v2 pullRequest:(id)v3 labels:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)setMilestone:(id)v1 account:(id)v2 pullRequest:(id)v3 milestone:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)exportFile:(id)v1 account:(id)v2 file:(id)v3 revisionLocation:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)exportFile:(id)v1 account:(id)v2 file:(id)v3 revision:(id)v4 repositoryURL:(id)v5 reply:(void (^ /* unknown block signature */)(void))v6;
//- (void)renderMarkdown:(id)v1 account:(id)v2 text:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)listChanges:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)pullRequestMergabilityInformation:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)mergePullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 action:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)deleteSSHKeyWithAccount:(id)v1 sshKey:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)deleteRepositoryWithAccount:(id)v1 repository:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)resetRepositoryWithAccount:(id)v1 repository:(id)v2 defaultBranch:(id)v3 branches:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)setNetworkActivityLoggingEnabled:(char)v1;
//- (void)commonAncestor:(id)v1 account:(id)v2 repository:(id)v3 sourceBranch:(id)v4 targetBranch:(id)v5 reply:(void (^ /* unknown block signature */)(void))v6;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP15XCSourceControl37XCSourceControlXPCHostServiceProtocol_<_TtP15XCSourceControl30XCSourceControlXPCBaseProtocol_>
//- (void)repositories:(id)v1 account:(id)v2 type:(unsigned long long)v3 pagination:(void (^ /* unknown block signature */)(void))v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)searchCodeRepositories:(id)v1 account:(id)v2 type:(unsigned long long)v3 query:(id)v4 path:(id)v5 filename:(id)v6 fileExtension:(id)v7 pagination:(void (^ /* unknown block signature */)(void))v8 reply:(void (^ /* unknown block signature */)(void))v9;
//- (void)searchBranches:(id)v1 account:(id)v2 repository:(id)v3 query:(id)v4 pagination:(void (^ /* unknown block signature */)(void))v5 reply:(void (^ /* unknown block signature */)(void))v6;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP15XCSourceControl29XCSourceControlNetworkLogging_
//- (void)logNetworkRequest:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP15XCSourceControl41XCSourceControlXPCExportedServiceProtocol_<_TtP15XCSourceControl29XCSourceControlNetworkLogging_>
//- (void)paginateRepositories:(id)v1 participant:(id)v2 repositories:(id)v3;
//- (void)paginate:(id)v1 repositoryBranches:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningBasicSigningIdentity<NSObject>
//@property (readonly) NSString * identifier;
//@property (readonly) NSString * userDescription;
//- (id)identifier;
//- (id)userDescription;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTProvisioningProfileProvider<NSObject>
//@property (readonly,nonatomic) NSString * identifier;
//@property (readonly,nonatomic) NSSet * supportedPlatforms;
//+ (id)provisioningProfilePathExtension;
//- (id)initWithIdentifier:(id)v1;
//- (id)provisioningProfileFromFilePath:(id)v1 error:(id *)v2;
//- (id)provisioningProfileFromData:(id)v1 error:(id *)v2;
//- (id)identifier;
//- (id)supportedPlatforms;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEArchiveDistributionRecordObserver<NSObject>
//- (void)distributionRecordUpdated:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributable
//@property (readonly,copy) NSString * name;
//@property (readonly) DVTFilePath * path;
//@property (readonly) DVTFilePath * productsDirectoryPath;
//@property (readonly) NSObject<IDEDistributableContent> * content;
//@property (readonly) NSObject<IDEDistributableEventRecording> * recorder;
//@property (readonly) DVTFilePath * productDefinitionPlistPath;
//@property (readonly) DVTFilePath * dSYMDirectoryPath;
//- (id)name;
//- (id)path;
//- (id)productsDirectoryPath;
//- (id)content;
//- (id)recorder;
//- (id)productDefinitionPlistPath;
//- (id)dSYMDirectoryPath;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributableEventRecording
//- (char)addDistribution:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningRepairDelegate
//- (void)repairDidBegin:(id)v1;
//- (void)repair:(id)v1 isExecutingStep:(id)v2;
//- (void)repairDidFinish:(id)v1;
//- (void)repair:(id)v1 didFailWithError:(id)v2;
//- (void)repair:(id)v1 requiresUserAction:(id)v2;
//- (void)repair:(id)v1 userActionWasAuthorized:(id)v2;
//- (void)repair:(id)v1 userAction:(id)v2 didFailWithError:(id)v3;
//- (void)repairUserActionDidBegin:(id)v1;
//- (void)repair:(id)v1 didFinishUserAction:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestContainer<NSObject>
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) char canHaveSubtests;
//@property (nonatomic,readonly) NSSet * subtests;
//@property (nonatomic,readonly) NSArray * arrangedSubtests;
//- (id)name;
//- (char)canHaveSubtests;
//- (id)subtests;
//- (id)arrangedSubtests;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation36IDETestPlanTestableReferenceProtocol_<NSObject>
//@property (nonatomic,readonly) NSObject<IDETestable> * testable;
//@property (nonatomic,readonly) IDESchemeBuildableReference * buildableReference;
//@property (nonatomic,readonly) char isEnabled;
//@property (nonatomic,readonly) char parallelizable;
//@property (nonatomic,readonly) long long testSelectionMode;
//@property (nonatomic,readonly) NSSet * skippedTests;
//@property (nonatomic,readonly) NSSet * selectedTests;
//@property (nonatomic,readonly) char isAssociatedWithSchemeAction;
//@property (nonatomic,readonly) _TtC13IDEFoundation25IDEDeviceAppDataReference * deviceAppDataReference;
//@property (nonatomic,readonly) _TtC13IDEFoundation28IDELocationScenarioReference * locationScenarioReference;
//@property (nonatomic,readonly) long long testExecutionOrdering;
//- (id)testable;
//- (id)buildableReference;
//- (char)isEnabled;
//- (char)parallelizable;
//- (long long)testSelectionMode;
//- (id)skippedTests;
//- (id)selectedTests;
//- (char)isAssociatedWithSchemeAction;
//- (id)deviceAppDataReference;
//- (id)locationScenarioReference;
//- (long long)testExecutionOrdering;
//- (char)isTestEnabledInHierarchy:(id)v1;
//- (id)copyWithNewName:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexSymbol<IDEIndexSymbolOccurrence>
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (nonatomic,readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (nonatomic,readonly) NSString * resolution;
//@property (nonatomic,readonly) _TtC13DVTFoundation9DVTSymbol * identifier;
//@property (nonatomic,readonly) NSString * moduleName;
//@property (nonatomic,readonly) char isVirtual;
//@property (nonatomic,readonly) char isSystem;
//@property (nonatomic,readonly) char hasOccurrence;
//@property (nonatomic,readonly) char navigationPrefersDefinition;
//- (id)name;
//- (id)symbolKind;
//- (id)symbolLanguage;
//- (id)resolution;
//- (id)identifier;
//- (id)moduleName;
//- (char)isVirtual;
//- (char)isSystem;
//- (char)hasOccurrence;
//- (char)navigationPrefersDefinition;
//- (char)isInProject;
//- (id)modelOccurrence;
//- (id)occurrence;
//- (id)occurrences;
//- (id)declarations;
//- (id)definitions;
//- (id)containerSymbols;
//- (id)containerSymbol;
//- (id)referencingFiles;
//- (id)references;
//- (id)ibRelationClass;
//- (id)displayName;
//- (id)qualifiedDisplayName;
//- (id)completionString;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestingOutputStream
//- (void)writeString:(id)v1;
//- (void)writeString:(id)v1;
//- (void)finish;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECapabilityItemLibraryAssetProtocol
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * capabilityDescription;
//@property (nonatomic,readonly) NSURL * imageURL;
//@property (nonatomic,readonly) NSString * identifier;
//- (id)name;
//- (id)capabilityDescription;
//- (id)imageURL;
//- (id)identifier;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESourcePackage
//@property (nonatomic,readonly) NSString * packageURL;
//@property (nonatomic,readonly) DVTFilePath * packagePath;
//@property (nonatomic,readonly) NSString * packageName;
//@property (nonatomic,readonly) NSString * packageVersion;
//@property (nonatomic,readonly) char isRootPackage;
//@property (nonatomic,readonly) char isRemotePackage;
//@property (nonatomic,readonly) NSArray * packageProducts;
//- (id)packageURL;
//- (id)packagePath;
//- (id)packageName;
//- (id)packageVersion;
//- (char)isRootPackage;
//- (char)isRemotePackage;
//- (id)packageProducts;
//@end
//
//
///*****************************************************************/
//
@protocol DVTInvalidation<NSObject>
@property (nonatomic,readonly) char valid;
//@property (nonatomic,readonly) char valid;
//@property (nonatomic,readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (nonatomic,retain) DVTStackBacktrace * creationBacktrace;
- (void)primitiveInvalidate;

@optional
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (char)supportsInvalidationPrevention;
- (void)invalidate;
- (char)isValid;
//- (char)isValid;
- (id)invalidationBacktrace;
- (id)creationBacktrace;
- (void)setCreationBacktrace:(id)v1;
- (void)addAutoInvalidatedObject:(id)v1;
@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogStore<DVTInvalidation>
//@property (nonatomic,readonly) NSArray * logRecords;
//- (id)logRecords;
//- (void)addBuildNoticeBlueprintLog:(id)v1 from:(id)v2 rootSignature:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTSourceControlAccount<NSObject>
//@property (nonatomic,copy) NSString * accountName;
//@property (nonatomic,readonly) NSURL * hostURL;
//@property (nonatomic) char savingDisabled;
//- (id)accountName;
//- (void)setAccountName:(id)v1;
//- (id)hostURL;
//- (char)savingDisabled;
//- (void)setSavingDisabled:(char)v1;
//- (id)dictionaryRepresentation;
//- (id)authenticationStrategyForURL:(id)v1;
//- (id)authenticationStrategyForURL:(id)v1;
//- (void)setAuthenticationStrategy:(id)v1 forURL:(id)v2;
//- (void)setAuthenticationStrategy:(id)v1 forURL:(id)v2;
//- (id)initWithDictionary:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestable<IDETestContainer,DVTInvalidation,NSObject>
//@property (nonatomic,readonly) NSObject<IDETestableProvider> * testableProvider;
//@property (nonatomic,readonly) NSSet * testFiles;
//@property (nonatomic,readonly) char isUITest;
//@property (nonatomic,readonly) char isSearchingForTests;
//@property (nonatomic,readonly) NSObject<IDEBuildable> * primaryBuildable;
//- (id)testableProvider;
//- (id)testFiles;
//- (char)isUITest;
//- (id)testRunSpecificationWithTestingSpecifier:(id)v1 forScheme:(id)v2 buildParameters:(id)v3 buildables:(id)v4 error:(id *)v5;
//- (id)testRunSpecificationWithTestingSpecifier:(id)v1 forScheme:(id)v2 buildParameters:(id)v3 buildables:(id)v4 error:(id *)v5;
//- (void)searchForTestsInWorkspace:(id)v1;
//- (void)searchForTestsInWorkspace:(id)v1;
//- (char)isSearchingForTests;
//- (id)primaryBuildable;
//- (id)testHostBuildableInWorkspace:(id)v1 buildParameters:(id)v2;
//- (id)testHostBuildableInWorkspace:(id)v1 buildParameters:(id)v2;
//- (id)targetApplicationBuildableForWorkspace:(id)v1 withBuildParameters:(id)v2;
//- (id)targetApplicationBuildableForWorkspace:(id)v1 withBuildParameters:(id)v2;
//- (id)parentBuildableInWorkspace:(id)v1;
//- (id)parentBuildableInWorkspace:(id)v1;
//- (id)testForIdentifier:(id)v1 createIfNeeded:(char)v2;
//- (id)testForIdentifier:(id)v1 createIfNeeded:(char)v2;
//- (id)testsInFile:(id)v1;
//- (id)testsInFile:(id)v1;
//- (id)nameForTestWithIdentifier:(id)v1;
//- (id)nameForTestWithIdentifier:(id)v1;
//- (id)supertestForTestWithIdentifier:(id)v1;
//- (id)supertestForTestWithIdentifier:(id)v1;
//- (char)canHaveSubtestsForTestWithIdentifier:(id)v1;
//- (char)canHaveSubtestsForTestWithIdentifier:(id)v1;
//- (void)removeSubtest:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation24IDETestingSpecifierGroup_
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSObject<IDETestPlanResolvedOptions> * options;
//@property (nonatomic,readonly) NSArray * testingSpecifiers;
//@property (nonatomic,readonly) char isDerivedFromScheme;
//- (id)name;
//- (id)options;
//- (id)testingSpecifiers;
//- (char)isDerivedFromScheme;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildable<DVTInvalidation,NSObject>
//@property (nonatomic,readonly) NSString * productTypeIdentifier;
//@property (nonatomic,readonly) NSString * buildableIdentifier;
//@property (nonatomic,readonly) IDEEntityIdentifier * entityIdentifier;
//@property (nonatomic,readonly) NSObject<IDEBlueprint> * blueprint;
//@property (nonatomic,readonly) NSString * displayName;
//@property (nonatomic,readonly) NSString * toolTip;
//@property (nonatomic,readonly) NSSet * namesOfLinkedBinaries;
//@property (nonatomic,readonly) NSString * productModuleName;
//@property (nonatomic,readonly) NSString * legacyIdentifier;
//- (id)productTypeIdentifier;
//- (id)buildableIdentifier;
//- (id)entityIdentifier;
//- (id)blueprint;
//- (id)displayName;
//- (id)toolTip;
//- (id)namesOfLinkedBinaries;
//- (id)productModuleName;
//- (id)productTypeWithBuildParameters:(id)v1;
//- (id)productTypeWithBuildParameters:(id)v1;
//- (id)allBuildSettingNamesWithBuildParameters:(id)v1;
//- (id)allBuildSettingNamesWithBuildParameters:(id)v1;
//- (id)evaluatedStringValueForBuildSetting:(id)v1 withBuildParameters:(id)v2;
//- (id)evaluatedStringValueForBuildSetting:(id)v1 withBuildParameters:(id)v2;
//- (id)evaluatedStringListValueForBuildSetting:(id)v1 withBuildParameters:(id)v2;
//- (id)evaluatedStringListValueForBuildSetting:(id)v1 withBuildParameters:(id)v2;
//- (id)stringByEvaluatingBuildSettingExpressionString:(id)v1 withBuildParameters:(id)v2;
//- (id)stringByEvaluatingBuildSettingExpressionString:(id)v1 withBuildParameters:(id)v2;
//- (id)absolutePathByEvaluatingBuildSettingExpressionString:(id)v1 withBuildParameters:(id)v2;
//- (id)absolutePathByEvaluatingBuildSettingExpressionString:(id)v1 withBuildParameters:(id)v2;
//- (id)toolSearchPathWithBuildParameters:(id)v1;
//- (id)toolSearchPathWithBuildParameters:(id)v1;
//- (id)orderedRecursiveDependenciesIncludingSelf:(char)v1 includingPackages:(char)v2;
//- (id)orderedRecursiveDependenciesIncludingSelf:(char)v1 includingPackages:(char)v2;
//- (id)orderedRecursiveDependenciesIncludingSelf:(char)v1;
//- (id)orderedRecursiveDependenciesIncludingSelf:(char)v1;
//- (id)directDependencies;
//- (id)implicitDependenciesForBuildParameters:(id)v1 executionEnvironment:(id)v2 returningMessages:(id *)v3;
//- (id)implicitDependenciesForBuildParameters:(id)v1 executionEnvironment:(id)v2 returningMessages:(id *)v3;
//- (id)createBuilderForBuildCommand:(long long)v1 withBuildTaskQueueSet:(id)v2 parameters:(id)v3 buildOnlyTheseFiles:(id)v4 restorePersistedBuildResults:(char)v5 withManager:(id)v6;
//- (id)createBuilderForBuildCommand:(long long)v1 withBuildTaskQueueSet:(id)v2 parameters:(id)v3 buildOnlyTheseFiles:(id)v4 restorePersistedBuildResults:(char)v5 withManager:(id)v6;
//- (id)legacyIdentifier;
//
//@optional
//- (Class)buildOperationManagerClass;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation19IDETestingSpecifier_
//@property (nonatomic,readonly) NSObject<IDETestable> * testable;
//@property (nonatomic,readonly) NSObject<IDETestPlanResolvedOptions> * options;
//@property (nonatomic,readonly) NSSet * skippedTests;
//@property (nonatomic,readonly) NSSet * selectedTests;
//- (id)testable;
//- (id)options;
//- (id)skippedTests;
//- (id)selectedTests;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorAssetSelectionDataSource<IDESigningEditorStyleDataSource,IDESigningEditorTeamDataSource,IDESigningEditorBundleIdentifierDataSource,IDESigningEditorProfileDataSource,IDESigningEditorCertificateDataSource,IDEProvisioningRepairBusyReasonDataSource,IDEProvisioningIssuesDataSource,IDESigningEditorCapsuleViewStateRestorationRecordProvider>
//@property (nonatomic,readonly) NSString * title;
//@property (nonatomic,readonly) NSArray * configurationNames;
//@property (nonatomic,readonly) NSObject<IDESigningEditorIOSMacAssetSelectionDataSource><NSObject> * iOSMacDataSource;
//- (id)title;
//- (id)configurationNames;
//- (id)iOSMacDataSource;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTCodesignableDevice<NSObject>
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * nameForDeveloperPortal;
//@property (nonatomic,readonly) NSString * identifier;
//@property (nonatomic,readonly) NSString * platformIdentifier;
//@property (nonatomic,readonly) DVTPlatform * platform;
//@property (nonatomic,readonly) char supportsProvisioning;
//@property (nonatomic,readonly) NSSet * proxiedDevices;
//- (id)name;
//- (id)nameForDeveloperPortal;
//- (id)identifier;
//- (id)platformIdentifier;
//- (id)platform;
//- (char)supportsProvisioning;
//- (id)proxiedDevices;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTCustomDataStoring<NSObject>
//@property (nonatomic,readonly) NSString * displayName;
//- (id)customDataSpecifiersForGrouping:(id)v1 ownership:(id)v2;
//- (id)customDataSpecifiersForGrouping:(id)v1 ownership:(id)v2;
//- (id)customDataOwnershipsForGrouping:(id)v1;
//- (id)customDataOwnershipsForGrouping:(id)v1;
//- (id)readCustomDataWithSpecifier:(id)v1 error:(id *)v2;
//- (id)readCustomDataWithSpecifier:(id)v1 error:(id *)v2;
//- (void)writeCustomData:(id)v1 withSpecifier:(id)v2 forceOverwrite:(char)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)writeCustomData:(id)v1 withSpecifier:(id)v2 forceOverwrite:(char)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)removeCustomDataWithSpecifier:(id)v1 completionQueue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)removeCustomDataWithSpecifier:(id)v1 completionQueue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)moveCustomDataWithSpecifier:(id)v1 toSpecifier:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)moveCustomDataWithSpecifier:(id)v1 toSpecifier:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (char)supportsCustomDataForOwnership:(id)v1;
//- (char)supportsCustomDataForOwnership:(id)v1;
//- (id)displayName;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryAssetContextProtocol<NSObject,IDECapabilityItemLibraryAssetProtocol>
//@property (nonatomic,readonly) DVTPlatform * platform;
//@property (nonatomic,readonly) IDEProductType * productType;
//@property (nonatomic,readonly) NSString * appExtensionPointIdentifier;
//@property (nonatomic,readonly) char isAvailableWithFreeProvisioningTeam;
//@property (nonatomic,readonly) char isMacCatalystException;
//- (id)platform;
//- (id)productType;
//- (id)appExtensionPointIdentifier;
//- (char)isAvailableWithFreeProvisioningTeam;
//- (char)isMacCatalystException;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestsSummariesBuilderDelegate<NSObject>
//- (void)builder:(id)v1 didStartTestWithName:(id)v2 identifier:(id)v3;
//- (void)builder:(id)v1 didFinishTestWithSummary:(id)v2;
//- (void)builder:(id)v1 didFinishTestWithSummary:(id)v2;
//- (void)builder:(id)v1 didStartTestSuiteWithSummary:(id)v2;
//- (void)builder:(id)v1 didFinishTestSuiteWithSummary:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestDaemonController
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) selfDiagnosisIssueHandler;
//- (void)activate;
//- (void)addObserver:(id)v1 queue:(id)v2;
//- (void)removeObserver:(id)v1;
//- (void)authorizeProcessWithIdentifier:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)addProcessNamesToMonitoredCrashReports:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)collectLogArchiveFromDate:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)requestSpindumpWithPid:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void (^ /* unknown block signature */)(void))selfDiagnosisIssueHandler;
//- (void)setSelfDiagnosisIssueHandler:(void (^ /* unknown block signature */)(void))v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation25IDETestRunDestinationPool_
//@property (nonatomic,readonly) NSString * displayName;
//@property (nonatomic,readonly) DVTPlatformFamily * platformFamily;
//@property (nonatomic,readonly) char containsAlmondDestination;
//@property (nonatomic,readonly) char canVendMoreThanOneRunDestination;
//- (id)allocateRunDestinationFor:(id)v1;
//- (void)deallocateRunDestination:(id)v1;
//- (char)prepareForTestSessionWithTestingMode:(long long)v1 error:(id *)v2;
//- (void)testSessionDidEnd;
//- (char)preflightWithTestRunSpecification:(id)v1 error:(id *)v2;
//- (id)displayName;
//- (id)platformFamily;
//- (char)containsAlmondDestination;
//- (char)canVendMoreThanOneRunDestination;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestingActivityGenerating
//- (id)startActivityWithTitle:(id)v1;
//- (id)startActivityWithTitle:(id)v1;
//- (void)endActivity:(id)v1;
//- (void)endActivity:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTPromise<DVTCancellable>
//- (void)cancel;
//- (void)succeedWithResult:(id)v1;
//- (void)succeedWithResult:(id)v1;
//- (void)failWithError:(id)v1;
//- (void)cancelAfterTimeout:(double)v1;
//- (void)cancelAfterTimeout:(double)v1;
//- (void)succeedWithResult:(id)v1 afterTimeout:(double)v2;
//- (void)succeedWithResult:(id)v1 afterTimeout:(double)v2;
//- (void)failWithError:(id)v1 afterTimeout:(double)v2;
//- (void)setProgress:(long long)v1;
//- (void)trackFuture:(id)v1 progress:(float)v2 cancel:(char)v3 result:(char)v4 error:(char)v5;
//- (void)trackFuture:(id)v1;
//- (id)future;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestCollection<NSObject>
//@property (nonatomic,readonly) NSSet * testContainers;
//@property (nonatomic,readonly) char isEmpty;
//@property (nonatomic,readonly) NSArray * orderedTestContainers;
//- (id)testContainers;
//- (char)isEmpty;
//- (id)subsetContainedInTestPlan:(id)v1;
//- (id)subsetContainedInTestPlan:(id)v1;
//
//@optional
//- (id)orderedTestContainers;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation54SigningEditorCapabilityItemLibraryAssetManagerDelegate_
//- (void)didUpdateContextWithSender:(id)v1;
//- (void)didUpdateItemsWithSender:(id)v1;
//- (void)didUpdateErrorWithSender:(id)v1;
//- (void)didUpdateIsBusyWithSender:(id)v1;
//- (void)didUpdateEmptyContentWithSender:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryAssetManagerContextProvider
//@property (nonatomic,readonly) NSArray * signingEditorCapabilityItemLibraryAssetManagerUnvalidatedContexts;
//- (id)signingEditorCapabilityItemLibraryAssetManagerUnvalidatedContexts;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeWorkspace
//@property (nonatomic,readonly) IDENoticeCollator * noticeCollator;
//@property (nonatomic,readonly) NSObject<IDEBuildNoticeLogSection> * latestBuildLogForBuildNoticeProvider;
//- (id)noticeCollator;
//- (id)latestBuildLogForBuildNoticeProvider;
//- (id)activeBlueprintLogSectionIDs;
//- (id)observeLatestBuildLogIdentityDidChange:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeActiveBlueprintLogSectionIDs:(void (^ /* unknown block signature */)(void))v1;
//- (id)makeLogStoreForNoticeLogs;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTCancellable<NSObject>
//@property (nonatomic,readonly) char cancelled;
//@property (nonatomic,readonly) char cancelled;
//- (void)cancel;
//- (char)isCancelled;
//- (char)isCancelled;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogSection
//@property (nonatomic,readonly) char isRecording;
//@property (nonatomic,readonly) char isSealed;
//@property (nonatomic,readonly) NSArray * subsections;
//@property (nonatomic,readonly) NSArray * messages;
//@property (nonatomic,readonly) NSString * signature;
//@property (nonatomic,readonly) IDENoticeBlueprintID * buildNoticeLogSectionBlueprintID;
//- (char)isRecording;
//- (char)isSealed;
//- (id)subsections;
//- (id)messages;
//- (id)signature;
//- (id)buildNoticeLogSectionBlueprintID;
//- (id)observeAddedSections:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeSealedSections:(void (^ /* unknown block signature */)(void))v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEInfoPlistCoordination<NSObject,DVTInvalidation>
//@property (nonatomic,readonly) DVTFilePath * infoPlistFilePath;
//@property (nonatomic,readonly) char infoPlistFileExists;
//- (id)infoPlistFilePath;
//- (char)infoPlistFileExists;
//- (id)valueForPlistSetting:(id)v1;
//- (id)valueForPlistSetting:(id)v1;
//- (id)valueForPlistSetting:(id)v1 ofType:(Class)v2;
//- (id)valueForPlistSetting:(id)v1 ofType:(Class)v2;
//- (void)setValue:(id)v1 forPlistSetting:(id)v2;
//- (void)addValue:(id)v1 toArrayForPlistSetting:(id)v2;
//- (void)addRequiredCapabilityWithKey:(id)v1;
//- (void)addRequiredCapabilityWithKey:(id)v1;
//- (void)removeValue:(id)v1 fromArrayForPlistSetting:(id)v2;
//- (void)removePlistSetting:(id)v1;
//- (char)requiredCapabilitiesStateForKey:(id)v1;
//- (char)requiredCapabilitiesStateForKey:(id)v1;
//- (void)removeRequiredCapabilityWithKey:(id)v1;
//- (void)removeRequiredCapabilityWithKey:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEEntitlementsCoordination<NSObject,DVTInvalidation>
//@property (nonatomic,readonly) DVTFilePath * entitlementsFilePath;
//- (id)entitlementsFilePath;
//- (void)syncPerformEntitlementsInteractionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)allEntitlementKeys;
//- (void)setEntitlementValue:(id)v1 forKey:(id)v2;
//- (char)entitlementsContainsEntitlementKeyForItem:(id)v1;
//- (char)entitlementsContainsEntitlementKeyForItem:(id)v1;
//- (char)entitlementsContainsEntitlementKey:(id)v1;
//- (void)addEntitlementsFileForConfiguration;
//- (void)addEntitlementsFileForAnyConfigurationNecessary;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorConfigurationDataSourceDelegate
//- (void)willUpdateConfigurationScope:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningProfileSelectionDataSource<IDEProvisioningRepairDataSource>
//@property (nonatomic,readonly) char profileChangeable;
//@property (nonatomic,readonly) char profileChangeable;
//@property (nonatomic,readonly) long long profileSupport;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicProfile> * provisioningProfile;
//@property (nonatomic,readonly) IDEProfileQualification * profileQualification;
//@property (nonatomic,readonly) char showEmptyProfileSelectionPlaceholder;
//- (char)isProfileChangeable;
//- (char)isProfileChangeable;
//- (long long)profileSupport;
//- (id)provisioningProfile;
//- (void)setProvisioningProfile:(id)v1;
//- (id)profileQualification;
//- (char)showEmptyProfileSelectionPlaceholder;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2;
//- (id)provisioningProfileDownloaderContextWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningSigningCertificateSelectionDataSource<IDEProvisioningTeamSelectionDataSource,IDEProvisioningRepairDataSource>
//@property (nonatomic,readonly) char isSigningIdentityChangeable;
//@property (nonatomic,readonly) NSOrderedSet * signingIdentities;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicSigningIdentity> * signingIdentity;
//@property (nonatomic,readonly) long long signingStyle;
//@property (nonatomic,readonly) char wantsTeamSelectionRegardlessOfSigningStyle;
//- (char)isSigningIdentityChangeable;
//- (id)signingIdentities;
//- (id)signingIdentity;
//- (void)setSigningIdentity:(id)v1;
//- (long long)signingStyle;
//- (char)wantsTeamSelectionRegardlessOfSigningStyle;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningiOSMacBundleIdentifierDataSource<IDEProvisioningBundleIdentifierDataSource>
//@property (nonatomic) char useIOSAppID;
//@property (nonatomic,readonly) char wantsUniversalBundleIdentifierOption;
//- (char)useIOSAppID;
//- (void)setUseIOSAppID:(char)v1;
//- (char)wantsUniversalBundleIdentifierOption;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEAppIDFeatureCoordination<DVTInvalidation>
//@property (nonatomic,readonly) DVTPortalAppIDFeatures * appIDFeatures;
//@property (nonatomic,readonly) char communicatingWithPortal;
//@property (nonatomic,readonly) char communicatingWithPortal;
//@property (nonatomic,readonly) NSArray * errors;
//@property (nonatomic,readonly) long long provisioningStyle;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicTeam> * team;
//- (void)noteAppIDFeaturesChanged;
//- (char)allowsFeatures:(id)v1 missingFeatures:(id *)v2;
//- (char)allowsFeatures:(id)v1 missingFeatures:(id *)v2;
//- (id)appIDFeatures;
//- (char)isCommunicatingWithPortal;
//- (char)isCommunicatingWithPortal;
//- (id)errors;
//- (long long)provisioningStyle;
//- (id)team;
//- (void)setTeam:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildSettingsCoordination<NSObject,DVTInvalidation>
//@property (nonatomic,readonly) IDEBuildParameters * iOSMacBuildParameters;
//- (id)evaluatedStringValueForBuildSetting:(id)v1;
//- (id)evaluatedStringValueForBuildSetting:(id)v1;
//- (char)boolValueForBuildSetting:(id)v1 buildParameters:(id)v2;
//- (char)boolValueForBuildSetting:(id)v1 buildParameters:(id)v2;
//- (id)expandedValueForString:(id)v1;
//- (id)expandedValueForString:(id)v1;
//- (void)setValue:(id)v1 forBuildSettingsKey:(id)v2;
//- (id)iOSMacBuildParameters;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELinkedFrameworksCoordination<DVTInvalidation>
//- (id)initWithTarget:(id)v1 buildConfiguration:(id)v2;
//- (char)linkFrameworkWithName:(id)v1 error:(id *)v2;
//- (char)linkFrameworkWithName:(id)v1 error:(id *)v2;
//- (void)unlinkFrameworkWithName:(id)v1;
//- (void)unlinkFrameworkWithName:(id)v1;
//- (char)isLinkedToFrameworkWithName:(id)v1;
//- (char)isLinkedToFrameworkWithName:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETargetCapabilitiesCoordinatorGenerator
//- (id)generateInfoPlistCoordinatorForConfiguration:(id)v1;
//- (id)generateInfoPlistCoordinatorForConfiguration:(id)v1;
//- (id)generateEntitlementsCoordinatorForConfiguration:(id)v1;
//- (id)generateEntitlementsCoordinatorForConfiguration:(id)v1;
//- (id)generateAppIDFeatureCoordinatorForConfiguration:(id)v1;
//- (id)generateAppIDFeatureCoordinatorForConfiguration:(id)v1;
//- (id)generateBuildSettingsCoordinatorForConfiguration:(id)v1;
//- (id)generateBuildSettingsCoordinatorForConfiguration:(id)v1;
//- (id)generateLinkedFrameworksCoordinatorForConfiguration:(id)v1;
//- (id)generateLinkedFrameworksCoordinatorForConfiguration:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol NSObject
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) Class superclass;
//@property (nonatomic,readonly) NSString * description;
//@property (nonatomic,readonly) NSString * debugDescription;
//- (char)isEqual:(id)v1;
//- (long long)hash;
//- (Class)superclass;
//- (Class)class;
//- (id)self;
//- (id)performSelector:(SEL)v1;
//- (id)performSelector:(SEL)v1;
//- (id)performSelector:(SEL)v1 withObject:(id)v2;
//- (id)performSelector:(SEL)v1 withObject:(id)v2;
//- (id)performSelector:(SEL)v1 withObject:(id)v2 withObject:(id)v3;
//- (id)performSelector:(SEL)v1 withObject:(id)v2 withObject:(id)v3;
//- (char)isProxy;
//- (char)isKindOfClass:(Class)v1;
//- (char)isKindOfClass:(Class)v1;
//- (char)isMemberOfClass:(Class)v1;
//- (char)isMemberOfClass:(Class)v1;
//- (char)conformsToProtocol:(id)v1;
//- (char)conformsToProtocol:(id)v1;
//- (char)respondsToSelector:(SEL)v1;
//- (char)respondsToSelector:(SEL)v1;
//- (id)retain;
//- (oneway  void)release;
//- (id)autorelease;
//- (unsigned long long)retainCount;
//- (struct _NSZone *)zone;
//- (id)description;
//
//@optional
//- (id)debugDescription;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation31IDETestDaemonControllerObserver_
//
//@optional
//- (void)testDaemonControllerDidDisconnect:(id)v1;
//- (void)testDaemonController:(id)v1 willReceiveCrashReportForPID:(int)v2 isFatal:(char)v3;
//- (void)testDaemonController:(id)v1 receivedCrashReport:(id)v2 isFatal:(char)v3 crashingSymbol:(id)v4;
//@end
//
//
///*****************************************************************/
//
//@protocol XCTDaemonControlSession<NSObject>
//@property (nonatomic,readonly) char isConnected;
//- (char)isConnected;
//- (void)setDelegate:(id)v1 callbackQueue:(id)v2 logDelegate:(id)v3;
//- (void)authorizeProcessWithIdentifier:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)authorizeProcessWithIdentifier:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)collectNewCrashReportsInDirectories:(id)v1 matchingProcessNames:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (void)collectNewCrashReportsInDirectories:(id)v1 matchingProcessNames:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (void)collectLogArchiveFromStartDate:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)collectLogArchiveFromStartDate:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)requestSpindumpWithSpecification:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)requestSpindumpWithSpecification:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)invalidate;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestPlanResolvedOptions<IDELaunchTestSchemeActionResolvedOptions,IDETestPlanOptions>
//@property (nonatomic,readonly) NSNumber * defaultTestExecutionTimeAllowance;
//@property (nonatomic,readonly) NSNumber * maximumTestExecutionTimeAllowance;
//- (id)defaultTestExecutionTimeAllowance;
//- (id)maximumTestExecutionTimeAllowance;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECodeCoverageBuildableProviding<IDECodeCoverageProviding>
//- (id)coverageBuildableInfosForScheme:(id)v1 buildableResolver:(id)v2 buildParameterVariants:(id)v3;
//- (id)coverageBuildableInfosForScheme:(id)v1 buildableResolver:(id)v2 buildParameterVariants:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningAssetSelectionDataSourceProvider<IDEProvisioningTeamsDataSource>
//@property (nonatomic,readonly) char finishedLoading;
//@property (nonatomic,readonly) char finishedLoading;
//@property (nonatomic,readonly) NSArray * provisioningSelectionDataSources;
//@property (nonatomic) NSObject<IDEProvisioningTeamsDataSourceDelegate> * delegate;
//- (char)isFinishedLoading;
//- (char)isFinishedLoading;
//- (id)provisioningSelectionDataSources;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//- (void)setBundleIdentifier:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setTeam:(id)v1 forConfigurationsNamed:(id)v2;
//- (void)setSigningCertificateIdentifier:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setProvisioningProfile:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setProvisioningStyle:(long long)v1 forConfigurationsNamed:(id)v2 secondarySDK:(id)v3;
//- (void)refreshFromPortal;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningBasicTeam<NSObject>
//@property (nonatomic,readonly) NSString * teamID;
//@property (nonatomic,readonly) NSString * teamName;
//@property (nonatomic,readonly) char freeProvisioningTeam;
//@property (nonatomic,readonly) char freeProvisioningTeam;
//- (id)teamID;
//- (id)teamName;
//- (char)isFreeProvisioningTeam;
//- (char)isFreeProvisioningTeam;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation29IDESchemeFileReference_Scheme_
//@property (nonatomic,readonly) NSObject<_TtP13IDEFoundation32IDESchemeFileReference_Workspace_> * workspace;
//@property (nonatomic,readonly) id _customDataStoreContainer;
//@property (nonatomic,readonly) char isValid;
//- (id)workspace;
//- (id)_customDataStoreContainer;
//- (void)markSchemeDirtyFromUserChange;
//- (char)isValid;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemEditingConsolidatedContextDelegatingSourceProvider<IDESigningEditorCapabilityItemEditingConsolidatedContextSourceProvider>
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemEditingConsolidatedContextSourceProviderDelegate> * capabilityItemEditingConsolidatedContextSourceProviderDelegate;
//- (id)capabilityItemEditingConsolidatedContextSourceProviderDelegate;
//- (void)setCapabilityItemEditingConsolidatedContextSourceProviderDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorConfigurationManagerProviderProtocol
//@property (nonatomic,readonly) NSObject<IDESigningEditorConfigurationManagerProtocol> * signingEditorConfigurationManager;
//
//@optional
//- (id)signingEditorConfigurationManager;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemEditingConsolidatedContextSource
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemEditingConsolidatedContextSourceDelegate> * editingDelegate;
//@property (nonatomic,readonly) NSDictionary * configurationToEnabledItems;
//@property (nonatomic,readonly) NSDictionary * configurationToIdentifierToDisabledItem;
//- (id)editingDelegate;
//- (void)setEditingDelegate:(id)v1;
//- (id)configurationToEnabledItems;
//- (id)configurationToIdentifierToDisabledItem;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETargetEditorBundleIdentifierSource
//@property (nonatomic,readonly) NSArray * availableConfigurationNames;
//- (id)availableConfigurationNames;
//- (id)bundleIdentifierForBuildParameters:(id)v1;
//- (id)bundleIdentifierForBuildParameters:(id)v1;
//- (void)setBundleIdentifier:(id)v1 forConfigurationNamed:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation38IDETestingLaunchSession_ConsoleAdaptor_
//@property (nonatomic,retain) NSObject<IDEConsoleAdaptorDelegateProtocol> * delegate;
//@property (nonatomic,readonly) unsigned long long type;
//@property (nonatomic,readonly) char finishedReceivingData;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//- (unsigned long long)type;
//- (char)finishedReceivingData;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningAssetSelectionDataSource<IDEProvisioningStyleSelectionDataSource,IDEProvisioningSigningCertificateSelectionDataSource,IDEProvisioningProfileSelectionDataSource,IDEProvisioningBundleIdentifierDataSource,IDEProvisioningTeamSelectionDataSource,IDEProvisioningIssuesDataSource,IDEProvisioningRepairBusyReasonDataSource,IDEProvisioningRepairDataSource>
//@property (nonatomic,readonly) NSString * configurationName;
//@property (nonatomic,readonly) NSObject<IDEProvisioningProfileSelectionDataSource><IDEProvisioningSigningCertificateSelectionDataSource><IDEProvisioningiOSMacBundleIdentifierDataSource> * iOSMacDataSource;
//- (id)configurationName;
//- (id)iOSMacDataSource;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorIOSMacAssetSelectionDataSource<IDESigningEditoriOSMacBundleIdentifierDataSource,IDESigningEditorProfileDataSource,IDESigningEditorCertificateDataSource>
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation34SigningEditorProvisionableDelegate_<NSObject>
//- (void)didChangeWithProvisionable:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryAssetManagerSourceDelegate
//- (void)willBeginRefresh:(id)v1 context:(id)v2;
//- (void)didRefresh:(id)v1 context:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEConsolidatedCapabilitiesContextSource<DVTInvalidation>
//@property (nonatomic) NSObject<IDEConsolidatedCapabilitiesContextSourceDelegate> * delegate;
//@property (nonatomic,readonly) NSDictionary * configurationToContext;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//- (id)configurationToContext;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemEditingConsolidatedContextSourceDelegate
//- (void)didUpdate:(id)v1 configurationToEnabledItems:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryConsolidatedContextSourceDelegate
//- (void)didUpdate:(id)v1 configurationToContext:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemProvisioningConsolidatedContextSourceDelegate
//- (void)provisioningConsolidatedContextSourceDidUpdate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorConfigurationManagerProtocol
//@property (nonatomic,readonly) NSString * projectName;
//@property (nonatomic,readonly) NSString * targetName;
//@property (nonatomic,readonly) NSArray * configurations;
//- (id)projectName;
//- (id)targetName;
//- (id)configurations;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEDistributionArchiveReformatter<NSObject>
//- (id)inspectablePropertyName;
//- (id)inspectablePropertyValueForArchive:(id)v1;
//- (id)inspectablePropertyValueForArchive:(id)v1;
//- (char)supportsManifestDistribution;
//- (id)appTypeDescription;
//- (long long)sortOrder;
//- (char)isAppStoreContainerAppInfoDictionary:(id)v1;
//- (char)wantsReformattingForArchive:(id)v1 distributionMethod:(id)v2;
//- (char)wantsReformattingForArchive:(id)v1 distributionMethod:(id)v2;
//- (id)targetBundleIdentifier:(id)v1 distributionMethod:(id)v2 error:(id *)v3;
//- (id)targetName:(id)v1 distributionMethod:(id)v2 error:(id *)v3;
//- (id)reformattedArchive:(id)v1 distributionMethod:(id)v2 temporaryDirectory:(id)v3 error:(id *)v4;
//- (id)reformatterWarnings:(id)v1 archive:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation26IDETestingDiagnosticReport_
//@property (nonatomic,readonly) NSData * rawData;
//@property (nonatomic,readonly) NSString * appName;
//@property (nonatomic,readonly) NSString * dataSource;
//@property (nonatomic,readonly) char isSymbolicated;
//@property (nonatomic,readonly) NSDictionary * executableInfo;
//@property (nonatomic,readonly) NSString * pid;
//@property (nonatomic,readonly) DVTCrashLogBacktrace * lastExceptionBacktrace;
//@property (nonatomic,readonly) DVTCrashLogThread * crashingThread;
//- (id)rawData;
//- (id)appName;
//- (id)dataSource;
//- (char)isSymbolicated;
//- (id)executableInfo;
//- (id)pid;
//- (id)lastExceptionBacktrace;
//- (id)crashingThread;
//- (void)symbolicateWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (void)demangleUsingToolchains:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation32IDESchemeFileReference_Workspace_
//@property (nonatomic,readonly) char finishedLoading;
//- (char)finishedLoading;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESchemeActionTestIdentifiable<NSObject>
//@property (nonatomic,readonly) NSString * identifier;
//- (id)identifier;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogRecord
//- (id)fullLogWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBlueprint<NSObject,IDEIssueLogDataSource,IDESigningEditorConfigurationManagerProviderProtocol>
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * localizedDescription;
//@property (nonatomic,readonly) NSString * blueprintIdentifier;
//@property (nonatomic,readonly) NSObject<IDEBuildable> * primaryBuildable;
//@property (nonatomic,readonly) NSArray * buildables;
//@property (nonatomic,readonly) NSArray * buildableProducts;
//@property (nonatomic,readonly) NSArray * availableConfigurationNames;
//@property (nonatomic,readonly) NSString * defaultConfigurationName;
//@property (nonatomic,readonly) char correctlyEvaluatesArchitectures;
//@property (nonatomic,readonly) NSString * compilerSpecificationIdentifier;
//@property (nonatomic,readonly) char containsSwift;
//@property (nonatomic,readonly) char containsOnlySwift;
//@property (nonatomic,readonly) char usesPackageProducts;
//@property (nonatomic,retain) IDETestBlueprintHostSettings * testBlueprintHostSettings;
//@property (nonatomic,retain) IDETestBlueprintHostSettings * testBlueprintUITestingTargetAppSettings;
//@property (nonatomic,readonly) char unitTest;
//@property (nonatomic,readonly) char unitTest;
//@property (nonatomic,readonly) DVTFilePath * bundleBaselineRecordFilePath;
//@property (nonatomic,readonly) DVTToolsVersion * createdOnToolsVersion;
//@property (nonatomic,readonly) NSSet * knownAssetTags;
//@property (nonatomic,readonly) NSObject<IDEProvisionable> * provisionable;
//@property (nonatomic,readonly) IDEPIFGUID * PIFGUID;
//@property (nonatomic,readonly) IDEPIFGUID * PIFGUID;
//@property (nonatomic,readonly) IDETypeIdentifier * activityLogDomainType;
//@property (nonatomic,readonly) char participatesInSchemeAutocreation;
//@property (nonatomic,readonly) char shouldHideInUI;
//@property (nonatomic,readonly) char isTransparentForRunDestinations;
//@property (nonatomic,readonly) NSString * dynamicVariantBlueprintIdentifier;
//@property (nonatomic,readonly) char alwaysDisplayIssuesIndependentOfActiveSchemeFilter;
//- (id)blueprintProvider;
//- (id)customDataStore;
//- (id)name;
//- (id)localizedDescription;
//- (id)blueprintIdentifier;
//- (id)buildableForIdentifier:(id)v1;
//- (id)buildableForIdentifier:(id)v1;
//- (id)primaryBuildable;
//- (id)buildables;
//- (id)buildableProducts;
//- (id)moduleNamesInWorkspace:(id)v1;
//- (id)moduleNamesInWorkspace:(id)v1;
//- (char)containsFileReference:(id)v1;
//- (char)containsFileReference:(id)v1;
//- (char)containsFilePath:(id)v1;
//- (char)containsFilePath:(id)v1;
//- (void)addFileReference:(id)v1 toBuildablesContainingFileReference:(id)v2;
//- (void)addFileReference:(id)v1 toBuildablesContainingFileReference:(id)v2;
//- (id)entitlementsFilePathForBuildConfiguration:(id)v1;
//- (id)entitlementsFilePathForBuildConfiguration:(id)v1;
//
//@optional
//- (id)availableConfigurationNames;
//- (id)defaultConfigurationName;
//- (id)availableArchitecturesForBuildParameters:(id)v1;
//- (id)availableArchitecturesForBuildParameters:(id)v1;
//- (id)availableArchitecturesForConfiguration:(id)v1 workspaceArenaSnapshot:(id)v2;
//- (id)availableArchitecturesForConfiguration:(id)v1 workspaceArenaSnapshot:(id)v2;
//- (char)correctlyEvaluatesArchitectures;
//- (id)architecturesForBuildParameters:(id)v1;
//- (id)architecturesForBuildParameters:(id)v1;
//- (id)compilerSpecificationIdentifier;
//- (id)supportedPlatformsForBuildParameters:(id)v1;
//- (id)supportedPlatformsForBuildParameters:(id)v1;
//- (id)supportedPlatformsForConfiguration:(id)v1 workspaceArenaSnapshot:(id)v2;
//- (id)supportedPlatformsForConfiguration:(id)v1 workspaceArenaSnapshot:(id)v2;
//- (id)baseSDKForBuildConfigurationName:(id)v1;
//- (id)baseSDKForBuildConfigurationName:(id)v1;
//- (id)specifiedBaseSDKForBuildConfigurationName:(id)v1;
//- (id)specifiedBaseSDKForBuildConfigurationName:(id)v1;
//- (id)simulatorSDKFor:(id)v1 SDKs:(id)v2;
//- (id)simulatorSDKFor:(id)v1 SDKs:(id)v2;
//- (id)deviceSDKFor:(id)v1 SDKs:(id)v2;
//- (id)deviceSDKFor:(id)v1 SDKs:(id)v2;
//- (void)convertToUseClang;
//- (void)convertToBuild64bitOnly;
//- (void)convertToStandardArchitectures;
//- (char)canConvertToUseARC;
//- (void)convertToUseARC;
//- (char)canConvertToEnableCodeGenerationForIBAndAssetCatalogs;
//- (void)convertToEnableCodeGenerationForIBAndAssetCatalogs;
//- (void)convertToUseModernObjCSyntax;
//- (char)lastSwiftMigrationIsCurrent;
//- (void)updateLastSwiftMigrationToCurrent;
//- (void)resetLastSwiftMigration;
//- (void)updateSwiftCompilerTo:(id)v1;
//- (void)updateSwiftCompilerTo:(id)v1;
//- (void)setEnablePreviews;
//- (char)isConfiguredToBuildWithOptimizationProfile;
//- (char)configureToBuildWithOptimizationProfileReturningErrorString:(id *)v1;
//- (char)configureToBuildWithOptimizationProfileReturningErrorString:(id *)v1;
//- (char)isMixedTarget;
//- (char)canUseBridgingHeader;
//- (char)wouldBecomeMixedTargetAfterAddingFiles:(id)v1;
//- (char)wouldBecomeMixedTargetAfterAddingFiles:(id)v1;
//- (char)wouldBecomeMixedTargetAfterAddingTypes:(id)v1;
//- (char)wouldBecomeMixedTargetAfterAddingTypes:(id)v1;
//- (char)isConfiguredToBuildMixedTarget;
//- (char)configureToBuildMixedTargetWithDestinationGroup:(id)v1 configureBridgingHeader:(char)v2 returningErrorString:(id *)v3;
//- (char)configureToBuildMixedTargetWithDestinationGroup:(id)v1 configureBridgingHeader:(char)v2 returningErrorString:(id *)v3;
//- (id)predominantSourceCodeLanguage;
//- (id)sourceCodeBuildFileReferences;
//- (id)localizableSourceBuildFileReferences;
//- (char)containsSwift;
//- (char)containsOnlySwift;
//- (char)usesPackageProducts;
//- (id)allBuildFileReferences;
//- (id)allResourceFilesBreakingOutLocalizableVariants:(char)v1;
//- (id)allPublicHeaderFiles;
//- (id)allPrivateHeaderFiles;
//- (id)allProjectHeaderFiles;
//- (id)linkedBinaries;
//- (void)setAdditionalCompilerArguments:(id)v1 forSourceCodeBuildFileReference:(id)v2;
//- (void)setAdditionalCompilerArguments:(id)v1 forSourceCodeBuildFileReference:(id)v2;
//- (id)additionalCompilerArgumentsForSourceCodeBuildFileReference:(id)v1;
//- (id)additionalCompilerArgumentsForSourceCodeBuildFileReference:(id)v1;
//- (void)setOverridingAdditionalCompilerArguments:(id)v1 forSourceCodeBuildFileReference:(id)v2;
//- (void)setOverridingAdditionalCompilerArguments:(id)v1 forSourceCodeBuildFileReference:(id)v2;
//- (id)additionalOverridingCompilerArgumentsForSourceCodeBuildFileReference:(id)v1;
//- (id)additionalOverridingCompilerArgumentsForSourceCodeBuildFileReference:(id)v1;
//- (id)testBlueprintHostSettings;
//- (void)setTestBlueprintHostSettings:(id)v1;
//- (id)testBlueprintUITestingTargetAppSettings;
//- (void)setTestBlueprintUITestingTargetAppSettings:(id)v1;
//- (char)isUnitTest;
//- (char)isUnitTest;
//- (id)pathToLargestAssetCatalogAppIconPassingTest:(void (^ /* unknown block signature */)(void))v1;
//- (id)pathToLargestAssetCatalogAppIconPassingTest:(void (^ /* unknown block signature */)(void))v1;
//- (id)bundleBaselineRecordFilePath;
//- (id)infoDictionaryForConfiguration:(id)v1;
//- (id)infoDictionaryForConfiguration:(id)v1;
//- (id)resolvedInfoDictionaryForBuildParameters:(id)v1;
//- (id)resolvedInfoDictionaryForBuildParameters:(id)v1;
//- (id)infoDictionaryFilePathForConfiguration:(id)v1;
//- (id)infoDictionaryFilePathForConfiguration:(id)v1;
//- (id)createdOnToolsVersion;
//- (id)knownAssetTags;
//- (void)addTagsToKnownAssetTags:(id)v1;
//- (void)addTagsToKnownAssetTags:(id)v1;
//- (void)removeTagsFromKnownAssetTags:(id)v1;
//- (void)removeTagsFromKnownAssetTags:(id)v1;
//- (id)sourceFileBuildInfoForFileAtPath:(id)v1;
//- (id)sourceFileBuildInfoForFileAtPath:(id)v1;
//- (id)provisionable;
//- (id)PIFGUID;
//- (id)PIFGUID;
//- (id)activityLogDomainType;
//- (char)participatesInSchemeAutocreation;
//- (char)shouldHideInUI;
//- (void)removeFileReferenceFromBuildables:(id)v1;
//- (void)removeFileReferenceFromBuildables:(id)v1;
//- (char)setEnabledForMacCatalyst:(char)v1 error:(id *)v2;
//- (char)isTransparentForRunDestinations;
//- (id)dynamicVariantBlueprintIdentifier;
//- (char)alwaysDisplayIssuesIndependentOfActiveSchemeFilter;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildNoticeLogMessage
//@property (nonatomic,readonly) NSString * title;
//@property (nonatomic,readonly) NSString * shortTitle;
//@property (nonatomic,readonly) NSObject<IDEBuildNoticeLogSection> * supersection;
//@property (nonatomic,readonly) NSObject<IDEBuildNoticeLogMessage> * supermessage;
//@property (nonatomic,readonly) unsigned long long severity;
//@property (nonatomic,readonly) DVTDocumentLocation * location;
//@property (nonatomic,readonly) NSArray * secondaryLocations;
//@property (nonatomic,readonly) NSArray * submessages;
//- (id)title;
//- (id)shortTitle;
//- (id)supersection;
//- (id)supermessage;
//- (unsigned long long)severity;
//- (id)location;
//- (id)secondaryLocations;
//- (id)submessages;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexSymbolOccurrence<NSObject>
//@property (nonatomic,readonly) long long role;
//@property (nonatomic,readonly) DVTFilePath * file;
//@property (nonatomic,readonly) NSURL * moduleURL;
//@property (nonatomic,readonly) DVTDocumentLocation * location;
//- (long long)role;
//- (id)file;
//- (id)moduleURL;
//- (id)location;
//- (id)correspondingSymbol;
//- (id)containingSymbol;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEPrimitiveSchemeCommand<NSObject>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBlueprintProvider<DVTInvalidation,NSObject>
//@property (nonatomic,readonly) NSArray * blueprints;
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * organizationName;
//@property (nonatomic,readonly) NSString * classPrefix;
//@property (nonatomic,readonly) NSObject<IDETestableProvider> * testableProvider;
//@property (nonatomic) int buildSystemType;
//@property (nonatomic,readonly) NSArray * sourcePackageReferences;
//@property (nonatomic,readonly) char supportsSourceFolders;
//+ (id)availableSwiftVersions;
//- (id)blueprints;
//- (id)name;
//- (id)organizationName;
//- (id)classPrefix;
//- (id)blueprintForIdentifier:(id)v1;
//- (id)blueprintForIdentifier:(id)v1;
//- (id)blueprintForName:(id)v1;
//- (id)blueprintForName:(id)v1;
//- (id)testableProvider;
//
//@optional
//- (int)buildSystemType;
//- (void)setBuildSystemType:(int)v1;
//- (id)sourcePackageReferences;
//- (char)supportsSourceFolders;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIndexCallableSymbol<IDEIndexSymbol>
//@property (nonatomic,readonly) IDEIndexCollection * overriddenSymbols;
//@property (nonatomic,readonly) NSObject<IDEIndexPropertySymbol> * property;
//- (id)overriddenSymbols;
//- (id)property;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorStyleDataSource<IDEProvisioningStyleSelectionDataSource,IDESigningEditorConfigurationDataSource>
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorTeamDataSource<IDESigningEditorConfigurationDataSource,IDEProvisioningTeamsDataSource,IDEProvisioningTeamSelectionDataSource>
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorBundleIdentifierDataSource<IDEProvisioningBundleIdentifierDataSource,IDESigningEditorConfigurationDataSource>
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorProfileDataSource<IDESigningEditorConfigurationDataSource,IDEProvisioningProfileSelectionDataSource>
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCertificateDataSource<IDESigningEditorConfigurationDataSource,IDEProvisioningSigningCertificateSelectionDataSource,IDEProvisioningStyleSelectionDataSource>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningRepairBusyReasonDataSource
//@property (nonatomic,readonly) NSString * repairBusyReason;
//- (id)repairBusyReason;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningIssuesDataSource
//@property (nonatomic,readonly) NSArray * errors;
//- (id)errors;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapsuleViewStateRestorationRecordProvider
//@property (nonatomic,readonly) _TtC13IDEFoundation46SigningEditorCapsuleViewStateRestorationRecord * restorationRecord;
//@property (nonatomic) NSObject<IDESigningEditorCapsuleViewStateRestorationRecordProviderDelegate> * restorationRecordProviderDelegate;
//- (id)restorationRecord;
//
//@optional
//- (id)restorationRecordProviderDelegate;
//- (void)setRestorationRecordProviderDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningRepairDataSource
//@property (nonatomic,readonly) char repairBusy;
//@property (nonatomic,readonly) char repairBusy;
//- (char)isRepairBusy;
//- (char)isRepairBusy;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningTeamSelectionDataSource
//@property (nonatomic,readonly) char isTeamSelectionRequired;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicTeam> * team;
//- (char)isTeamSelectionRequired;
//- (id)team;
//- (void)setTeam:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningBundleIdentifierDataSource
//@property (nonatomic,readonly) char wantsBundleIdentifierEditing;
//@property (nonatomic,readonly) char wantsBundleIdentifierEditingLabel;
//@property (nonatomic,copy) NSString * bundleIdentifier;
//@property (nonatomic,readonly) char isBundleIdentifierReadOnly;
//@property (nonatomic,readonly) NSString * bundleIdentifierPlaceholder;
//- (char)wantsBundleIdentifierEditing;
//- (char)wantsBundleIdentifierEditingLabel;
//- (id)bundleIdentifier;
//- (void)setBundleIdentifier:(id)v1;
//- (char)isBundleIdentifierReadOnly;
//- (id)bundleIdentifierPlaceholder;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELaunchTestSchemeActionResolvedOptions<IDELaunchTestSchemeActionOptions>
//@property (nonatomic,readonly) char isAddressSanitizerEnabled;
//@property (nonatomic,readonly) char isAddressSanitizerStackUseAfterReturnEnabled;
//@property (nonatomic,readonly) NSString * mallocStackLoggingType;
//- (char)isAddressSanitizerEnabled;
//- (char)isAddressSanitizerStackUseAfterReturnEnabled;
//- (id)mallocStackLoggingType;
//- (id)commandLineArgumentsForScheme:(id)v1 expandedUsingBuildParameters:(id)v2;
//- (id)environmentVariablesForScheme:(id)v1 expandedUsingBuildParameters:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestPlanOptions<IDELaunchTestSchemeActionOptions>
//@property (nonatomic,readonly) char parallelizable;
//@property (nonatomic,readonly) long long testExecutionOrdering;
//@property (nonatomic,readonly) _TtC13IDEFoundation25IDEDeviceAppDataReference * deviceAppDataReference;
//@property (nonatomic,readonly) _TtC13IDEFoundation28IDELocationScenarioReference * locationScenarioReference;
//@property (nonatomic,readonly) long long uiTestingScreenshotsLifetime;
//@property (nonatomic,readonly) char areLocalizationScreenshotsEnabled;
//@property (nonatomic,readonly) long long userAttachmentLifetime;
//@property (nonatomic,readonly) char testTimeoutsEnabled;
//- (char)parallelizable;
//- (long long)testExecutionOrdering;
//- (id)deviceAppDataReference;
//- (id)locationScenarioReference;
//- (long long)uiTestingScreenshotsLifetime;
//- (char)areLocalizationScreenshotsEnabled;
//- (long long)userAttachmentLifetime;
//- (char)testTimeoutsEnabled;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECodeCoverageProviding
//@property (nonatomic,readonly) char codeCoverageEnabled;
//@property (nonatomic,readonly) char codeCoverageEnabled;
//- (char)isCodeCoverageEnabled;
//- (char)isCodeCoverageEnabled;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningTeamsDataSource
//@property (nonatomic,readonly) NSOrderedSet * teams;
//- (id)teams;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemEditingConsolidatedContextSourceProvider
//@property (nonatomic,readonly) NSObject<IDESigningEditorCapabilityItemEditingConsolidatedContextSource> * source;
//
//@optional
//- (id)source;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningStyleSelectionDataSource
//@property (nonatomic) long long provisioningStyle;
//- (long long)provisioningStyle;
//- (void)setProvisioningStyle:(long long)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditoriOSMacBundleIdentifierDataSource<IDEProvisioningiOSMacBundleIdentifierDataSource,IDESigningEditorBundleIdentifierDataSource>
//@end
//
//
///*****************************************************************/
//
//@protocol IDEIssueLogDataSource<DVTInvalidation>
//@property (nonatomic,readonly) IDEActivityLogSection * issueLog;
//- (void)analyzeModelForIssues;
//- (id)issueLog;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorConfigurationDataSource
//@property (nonatomic,readonly) _TtC13IDEFoundation26SigningEditorConfiguration * configuration;
//@property (nonatomic) NSObject<IDESigningEditorConfigurationDataSourceDelegate> * configurationDataSourceDelegate;
//- (id)configuration;
//- (id)configurationDataSourceDelegate;
//- (void)setConfigurationDataSourceDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDELaunchTestSchemeActionOptions
//@property (nonatomic,readonly) NSArray * commandLineArgumentEntries;
//@property (nonatomic,readonly) NSArray * environmentVariableEntries;
//@property (nonatomic,readonly) _TtC13IDEFoundation21IDEBuildableReference * buildableReferenceForMacroExpansion;
//@property (nonatomic,readonly) char isThreadSanitizerEnabled;
//@property (nonatomic,readonly) char isUndefinedBehaviorSanitizerEnabled;
//@property (nonatomic,readonly) char isMainThreadCheckerEnabled;
//@property (nonatomic,readonly) NSString * language;
//@property (nonatomic,readonly) NSString * region;
//@property (nonatomic,readonly) char isMallocScribbleEnabled;
//@property (nonatomic,readonly) char isMallocGuardEdgesEnabled;
//@property (nonatomic,readonly) char isGuardMallocEnabled;
//@property (nonatomic,readonly) char isNSZombieEnabled;
//- (id)commandLineArgumentEntries;
//- (id)environmentVariableEntries;
//- (id)buildableReferenceForMacroExpansion;
//- (char)isThreadSanitizerEnabled;
//- (char)isUndefinedBehaviorSanitizerEnabled;
//- (char)isMainThreadCheckerEnabled;
//- (id)language;
//- (id)region;
//- (char)isMallocScribbleEnabled;
//- (char)isMallocGuardEdgesEnabled;
//- (char)isGuardMallocEnabled;
//- (char)isNSZombieEnabled;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation51SigningEditorConfigurationSelectionProtocolDelegate_
//- (void)didUpdateConfiguration:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation43SigningEditorConfigurationSelectionProtocol_
//@property (nonatomic,readonly) _TtC13IDEFoundation26SigningEditorConfiguration * configuration;
//@property (nonatomic) NSObject<_TtP13IDEFoundation51SigningEditorConfigurationSelectionProtocolDelegate_> * delegate;
//- (id)configuration;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol NSCopying
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation22IDEResultRootContainer_
//@property (nonatomic,readonly) long long formatVersion;
//@property (nonatomic,readonly) char usesModernFormat;
//- (long long)formatVersion;
//- (char)usesModernFormat;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation28IDEResultRootContainerWriter_<_TtP13IDEFoundation22IDEResultRootContainer_>
//- (id)importActivityLog:(id)v1 error:(id *)v2;
//- (id)importFileFrom:(id)v1 error:(id *)v2;
//- (id)importDirectoryFrom:(id)v1 error:(id *)v2;
//- (id)readerAndReturnError:(id *)v1;
//- (id)underlyingWriterAndReturnError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation28IDEResultRootContainerReader_<_TtP13IDEFoundation22IDEResultRootContainer_>
//- (id)exportActivityLogWithRef:(id)v1 error:(id *)v2;
//- (id)exportTestRunSummariesWithRef:(id)v1 error:(id *)v2;
//- (id)exportableFileWithRef:(id)v1 name:(id)v2 error:(id *)v3;
//- (id)exportableDirectoryWithRef:(id)v1 name:(id)v2 error:(id *)v3;
//- (id)writerAndReturnError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation41SigningEditorConfigurationsSourceDelegate_
//- (void)didChangeWithConfigurations:(id)v1;
//- (void)didChangeWithProjectName:(id)v1;
//- (void)didChangeWithTargetName:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTSourceControlAccountManager
//@property (nonatomic,readonly) NSArray * knownRepositories;
//- (id)knownRepositories;
//- (id)knownRepositoryForURL:(id)v1 sourceControlSystem:(id)v2;
//- (id)knownRepositoryForURL:(id)v1 sourceControlSystem:(id)v2;
//- (id)existingAccountLikeAccount:(id)v1 addingIfNew:(char)v2;
//- (id)existingAccountLikeAccount:(id)v1 addingIfNew:(char)v2;
//- (id)existingAccountForRepository:(id)v1 authenticationStrategy:(id)v2 createIfNeeded:(char)v3;
//- (id)existingAccountForRepository:(id)v1 authenticationStrategy:(id)v2 createIfNeeded:(char)v3;
//- (void)accountChanged:(id)v1 previousUsername:(id)v2;
//- (void)addAccount:(id)v1;
//- (void)addAccount:(id)v1;
//- (void)removeAccount:(id)v1;
//- (void)removeAccount:(id)v1;
//- (id)authenticationStrategyForURL:(id)v1 usingAccount:(id)v2;
//- (id)authenticationStrategyForURL:(id)v1 usingAccount:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestWorkerProvider
//- (id)vendWorker;
//- (void)returnWorker:(id)v1;
//- (char)supportsMultipleWorkersFor:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildOperationObserver
//- (void)buildOperationWasCompleted:(id)v1 forWorkspace:(id)v2;
//- (void)buildOperationWasCompleted:(id)v1 forWorkspace:(id)v2;
//- (void)buildOperationWasSlowerThanExpected:(id)v1 forWorkspace:(id)v2;
//- (void)buildOperationWasSlowerThanExpected:(id)v1 forWorkspace:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol XCTDaemonControlSessionDelegate
//- (void)daemonControlSession:(id)v1 didReceiveCrashReportData:(id)v2 fileName:(id)v3;
//- (void)daemonControlSession:(id)v1 didReceiveCrashReportData:(id)v2 fileName:(id)v3;
//- (void)daemonControlSession:(id)v1 didReceiveDebugLogMessage:(id)v2;
//- (void)daemonControlSession:(id)v1 didReportSelfDiagnosisIssue:(id)v2 description:(id)v3;
//- (void)daemonControlSessionDidDisconnect:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol XCTDebugLogDelegate
//- (void)logDebugMessage:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation33SigningEditorConfigurationsSource_
//@property (nonatomic,readonly) NSArray * configurations;
//@property (nonatomic,readonly) NSString * projectName;
//@property (nonatomic,readonly) NSString * targetName;
//@property (nonatomic) NSObject<_TtP13IDEFoundation41SigningEditorConfigurationsSourceDelegate_> * delegate;
//- (id)configurations;
//- (id)projectName;
//- (id)targetName;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXCTestRunDecoder
//- (id)testRunFileWithDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 derivedDataPath:(id)v3 error:(id *)v4;
//- (id)testRunFileWithDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 derivedDataPath:(id)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXCTestRunEncoder
//- (id)dictionaryRepresentationWithTestPlanInfo:(id)v1 testRunSpecificationGroups:(id)v2 codeCoverageBuildableInfos:(id)v3 testRootPathPlaceholder:(id)v4 derivedDataPathPlaceholder:(id)v5;
//- (id)dictionaryRepresentationWithTestPlanInfo:(id)v1 testRunSpecificationGroups:(id)v2 codeCoverageBuildableInfos:(id)v3 testRootPathPlaceholder:(id)v4 derivedDataPathPlaceholder:(id)v5;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEXCTestRunCoder<IDEXCTestRunDecoder,IDEXCTestRunEncoder>
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorAssetSelectionDataSourceProvider
//@property (nonatomic,readonly) NSObject<IDEProvisioningAssetSelectionDataSourceProvider> * manager;
//@property (nonatomic,retain) _TtC13IDEFoundation26SigningEditorConfiguration * configuration;
//@property (nonatomic,readonly) NSArray * dataSources;
//- (id)manager;
//- (id)configuration;
//- (void)setConfiguration:(id)v1;
//- (id)dataSources;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningTeamsDataSourceDelegate
//- (void)didUpdateTeams:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTXMLUnarchiving
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol _TtP13IDEFoundation40SigningEditorCapabilityEditingItemParent_
//@property (nonatomic,readonly) NSString * title;
//@property (nonatomic,readonly) _TtC13IDEFoundation41SigningEditorCapabilityEditingItemManager * manager;
//- (id)title;
//- (char)addCapabilityEditingItemWithIdentifiers:(id)v1 error:(id *)v2;
//- (void)invalidateCachedIsEnabled;
//- (id)manager;
//@end
//
//
///*****************************************************************/
//
//@protocol IDECoalescableCapabilityEditingItemDelegate
//@property (nonatomic,readonly) _TtC13IDEFoundation41SigningEditorCapabilityEditingItemManager * manager;
//- (id)manager;
//- (void)didUpdateDataSource;
//- (char)willSet:(id)v1 keyPath:(id)v2 dataSources:(id)v3 error:(id *)v4;
//- (void)didSet:(id)v1 keyPath:(id)v2 value:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemEditingConsolidatedContextSourceProviderDelegate
//- (void)didUpdate:(id)v1 source:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEProvisioningLedgerDelegate
//
//@optional
//- (void)provisioningLedger:(id)v1 didOpenLedgerEntry:(id)v2;
//- (void)provisioningLedger:(id)v1 didOpenLedgerEntry:(id)v2;
//- (void)provisioningLedger:(id)v1 didCloseLedgerEntry:(id)v2 withError:(id)v3;
//- (void)provisioningLedger:(id)v1 didCloseLedgerEntry:(id)v2 withError:(id)v3;
//- (void)provisioningLedger:(id)v1 didAddDetails:(id)v2 toLedgerEntry:(id)v3;
//- (void)provisioningLedger:(id)v1 didAddDetails:(id)v2 toLedgerEntry:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@protocol IDETestingLaunchSession
//@property (nonatomic,retain) NSObject<IDETestingOutputStream> * outputStream;
//@property (nonatomic,readonly) char hasStarted;
//@property (nonatomic,readonly) char isFinishedReceivingData;
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) filter;
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) receivedRunnablePID;
//- (id)outputStream;
//- (void)setOutputStream:(id)v1;
//- (void)invalidate;
//- (char)hasStarted;
//- (char)isFinishedReceivingData;
//- (void (^ /* unknown block signature */)(void))filter;
//- (void)setFilter:(void (^ /* unknown block signature */)(void))v1;
//- (void (^ /* unknown block signature */)(void))receivedRunnablePID;
//- (void)setReceivedRunnablePID:(void (^ /* unknown block signature */)(void))v1;
//@end
//
//
///*****************************************************************/
//
@protocol _TtP13IDEFoundation37IDETestingLaunchSession_LaunchSession_
@property (nonatomic,readonly) int runnablePID;
- (int)runnablePID;
@end
//
//
///*****************************************************************/
//
//@protocol IDEConsoleAdaptorDelegateProtocol
//
//@optional
//- (id)parseConsoleInputFromOriginalInput:(id)v1;
//- (id)parseConsoleInputFromOriginalInput:(id)v1;
//- (id)parseConsoleOutputFromOriginalOutput:(id)v1;
//- (id)parseConsoleOutputFromOriginalOutput:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEBuildableProduct
//@property (nonatomic,readonly) DVTFilePath * filePath;
//@property (nonatomic,readonly) DVTFileDataType * fileDataType;
//@property (nonatomic,readonly) NSString * iconPath;
//@property (nonatomic,readonly) NSDictionary * productSettings;
//@property (nonatomic,readonly) char productIsExecutable;
//@property (nonatomic,readonly) char isWatchOnlyApplication;
//@property (nonatomic,readonly) char isWatchAppRunsIndependentlyOfCompanionApplication;
//@property (nonatomic,readonly) char productIsApp;
//@property (nonatomic,readonly) NSString * extensionPointIdentifier;
//@property (nonatomic,readonly) char isWidgetKitExtension;
//@property (nonatomic,readonly) char isEmbeddablePackageProduct;
//- (id)filePath;
//- (id)filePathForBuildParameters:(id)v1;
//- (id)filePathForBuildParameters:(id)v1;
//- (id)fileDataType;
//- (id)iconPath;
//- (id)productSettings;
//- (id)productSettingForKey:(id)v1;
//- (id)productSettingForKey:(id)v1;
//- (void)setProductSetting:(id)v1 forKey:(id)v2;
//- (char)productIsExecutable;
//- (char)isWatchOnlyApplication;
//- (char)isWatchAppRunsIndependentlyOfCompanionApplication;
//- (char)productIsApp;
//- (id)extensionPointIdentifier;
//- (char)isWidgetKitExtension;
//
//@optional
//- (char)isEmbeddablePackageProduct;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryAssetManagerSource
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemLibraryAssetManagerSourceDelegate> * delegate;
//- (void)refreshForContext:(id)v1;
//- (void)refreshForContext:(id)v1;
//- (id)resultForContext:(id)v1;
//- (id)resultForContext:(id)v1;
//- (char)wantsRefreshForContext:(id)v1;
//- (char)wantsRefreshForContext:(id)v1;
//- (char)isBusyForContext:(id)v1;
//- (char)isBusyForContext:(id)v1;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemLibraryConsolidatedContextSource
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemLibraryConsolidatedContextSourceDelegate> * libraryDelegate;
//@property (nonatomic,readonly) NSDictionary * configurationToContext;
//- (id)libraryDelegate;
//- (void)setLibraryDelegate:(id)v1;
//- (id)configurationToContext;
//@end
//
//
///*****************************************************************/
//
//@protocol IDESigningEditorCapabilityItemProvisioningConsolidatedContextSource
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemProvisioningConsolidatedContextSourceDelegate> * provisioningDelegate;
//- (id)provisioningDelegate;
//- (void)setProvisioningDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@protocol IDEConsolidatedCapabilitiesContextSourceDelegate
//- (void)didUpdate:(id)v1 configurationToContext:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTSourceControlSSHKeyCredentialsHandler
//- (void)handleSSHKeysAuthStrategyPassphraseRequest:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)handleSSHKeysAuthStrategiesPassphrasesRequest:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//@end
//
//
///*****************************************************************/
//
//@protocol DVTSourceControlFingerprintManager
//- (id)existingFingerprintForHost:(id)v1;
//- (id)existingFingerprintForHost:(id)v1;
//- (void)loadKnownHostsFromDictionary:(id)v1;
//- (void)loadKnownHostsFromDictionary:(id)v1;
//- (void)addKnownHost:(id)v1 fingerprint:(id)v2;
//- (id)existingFingerprintForRepository:(id)v1;
//- (id)existingFingerprintForRepository:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface DVTSigningCertificate (ManageCertificatesItem)
//- (char)isAutomaticProvisioningDevelopmentCertificateForPlatform:(id)v1;
//- (id)basicTeam;
//- (id)dvt_basicTeam;
//- (id)dvt_nameForManageCertificates;
//@end
//
//
///*****************************************************************/
//
//@interface DVTDocumentLocation (IDEFoundationAdditions)<IDEIssueCoalescingDocumentLocationIdentifiable>
//@property (readonly,nonatomic) NSObject<NSCopying> * issueCoalescingGroupIdentifier;
//@property (readonly,nonatomic) NSObject<NSCopying> * issueCoalescingIdentifier;
//- (id)activityLogMessage_locationString;
//- (id)issueCoalescingIdentifier;
//- (id)issueCoalescingGroupIdentifier;
//- (id)sourcekit_asRequest:(id)v1;
//- (id)ide_copyInWorkspace:(id)v1 fromWorkspaceAtRepresentingPath:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface DVTCoverageDataContainer (Diffing)
//- (id)aggregateWith:(id)v1 selfParent:(id)v2 usingMergedLines:(id)v3;
//- (id)makeCopyWithChildren:(id)v1;
//- (id)diffAgainst:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface DVTDeveloperAccountCredentials (IDEITunesSoftwareServiceAdditions)
//+ (id)credentialsFromITunesAccountCredentials:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface NSError (DVTDeviceIneligibility)
//@property (readonly,nonatomic) NSString * dvt_deviceIneligibilityTokenDescription;
//+ (id)sourcekit_connectionInterruptedError;
//+ (id)dvt_errorWithDeviceIneligibilityErrorCode:(long long)v1 device:(id)v2 buildable:(id)v3 buildParameters:(id)v4;
//+ (id)_dvt_developerPrepErrorDetailsForDevice:(id)v1 errorCode:(long long)v2;
//+ (long long)_dvt_developerPrepErrorCodeForError:(id)v1;
//+ (id)_dvt_textForError:(id)v1;
//- (char)sourcekit_isConnectionInterruptedError;
//- (char)sourcekit_isInvalidRequestError;
//- (char)sourcekit_isRequestFailedError;
//- (char)sourcekit_isRequestCancelledError;
//- (id)dvt_deviceIneligibilityTokenDescription;
//@end
//
//
///*****************************************************************/
//
@interface DVTDevice (IDEFoundationAdditions)<IDEBuildableTargetDevice>
@property (readonly,copy,nonatomic) NSString * modelName;
@property (readonly,copy,nonatomic) NSString * modelCodename;
@property (readonly,copy,nonatomic) NSString * modelCode;
@property (readonly,copy,nonatomic) NSString * modelUTI;
@property (readonly,copy) NSString * processorDescription;
@property (readonly,copy) NSString * operatingSystemVersion;
@property (readonly,copy) NSString * iOSSupportVersion;
@property (readonly,copy) NSString * operatingSystemBuild;
@property (readonly,copy,nonatomic) NSString * operatingSystemVersionWithBuildNumber;
@property (readonly) DVTPlatform * platform;
@property (readonly,copy) NSString * nativeArchitecture;
@property (readonly) char isProxiedDevice;
@property (readonly,getter=isAvailable) char available;
@property (readonly) NSError * unavailabilityError;
@property (readonly) bool deviceIsBusy;
@property (readonly,copy,nonatomic) NSString * name;
@property (readonly,copy) NSString * nameForDeveloperPortal;
@property (readonly,copy,nonatomic) NSString * identifier;
@property (readonly,copy) NSString * platformIdentifier;
@property (readonly) char supportsProvisioning;
@property (readonly,copy) NSSet * proxiedDevices;
//@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly,copy) NSString * description;
@property (readonly,copy) NSString * debugDescription;
@property (readonly) char supportsUIRecording;
@property (readonly) char supportsTestDaemonControlSession;
@property (readonly) char supportsTargetBootstrapInjection;
@property (readonly) NSString * targetBootstrapInjectionPath;
@property (readonly) NSString * automationFrameworkPath;
@property (readonly) char usesTestDaemonForUIRecording;
@property (readonly) char requiresLocalTCCPermissionForUITesting;
//@property (readonly) DVTFilePath * testBundleInjectionLibraryPath;
@property (readonly) NSArray * crashReportsDirectoryPaths;
@property (readonly) NSSet * processNamesToObserveForCrashReportsDuringTesting;
@property (readonly) long long maxConcurrentTestingProcesses;
@property (readonly,getter=isLogArchiveCollectionEnabled) char logArchiveCollectionEnabled;
- (char)supportsUITestingWithError:(id *)v1;
- (char)supportsUIRecording;
- (char)supportsTestDaemonControlSession;
- (Class)testingUIRecorderClass;
- (char)supportsTargetBootstrapInjection;
- (id)targetBootstrapInjectionPath;
- (id)automationFrameworkPath;
- (char)usesTestDaemonForUIRecording;
- (char)requiresLocalTCCPermissionForUITesting;
- (id)makeConnectionForTestDaemonWithError:(id *)v1;
- (id)testDaemonDTXConnectionProvider;
- (void)requestTestDaemonControlSessionWithCompletion:(void (^ /* unknown block signature */)(void))v1;
- (void)requestTestDaemonRecordingSessionWithCompletion:(void (^ /* unknown block signature */)(void))v1;
- (id)testRunnerSessionForConfiguration:(id)v1;
- (id)_overriddenTestingToolPathWithBuildableProduct:(id)v1 buildParameters:(id)v2;
- (id)internalSystemTestingToolPathForBuildableProduct:(id)v1 buildParameters:(id)v2;
- (id)_testingToolPathForBuildableProduct:(id)v1 buildParameters:(id)v2;
- (id)testHostPathForBuildableProduct:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (id)internalSystemTestBundleInjectionLibraryPathForBuildableProduct:(id)v1 buildParameters:(id)v2;
- (id)testBundleInjectionLibraryPath;
- (char)supportsTestHostStyle:(long long)v1 withError:(id *)v2;
- (id)additionalTestRunnerEnvironmentVariablesForBuildableProduct:(id)v1 buildParameters:(id)v2;
- (char)prepareDeviceForLaunchSession:(id)v1 error:(id *)v2;
- (id)extraTestingFrameworkSearchPathsWithInternalTestBuildStyle:(char)v1;
- (id)extraTestingLibrarySearchPathsWithInternalTestBuildStyle:(char)v1;
- (id)crashReportsDirectoryPaths;
- (id)processNamesToObserveForCrashReportsDuringTesting;
- (id)mockObjectsFrameworkDir;
- (long long)maxConcurrentTestingProcesses;
- (char)isLogArchiveCollectionEnabled;
- (id)claimDeviceForTestingWithMode:(long long)v1 sessionIdentifier:(id)v2 error:(id *)v3;
- (char)canBeRunDestination;
- (id)displayNameWhenUsingArchitecture:(id)v1 withSDK:(id)v2;
- (id)displayNameAdditionsForRunDestination:(id)v1 scheme:(id)v2;
- (char)canBeDefaultDeviceForBuildable:(id)v1 buildParameters:(id)v2;
- (char)deviceSupportsBuildable:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (char)shouldPresentDeviceForPathRunnableWithArchitecture:(id)v1;
- (char)shouldPresentDeviceForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (id)supportedArchitecturesForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (id)supportedSDKsForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)v1 withBaselineParameters:(id)v2;
- (id)uncachedOverridingPropertiesForBuildable:(id)v1 buildParameters:(id)v2;
- (char)supportsExecutionForArchitecture:(id)v1 launchSession:(id)v2 error:(id *)v3;
- (char)isTranslationSupportInstalledForArchitecture:(id)v1;
- (void)installTranslationSupportForArchitecture:(id)v1 prompt:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
- (char)supportsRunningExecutableAtPath:(id)v1 usingArchitecture:(id)v2 error:(id *)v3;
- (char)supportsBuildingThinnedResourcesForPlatform:(id)v1;
- (id)assetCatalogFilterForDeviceModelForPlatform:(id)v1;
- (id)assetCatalogFilterForDeviceOSVersionForPlatform:(id)v1;
- (id)closestRelativeOfTargetArchitecture:(id)v1 forBuildArchitectures:(id)v2;
- (id)scriptingEnvironment;
- (char)canInstallBuildablesError:(id *)v1;
- (char)performInstallWithName:(id)v1 path:(id)v2 buildables:(id)v3 buildParameters:(id)v4 killProcesses:(id)v5 workspace:(id)v6 outError:(id *)v7;
- (id)analysisOperationWithAnalysisToolService:(id)v1 location:(id)v2 workingDirectory:(id)v3 workspaceFilePath:(id)v4 projectFilePath:(id)v5 packagesPaths:(id)v6 outError:(id *)v7;
@end
//
//
///*****************************************************************/
//
//@interface NSObject (IDEOpenQuicklyFileReferenceAdditions)<IDESchemeActionIssueSummaryProducingTarget>
//@property (readonly) NSString * ide_schemeActionIssueSummaryProducingTargetName;
//- (id)ide_schemeActionIssueSummaryProducingTargetName;
//- (char)textIndex_shouldSkipDescendantsForBatchFind;
//- (void)ide_populateFilePaths:(id)v1 parentSuffixIndex:(long long)v2 visitedContainers:(id)v3;
//- (id)ideModelObjectTypeIdentifier;
//- (void)ideFindScope_accumulateFilePaths:(id)v1 andVisitedContainers:(id)v2;
//- (id)ideFindScope_componentForGroupPath;
//- (id)ideFindScope_predicateRoot;
//- (id)ideFindScope_itemAtPath:(id)v1 position:(long long)v2 preferContainerFileReferenceToRootGroup:(char)v3;
//- (void)openQuickly_enumerateCandidateFilePathsNotingVisitedContainers:(id)v1 enumerator:(void (^ /* unknown block signature */)(void))v2;
//@end
//
//
///*****************************************************************/
//
//@interface DVTPlatform (IDEProvisioningPlatformAndSDKAdditions)
//@property (readonly) IDEExtendedPlatformInfo * ide_extendedInfo;
//+ (id)allDeploymentTargetSettingNames;
//- (id)ide_extendedInfo;
//- (char)supportsParallelTestingForTestHostStyle:(long long)v1 isUITestBundle:(char)v2 isiOSMac:(char)v3;
//- (id)entitlementsFilePath;
//@end
//
//
///*****************************************************************/
//
//@interface DVTSDK (IDEProvisioningPlatformAndSDKAdditions)
//+ (id)llvmTargetTripleFromSDK:(id)v1;
//+ (id)llvmTargetTripleFromSDK:(id)v1 withArch:(id)v2;
//- (id)entitlementsFilePath;
//@end
//
//
///*****************************************************************/
//
//@interface NSString (AttachmentSanitization)
//@property (readonly,copy) NSString * ideIndex_normalizedFoldedString;
//@property (readonly,copy) NSString * ideIndex_stringByResolvingSymlinksInPath;
//@property (readonly,copy) DVTFilePath * ideIndex_resolvedFilePath;
//@property (readonly) NSString * ide_realPath;
//- (void)ide_enumerateRangesMatchingQuery:(id)v1 matchAnchoring:(long long)v2 matchCase:(char)v3 locale:(id)v4 enumerator:(void (^ /* unknown block signature */)(void))v5;
//- (id)ide_rangesMatchingQuery:(id)v1 matchAnchoring:(long long)v2 locale:(id)v3 matchCase:(char)v4;
//- (id)ide_realPath;
//- (id)ideIndex_normalizedFoldedString;
//- (id)ideIndex_stringByResolvingSymlinksInPath;
//- (id)ideIndex_resolvedFilePath;
//- (id)_ide_attachment_fileNameSanitizedString;
//@end
//
//
///*****************************************************************/
//
@interface DVTFilePath (IDESourceControlDVTFilePathAdditions)
@property (readonly) DVTFilePath * IDESourceControl_containerFilePath;
@property (readonly) NSArray * IDESourceControl_importantSubpaths;
+ (id)importantSubpathsKeyedByContainerTypeIdentifier;
+ (id)containerTypeIdentifiersKeyedByImportantSubpaths;
- (char)idescm_isSameFileAsFilePathCaseSensitive:(id)v1;
- (void)workingTreeItemWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
- (id)workingTreeItem;
- (id)workingTreeItem_createIfNecessary:(char)v1;
- (void)associateWorkingTreeItem:(id)v1;
- (void)removeAssociatedWorkingTreeItem:(id)v1;
- (id)IDESourceControl_containerFilePath;
- (id)IDESourceControl_containerFilePathIncludingAssetCatalogs:(char)v1;
- (id)IDESourceControl_importantSubpathsWithFileType:(id)v1;
- (id)IDESourceControl_importantSubpaths;
- (id)IDESourceControl_importantFileReferences;
- (id)workingCopy;
- (void)_workingCopy:(id *)v1 relativePath:(id *)v2;
- (void)workingCopyAndRelativePath:(void (^ /* unknown block signature */)(void))v1;
- (id)relativePathStringFromWorkingCopy:(id)v1;
- (unsigned long long)cachedSourceControlLocalStatus;
- (unsigned long long)cachedAggregateSourceControlLocalStatus;
- (unsigned long long)cachedSourceControlRemoteStatus;
- (unsigned long long)cachedAggregateSourceControlRemoteStatus;
- (char)containsGitDirectory;
@end
//
//
///*****************************************************************/
//
//@interface DVTSourceControlWorkspace (IDEFoundationClassAdditions)
//- (id)workingCopyForFilePath:(id)v1;
//- (id)workingCopyForWorkingTree:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface DVTLocalComputer (IDEFoundationAdditions)
//- (char)supportsTestDaemonControlSession;
//- (id)automationFrameworkPath;
//- (char)usesTestDaemonForUIRecording;
//- (char)requiresLocalTCCPermissionForUITesting;
//- (void)requestTestDaemonControlSessionWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (id)testRunnerSessionForConfiguration:(id)v1;
//- (id)internalSystemTestingToolPathForBuildableProduct:(id)v1 buildParameters:(id)v2;
//- (id)internalSystemTestBundleInjectionLibraryPathForBuildableProduct:(id)v1 buildParameters:(id)v2;
//- (id)additionalTestRunnerEnvironmentVariablesForBuildableProduct:(id)v1 buildParameters:(id)v2;
//- (long long)maxConcurrentTestingProcesses;
//- (id)claimDeviceForTestingWithMode:(long long)v1 sessionIdentifier:(id)v2 error:(id *)v3;
//- (char)canBeDefaultDeviceForBuildable:(id)v1 buildParameters:(id)v2;
//- (char)_isBundleIdentifierAlreadyRunning:(id)v1 timeout:(double)v2;
//- (void)showWidgetKit:(id)v1 pid:(int)v2 completed:(void (^ /* unknown block signature */)(void))v3;
//- (void)showTodayViewForExtensions:(id)v1 pid:(int)v2;
//- (char)isTranslationSupportInstalledForArchitecture:(id)v1;
//- (void)installTranslationSupportForArchitecture:(id)v1 prompt:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface NSArray (DVTNSArrayAdditionsFilterNull)
//- (id)sourcekit_asStringArray;
//- (id)dvt_arrayByRemovingNSNull;
//@end
//
//
///*****************************************************************/
//
//@interface DVTBuildTargetDevice (IDEFoundationAdditions)
//- (id)analysisOperationWithAnalysisToolService:(id)v1 location:(id)v2 workingDirectory:(id)v3 workspaceFilePath:(id)v4 projectFilePath:(id)v5 packagesPaths:(id)v6 outError:(id *)v7;
//- (char)canInstallBuildablesError:(id *)v1;
//- (char)supportsExecutionForArchitecture:(id)v1 launchSession:(id)v2 error:(id *)v3;
//- (char)supportsRunningExecutableAtPath:(id)v1 usingArchitecture:(id)v2 error:(id *)v3;
//- (char)supportsPGOReturningError:(id *)v1;
//- (id)displayNameAdditionsForRunDestination:(id)v1 scheme:(id)v2;
//- (id)_generalRunErrorWithLaunchSession:(id)v1;
//- (char)canBeDefaultDeviceForBuildable:(id)v1 buildParameters:(id)v2;
//- (id)supportedArchitecturesForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
//- (id)supportedSDKsForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
//- (id)uncachedOverridingPropertiesForBuildable:(id)v1 buildParameters:(id)v2;
//- (char)disablesOnlyActiveArch;
//@end
//
//
///*****************************************************************/
//
//@interface NSDictionary (IDEDistributionAppThinningManifestStep)
//- (char)ide_validateForKeyValueTypes:(id)v1;
//- (id)variantDescription;
//@end
//
//
///*****************************************************************/
//
//@interface NSPredicate (LegacyScopeTransformation)
//- (id)ide_translateToFilePathPredicate;
//@end
//
//
///*****************************************************************/
//
//@interface NSCompoundPredicate (LegacyScopeTransformation)
//- (Class)ide_counterpartScopeClass;
//- (id)ide_translateToFilePathPredicate;
//@end
//
//
///*****************************************************************/
//
//@interface NSComparisonPredicate (LegacyScopeTransformation)
//- (id)ide_filePathPredicateStringOperator;
//- (id)ide_filePathPredicateFileDataTypeOperator;
//- (id)ide_lhsKeyPath;
//- (id)ide_rhsConstantString;
//- (id)ide_parseAsSCMPredicate;
//- (Class)ide_pathPredicateClass;
//- (id)ide_parseAsPathPredicate;
//- (id)pathComponentsForLegacyGroupPath:(id)v1;
//- (id)ide_parseAsGroupPathPredicate;
//- (id)ide_parseAsUTIPredicate;
//- (id)ide_translateToFilePathPredicate;
//@end
//
//
///*****************************************************************/
//
//@interface DVTPortalCertificateType (IDEAdditions)
//@property (readonly) NSSet * platforms;
//- (id)platforms;
//@end
//
//
///*****************************************************************/
//
//@interface DVTProvisioningProfile (IDEAdditions)
//@property (readonly,nonatomic) NSSet * profileTypes;
//@property (readonly,nonatomic) DVTPortalAppIDFeatures * features;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * basicTeam;
//@property (readonly,nonatomic) NSSet * certificateTypes;
//- (id)profileTypes;
//- (id)basicTeam;
//- (char)isAutomaticProvisioningProfile;
//- (id)features;
//- (char)allowsFeatures:(id)v1 missingFeatures:(id *)v2;
//- (id)certificateTypes;
//@end
//
//
///*****************************************************************/
//
//@interface DVTPortalTeam (IDEProvisioningBasicTeamConformance)<IDEProvisioningBasicTeam>
//@property (readonly,nonatomic) NSString * teamID;
//@property (readonly,nonatomic) NSString * teamName;
//@property (readonly,nonatomic,getter=isFreeProvisioningTeam) char freeProvisioningTeam;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)teamName;
//@end
//
//
///*****************************************************************/
//
//@interface NSLocale (IDELocDisplayName)
//+ (id)ideloc_languageIdentifierFromLocaleIdentifier:(id)v1;
//+ (id)ideloc_languageAndScriptFromLocaleIdentifier:(id)v1;
//+ (id)ideloc_addLikelySubtagsToLocaleIdentifier:(id)v1;
//+ (id)ideloc_localeIdentifierFromLanguageIdentifier:(id)v1 countryCode:(id)v2;
//+ (id)ideloc_availableContinents;
//+ (id)ideloc_availableSubcontinents;
//+ (id)_ideloc_availableRegionsOfType:(int)v1;
//+ (id)ideloc_containingContinentOfRegion:(id)v1;
//+ (id)ideloc_containingSubcontinentOfRegion:(id)v1;
//+ (id)_ideloc_containingRegionOfType:(int)v1 forRegion:(id)v2;
//- (id)ideloc_displayNameForKey:(id)v1 value:(id)v2 options:(unsigned long long)v3;
//@end
//
//
///*****************************************************************/
//
//@interface DVTCrashLog (IDEAdditions)<DVTAnalyticsLogProtocol_IDEAdditions>
//@property (readonly) DVTCrashLogThread * crashingThread;
//@property (readonly) NSString * appName;
//@property (readonly) NSString * build;
//@property (readonly) NSString * version;
//@property (readonly) NSString * osVersion;
//@property (readonly) NSString * osBuild;
//@property (readonly) NSString * identifier;
//@property (readonly) NSString * hardwareModelDescription;
//@property (readonly) NSString * codeType;
//@property (readonly) NSString * blameThreadDescription;
//@property (readonly) NSString * longUserDescription;
//@property (readonly) char isLocallySymbolicatedCachePath;
//@property (readonly) char isFullySymbolicated;
//- (void)symbolicateWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (void)demangleUsingToolchains:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (id)productCategory;
//- (id)debuggerLogWithAnalyticsPoint:(id)v1 usingContext:(id)v2;
//- (id)debuggerPointForWorkspace:(id)v1 error:(id *)v2;
//- (void)demangleUsingToolchains:(id)v1 toolchainRegistry:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface DVTPortalProfile (IDEQualifiableProfile)
//- (id)teamID;
//- (id)teamName;
//- (id)appIdentifierEntitlementWithoutPrefix;
//- (id)platforms;
//- (id)dateExpired;
//- (char)isExpired;
//- (char)matchesBundleIdentifier:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface DVTCrashPoint (DebuggerIntegration)
//- (id)debuggerPointForWorkspace:(id)v1 productVersion:(id)v2 crashLog:(id)v3 error:(id *)v4;
//- (long long)analyticsPointBlameLineMatchesStackFrame:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface DVTCrashLogBacktrace (DebuggerIntegration)
//- (id)debuggerThreadWithAnalyticsLog:(id)v1 threadId:(id)v2 usingContext:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface DVTSourceControlWorkingCopy (IDEFoundationClassAdditions)
//@property (readonly) DVTFilePath * filePath;
//- (id)filePath;
//@end
//
//
///*****************************************************************/
//
//@interface DVTExtension (DVTExtensionTypeIdentificationUtilities)
//+ (id)typeIdentifierExtensionForString:(id)v1;
//- (long long)nameCompare:(id)v1;
//- (id)closestRelatedExtensionAmongExtensions:(id)v1;
//- (char)isKindOfExtension:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface DVTToolsInfo (IDEDVTToolsInfoAdditions)
//- (id)ide_buildInfoRevisionString;
//@end
//
//
///*****************************************************************/
//
//@interface IDEITunesConnectDeveloperIDStatusResponse (IDEArchiveDistributionEventAdditions)
//@property (readonly) long long distributionEventState;
//- (char)statusFailed;
//- (long long)distributionEventState;
//@end
//
//
///*****************************************************************/
//
//@interface DVTSourceControlWorkspaceBlueprint (IDEFoundationClassAdditions)
//+ (void)blueprintWithWorkspace:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (char)representsBlueprint:(id)v1;
//- (void)saveToWorkspace:(id)v1 hasChanged:(char)v2;
//- (unsigned long long)workingCopyStateForWorkingCopy:(id)v1 origin:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface DVTPortalProgram (CodesignResolverAdditions)
//- (char)supportsCertificatePurpose:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface NSFileHandle (Coverage)
//- (char)idecoverage_readBytes:(void *)v1 ofLength:(unsigned long long)v2 error:(id *)v3;
//- (id)idecoverage_readDataOfLength:(unsigned long long)v1 error:(id *)v2;
//- (char)idecoverage_seekToFileOffset:(unsigned long long)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface DVTPortalProfileType (IDEProvisioningInputsAdditions)
//- (id)ide_certificateTypesForPurpose:(id)v1;
//- (char)ide_supportsCertificatePurpose:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface NSNumber (IDEBatchFindQueryTimestamp)<IDEBatchFindQueryTimestamp>
//- (int)ideSourceControlStatusValue;
//- (id)dvt_documentLocationTimestamp;
//@end
//
//
///*****************************************************************/
//
//@interface DVTSourceControlRevision (IDEFoundationClassAdditions)
//+ (id)revisionWithIdentifier:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface XCTSourceCodeContext (IDETestingAdditions)
//@property (readonly,copy) NSArray * callStackSymbolInfos;
//- (id)callStackSymbolInfos;
//- (id)primaryTextDocumentLocationWithTimestamp:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface XCTSourceCodeSymbolInfo (IDETestingAdditions)
//@property (readonly,copy) DVTTextDocumentLocation * documentLocation;
//- (id)documentLocation;
//@end
//
//
///*****************************************************************/
//
//@interface XCTSourceCodeLocation (IDETestingAdditions)
//@property (readonly,copy) DVTTextDocumentLocation * documentLocation;
//- (id)textDocumentLocationWithTimestamp:(id)v1;
//- (id)documentLocation;
//@end
//
//
///*****************************************************************/
//
//@interface DVTTextDocumentLocation (IDEIssueAdditions)<IDEIssueCoalescingDocumentLocationIdentifiable>
//@property (readonly,nonatomic) NSObject<NSCopying> * issueCoalescingGroupIdentifier;
//@property (readonly,nonatomic) NSObject<NSCopying> * issueCoalescingIdentifier;
//- (id)activityLogMessage_locationString;
//- (id)issueCoalescingIdentifier;
//- (id)issueCoalescingGroupIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface DVTAbstractMacDevice (IDEFoundationAdditions)
//- (char)canBeDefaultDeviceForBuildable:(id)v1 buildParameters:(id)v2;
//- (id)supportedArchitecturesForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
//- (id)supportedSDKsForBuildableContext:(id)v1 buildParameters:(id)v2 error:(id *)v3;
//- (id)uncachedOverridingPropertiesForBuildable:(id)v1 buildParameters:(id)v2;
//- (char)supportsBuildingThinnedResourcesForPlatform:(id)v1;
//- (id)assetCatalogFilterForDeviceModelForPlatform:(id)v1;
//- (id)assetCatalogFilterForDeviceOSVersionForPlatform:(id)v1;
//- (id)displayNameAdditionsForRunDestination:(id)v1 scheme:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation17IDETestCollection (IDEFoundation)
//@property (nonatomic,readonly) NSSet * testContainers;
//@property (nonatomic,readonly) NSArray * orderedTestContainers;
//@property (nonatomic,readonly) char isEmpty;
//- (id)testContainers;
//- (id)orderedTestContainers;
//- (id)subsetContainedInTestPlan:(id)v1;
//- (char)isEmpty;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation15IDETestLocation (IDEFoundation)
//@property (nonatomic,readonly) char isEmpty;
//@property (nonatomic,readonly) NSSet * testContainers;
//@property (nonatomic,readonly) NSArray * orderedTestContainers;
//- (id)subsetContainedInTestPlan:(id)v1;
//- (char)isEmpty;
//- (id)testContainers;
//- (id)orderedTestContainers;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation46SigningEditorCapabilityItemLibraryAssetManager (IDEFoundation)
//- (void)willBeginRefresh:(id)v1 context:(id)v2;
//- (void)didRefresh:(id)v1 context:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface NSURL (IDEFoundation)
//- (id)normalize;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDETestingMultiOutputStream (IDEFoundation)
//- (void)writeString:(id)v1;
//- (void)finish;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation33SigningEditorConfigurationManager (IDEFoundation)<_TtP13IDEFoundation41SigningEditorConfigurationsSourceDelegate_>
//- (void)didChangeWithConfigurations:(id)v1;
//- (void)didChangeWithProjectName:(id)v1;
//- (void)didChangeWithTargetName:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface (null) (IDEFoundation)
//@property (nonatomic,readonly) NSString * extensionIdentifier;
//@property (nonatomic) long long cloneType;
//@property (nonatomic,retain) _TtC13IDEFoundation34IDESourceControlHostAuthentication * authentication;
//@property (nonatomic,readonly) XCSourceControlHostAccount * extensionHostAccount;
//@property (nonatomic,readonly) IDESourceControlHostServiceEndpoint * endpoint;
//@property (nonatomic,readonly) NSString * extensionName;
//@property (nonatomic,readonly) char extensionUsesForcedURL;
//@property (nonatomic,readonly) unsigned long long staticCapabilities;
//- (id)extensionHostAccount;
//- (id)endpoint;
//- (id)extensionName;
//- (char)extensionUsesForcedURL;
//- (unsigned long long)staticCapabilities;
//- (id)capabilities:(void (^ /* unknown block signature */)(void))v1;
//- (id)avatarForEmail:(id)v1 username:(id)v2 url:(id)v3 size:(unsigned int)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (id)star:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)unstar:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)requestPersonalAccessToken:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)createRepository:(id)v1 name:(id)v2 description:(id)v3 homepage:(id)v4 private:(char)v5 completionBlock:(void (^ /* unknown block signature */)(void))v6;
//- (id)repositories:(unsigned long long)v1 paginationBlock:(void (^ /* unknown block signature */)(void))v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)repositories:(unsigned long long)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)searchCodeRepositories:(unsigned long long)v1 query:(id)v2 path:(id)v3 filename:(id)v4 fileExtension:(id)v5 paginationBlock:(void (^ /* unknown block signature */)(void))v6 completionBlock:(void (^ /* unknown block signature */)(void))v7;
//- (id)searchRepositories:(id)v1 pageCompletionBlock:(void (^ /* unknown block signature */)(void))v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)listSSHKeys:(void (^ /* unknown block signature */)(void))v1;
//- (id)uploadSSHKey:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)validateSSHKey:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)repositoryMetadata:(id)v1 :(void (^ /* unknown block signature */)(void))v2;
//- (id)usernameFromURL:(id)v1 :(void (^ /* unknown block signature */)(void))v2;
//- (id)validateCredentials:(void (^ /* unknown block signature */)(void))v1;
//- (id)membershipWithOptions:(long long)v1 :(void (^ /* unknown block signature */)(void))v2;
//- (id)requestAuthCode:(void (^ /* unknown block signature */)(void))v1;
//- (id)user:(void (^ /* unknown block signature */)(void))v1;
//- (id)fetchEvents:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)createFileDiscussion:(id)v1 pullRequest:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)createComment:(id)v1 pullRequest:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)updateComment:(id)v1 pullRequest:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)replyTo:(id)v1 with:(id)v2 pullRequest:(id)v3 repository:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (id)deleteComment:(id)v1 pullRequest:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)pullRequests:(id)v1 filter:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)pullRequest:(id)v1 identifier:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)createPullRequest:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)updatePullRequest:(id)v1 force:(char)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)updatePullRequest:(id)v1 targetBranch:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)commitDetails:(id)v1 revision:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)listCommits:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)listCommits:(id)v1 file:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)exportFile:(id)v1 revisionLocation:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)exportFile:(id)v1 revision:(id)v2 repositoryURL:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)uploadPullRequestAttachments:(id)v1 fileURLs:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)fetchParticipants:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)addParticipants:(id)v1 participants:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)removeParticipants:(id)v1 participants:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)actionPullRequestWithPullRequest:(id)v1 action:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)branchesOf:(id)v1 includeUpstream:(char)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)searchBranchesOf:(id)v1 query:(id)v2 paginationBlock:(void (^ /* unknown block signature */)(void))v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)updateRepositoryPermissions:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)pullRequestMergabilityInformation:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)mergePullRequest:(id)v1 action:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)statusAnnotationFor:(id)v1 in:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)repository:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)branch:(id)v1 branchName:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURL:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)webURL:(id)v1 sha:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURL:(id)v1 tag:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURL:(id)v1 branch:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURLComponents:(void (^ /* unknown block signature */)(void))v1;
//- (id)cloneURL:(id)v1;
//- (id)renderMarkdownFor:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)findUsersMatching:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)listChangesIn:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)fetchMilestonesWithRepository:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)setWithMilestone:(id)v1 on:(id)v2 repository:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)fetchLabelsWithRepository:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)setWithLabels:(id)v1 on:(id)v2 repository:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)commonAncestor:(id)v1 sourceBranch:(id)v2 targetBranch:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)extensionIdentifier;
//- (long long)cloneType;
//- (void)setCloneType:(long long)v1;
//- (id)authentication;
//- (void)setAuthentication:(id)v1;
//- (id)initWithHostURL:(id)v1 username:(id)v2 accountName:(id)v3 extensionIdentifier:(id)v4 cloneType:(long long)v5 authentication:(id)v6 sshUsername:(id)v7 sshKeyPath:(id)v8;
//- (id)dictionaryRepresentation;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation11IDETestPlan (IDEFoundation)
//@property (nonatomic,readonly) char codeCoverageEnabled;
//- (id)coverageBuildableInfosForScheme:(id)v1 buildableResolver:(id)v2 buildParameterVariants:(id)v3;
//- (char)isCodeCoverageEnabled;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation23IDETestDaemonController (IDEFoundation)<XCTDaemonControlSessionDelegate,XCTDebugLogDelegate>
//- (void)logDebugMessage:(id)v1;
//- (void)daemonControlSessionDidDisconnect:(id)v1;
//- (void)daemonControlSession:(id)v1 didReceiveCrashReportData:(id)v2 fileName:(id)v3;
//- (void)daemonControlSession:(id)v1 didReceiveDebugLogMessage:(id)v2;
//- (void)daemonControlSession:(id)v1 didReportSelfDiagnosisIssue:(id)v2 description:(id)v3;
//- (void)addObserver:(id)v1 queue:(id)v2;
//- (void)removeObserver:(id)v1;
//- (void)activate;
//- (void)authorizeProcessWithIdentifier:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)addProcessNamesToMonitoredCrashReports:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)collectLogArchiveFromDate:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)requestSpindumpWithPid:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20IDEXCTestRunCoder_V2 (IDEFoundation)<IDEXCTestRunDecoder,IDEXCTestRunEncoder,IDEXCTestRunCoder>
//- (id)dictionaryRepresentationWithTestPlanInfo:(id)v1 testRunSpecificationGroups:(id)v2 codeCoverageBuildableInfos:(id)v3 testRootPathPlaceholder:(id)v4 derivedDataPathPlaceholder:(id)v5;
//- (id)testRunFileWithDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 derivedDataPath:(id)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation33SigningEditorProvisionableManager (IDEFoundation)<IDEProvisioningTeamsDataSourceDelegate>
//- (void)didChangeWithProvisionable:(id)v1;
//- (void)didUpdateTeams:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation38IDEProvisionableDestinationRequirement (IDEFoundation)
//@property (nonatomic,readonly) NSSet * devices;
//@property (nonatomic,readonly) _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * requirementWithFlattenedDestinations;
//- (id)devices;
//- (id)requirementWithFlattenedDestinations;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation53SigningEditorCapabilityItemLibraryAssetManagerContext (IDEFoundation)
//- (id)copyWithZone:(void *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34SigningEditorCapabilityEditingItem (IDEFoundation)<IDECoalescableCapabilityEditingItemDelegate,_TtP13IDEFoundation40SigningEditorCapabilityEditingItemParent_>
//@property (nonatomic,readonly) _TtC13IDEFoundation46SigningEditorCapsuleViewStateRestorationRecord * restorationRecord;
//@property (nonatomic,readonly) NSString * title;
//- (id)restorationRecord;
//- (id)title;
//- (char)addCapabilityEditingItemWithIdentifiers:(id)v1 error:(id *)v2;
//- (void)invalidateCachedIsEnabled;
//- (void)didUpdateDataSource;
//- (char)willSet:(id)v1 keyPath:(id)v2 dataSources:(id)v3 error:(id *)v4;
//- (void)didSet:(id)v1 keyPath:(id)v2 value:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41SigningEditorCapabilityEditingItemManager (IDEFoundation)<IDESigningEditorCapabilityItemEditingConsolidatedContextSourceProviderDelegate>
//- (void)didUpdate:(id)v1 configurationToEnabledItems:(id)v2;
//- (void)didUpdate:(id)v1 source:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface (null) (IDEFoundation)
//+ (id)classSymbolWithObjCName:(id)v1;
//+ (id)protocolSymbolWithObjCName:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation29IDEProductExtensionIdentifier (IDEFoundation)
//@property (nonatomic,readonly) long long hash;
//- (long long)hash;
//- (char)isEqual:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation23IDETestingLaunchSession (IDEFoundation)<IDEConsoleAdaptorDelegateProtocol>
//- (id)parseConsoleOutputFromOriginalOutput:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31ConsolidatedCapabilitiesContext (IDEFoundation)<IDEConsolidatedCapabilitiesContextSourceDelegate>
//- (void)didUpdate:(id)v1 configurationToContext:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation63SigningEditorCapabilityItemLibraryAssetManagerCoaelescedContext (IDEFoundation)
//- (id)copyWithZone:(void *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEManageCertificatesItem : NSObject {
//    char _isValid;
//    DVTSigningCertificateSerialNumber * _serialNumber;
//    NSString * _creatorEmail;
//    DVTPortalCertificateType * _type;
//    NSObject<DVTPortalCertificateProtocol> * _portalCertificate;
//    DVTSigningCertificate * _localCertificate;
//    NSString * _name;
//    unsigned long long _state;
//    NSString * _creator;
//    NSDate * _dateCreated;
//}
//@property (retain,nonatomic) NSString * name;
//@property (nonatomic) unsigned long long state;
//@property (retain,nonatomic) NSString * creator;
//@property (retain,nonatomic) NSString * creatorEmail;
//@property (retain,nonatomic) NSDate * dateCreated;
//@property (retain,nonatomic) DVTPortalCertificateType * type;
//@property (retain,nonatomic) NSObject<DVTPortalCertificateProtocol> * portalCertificate;
//@property (retain,nonatomic) DVTSigningCertificate * localCertificate;
//@property (readonly,nonatomic) DVTSigningCertificateSerialNumber * serialNumber;
//- (id)initWithSerialNumber:(id)v1 certificateType:(id)v2;
//- (void)updateWithPortalCertificate:(id)v1 localCertificate:(id)v2;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (unsigned long long)_stateForPortalCertificate:(id)v1 localCertificate:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueLogRecordsGroup : NSObject {
//    NSMutableArray * _logRecords;
//}
//@property (copy) NSArray * logRecords;
//@property (readonly,copy) NSMutableArray * mutableLogRecords;
//+ (void)initialize;
//- (id)init;
//- (void)addLogsForIssues:(id)v1;
//- (void)removeLogsForIssues:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogCommandInvocationSection : IDEActivityLogSection
//+ (id)newWithDomainType:(id)v1 title:(id)v2;
//+ (Class)logRecorderClass;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionReformatterSelectionStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionExportStep : NSObject {
//    NSFileManager * _fileManager;
//}
//+ (void)initialize;
//- (id)fileManager;
//- (char)exportToDirectory:(id)v1 removeTemporaryFiles:(char)v2 withContext:(id)v3 error:(id *)v4;
//- (char)_exportToDirectory:(id)v1 withContext:(id)v2 error:(id *)v3;
//- (char)_exportPath:(id)v1 toPath:(id)v2 context:(id)v3 error:(id *)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionPackageExportStep : IDEDistributionExportStep
//- (char)writeSummaryForContext:(id)v1 toURL:(id)v2 error:(id *)v3;
//- (char)_exportToDirectory:(id)v1 withContext:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionArchiveExportStep : IDEDistributionExportStep
//- (char)_exportToDirectory:(id)v1 withContext:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionBuiltProductsExportStep : IDEDistributionExportStep
//- (char)_exportToDirectory:(id)v1 withContext:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionApplicationExportStep : IDEDistributionExportStep
//- (char)_exportToDirectory:(id)v1 withContext:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionNotarizedApplicationExportStep : IDEDistributionExportStep
//- (char)_exportToDirectory:(id)v1 withContext:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEProvisioningErrorProvider : NSObject<IDEProvisioningErrorProvider> {
//    long long _environment;
//    long long _task;
//    long long _repairMode;
//}
//@property (nonatomic) long long environment;
//@property (nonatomic) long long task;
//@property (nonatomic) long long repairMode;
//- (id)userActionError:(id)v1;
//- (id)accountLogInFailureError:(id)v1;
//- (id)provisionableUnknownProvisioningFailureError:(id)v1;
//- (id)provisionableMissingBundleIdentifierError:(id)v1;
//- (id)provisionableMissingTeamSelectionError:(id)v1;
//- (id)provisionableMissingTeamSelectionForProfileSpecifierError:(id)v1 profileSpecifier:(id)v2;
//- (id)provisionableMissingTeamOrProfileSelectionError:(id)v1;
//- (id)noProfileTypeErrorForPlatform:(id)v1 purpose:(id)v2;
//- (id)provisionableHasProfileSpecifiedInAutomaticError:(id)v1 profileName:(id)v2;
//- (id)provisionableHasExplicitSigningIdentitySpecifiedInAutomaticError:(id)v1 signingIdentity:(id)v2 automaticSelector:(id)v3;
//- (id)provisionableProfileTypeDoesntMatchIdentitySelectorError:(id)v1 signingIdentity:(id)v2 automaticSelector:(id)v3;
//- (id)provisionableNoProfileSpecifiedError:(id)v1 requiredFeatureNames:(id)v2;
//- (id)provisionableProfileSpecifiedButUnsupportedError:(id)v1 profileName:(id)v2;
//- (id)provisionableUnknownPlatformError:(id)v1;
//- (id)provisionableEntitlementsFileNotFoundError:(id)v1 entitlementsFilePath:(id)v2;
//- (id)provisionableHasConflictingAutomaticSigningSettingsError:(id)v1 conflictingFeatures:(id)v2;
//- (id)provisionableEntitlementsRequireSigningError:(id)v1;
//- (id)provisionableEntitlementsRequireDevelopmentSigning:(id)v1 certificateIdentifier:(id)v2 sdk:(id)v3;
//- (id)provisionableEntitlementsRequireProfileError:(id)v1;
//- (id)provisionablePlatformMismatchForAssetError:(id)v1 assetType:(id)v2 platformName:(id)v3;
//- (id)provisionableUnableToRepairEntitlementsError:(id)v1 entitlements:(id)v2;
//- (id)noAccountsError;
//- (id)provisionableMissingMacCatalystBundleIdentifierPrefixInAutomaticError:(id)v1 bundleIdentifier:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningErrorUserInfo : NSObject {
//    NSString * _provisionableName;
//    IDEProvisioningUserAction * _userAction;
//    NSNumber * _errorAction;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSString * _platform;
//    NSString * _specifier;
//    DVTDeveloperAccount * _account;
//    DVTSigningCertificate * _certificate;
//}
//@property (retain,nonatomic) NSString * provisionableName;
//@property (retain,nonatomic) IDEProvisioningUserAction * userAction;
//@property (retain,nonatomic) NSNumber * errorAction;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (retain,nonatomic) NSString * platform;
//@property (retain,nonatomic) NSString * specifier;
//@property (retain,nonatomic) DVTDeveloperAccount * account;
//@property (retain,nonatomic) DVTSigningCertificate * certificate;
//- (id)initWithUserInfo:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductType : NSObject
//@property (readonly) NSString * identifier;
//@property (readonly) NSString * name;
//@property (readonly) NSString * localizedDescription;
//@property (readonly) DVTPlatform * platform;
//@property (readonly) IDEProductType * superType;
//+ (id)productTypeForIdentifier:(id)v1 platform:(id)v2;
//+ (id)platformProductTypeOfBuildable:(id)v1;
//+ (id)_expandedPlatformForBuildableProduct:(id)v1;
//+ (char)buildableProductIsApp:(id)v1;
//+ (char)buildableProductIsAppExtension:(id)v1;
//+ (char)buildableProductIsWatchApp:(id)v1;
//+ (char)buildableProductIsWatchAppExtension:(id)v1;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (id)description;
//- (char)isKindOfProductType:(id)v1;
//- (char)isApplication;
//- (char)isAppExtension;
//- (char)isCommandLineTool;
//- (char)isDriverExtension;
//- (char)isSystemExtension;
//- (char)isWatchApplication;
//- (char)isWatch2Application;
//- (char)isWatch1Application;
//- (char)isWatchAppExtension;
//- (char)isWatch2AppExtension;
//- (char)isWatch1AppExtension;
//- (char)isAppClip;
//- (char)shouldAutocreateSchemes;
//- (char)usesInstallCoordination;
//- (char)installsOnProxy;
//- (char)runsOnProxy;
//- (char)runsDirectlyOnProxy;
//- (char)willEmbedRunSanitizerLibraries;
//- (long long)provisioningProfileSupport;
//- (char)isBundleIdentifierRequired;
//- (id)supportsMacCatalystAndReturnError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAbstractProductType : NSObject
//+ (char)productTypeIdentifierIsWatchApp:(id)v1;
//+ (char)productTypeIdentifierIsWatchExtension:(id)v1;
//+ (char)productTypeIdentifierIsWatch2Application:(id)v1;
//+ (char)productTypeIdentifierIsWatch1Application:(id)v1;
//+ (char)productTypeIdentifierIsWatch2Extension:(id)v1;
//+ (char)productTypeIdentifierIsWatch1Extension:(id)v1;
//+ (char)productTypeIdentifierIsIntentExtensionFamily:(id)v1;
//+ (char)productTypeIdentifierIsTodayExtension:(id)v1;
//+ (char)productTypeIdentifierIsMessagesExtension:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWatchpoint : IDEBreakpoint {
//    NSString * _expression;
//    NSString * _variableName;
//    unsigned long long _address;
//}
//@property (readonly) NSString * expression;
//@property (readonly) NSString * variableName;
//@property unsigned long long address;
//@property (readonly) NSString * hexAddress;
//+ (id)keyPathsForValuesAffectingHexAddress;
//+ (id)keyPathsForValuesAffectingDisplayName;
//+ (id)_displayStringForAddress:(unsigned long long)v1;
//- (id)initWithExpression:(id)v1 variableName:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)displayName;
//- (id)accessibilityDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWatchpointNotificationInfo : NSObject {
//    IDEWatchpoint * _watchpoint;
//    NSString * _watchpointID;
//    NSString * _expression;
//    NSString * _oldValue;
//    NSString * _newValue;
//    NSString * _thread;
//}
//@property (readonly) IDEWatchpoint * watchpoint;
//@property (readonly) NSString * watchpointID;
//@property (readonly) NSString * expression;
//@property (readonly) NSString * oldValue;
//@property (readonly) NSString * newValue;
//@property (readonly) NSString * thread;
//- (id)initWithWatchpoint:(id)v1 watchpointID:(id)v2 expression:(id)v3 oldValue:(id)v4 newValue:(id)v5 thread:(id)v6;
//- (id)titleStyleDisplayString;
//- (id)consoleOutputStyleDisplayString;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionManifestStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEVersionGroupUtilities : NSObject
//+ (char)saveCurrentVersionForVersionGroup:(id)v1;
//+ (id)currentVersionNameFromDiskForVersionGroup:(id)v1;
//+ (id)_currentVersionFilePathForVersionGroup:(id)v1;
//+ (char)saveCurrentVersionName:(id)v1 versionGroupPathString:(id)v2 versionCount:(unsigned long long)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpointBucket : NSObject<DVTXMLUnarchiving,DVTInvalidation> {
//    DVTCustomDataSpecifier * _archivingDataSpecifier;
//    NSString * _archivingContainerItemBaseStandardizedPathString;
//    NSMutableArray * _breakpoints;
//    DVTMutableOrderedDictionary * _urlToFileBucketDict;
//    char _currentlyDecoding;
//    NSString * _uuid;
//    unsigned long long _type;
//    IDEContainer<DVTCustomDataStoring> * _archivingContainer;
//    NSString * _displayName;
//    NSURL * _fileURL;
//}
//@property (copy,nonatomic) NSString * uuid;
//@property (retain) IDEContainer<DVTCustomDataStoring> * archivingContainer;
//@property (retain) NSArray * breakpoints;
//@property (readonly) NSMutableArray * mutableBreakpoints;
//@property (readonly) DVTCustomDataSpecifier * archivingDataSpecifier;
//@property (copy) NSURL * fileURL;
//@property (readonly) unsigned long long type;
//@property (readonly) NSArray * bucketsAndBreakpoints;
//@property (copy,nonatomic) NSString * displayName;
//@property (readonly,getter=isShared) char shared;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)bucketForUUID:(id)v1;
//+ (id)userGlobalBucket:(id *)v1;
//+ (id)keyPathsForValuesAffectingShared;
//+ (id)keyPathsForValuesAffectingBucketsAndBreakpoints;
//+ (id)keyPathsForValuesAffectingDisplayName;
//- (id)init;
//- (id)initWithType:(unsigned long long)v1 archivingContainer:(id)v2 error:(id *)v3;
//- (id)_archivingDataStore;
//- (id)_archivingDataSpecifierWithName:(id)v1;
//- (char)_shouldEncodeDecode;
//- (void)_encodeToContainer;
//- (char)_decodeFromContainer:(id *)v1;
//- (id)_fileBreakpointBucketForBreakpoint:(id)v1 shouldCreate:(char)v2;
//- (void)_addToFileBucketIfNecessary:(id)v1;
//- (void)addBreakpoint:(id)v1;
//- (id)removeBreakpoints:(id)v1;
//- (void)notifyPersistencyStateChanged;
//- (void)_persistBreakpoints;
//- (id)archivingContainerItemBaseStandardizedPathString;
//- (id)_displayNameForWorkspace;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)_breakpointArchivingProxiesArray;
//- (void)addBreakpoints:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildCommandLineVerb : IDESchemeBasedCommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//+ (id)synthesizedOverridingBuildPropertiesWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningUserAction : NSObject {
//    IDEProvisioningLedgerEntry * _ledgerEntry;
//    char _executing;
//    char _authorized;
//    char _wantsRepairRetriedOnFinish;
//    char _representsRepairFailure;
//    NSObject<IDEProvisioningUserActionDelegate> * _delegate;
//    IDEProvisioningRepairExecutionContext * _context;
//    NSArray * _steps;
//    NSError * _error;
//    DVTStackBacktrace * _creationBacktrace;
//}
//@property (getter=isExecuting) char executing;
//@property (nonatomic,getter=isAuthorized) char authorized;
//@property (copy,nonatomic) NSArray * steps;
//@property (nonatomic) NSObject<IDEProvisioningUserActionDelegate> * delegate;
//@property (retain,nonatomic) DVTStackBacktrace * creationBacktrace;
//@property (retain,nonatomic) NSError * error;
//@property (readonly,nonatomic) IDEProvisioningRepairExecutionContext * context;
//@property (readonly,nonatomic) NSString * userActionName;
//@property (readonly,nonatomic) NSString * userActionTitle;
//@property (readonly,nonatomic) NSString * userActionMessage;
//@property (readonly,nonatomic) NSString * executionMessage;
//@property (readonly,nonatomic) char wantsRepairRetriedOnFinish;
//@property (readonly,nonatomic) char representsRepairFailure;
//@property (readonly,nonatomic) char supportsBatchAuthorization;
//+ (char)supportsInvalidationPrevention;
//- (id)initWithContext:(id)v1 steps:(id)v2;
//- (id)init;
//- (void)dealloc;
//- (void)userDidAuthorizeAction;
//- (void)execute;
//- (char)preflightWithError:(id *)v1;
//- (char)executeWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCollection : NSObject<NSFastEnumeration> {
//    NSArray * _items;
//}
//- (id)init;
//- (id)initWithObject:(id)v1;
//- (id)initWithArray:(id)v1;
//- (id)description;
//- (unsigned long long)countByEnumeratingWithState:(struct anonymous_type_3 *)v1 objects:(id *)v2 count:(unsigned long long)v3;
//- (id)allObjects;
//- (id)firstObject;
//- (id)onlyObject;
//- (id)uniqueObjects;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningContext : NSObject {
//    NSObject<IDEProvisioningErrorProvider> * _errorProvider;
//    IDEProvisioningTeamManager * _teamManager;
//    DVTProvisioningProfileManager * _profileManager;
//    DVTSigningCertificateManager * _certificateManager;
//    long long _automaticLocationStyle;
//    long long _repairMode;
//    long long _evaluationMode;
//    long long _provisioningEnvironment;
//    long long _provisioningTask;
//}
//@property (retain,nonatomic) IDEProvisioningTeamManager * teamManager;
//@property (retain,nonatomic) DVTProvisioningProfileManager * profileManager;
//@property (retain,nonatomic) DVTSigningCertificateManager * certificateManager;
//@property (nonatomic) long long provisioningEnvironment;
//@property (nonatomic) long long provisioningTask;
//@property (nonatomic) long long automaticLocationStyle;
//@property (nonatomic) long long repairMode;
//@property (nonatomic) long long evaluationMode;
//@property (readonly,nonatomic) NSObject<IDEProvisioningErrorProvider> * errorProvider;
//+ (id)newContextWithDefaultManagers;
//+ (long long)currentEnvironment;
//- (id)initWithTeamManager:(id)v1 profileManager:(id)v2 certificateManager:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogSectionRecorder : NSObject {
//    NSPointerArray * _parentRecorders;
//    NSMutableArray * _childRecorders;
//    IDEActivityLogSection * _section;
//    NSMutableArray * _observations;
//    NSMutableArray * _changesToPost;
//    char _hasScheduledChangePosting;
//    void (^ /* unknown block signature */)(void) _completionBlock;
//    NSMutableDictionary * _severityToLimitTable;
//    NSMutableDictionary * _severityToCountTable;
//    struct os_unfair_lock_s _lock;
//    char _hasAddedAnyErrorMessages;
//    id _isStillRecording;
//    _TtC13IDEFoundation31IDEActivityLogEventStreamWriter * _eventStreamWriter;
//}
//@property char hasAddedAnyErrorMessages;
//@property (retain) _TtC13IDEFoundation31IDEActivityLogEventStreamWriter * eventStreamWriter;
//- (void)addErrorMessageWithTitle:(id)v1 appendText:(char)v2;
//- (void)addMessage:(id)v1 appendText:(char)v2;
//- (void)appendTextFromMessage:(id)v1;
//- (char)addMessagesFromClangDiagnosticsFileAtPath:(id)v1 withSourceFileBasePath:(id)v2 error:(id *)v3;
//- (id)initWithLogSection:(id)v1;
//- (void)_performOrderedAsyncBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)section;
//- (void)addCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)handleChangeEvent:(id)v1;
//- (void)noteDescendantLogSection:(id)v1 didAddSubsection:(id)v2;
//- (void)noteDescendantLogSection:(id)v1 didAppendText:(id)v2;
//- (void)noteDescendantLogSectionDidClose:(id)v1 inSupersection:(id)v2;
//- (id)addCommandSectionWithDomainType:(id)v1 title:(id)v2 detailDescription:(id)v3;
//- (id)addCommandSectionWithTitle:(id)v1 detailDescription:(id)v2;
//- (id)addUnitTestSectionWithTitle:(id)v1 location:(id)v2;
//- (void)setIsQuiet:(char)v1;
//- (void)setWasFetchedFromCache:(char)v1;
//- (void)setLocalizedResultString:(id)v1;
//- (unsigned long long)messageLimitForSeverity:(unsigned long long)v1;
//- (void)setMessageLimit:(unsigned long long)v1 forSeverity:(unsigned long long)v2;
//- (char)hasReachedMessageLimitForSeverity:(unsigned long long)v1;
//- (char)hasReachedAllMessageLimits;
//- (char)_attachToParentRecorderIfStillRecording:(id)v1;
//- (void)addSubsection:(id)v1;
//- (void)appendText:(id)v1;
//- (void)appendTextFormat:(id)v1;
//- (void)appendTextUTF8Bytes:(const  char *)v1 length:(unsigned long long)v2;
//- (void)addMessage:(id)v1;
//- (void)addMessage:(id)v1 ignoreMessageLimit:(char)v2;
//- (void)addSubmessage:(id)v1 toMessage:(id)v2;
//- (void)childRecorderDidStopRecording:(id)v1;
//- (char)isRecording;
//- (void)stopRecordingWithResultCode:(long long)v1 wasCancelled:(char)v2 duration:(double)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)stopRecordingWithResult:(long long)v1 duration:(double)v2;
//- (void)stopRecordingWithResult:(long long)v1;
//- (void)endRecordingWithResult:(long long)v1;
//- (void)stopRecordingWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)stopRecordingWithInfo:(id)v1;
//- (void)addTestFailureMessageWithTitle:(id)v1;
//- (void)addErrorMessageWithTitle:(id)v1;
//- (void)addWarningMessageWithTitle:(id)v1;
//- (void)addNoticeMessageWithTitle:(id)v1;
//- (void)addAnalyzerResultMessageWithTitle:(id)v1;
//- (void)addAnalyzerResultStepMessageWithTitle:(id)v1;
//- (void)addContextInfoMessageWithTitle:(id)v1;
//- (void)setCommandDetailDescription:(id)v1;
//- (void)setTitle:(id)v1;
//- (id)addObserverUsingBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogSectionObservation : NSObject<DVTCancellable> {
//    void (^ /* unknown block signature */)(void) _block;
//}
//@property (readonly,getter=isCancelled) char cancelled;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)sharedNullObservation;
//- (id)initWithBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)init;
//- (void (^ /* unknown block signature */)(void))block;
//- (void)cancel;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepair : NSObject<DVTInvalidation,IDEProvisioningUserActionDelegate> {
//    IDEProvisioningLedgerEntry * _ledgerEntry;
//    DVTDispatchLock * _userActionLock;
//    char _wantsDiagnoseProblemLedgerEntry;
//    char _executing;
//    IDEProvisioningUserAction * _userAction;
//    NSObject<IDEProvisioningRepairDelegate> * _delegate;
//    IDEProvisioningRepairContext * _context;
//    NSArray * _steps;
//    NSError * _error;
//}
//@property (copy,nonatomic) NSArray * steps;
//@property (getter=isExecuting) char executing;
//@property (retain,nonatomic) IDEProvisioningUserAction * userAction;
//@property (retain,nonatomic) NSError * error;
//@property (readonly,nonatomic) NSObject<IDEProvisioningRepairDelegate> * delegate;
//@property (readonly,nonatomic) IDEProvisioningRepairContext * context;
//@property (readonly,nonatomic) NSObject<IDERepairable> * repairable;
//@property (readonly,nonatomic,getter=isWaitingForUserAction) char waitingForUserAction;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithDelegate:(id)v1 context:(id)v2;
//- (void)primitiveInvalidate;
//- (void)execute;
//- (void)_executeSteps:(id)v1;
//- (id)_executionDiagnosticLedgerEntry;
//- (void)_repairDidFinishWithUserAction:(id)v1 error:(id)v2;
//- (void)_waitOnUserAction:(id)v1;
//- (void)_closeLedgerEntriesWithError:(id)v1;
//- (void)userActionWasAuthorized:(id)v1;
//- (void)userActionDidBegin:(id)v1;
//- (void)userActionDidFinish:(id)v1;
//- (void)userAction:(id)v1 didFailWithError:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMalformedProductIdentifier : IDEProductIdentifier {
//    IDEProductCategory * _productCategory;
//    NSString * _bundleIdentifier;
//    NSString * _name;
//}
//@property (readonly) NSString * name;
//+ (id)malformedProductIdentifierWithArchive:(id)v1;
//+ (id)objectFromJSONRepresentation:(id)v1 error:(id *)v2;
//- (id)initWithProductCategory:(id)v1 name:(id)v2 bundleIdentifier:(id)v3;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (id)JSONRepresentation;
//- (id)productCategory;
//- (id)bundleIdentifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMalformedProduct : IDEProduct<NSCopying> {
//    NSArray * _archives;
//}
//+ (id)productByMergingProducts:(id)v1 coordinator:(id)v2;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//- (id)_initWithCoordinator:(id)v1 archives:(id)v2;
//- (id)_initWithCoordinator:(id)v1 productIdentifier:(id)v2 productVersions:(id)v3;
//- (id)archives;
//- (id)name;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface DVTLineCoverageDelta : NSObject {
//    int _executableLinesDelta;
//    int _coveredLinesDelta;
//    double _lineCoverageDelta;
//}
//@property (readonly) int executableLinesDelta;
//@property (readonly) int coveredLinesDelta;
//@property (readonly) double lineCoverageDelta;
//@property (readonly,getter=isZero) char zero;
//- (id)initWithExecutableLinesDelta:(int)v1 coveredLinesDelta:(int)v2 lineCoverageDelta:(double)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionCodeCoverageDelta : NSObject {
//    unsigned long long _type;
//    NSString * _identifier;
//    DVTLineCoverageDelta * _lineCoverageDelta;
//    NSArray * _addedChildren;
//    NSArray * _removedChildren;
//    NSArray * _childrenDeltas;
//}
//@property (readonly,getter=isZero) char zero;
//@property (readonly) unsigned long long type;
//@property (readonly,copy) NSString * identifier;
//@property (readonly) DVTLineCoverageDelta * lineCoverageDelta;
//@property (readonly,copy) NSArray * addedChildren;
//@property (readonly,copy) NSArray * removedChildren;
//@property (readonly,copy) NSArray * childrenDeltas;
//- (id)initWithType:(unsigned long long)v1 identifier:(id)v2 lineCoverageDelta:(id)v3 addedChildren:(id)v4 removedChildren:(id)v5 childrenDeltas:(id)v6;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodInAppPurchaseContent : IDEDistributionMethodAppStore
//- (bool)supportsDistributionOfArchive:(id)v1;
//- (long long)wantsProvisioningProfiles;
//- (id)certificateKind;
//- (id)installerCertificateKind;
//- (id)packagingStepIdentifierForDestination:(long long)v1;
//- (id)commandLineName;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodInAppPurchaseContentSubmit : IDEDistributionMethodInAppPurchaseContent
//- (double)sortOrder;
//- (long long)supportedTask;
//- (id)supportedDestinations;
//- (id)title;
//- (id)subtitle;
//- (id)shortTitle;
//- (id)orderedDistributionStepClassNamesForDestination:(long long)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodInAppPurchaseContentPackage : IDEDistributionMethodExport
//- (double)sortOrder;
//- (bool)supportsDistributionOfArchive:(id)v1;
//- (id)commandLineName;
//- (id)title;
//- (id)subtitle;
//- (id)shortTitle;
//- (id)orderedDistributionStepClassNamesForDestination:(long long)v1;
//- (id)exportStepName;
//- (long long)wantsProvisioningProfiles;
//- (id)certificateKind;
//- (id)installerCertificateKind;
//- (id)packagingStepIdentifierForDestination:(long long)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFolderCore : IDEContainerCore<IDEFolderCore>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExceptionBreakpoint : IDEBreakpoint {
//    int _breakpointStackSelectionBehavior;
//    int _scope;
//    int _stopOnStyle;
//    NSString * _exceptionName;
//}
//@property int scope;
//@property int stopOnStyle;
//@property (copy) NSString * exceptionName;
//+ (id)propertiesAffectingPersistenceState;
//+ (id)keyPathsForValuesAffectingDisplayName;
//+ (char)isCPPExceptionBreakpoint:(id)v1;
//+ (char)isCPPOrAllExceptionBreakpoint:(id)v1;
//+ (char)isAllExceptionsBreakpoint:(id)v1;
//+ (char)isAllObjectiveCExceptionsBreakpoint:(id)v1;
//- (id)init;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)displayName;
//- (id)description;
//- (char)matchesAllExceptionsInScope;
//- (char)locationsProvideAdditionalInformation;
//- (id)accessibilityDescription;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (int)breakpointStackSelectionBehavior;
//- (void)setBreakpointStackSelectionBehavior:(int)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAppThinningPlistStep : IDEDistributionProcessingStep
//+ (bool)runsPerThinningVariant;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEITunesSoftwareServiceAuthenticationDelegate : NSObject<ITunesSoftwareServiceAuthenticationDelegate> {
//    DVTDeveloperAccountCredentials * _credentials;
//    DVTLogAspect * _logAspect;
//}
//@property (readonly) DVTDeveloperAccountCredentials * credentials;
//@property (readonly) DVTLogAspect * logAspect;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithAccountCredentials:(id)v1 logAspect:(id)v2;
//- (void)willAuthenticateWithContext:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEITunesSoftwareServiceApplicationDescriptionCache : NSObject {
//    DVTDispatchLock * _cacheLock;
//    NSMutableDictionary * _cache;
//}
//- (id)init;
//- (id)_cacheKeyForApplicationDescription:(id)v1;
//- (id)_cacheKeyForITunesApplicationDescription:(id)v1;
//- (id)cachedITunesApplicationDescriptionForDescription:(id)v1;
//- (void)cacheITunesApplicationDescriptions:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEITunesSoftwareService : NSObject<ITunesSoftwareServiceAuthenticationDelegate,IDEITunesSoftwareServiceProtocol> {
//    DVTDispatchLock * _authenticationDelegatesLock;
//    char _shouldContinueUploading;
//    NSObject<IDEITunesSoftwareServiceDelegateProtocol> * _delegate;
//    IDEITunesConnectProxy * _proxy;
//    DVTLogAspect * _logAspect;
//    NSMutableArray * _authenticationDelegates;
//    IDEITunesSoftwareServiceApplicationDescriptionCache * _applicationDescriptionCache;
//}
//@property (readonly) IDEITunesConnectProxy * proxy;
//@property (readonly) DVTLogAspect * logAspect;
//@property (readonly) NSMutableArray * authenticationDelegates;
//@property (readonly) IDEITunesSoftwareServiceApplicationDescriptionCache * applicationDescriptionCache;
//@property char shouldContinueUploading;
//@property (retain) NSObject<IDEITunesSoftwareServiceDelegateProtocol> * delegate;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)init;
//- (id)initWithLogAspect:(id)v1;
//- (void)setLogFileURL:(id)v1;
//- (id)_authContextForAccountCredentials:(id)v1 error:(id *)v2;
//- (id)_swinfoFilePathStringWithError:(id *)v1;
//- (void)swinfoFilePathStringWithCallback:(void (^ /* unknown block signature */)(void))v1;
//- (void)executeBlockWithAccountCredentials:(id)v1 authenticationAttempts:(long long)v2 block:(void (^ /* unknown block signature */)(void))v3;
//- (id)_configurationResponseForAccountCredentials:(id)v1 toolsBuildVersionName:(id)v2 error:(id *)v3;
//- (void)configurationResponseForAccountCredentials:(id)v1 toolsBuildVersionName:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (id)_configurationResponseForAccountCredentials:(id)v1 bundleID:(id)v2 toolsBuildVersionName:(id)v3 error:(id *)v4;
//- (void)configurationResponseForAccountCredentials:(id)v1 bundleID:(id)v2 toolsBuildVersionName:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (id)_validationResponseForApplicationAtPath:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 error:(id *)v4;
//- (void)validationResponseForApplicationAtPath:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (void)_uploadWillBegin;
//- (void)_updateUploadPercentage:(double)v1;
//- (void)_updateUploadMessage:(id)v1;
//- (char)_uploadShouldContinue;
//- (void)_uploadDidComplete;
//- (id)_uploadResponseForApplicationAtPath:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 error:(id *)v4;
//- (void)uploadApplicationAtPath:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (void)cancelUploadWithCallback:(void (^ /* unknown block signature */)(void))v1;
//- (id)_uploadResponseForInAppPurchaseContentArchiveAtPath:(id)v1 productID:(id)v2 application:(id)v3 accountCredentials:(id)v4 error:(id *)v5;
//- (void)uploadInAppPurchaseContentArchiveAtPath:(id)v1 productID:(id)v2 application:(id)v3 accountCredentials:(id)v4 callback:(void (^ /* unknown block signature */)(void))v5;
//- (id)_uploadResponseForDeveloperIDAppAtPath:(id)v1 bundleID:(id)v2 teamID:(id)v3 deviceToken:(id)v4 accountCredentials:(id)v5 error:(id *)v6;
//- (void)uploadDeveloperIDAppAtPath:(id)v1 bundleID:(id)v2 teamID:(id)v3 deviceToken:(id)v4 accountCredentials:(id)v5 callback:(void (^ /* unknown block signature */)(void))v6;
//- (id)_developerIDStatusResponseForUploadIdentifier:(id)v1 accountCredentials:(id)v2 error:(id *)v3;
//- (void)developerIDStatusResponseForUploadIdentifier:(id)v1 accountCredentials:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (id)_testDeveloperIDNotificationWithDeviceToken:(id)v1 accountCredentials:(id)v2 error:(id *)v3;
//- (void)testDeveloperIDNotificationWithDeviceToken:(id)v1 accountCredentials:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (id)_ITunesApplicationDescriptionForDescription:(id)v1 accountCredentials:(id)v2 error:(id *)v3;
//- (id)_applicationsWithContentHostedInAppPurchasesForAccountCredentials:(id)v1 error:(id *)v2;
//- (void)applicationsWithContentHostedInAppPurchasesForAccountCredentials:(id)v1 callback:(void (^ /* unknown block signature */)(void))v2;
//- (id)_applicationDescriptionWithBundleIdentifier:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 error:(id *)v4;
//- (void)applicationDescriptionWithBundleIdentifier:(id)v1 platformIdentifier:(id)v2 accountCredentials:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (id)_applicationDescriptionsWithAccountCredentials:(id)v1 error:(id *)v2;
//- (void)applicationDescriptionsWithAccountCredentials:(id)v1 callback:(void (^ /* unknown block signature */)(void))v2;
//- (id)_applicationVersionsForApplicationDecription:(id)v1 accountCredentials:(id)v2 error:(id *)v3;
//- (void)applicationVersionsForApplicationDecription:(id)v1 accountCredentials:(id)v2 callback:(void (^ /* unknown block signature */)(void))v3;
//- (id)_dSYMURLForAdamID:(id)v1 bundleIdentifier:(id)v2 version:(id)v3 buildNumber:(id)v4 platformIdentifier:(id)v5 accountCredentials:(id)v6 error:(id *)v7;
//- (void)dSYMURLForAdamID:(id)v1 bundleIdentifier:(id)v2 version:(id)v3 buildNumber:(id)v4 platformIdentifier:(id)v5 accountCredentials:(id)v6 callback:(void (^ /* unknown block signature */)(void))v7;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _DVTDeviceIneligibilityErrorDetails : NSObject {
//    NSString * _token;
//    NSString * _errorDescription;
//    NSString * _suggestion;
//}
//@property (retain,nonatomic) NSString * token;
//@property (retain,nonatomic) NSString * errorDescription;
//@property (retain,nonatomic) NSString * suggestion;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningLedger : NSObject {
//    NSMutableArray * _entries;
//    NSObject<IDEProvisioningLedgerDelegate> * _delegate;
//}
//@property (nonatomic) NSObject<IDEProvisioningLedgerDelegate> * delegate;
//- (id)init;
//- (id)openLedgerEntryForRepresentedObject:(id)v1 logAspect:(id)v2;
//- (void)provisioningLedgerEntry:(id)v1 didOpenSubentry:(id)v2;
//- (void)provisioningLedgerEntry:(id)v1 didCloseSubentry:(id)v2 withError:(id)v3;
//- (void)provisioningLedgerEntry:(id)v1 didRecordDetails:(id)v2;
//- (void)provisioningLedgerEntryDidClose:(id)v1 withError:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningLedgerEntry : NSObject {
//    bool _isClosed;
//    NSMutableArray * _subentries;
//    NSMutableString * _details;
//    NSObject<_IDEProvisioningLedgerEntryDelegate> * _delegate;
//    IDEProvisioningLogDVTLogAspectListener * _logAspectListener;
//    IDEProvisioningLedger * _ledger;
//    IDEProvisioningLedgerEntry * _parent;
//    id _representedObject;
//    DVTLogAspect * _logAspect;
//    NSString * _title;
//}
//@property (nonatomic) IDEProvisioningLedger * ledger;
//@property (nonatomic) IDEProvisioningLedgerEntry * parent;
//@property (nonatomic) id representedObject;
//@property (readonly,nonatomic) DVTLogAspect * logAspect;
//@property (readonly,nonatomic) NSString * title;
//@property (readonly,nonatomic) NSString * details;
//- (id)initWithLedger:(id)v1 representedObject:(id)v2 logAspect:(id)v3 title:(id)v4;
//- (void)close;
//- (void)closeWithError:(id)v1;
//- (bool)closed;
//- (id)openSubentryWithTitle:(id)v1 representedObject:(id)v2;
//- (void)recordDetails:(id)v1;
//- (id)delegate;
//- (void)setDelegate:(id)v1;
//- (void)provisioningLedgerEntry:(id)v1 didOpenSubentry:(id)v2;
//- (void)provisioningLedgerEntry:(id)v1 didCloseSubentry:(id)v2 withError:(id)v3;
//- (void)provisioningLedgerEntryDidClose:(id)v1 withError:(id)v2;
//- (void)provisioningLedgerEntry:(id)v1 didRecordDetails:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodStep : IDEDistributionStep {
//    NSNumber * _distributionTask;
//}
//@property (readonly) NSNumber * distributionTask;
//@property (readonly) NSArray * availableDistributionMethods;
//@property (retain) IDEDistributionMethod * distributionMethod;
//+ (id)availableOptionsForPropertyList;
//+ (id)availableDistributionMethodsForTasks:(id)v1 archive:(id)v2 logAspect:(id)v3;
//+ (id)keyPathsForValuesDistributionMethod;
//+ (id)distributionMethodForSameAsArchive:(id)v1 contentPath:(id)v2 task:(long long)v3 logAspect:(id)v4;
//+ (id)distributionMethodForSameAsArchiveWithAvailableMethods:(id)v1 existingCertificateInfo:(void (^ /* unknown block signature */)(void))v2 existingProfilePurposes:(void (^ /* unknown block signature */)(void))v3 fallbackMethod:(id)v4 logAspect:(id)v5;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductIdentifier : NSObject<DVTServicesJSONSerialization,NSCopying> {
//    NSString * _bundleIdentifier;
//    IDEProductCategory * _productCategory;
//}
//@property (readonly) NSString * bundleIdentifier;
//@property (readonly) IDEProductCategory * productCategory;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)productIdentifierWithBundleIdentifier:(id)v1 productCategory:(id)v2;
//+ (id)productIdentifierOrMalformedProductIdentifierForArchive:(id)v1;
//+ (id)objectFromJSONRepresentation:(id)v1 error:(id *)v2;
//- (id)initWithBundleIdentifier:(id)v1 productCategory:(id)v2;
//- (long long)compare:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)_stringRepresentation;
//- (id)userDefaultsKey;
//- (id)JSONRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildIssueProvider : IDEIssueProvider {
//    NSMapTable * _blueprintToLatestLogSectionObserverMap;
//    NSMapTable * _buildLogToLogNotificationObserverMap;
//    NSMapTable * _blueprintToLatestBuildLogSectionMap;
//    NSMapTable * _blueprintToLogRecordsMap;
//    NSMapTable * _blueprintToIssuesForFileMap;
//    NSMapTable * _blueprintToAuxiliaryFilesForFileMap;
//    NSMapTable * _haveRemovedIssuesForFileInBlueprintMap;
//    DVTObservingToken * _activeBuildOperationStateObserverToken;
//    IDEBuildOperation * _activeBuildOperation;
//    NSMutableSet * _pendingLogSections;
//    DVTObservingToken * _referencedBlueprintsObserverToken;
//    DVTObservingToken * _currentBuildOpObserverToken;
//    DVTObservingToken * _latestBuildLogObserverToken;
//    DVTObservingToken * _cleaningBuildFolderObserverToken;
//    DVTObservingToken * _workspaceFinishedLoadingObserverToken;
//    IDELogStore * _logStore;
//    DVTTimeSlicedMainThreadWorkQueue * _buildIssueChangesToPost;
//}
//+ (id)_backgroundLoadingQueue;
//+ (id)_backgroundScanningQueue;
//+ (int)providerType;
//- (id)logRecordsForBlueprint:(id)v1;
//- (void)addLogRecord:(id)v1 forBlueprint:(id)v2;
//- (void)removeAllLogRecordsForBlueprint:(id)v1;
//- (id)latestLogRecordForBlueprint:(id)v1;
//- (void)addIssues:(id)v1 toCacheForFile:(id)v2 inBlueprint:(id)v3;
//- (void)addAuxiliaryFiles:(id)v1 toCacheForFile:(id)v2 inBlueprint:(id)v3;
//- (id)removeIssuesFromCacheForFile:(id)v1 inBlueprint:(id)v2;
//- (char)shouldRemoveIssuesFromCacheForFile:(id)v1 inBlueprint:(id)v2;
//- (void)removeBlueprintFromIssuesCache:(id)v1;
//- (char)allowsExistingIssuesToBeCoalesced;
//- (id)initWithIssueManager:(id)v1 extension:(id)v2;
//- (void)primitiveInvalidate;
//- (void)_workspaceFinishedLoading;
//- (void)_latestBuildLogDidChange;
//- (void)_forgetBlueprint:(id)v1;
//- (void)_reactToCleanBuildFolder;
//- (void)_blueprintsDidChange;
//- (void)_currentBuildOperationDidChange;
//- (void)_observeLogSection:(id)v1 forBlueprint:(id)v2 loadedFromLogStore:(char)v3;
//- (void)_asyncPostBuildIssueChanges:(void (^ /* unknown block signature */)(void))v1;
//- (void)_postBuildIssueChange:(id)v1;
//- (void)startProviderSession;
//- (void)_addIssueForMessage:(id)v1 blueprint:(id)v2 intoArray:(id)v3 usingSeenMessages:(id)v4 withFileToIssuesMap:(id)v5 fileToAuxFilesMap:(id)v6 wasFetchedFromCache:(char)v7;
//- (void)_scanIssuesInLog:(id)v1 forBlueprint:(id)v2 intoArray:(id)v3 usingSeenMessages:(id)v4 withFileToIssuesMap:(id)v5 fileToAuxFilesMap:(id)v6;
//- (void)_buildLogDidUpdateItems:(id)v1 blueprint:(id)v2;
//- (id)displayNameForIssueTypeIdentifier:(id)v1;
//- (char)shouldAutoExpandIssueInNavigator:(id)v1;
//- (id)ideModelObjectTypeIdentifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildIssueChange : NSObject {
//    int _type;
//    NSArray * _issues;
//    IDEIssueProviderSession * _session;
//    id _providerContext;
//    IDEContainer * _container;
//    NSObject<IDEBlueprint> * _blueprint;
//}
//@property (nonatomic) int type;
//@property (retain,nonatomic) NSArray * issues;
//@property (retain,nonatomic) IDEIssueProviderSession * session;
//@property (retain,nonatomic) id providerContext;
//@property (retain,nonatomic) IDEContainer * container;
//@property (retain,nonatomic) NSObject<IDEBlueprint> * blueprint;
//+ (id)additionChangeWithIssues:(id)v1 session:(id)v2 forProviderContext:(id)v3 container:(id)v4 blueprint:(id)v5;
//+ (id)removeChangeWithIssues:(id)v1 session:(id)v2 forProviderContext:(id)v3 container:(id)v4 blueprint:(id)v5;
//+ (id)setChangeWithIssues:(id)v1 session:(id)v2 forProviderContext:(id)v3 container:(id)v4 blueprint:(id)v5;
//- (id)initWithType:(int)v1 session:(id)v2 issues:(id)v3 forProviderContext:(id)v4 container:(id)v5 blueprint:(id)v6;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchTestSchemeAction : IDESchemeAction<IDECodeCoverageMutating> {
//    char _shouldUseLaunchSchemeArgsEnv;
//    NSMutableArray * _commandLineArgumentEntries;
//    NSMutableArray * _environmentVariableEntries;
//    DVTNotificationToken * _buildablesToken;
//    IDESchemeBuildableReference * _loadingBuildableReferenceToUseForMacroExpansion;
//    char _codeCoverageEnabled;
//    char _onlyGenerateCoverageForSpecifiedTargets;
//    char _askForAppToLaunch;
//    char _automaticAppToLaunch;
//    char _enableAddressSanitizer;
//    char _enableASanStackUseAfterReturn;
//    char _enableThreadSanitizer;
//    char _enableUBSanitizer;
//    char _enableMainThreadChecker;
//    unsigned int _debugProcessAsUID;
//    NSString * _selectedDebuggerIdentifier;
//    NSString * _selectedLauncherIdentifier;
//    NSString * _resolvedCustomLLDBInitFile;
//    IDESchemeBuildableReference * _buildableReferenceToUseForMacroExpansion;
//    NSString * _selectedMallocStackLoggingType;
//    NSString * _customLLDBInitFile;
//    NSDictionary * _additionalOptionEntriesDict;
//    NSString * _language;
//    NSString * _region;
//    long long _systemAttachmentLifetime;
//    long long _userAttachmentLifetime;
//    NSString * _selectedMallocStackLoggingTypeTooltip;
//    NSString * _debugAsWhichUser;
//    NSMutableArray * _mutableCodeCoverageTargets;
//}
//@property (copy) NSString * debugAsWhichUser;
//@property (retain) NSMutableArray * mutableCodeCoverageTargets;
//@property (readonly,nonatomic) IDESchemeCommand<IDEPrimitiveSchemeCommand> * schemeCommand;
//@property (copy) NSString * selectedDebuggerIdentifier;
//@property (copy) NSString * selectedLauncherIdentifier;
//@property char askForAppToLaunch;
//@property char automaticAppToLaunch;
//@property (nonatomic) unsigned int debugProcessAsUID;
//@property (copy,nonatomic) NSString * customLLDBInitFile;
//@property (readonly) NSString * resolvedCustomLLDBInitFile;
//@property (copy) NSArray * commandLineArgumentEntries;
//@property (readonly) NSMutableArray * mutableCommandLineArgumentEntries;
//@property (copy) NSArray * environmentVariableEntries;
//@property (readonly) NSMutableArray * mutableEnvironmentVariableEntries;
//@property (readonly) NSDictionary * additionalOptionEntriesDict;
//@property (nonatomic) char shouldUseLaunchSchemeArgsEnv;
//@property (readonly) unsigned long long sanitizerOptions;
//@property char enableAddressSanitizer;
//@property char enableASanStackUseAfterReturn;
//@property char enableThreadSanitizer;
//@property char enableUBSanitizer;
//@property char enableMainThreadChecker;
//@property (copy,nonatomic) NSString * language;
//@property (copy,nonatomic) NSString * region;
//@property long long systemAttachmentLifetime;
//@property long long userAttachmentLifetime;
//@property (readonly) NSArray * availableMallocStackLoggingTypes;
//@property (copy) NSString * selectedMallocStackLoggingType;
//@property char mallocStackLoggingSelected;
//@property (copy) NSString * selectedMallocStackLoggingTypeTooltip;
//@property (nonatomic,getter=isCodeCoverageEnabled) char codeCoverageEnabled;
//@property (nonatomic) char onlyGenerateCoverageForSpecifiedTargets;
//@property (readonly,nonatomic) NSArray * codeCoverageTargets;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (id)keyPathsForValuesAffectingDebugProcessAsUID;
//+ (id)createAdditionalDiagnosticsDict;
//+ (void)_modifyEnvironmentForSQLLite:(id)v1;
//+ (id)expandEnvironmentVariableEntries:(id)v1 withBuildParameters:(id)v2 usingBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)dvt_commonInit;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)setRunContext:(id)v1;
//- (void)updateBuildableForChangeInRunnable;
//- (id)_verifyReference:(id)v1 inBuildableReferences:(id)v2;
//- (void)_initializeBuildableReferenceToUseForMacroExpansion;
//- (void)_updateBuildableToUseForMacroExpansion;
//- (id)subtitle;
//- (id)buildableReferenceToUseForMacroExpansion;
//- (void)setBuildableReferenceToUseForMacroExpansion:(id)v1;
//- (id)expandMacrosInString:(id)v1 forBuildParameters:(id)v2;
//- (id)additionalOptions;
//- (id)additionalOptionArchivingEntries;
//- (void)modifyEnvironmentForMallocStackLogging:(id)v1;
//- (id)environmentVariablesForBuildParameters:(id)v1;
//- (id)environmentVariablesForBuildParameters:(id)v1 environmentVariableEntries:(id)v2;
//- (char)_detectSwiftnessForTheRunnableWithSelector:(SEL)v1 expectedValue:(char)v2;
//- (char)UBSanitizerAllowedForRunnable;
//- (char)containSwiftForTheRunnable;
//- (void)_setSelectedMallocStackLoggingType:(id)v1;
//- (void)_updateSelectedMallocStackTooltip:(id)v1;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addCommandLineArguments:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addEnvironmentVariables:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addAdditionalOptions:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addCodeCoverageTargets:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableAddressSanitizerFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableASanStackUseAfterReturnFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableThreadSanitizerFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableUBSanitizerFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setDisableMainThreadCheckerFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setLanguageFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setRegionFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setSystemAttachmentLifetimeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setUserAttachmentLifetimeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setCodeCoverageEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setOnlyGenerateCoverageForSpecifiedTargetsFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)addMacroExpansion:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addCodeCoverageTarget:(id)v1;
//- (void)removeCodeCoverageTarget:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionIssue : NSObject {
//    long long _severity;
//    NSError * _error;
//}
//@property (readonly) long long severity;
//@property (readonly) NSError * error;
//@property (readonly) NSString * humanReadableDescription;
//+ (id)issuesFromITunesResponse:(id)v1;
//+ (id)issuesFromErrors:(id)v1 withSeverity:(long long)v2;
//- (id)initWithSeverity:(long long)v1 error:(id)v2;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCoalescedThinningVariantAbstractClass : NSObject<NSCopying>
//@property (readonly) NSString * fileNameSuffix;
//+ (id)allocWithZone:(struct _NSZone *)v1;
//+ (id)deviceDisplayNameToDistributionCoalescedThinningVariantSet:(id)v1;
//+ (id)distributionCoalescedThinningVariants:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCoalescedThinningVariantUniversal : IDEDistributionCoalescedThinningVariantAbstractClass
//+ (id)singleton;
//- (id)fileNameSuffix;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCoalescedThinningVariant : IDEDistributionCoalescedThinningVariantAbstractClass {
//    NSString * _fileNameSuffix;
//    IPAToolCoalescedThinningVariant * _coalescedThinningVariant;
//}
//@property (readonly) IPAToolCoalescedThinningVariant * coalescedThinningVariant;
//- (id)initWithCoalescedThinningVariant:(id)v1 fileNameSuffix:(id)v2;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (id)fileNameSuffix;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionThinning : IDEDistributionOption
//+ (id)availableOptionsForPropertyList;
//+ (id)coalescedThinningVariants:(id)v1;
//+ (id)deviceDisplayNameToCoalescedThinningVariantSetWithContext:(id)v1 error:(id *)v2;
//+ (id)thinningChoiceDeviceIdentifierForContext:(id)v1;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningTryAgainUserAction : IDEProvisioningUserAction
//+ (id)tryAgainUserActionWithContext:(id)v1;
//- (id)userActionName;
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (char)wantsRepairRetriedOnFinish;
//- (char)representsRepairFailure;
//- (id)executionMessage;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionInfoPlistStep : IDEDistributionItemProcessingStep
//- (bool)shouldSkip;
//- (id)name;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlTree : DVTModelTree {
//    IDESourceControlManager * _sourceControlManager;
//    NSString * _location;
//    NSString * _identifier;
//    NSString * _name;
//}
//@property (readonly) IDESourceControlManager * sourceControlManager;
//@property (copy) NSString * location;
//@property (readonly) NSString * identifier;
//@property (copy,nonatomic) NSString * name;
//@property (readonly) IDESourceControlTreeGroup * rootGroup;
//+ (id)treeLoadingModelObjectGraph;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//- (id)initWithLocation:(id)v1 sourceControlManager:(id)v2;
//- (void)primitiveInvalidate;
//- (id)subclass_createRootNode;
//- (void)setName:(id)v1 updateUserDefaults:(char)v2;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlWorkingTree : IDESourceControlTree {
//    IDESourceControlBranch * _currentBranch;
//    long long _fileReferenceStatusProcessingQueueLockCount;
//    NSOperationQueue * _fileReferenceStatusProcessingQueue;
//    NSMutableArray * _itemsWithStatus;
//    DVTFilePath * _filePath;
//    char _initialLocalStatusUpdateIsComplete;
//    char _initialServerStatusUpdateIsComplete;
//    unsigned long long _fileStatusRequestTimeoutSeconds;
//    NSOperationQueue * _fileStatusProcessingOperationQueue;
//    NSObject<OS_dispatch_queue> * _fileStatusScheduleQueue;
//    NSDate * _lastStatusUpdateDate;
//    NSObject<DVTSourceControlCancellable> * _filesAndStatusOperation;
//    unsigned long long _filesAndStatusOperationCount;
//    unsigned long long _fileStatusConsecutiveTimeoutCount;
//}
//@property NSObject<DVTSourceControlCancellable> * filesAndStatusOperation;
//@property unsigned long long filesAndStatusOperationCount;
//@property unsigned long long fileStatusConsecutiveTimeoutCount;
//@property (copy) DVTFilePath * filePath;
//@property (readonly) IDESourceControlBranch * currentBranch;
//@property (readonly) NSArray * itemsWithStatus;
//@property (readonly) char initialLocalStatusUpdateIsComplete;
//@property (readonly) char initialServerStatusUpdateIsComplete;
//@property (retain,nonatomic) NSDate * lastStatusUpdateDate;
//+ (id)workingTreeWithFilePath:(id)v1 sourceControlManager:(id)v2;
//- (id)_initWithLocation:(id)v1 sourceControlManager:(id)v2;
//- (id)initWithLocation:(id)v1 sourceControlManager:(id)v2;
//- (void)primitiveInvalidate;
//- (void)setLocation:(id)v1;
//- (id)ideModelObjectTypeIdentifier;
//- (id)description;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (id)subclass_createRootNode;
//- (char)containsItemAtFilePath:(id)v1;
//- (id)itemForFilePath:(id)v1;
//- (void)invalidateCurrentBranch;
//- (id)fileReferenceStatusProcessingQueue;
//- (void)_complete:(void (^ /* unknown block signature */)(void))v1;
//- (void)_completeWithError:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)_completeOnStatusProcessingQueue:(void (^ /* unknown block signature */)(void))v1;
//- (unsigned long long)_dispatchTimeForWorkingCopyOperation;
//- (char)_shouldRetryStatusCall;
//- (void)_processStatusForWorkingCopy:(id)v1 local:(id)v2 remote:(id)v3 serverStatus:(char)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (char)_statusForWorkingCopy:(id)v1 serverStatus:(char)v2 authenticationOptions:(unsigned long long)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)_decrementOperationCount;
//- (void)_startFileStatusOperationForWorkspace:(id)v1 workingCopy:(id)v2 serverStatus:(char)v3 authenticationOptions:(unsigned long long)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)_scheduleFileStatusOperationForWorkspace:(id)v1 serverStatus:(char)v2 authenticationOptions:(unsigned long long)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)updateStatus:(char)v1 workspace:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)unauthenticatedRemoteStatusUpdateForWorkspace:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)_updateStatus:(char)v1 forceAuthentication:(char)v2 workspace:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)blockUpdatingFileReferenceStatuses;
//- (void)updateFileReferenceStatusesAndWaitForFinish:(char)v1;
//- (void)addUpdateFileReferenceStatusesBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)mutableItemsWithStatus;
//- (void)addNewItemsWithStatusWithResults:(id)v1;
//- (void)mergeStatusOperationResults:(id)v1 pathsWithRemoteStatus:(id)v2 forLocalStatusOnly:(char)v3;
//- (void)addItemWithStatus:(id)v1;
//- (void)clearStatusForItem:(id)v1;
//- (void)clearLocalAndServerStatus;
//- (void)invalidateLocalStatus;
//- (void)clearServerStatus;
//- (void)invalidateServerStatus;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningCompoundProfileIdentifier : NSObject<NSCopying> {
//    NSString * _teamID;
//    NSString * _name;
//}
//@property (retain,nonatomic) NSString * teamID;
//@property (retain,nonatomic) NSString * name;
//+ (id)identifierWithName:(id)v1 teamID:(id)v2 profile:(id)v3 error:(id *)v4;
//- (id)initWithPortalProfile:(id)v1 error:(id *)v2;
//- (id)initWithProvisioningProfile:(id)v1 error:(id *)v2;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationGenerateStringsForInfoPlistOperation : DVTOperation {
//    NSDictionary * _infoPlistDictionary;
//    DVTFilePath * _outputDirectoryFilePath;
//    DVTFilePath * _outputStringsFilePath;
//}
//@property (copy) DVTFilePath * outputStringsFilePath;
//@property (readonly,copy) NSDictionary * infoPlistDictionary;
//@property (readonly,copy) DVTFilePath * outputDirectoryFilePath;
//+ (void)initialize;
//- (id)initWithInfoPlistDictionary:(id)v1 outputDirectoryFilePath:(id)v2;
//- (void)main;
//- (id)stringsFileElementForKey:(id)v1 stringValue:(id)v2;
//- (id)stringsFileElementsForKey:(id)v1 arrayValue:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDocumentIssueSummary : NSObject {
//    NSMutableArray * _vendedIssuesBySeqNum;
//    NSMutableSet * _issuesWithSecondaryLocationsMatchingDocument;
//    unsigned long long _maxSeverity;
//    NSURL * _url;
//    NSMutableDictionary * _issuesIndexedByCoalescingIdentifier;
//    NSHashTable * _observers;
//    unsigned long long _testFailureCount;
//    unsigned long long _errorCount;
//    unsigned long long _warningCount;
//    unsigned long long _runtimeCount;
//    unsigned long long _noticeCount;
//    unsigned long long _analyzerResultCount;
//    unsigned long long _fixItCount;
//}
//@property (readonly,copy) NSURL * url;
//@property (readonly,copy) NSSet * issuesWithSecondaryLocationsMatchingDocument;
//@property (copy,nonatomic) NSArray * vendedIssuesBySeqNum;
//@property (retain) NSMutableDictionary * issuesIndexedByCoalescingIdentifier;
//@property (retain) NSHashTable * observers;
//@property (readonly) unsigned long long testFailureCount;
//@property (readonly) unsigned long long errorCount;
//@property (readonly) unsigned long long warningCount;
//@property (readonly) unsigned long long runtimeCount;
//@property (readonly) unsigned long long noticeCount;
//@property (readonly) unsigned long long analyzerResultCount;
//@property (readonly) unsigned long long fixItCount;
//@property (readonly) unsigned long long maxSeverity;
//+ (id)keyPathsForValuesAffectingMaxSeverity;
//- (id)initWithURL:(id)v1;
//- (void)insertObject:(id)v1 inVendedIssuesBySeqNumAtIndex:(unsigned long long)v2;
//- (void)removeObjectFromVendedIssuesBySeqNumAtIndex:(unsigned long long)v1;
//- (void)insertVendedIssuesBySeqNum:(id)v1 atIndexes:(id)v2;
//- (void)removeVendedIssuesBySeqNumAtIndexes:(id)v1;
//- (void)addIssueWithSecondaryLocationsMatchingDocument:(id)v1;
//- (void)removeIssueWithSecondaryLocationsMatchingDocument:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueManager : NSObject<DVTInvalidation> {
//    NSMutableArray * _issueProviders;
//    NSMapTable * _providerContextToProvisionInfoMap;
//    NSMapTable * _issueToProviderContextMap;
//    NSMutableArray * _issueGroups;
//    NSMapTable * _identifierToGroupIndex;
//    NSMapTable * _issueToGroupsIndex;
//    NSMutableSet * _issuesThatWillBeRemoved;
//    NSMutableArray * _vendedIssuesWithNoDocument;
//    NSMutableSet * _issuesWithNoDocument;
//    NSMutableArray * _documentURLsWithVendedIssues;
//    NSMutableDictionary * _documentURLToIssueSummaryDict;
//    NSHashTable * _allDocumentURLObservers;
//    unsigned long long _nextIssueSequenceNumber;
//    NSMapTable * _providerToSessionObservationToken;
//    unsigned long long _nextGroupSequenceNumber;
//    NSMapTable * _identifierToGroupSequenceNumberIndex;
//    IDEIssueProviderSession * _lastSchemeActionSession;
//    NSMutableSet * _lastSchemeActionIssues;
//    id _issueFixedObserver;
//    id _liveIssuesEnabledObserver;
//    DVTTimeSlicedMainThreadWorkQueue * _buildableDependencyFinderQueue;
//    IDEBuildParameters * _cachedBuildParamsForFindingBuildDependencies;
//    NSMutableSet * _buildablesAlreadyCheckedForDependencies;
//    NSHashTable * _cachedBlueprintsForShowingIssuesForActiveScheme;
//    NSHashTable * _cachedBlueprintsForActiveScheme;
//    NSHashTable * _cachedContainersForActiveScheme;
//    int _currentIssueFilterStyle;
//    id _issueFilterStyleObserver;
//    id _schemeBuildablesObserver;
//    DVTObservingToken * _activeSchemeObserver;
//    DVTObservingToken * _runDestinationObserver;
//    DVTObservingToken * _implicitDependenciesObserver;
//    DVTObservingToken * _referencedBlueprintsOberver;
//    DVTObservingToken * _referencedContainersObserver;
//    DVTObservingToken * _workspaceFinishedLoadingObserver;
//    char _liveIssuesEnabled;
//    IDEWorkspace * _workspace;
//    IDEIssueLogRecordsGroup * _issueLogRecordsGroup;
//    unsigned long long _numberOfBuildtimeIssues;
//    unsigned long long _numberOfRuntimeIssues;
//}
//@property unsigned long long numberOfBuildtimeIssues;
//@property unsigned long long numberOfRuntimeIssues;
//@property (readonly) NSMutableSet * mutableLastSchemeActionIssues;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) NSArray * issueGroups;
//@property (readonly) NSArray * documentURLsWithIssues;
//@property (readonly) NSSet * lastSchemeActionIssues;
//@property (readonly,getter=areLiveIssuesEnabled) char liveIssuesEnabled;
//@property (readonly) IDEIssueLogRecordsGroup * issueLogRecordsGroup;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (void)_useDebugProviderExtensionPointWithIdentifier:(id)v1;
//+ (id)_issueProviderInfo;
//+ (id)issueManagerLogAspect;
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void)_updateIssueProviders;
//- (id)_documentIssueSummaryForURL:(id)v1;
//- (unsigned long long)numberOfTestFailuresInDocumentAtURL:(id)v1;
//- (unsigned long long)numberOfErrorsInDocumentAtURL:(id)v1;
//- (unsigned long long)numberOfWarningsInDocumentAtURL:(id)v1;
//- (unsigned long long)numberOfRuntimeIssuesInDocumentAtURL:(id)v1;
//- (unsigned long long)numberOfNoticesInDocumentAtURL:(id)v1;
//- (unsigned long long)numberOfAnalyzerResultsInDocumentAtURL:(id)v1;
//- (unsigned long long)numberOfFixableDiagnosticItemsInDocumentAtURL:(id)v1;
//- (unsigned long long)maxSeverityOfDocumentAtURL:(id)v1;
//- (id)_buildtimeIssuesFromIssues:(id)v1;
//- (id)buildtimeIssuesForDocumentURL:(id)v1;
//- (id)buildtimeIssuesWithNoDocument;
//- (id)issuesForDocumentURL:(id)v1;
//- (id)issuesIncludingOnesWithSecondaryLocationInDocumentURL:(id)v1;
//- (id)issuesWithNoDocument;
//- (void)_notifyObserver:(id)v1 forURL:(id)v2 isPrior:(char)v3;
//- (void)_notifyAllObserversOfDocumentURL:(id)v1 isPrior:(char)v2;
//- (id)newIssueObserverForDocumentURL:(id)v1 options:(unsigned long long)v2 withHandlerBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)_rescindObserverToken:(id)v1;
//- (id)_groupingObjectsForIssue:(id)v1;
//- (bool)_doesIssue:(id)v1 coalesceWithIssue:(id)v2;
//- (bool)_doesIssue:(id)v1 fromContainer:(id)v2 andBlueprint:(id)v3 coalesceWithIssue:(id)v4;
//- (id)_similarExistingIssueForIssue:(id)v1 container:(id)v2 blueprint:(id)v3;
//- (id)similarExistingIssueForIssue:(id)v1;
//- (void)_setNumBuildtimeIssues:(unsigned long long)v1 numRuntimeIssues:(unsigned long long)v2;
//- (void)_vendIssues:(id)v1 container:(id)v2 blueprint:(id)v3 runtimeGroupingObject:(id)v4 issueToGroupingObjectMap:(id)v5 session:(id)v6;
//- (void)_retractIssues:(id)v1;
//- (char)_vendOnlyActiveSchemeIssues;
//- (char)isIssueInRemotePackage:(id)v1;
//- (void)_addIssues:(id)v1 forProviderContext:(id)v2 container:(id)v3 blueprint:(id)v4 runtimeGroupingObject:(id)v5 session:(id)v6 tryToCoalesce:(char)v7;
//- (void)_recordIssue:(id)v1;
//- (void)_removeIssues:(id)v1 forProviderContext:(id)v2 session:(id)v3;
//- (void)_setIssues:(id)v1 forProviderContext:(id)v2 container:(id)v3 blueprint:(id)v4 runtimeGroupingObject:(id)v5 session:(id)v6;
//- (void)_hideIssues:(id)v1;
//- (void)_coalescedUpdateInResponseToFilterChanges;
//- (void)_needsUpdateInResponseToFilterChanges;
//- (void)_updateIssueFilterStyle;
//- (void)_findDependencyForBuildable:(id)v1;
//- (void)_updateContainersAndBlueprintsForActiveScheme;
//- (void)_updateVendedIssues;
//- (void)_validateGroupIdentifiers;
//- (id)_unitTestIssueProvidersAccessor;
//- (id)_providerContextToProvisionInfoMapForIssues:(id)v1;
//- (id)_issuesForProviderContext:(id)v1;
//- (void)_containersOrBlueprintsUpdated;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueManager_ByFileObserverToken : NSObject<DVTCancellable> {
//    IDEIssueManager * _issueManager;
//    NSURL * _documentURL;
//    unsigned long long _observingOptions;
//    void (^ /* unknown block signature */)(void) _observerBlock;
//}
//@property (readonly) NSURL * documentURL;
//@property (readonly) unsigned long long observingOptions;
//@property (readonly,copy) void (^ /* unknown block signature */)(void) observerBlock;
//@property (readonly,getter=isCancelled) char cancelled;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithIssueManager:(id)v1 documentURL:(id)v2 options:(unsigned long long)v3 block:(void (^ /* unknown block signature */)(void))v4;
//- (void)cancel;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEIssueProvisionInfo : NSObject {
//    NSMutableArray * _issues;
//    NSObject<IDEBlueprint> * _blueprint;
//    IDEContainer * _container;
//    NSObject<IDEIssueRuntimeGroupingObject> * _runtimeGroupingObject;
//    NSMapTable * _issueToGroupingObjectsMap;
//    IDEIssueProviderSession * _session;
//}
//@property (readonly) NSMutableArray * _mutableIssues /* backed by _issues */;
//@property (readonly) NSObject<IDEBlueprint> * blueprint;
//@property (readonly) IDEContainer * container;
//@property (readonly) NSObject<IDEIssueRuntimeGroupingObject> * runtimeGroupingObject;
//@property (readonly) NSArray * issues;
//@property (copy) NSMapTable * issueToGroupingObjectsMap;
//@property (readonly) IDEIssueProvider * issueProvider;
//@property (readonly) IDEIssueProviderSession * session;
//- (id)initWithBlueprint:(id)v1 container:(id)v2 runtimeGroupingObject:(id)v3 issues:(id)v4 session:(id)v5;
//- (void)addIssues:(id)v1;
//- (void)removeIssues:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebugSession : NSObject<DVTInvalidation> {
//    NSMapTable * _breakpointsToTokenSets;
//    NSMapTable * _locationsToTokenSets;
//    NSMapTable * _watchpointsToTokenSets;
//    NSMapTable * _breakpointsToIdentifiers;
//    NSMapTable * _locationsToIdentifiers;
//    NSMapTable * _watchpointsToIdentifiers;
//    DVTDispatchLock * _breakpointsAndWatchpointsToIdentifiersLock;
//    DVTTimeSlicedMainThreadWorkQueue * _breakpointIdentifierChangedQueue;
//    NSMutableSet * _profileDataObservers;
//    char _touchedProfileDataObserversRegistration;
//    struct __CFSet * _stackFramesForDisassembly;
//    NSMutableArray * _CPUFirstIndicators;
//    NSDictionary * _CPUDistribution;
//    DVTMutableOrderedDictionary * _CPUUsagesForThreadDictionary;
//    NSMutableArray * _prunedThreadIDsForCPUUsages;
//    NSMutableDictionary * _threadNameForThreadIDDictionary;
//    NSMutableDictionary * _qosValueForThreadIDDictionary;
//    NSMutableArray * _memoryFirstIndicators;
//    NSDictionary * _memoryDistribution;
//    NSMutableArray * _memoryMeasurements;
//    NSMutableArray * _energyMeasurements;
//    NSMutableArray * _CPUCapMeasurements;
//    NSMutableArray * _CPUCapAverageMeasurements;
//    int _logFD;
//    DVTObservingToken * _targetControlStateObservingToken;
//    DVTObservingToken * _breakpontsActivationObservingToken;
//    DVTObservingToken * _breakpointListObserverToken;
//    char _syntheticDebugSession;
//    char _profilingSupported;
//    char _shouldDetachForRequestStop;
//    char _shouldIgnoreKillSignals;
//    char _supportsMultiplePCAnnotation;
//    char _shouldPostStateChangedDistributedNotifications;
//    int _state;
//    int _coalescedState;
//    int _lastObserversForGaugesState;
//    int _memoryDebuggingState;
//    NSObject<IDEDebugTopNavigableModel> * _topNavigableModel;
//    IDELaunchSession * _launchSession;
//    IDERunOperationWorker * _debugLauncher;
//    IDEDebugProcess * _process;
//    DVTTextDocumentLocation * _instructionPointerLocation;
//    DVTTextDocumentLocation * _instructionPointerLocationForDisassembly;
//    NSObject<DBGDebugSessionBreakpointLifeCycleDelegate> * _breakpointLifeCycleDelegate;
//    IDEConsoleAdaptor * _debuggerConsoleAdaptor;
//    IDEConsoleAdaptor * _targetConsoleAdaptor;
//    unsigned long long _CPUFirstIndicatorHigh;
//    unsigned long long _CPUFirstIndicatorLow;
//    NSString * _memoryProfilingDisabledMessage;
//    unsigned long long _totalRunningTimeMicroSeconds;
//    NSDate * _loggingInitializedDate;
//    IDEDebugSessionRuntimeGroup * _runtimeIssueGroupingObject;
//    NSArray * _threadSanitizerIssues;
//    NSArray * _UBSanitizerIssues;
//    NSArray * _mainThreadCheckerIssues;
//    NSArray * _swiftRuntimeReportingIssues;
//    unsigned long long _memoryRPRVTHigh;
//    unsigned long long _memoryRPRVTLow;
//    unsigned long long _memoryAnonymousHigh;
//    unsigned long long _memoryAnonymousLow;
//    unsigned long long _memoryPhysicalFootprintHigh;
//    unsigned long long _memoryPhysicalFootprintLow;
//}
//@property (retain) IDERunOperationWorker * debugLauncher;
//@property int coalescedState;
//@property unsigned long long CPUFirstIndicatorHigh;
//@property unsigned long long CPUFirstIndicatorLow;
//@property unsigned long long memoryRPRVTHigh;
//@property unsigned long long memoryRPRVTLow;
//@property unsigned long long memoryAnonymousHigh;
//@property unsigned long long memoryAnonymousLow;
//@property unsigned long long memoryPhysicalFootprintHigh;
//@property unsigned long long memoryPhysicalFootprintLow;
//@property (retain) IDEDebugSessionRuntimeGroup * runtimeIssueGroupingObject;
//@property char shouldPostStateChangedDistributedNotifications;
//@property (retain) IDELaunchSession * launchSession;
//@property (getter=isSyntheticDebugSession) char syntheticDebugSession;
//@property (nonatomic) int state;
//@property (retain,nonatomic) NSObject<IDEDebugTopNavigableModel> * topNavigableModel;
//@property (retain,nonatomic) IDEDebugProcess * process;
//@property (copy,nonatomic) DVTTextDocumentLocation * instructionPointerLocation;
//@property (copy,nonatomic) DVTTextDocumentLocation * instructionPointerLocationForDisassembly;
//@property (getter=isProfilingSupported) char profilingSupported;
//@property (readonly) IDEBreakpointManager * breakpointManager;
//@property (retain,nonatomic) NSObject<DBGDebugSessionBreakpointLifeCycleDelegate> * breakpointLifeCycleDelegate;
//@property char shouldDetachForRequestStop;
//@property char shouldIgnoreKillSignals;
//@property int lastObserversForGaugesState;
//@property int memoryDebuggingState;
//@property (retain) IDEConsoleAdaptor * debuggerConsoleAdaptor;
//@property (retain) IDEConsoleAdaptor * targetConsoleAdaptor;
//@property (readonly) char supportsPCAnnotationDragging;
//@property (readonly) char supportsMultiplePCAnnotation;
//@property (readonly) NSArray * CPUFirstIndicators;
//@property (copy) NSDictionary * CPUDistribution;
//@property (readonly) DVTMutableOrderedDictionary * CPUUsagesForThreadDictionary;
//@property (readonly) NSArray * prunedThreadIDsForCPUUsages;
//@property (readonly) NSArray * memoryFirstIndicators;
//@property (copy) NSDictionary * memoryDistribution;
//@property (readonly) NSArray * memoryMeasurements;
//@property (readonly) NSString * memoryProfilingDisabledMessage;
//@property (readonly) NSArray * energyMeasurements;
//@property (readonly) NSArray * CPUCapMeasurements;
//@property (readonly) NSArray * CPUCapAverageMeasurements;
//@property unsigned long long totalRunningTimeMicroSeconds;
//@property (readonly) NSString * totalRunningTime;
//@property (readonly) NSDate * loggingInitializedDate;
//@property (readonly) char isLoggingEnabled;
//@property (readonly,copy) NSArray * threadSanitizerIssues;
//@property (readonly,copy) NSArray * UBSanitizerIssues;
//@property (readonly,copy) NSArray * mainThreadCheckerIssues;
//@property (readonly,copy) NSArray * swiftRuntimeReportingIssues;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingTotalRunningTime;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//- (id)initWithDebugLauncher:(id)v1;
//- (void)_handleProcessStateChanged;
//- (void)_delayedSetState;
//- (id)_descriptionStringForState:(int)v1;
//- (unsigned long long)identifierForWatchpoint:(id)v1;
//- (void)_addBreakpointObservers:(id)v1;
//- (void)_removeBreakpointObservers:(id)v1;
//- (void)_addLocationObservers:(id)v1;
//- (void)_removeBreakpointLocationObservers:(id)v1;
//- (void)_addWatchpointObservers:(id)v1;
//- (void)_removeWatchpointObservers:(id)v1;
//- (void)_handleBreakpointsListChanged:(id)v1;
//- (void)_handleBreakpointsCreated:(id)v1;
//- (void)_handleBreakpointsDeleted:(id)v1;
//- (void)_handleBreakpointLocationChanges:(id)v1;
//- (void)_handleBreakpointLocationsAdded:(id)v1;
//- (void)_handleBreakpointLocationsRemoved:(id)v1;
//- (void)_handleBreakpointActivationChanged;
//- (void)_handleBreakpointEnablementChanged:(id)v1;
//- (void)_handleBreakpointNameChanged:(id)v1;
//- (void)_handleBreakpointConditionChanged:(id)v1;
//- (void)_handleBreakpointIgnoreCountChanged:(id)v1;
//- (char)_shouldCreateBreakpoint:(id)v1;
//- (void)_createBreakpointIfNeccessary:(id)v1;
//- (void)_recreateBreakpointIfNeccessary:(id)v1;
//- (void)_handleSanitizerBreakpoint:(id)v1 typeChange:(id)v2;
//- (char)_isWatchpointValid:(id)v1;
//- (char)_isBreakpointValid:(id)v1;
//- (id)_breakpointFromContainer:(id)v1 forIdentifier:(unsigned long long)v2;
//- (id)breakpointForIdentifier:(unsigned long long)v1;
//- (unsigned long long)identifierForBreakpoint:(id)v1;
//- (void)setIdentifier:(unsigned long long)v1 forBreakpoint:(id)v2;
//- (id)breakpointLocationForIdentifier:(unsigned long long)v1 parentBreakpoint:(id)v2;
//- (unsigned long long)identifierForBreakpointLocation:(id)v1;
//- (void)setIdentifier:(unsigned long long)v1 forBreakpointLocation:(id)v2 parentBreakpoint:(id)v3;
//- (id)watchpointForIdentifier:(unsigned long long)v1;
//- (void)setIdentifier:(unsigned long long)v1 forWatchpoint:(id)v2;
//- (id)logFilename;
//- (void)_initializeLogging;
//- (void)logDebugString:(id)v1;
//- (void)logDebugStringWithTimestamp:(id)v1;
//- (void)logDebugStringWithFormat:(id)v1;
//- (void)logDebugStringWithTimestampUsingFormat:(id)v1;
//- (void)requestStepIn;
//- (void)requestStepOverLine;
//- (void)requestStepOut;
//- (void)requestStepIntoInstruction;
//- (void)requestStepOverInstruction;
//- (void)requestStepInSuspendOtherThreads;
//- (void)requestStepOverSuspendOtherThreads;
//- (void)requestPause;
//- (void)requestContinue;
//- (void)requestContinueToLocation:(id)v1;
//- (void)requestStop;
//- (void)requestDetach;
//- (void)requestFetchEvent;
//- (void)requestUISnapshotRefresh;
//- (void)simulateMetricPayloads;
//- (char)supportsUISnapshot;
//- (void)requestStepIntoCallSymbol:(id)v1 atLocation:(id)v2;
//- (void)requestMovePCInStackFrame:(id)v1 toLineNumber:(unsigned long long)v2;
//- (void)requestLoadSymbolsForStackFrameUUID:(id)v1;
//- (char)shouldRelinquishToDebugSession:(id)v1 error:(id *)v2;
//- (char)shouldAcceptFromDebugSession:(id)v1 error:(id *)v2;
//- (void)executeDebuggerCommand:(id)v1 threadID:(unsigned long long)v2 stackFrameID:(unsigned long long)v3;
//- (void)evaluateExpression:(id)v1 threadID:(unsigned long long)v2 stackFrameID:(unsigned long long)v3 queue:(id)v4 completionHandler:(void (^ /* unknown block signature */)(void))v5;
//- (void)evaluateExpression:(id)v1 threadID:(unsigned long long)v2 stackFrameID:(unsigned long long)v3 queue:(id)v4 resultBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)evaluateExpression:(id)v1 threadID:(unsigned long long)v2 stackFrameID:(unsigned long long)v3 queue:(id)v4 options:(id)v5 completionHandler:(void (^ /* unknown block signature */)(void))v6;
//- (void)evaluateExpression:(id)v1 threadID:(unsigned long long)v2 stackFrameID:(unsigned long long)v3 queue:(id)v4 options:(id)v5 resultBlock:(void (^ /* unknown block signature */)(void))v6;
//- (char)consoleShouldTrackInputHistory;
//- (char)canContinueToLocation:(id)v1 withinBlockAtRange:(struct _NSRange)v2;
//- (id)commandsExpectingExpressions;
//- (void)requestLoadDylibAtPath:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)registerProfileDataObserver:(id)v1;
//- (void)deregisterProfileDataObserver:(id)v1;
//- (void)determineProfileDataObserversState;
//- (char)addStackFrameForDisassembly:(id)v1;
//- (void)removeToBeInvalidatedStackFramesForDisassembly:(id)v1;
//- (id)verifyStackFrameForDisassembly:(id)v1;
//- (id)qualityOfServiceValueForThreadID:(id)v1;
//- (void)completeString:(id)v1 resultHandler:(void (^ /* unknown block signature */)(void))v2;
//- (void)printDescriptionOfDataValueToConsole:(id)v1 runAllThreads:(char)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3;
//- (id)supportedDataValueFormatsForDataValue:(id)v1;
//- (void)forceRefreshPausedStates;
//- (id)symbolicatedFramesFromUUIDsAndOffsets:(id)v1 markRecorded:(char)v2;
//- (void)setValue:(id)v1 forGlobalVariable:(id)v2 ofType:(id)v3 completionHandler:(void (^ /* unknown block signature */)(void))v4 queue:(id)v5;
//- (void)_setLastValue:(id)v1 inGaugeValues:(id)v2;
//- (void)setCurrentCPUFirstIndicator:(id)v1;
//- (void)setCPUUsageThreadName:(id)v1 forThreadID:(id)v2;
//- (id)CPUUsageThreadNameForThreadID:(id)v1;
//- (void)setCurrentThreadsCPUUsage:(id)v1;
//- (void)setCurrentMemoryFirstIndicator:(id)v1;
//- (void)_updateMemoryMeasureDictionary:(id)v1 firstEntry:(char)v2 key:(id)v3 highValue:(unsigned long long *)v4 highValueKey:(id)v5 lowValue:(unsigned long long *)v6 lowValueKey:(id)v7;
//- (void)setCurrentMemoryMeasurement:(id)v1;
//- (void)setCurrentEnergyMeasurement:(id)v1;
//- (void)setCurrentCPUCapMeasurement:(id)v1;
//- (void)setCurrentCPUCapAverageMeasurement:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebugSessionRuntimeGroup : NSObject<IDEIssueRuntimeGroupingObject> {
//    DVTObservingToken * _processPIDObservingToken;
//    NSString * _name;
//    id _issueTypeIdentifier;
//    NSArray * subgroupTypeIdentifiers;
//    NSMutableDictionary * _typeIdentifierToSubgroupTypeIdenfiers;
//}
//@property (copy) NSString * name;
//@property (copy) id issueTypeIdentifier;
//@property (copy) NSArray * subgroupTypeIdentifiers;
//@property (copy) NSMutableDictionary * typeIdentifierToSubgroupTypeIdenfiers;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)init;
//- (id)initWithDebugProcess:(id)v1;
//- (void)dealloc;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEEntitlementsFile : NSObject {
//    DVTFilePath * _filePath;
//    id _keyValuePairProxy;
//    DVTLogAspect * _logAspect;
//}
//@property (retain,nonatomic) DVTLogAspect * logAspect;
//@property (readonly) DVTFilePath * filePath;
//- (id)initWithFilePath:(id)v1;
//- (void)dealloc;
//- (void)readValues;
//- (id)keyValuePairProxy;
//- (id)plistRepresentation;
//- (id)allKeys;
//- (char)hasSandboxValues;
//- (void)removeAllSandboxValues;
//- (void)writeValues;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEEntitlementsKeyValuePairProxy : NSObject {
//    NSMutableDictionary * _keysAndValues;
//    IDEEntitlementsFile * _owner;
//}
//- (id)initWithDictionary:(id)v1 owner:(id)v2;
//- (id)identifierForKey:(id)v1;
//- (id)allTagKeys;
//- (id)nonSandboxIdentifiers;
//- (id)valueForKey:(id)v1;
//- (void)setValue:(id)v1 forKey:(id)v2;
//- (char)hasSandboxValues;
//- (void)removeAllSandboxValues;
//- (id)allKeys;
//- (id)plistRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageBuildableInfo : NSObject {
//    char _includeInReport;
//    char _isStatic;
//    NSString * _name;
//    NSArray * _productPaths;
//    NSString * _buildableIdentifier;
//    NSArray * _architectures;
//    NSArray * _toolchains;
//    NSSet * _sourceFiles;
//}
//@property (readonly,copy,nonatomic) NSString * name;
//@property (readonly,copy,nonatomic) NSArray * productPaths;
//@property (readonly,copy,nonatomic) NSString * buildableIdentifier;
//@property (readonly,copy,nonatomic) NSArray * architectures;
//@property (readonly,copy,nonatomic) NSArray * toolchains;
//@property (readonly,copy,nonatomic) NSSet * sourceFiles;
//@property (nonatomic) char includeInReport;
//@property (readonly,nonatomic) char isStatic;
//+ (id)infoForBuildable:(id)v1 withBuildParameterVariants:(id)v2;
//+ (id)preferredToolchainForProfileAggregationForBuildableInfos:(id)v1;
//- (id)initWithName:(id)v1 productPaths:(id)v2 buildableIdentifier:(id)v3 architectures:(id)v4 toolchains:(id)v5 isStatic:(char)v6 sourceFiles:(id)v7;
//- (id)initWithName:(id)v1 productPath:(id)v2 buildableIdentifier:(id)v3 architecture:(id)v4 toolchains:(id)v5 isStatic:(char)v6 sourceFiles:(id)v7;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageBuildableInfoEncoder_Abstract : NSObject
//+ (id)coverageBuildableInfoWithDictionaryRepresentation:(id)v1 error:(id *)v2;
//+ (id)_productPathsInDictionaryRepresentation:(id)v1 error:(id *)v2;
//+ (id)_architecturesInDictionaryRepresentation:(id)v1 error:(id *)v2;
//+ (id)dictionaryRepresentationForCoverageBuildableInfo:(id)v1;
//+ (void)_encodeProductPaths:(id)v1 intoDictionary:(id)v2;
//+ (void)_encodeArchitectures:(id)v1 intoDictionary:(id)v2;
//+ (id)_extractCommonPrefix:(id *)v1 fromStrings:(id)v2;
//+ (id)dictionaryRepresentationByInsertingPathPlaceholderForTestRootPath:(id)v1 in:(id)v2;
//+ (id)dictionaryRepresentationByRemovingPathPlaceholderForTestRootPath:(id)v1 in:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageBuildableInfoEncoder_V1 : IDECoverageBuildableInfoEncoder_Abstract
//+ (id)_productPathsInDictionaryRepresentation:(id)v1 error:(id *)v2;
//+ (id)_architecturesInDictionaryRepresentation:(id)v1 error:(id *)v2;
//+ (void)_encodeProductPaths:(id)v1 intoDictionary:(id)v2;
//+ (void)_encodeArchitectures:(id)v1 intoDictionary:(id)v2;
//+ (id)dictionaryRepresentationByInsertingPathPlaceholderForTestRootPath:(id)v1 in:(id)v2;
//+ (id)dictionaryRepresentationByRemovingPathPlaceholderForTestRootPath:(id)v1 in:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageBuildableInfoEncoder_V2 : IDECoverageBuildableInfoEncoder_Abstract
//+ (id)_productPathsInDictionaryRepresentation:(id)v1 error:(id *)v2;
//+ (id)_architecturesInDictionaryRepresentation:(id)v1 error:(id *)v2;
//+ (void)_encodeProductPaths:(id)v1 intoDictionary:(id)v2;
//+ (void)_encodeArchitectures:(id)v1 intoDictionary:(id)v2;
//+ (id)dictionaryRepresentationByInsertingPathPlaceholderForTestRootPath:(id)v1 in:(id)v2;
//+ (id)dictionaryRepresentationByRemovingPathPlaceholderForTestRootPath:(id)v1 in:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageReportGenerationOperation : DVTOperation<DVTProgressReporting> {
//    NSString * _logIdentifier;
//    NSArray * _buildableInfos;
//    DVTFilePath * _coverageReportDestinationPath;
//    DVTFilePath * _coverageArchiveDestinationPath;
//    DVTFilePath * _profileFilePath;
//    IDEActivityLogSection * _errorLog;
//    long long _progress;
//    NSOperationQueue * _workQueue;
//    NSOperationQueue * _ioQueue;
//}
//@property (retain,nonatomic) NSArray * buildableInfos;
//@property (retain) DVTFilePath * coverageReportDestinationPath;
//@property (retain) DVTFilePath * coverageArchiveDestinationPath;
//@property (retain) DVTFilePath * profileFilePath;
//@property (retain) IDEActivityLogSection * errorLog;
//@property long long progress;
//@property (retain,nonatomic) NSOperationQueue * workQueue;
//@property (retain,nonatomic) NSOperationQueue * ioQueue;
//@property (readonly,copy) NSString * logIdentifier;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)logAspect;
//+ (id)coverageErrorsLogSectionDomainType;
//- (id)populateBuildableInfos:(id)v1 usingBuilders:(id)v2;
//- (id)aggregatedToolchainsForBuildableInfos:(id)v1;
//- (id)aggregatedSourceFilesForBuildableInfos:(id)v1;
//- (id)generateCoverageFilesForBuildableInfos:(id)v1 usingAggregateBuilder:(id)v2 updatingArchive:(id)v3;
//- (id)generateTargetsForBuildableInfos:(id)v1 usingAggregateBuilder:(id)v2 updatingArchive:(id)v3;
//- (id)aggregateBuilderForBuilders:(id)v1 error:(id *)v2;
//- (id)buildersForBuildableInfos:(id)v1 errors:(id)v2;
//- (char)writeCoverageReportToDisk:(id)v1 error:(id *)v2;
//- (void)appendErrorsToLog:(id)v1;
//- (id)initWithBuildableInfos:(id)v1 coverageReportDestinationPath:(id)v2 coverageArchiveDestinationPath:(id)v3 errorLog:(id)v4 profileFilePath:(id)v5;
//- (void)main;
//- (void)cancel;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELogManager : NSObject<DVTInvalidation> {
//    id _domainItem;
//    NSString * _domainName;
//    NSArray * _logProviders;
//    NSMutableArray * _logRecords;
//    NSMapTable * _logProviderToRecordsIndex;
//    NSSet * _cachedRecentLogRecords;
//    NSMutableDictionary * _navigatorRootItems;
//    NSMutableDictionary * _auxiliaryRecordsByIdentifier;
//}
//@property (readonly) NSArray * logProviders;
//@property (readonly) NSMutableArray * mutableLogRecords;
//@property (readonly) NSMutableDictionary * auxiliaryRecordsByIdentifier;
//@property (retain) id domainItem;
//@property (copy) NSString * domainName;
//@property (readonly) NSArray * logRecords;
//@property (readonly) NSSet * mostRecentLogRecordForEachType;
//@property (readonly) NSMutableDictionary * navigatorRootItems;
//@property (readonly,copy) NSArray * importedRecords;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingImportedRecords;
//- (id)initWithDomainItem:(id)v1 domain:(id)v2;
//- (void)primitiveInvalidate;
//- (id)importResultBundleRecord:(id)v1 disablesSourceIntegration:(char)v2;
//- (id)extensionsFromExtensionPointIdentifier:(id)v1;
//- (id)_findLogProviders;
//- (id)_subRecordsFromCandidateRecords:(id)v1;
//- (void)_handleLogRecordChangesForProvider:(id)v1;
//- (id)auxiliaryRecordWithIdentifier:(id)v1;
//- (id)mostRecentLogRecordForType:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchiveSchemeAction : IDESchemeAction {
//    char _includeSnapshotInArchive;
//    char _revealArchiveInOrganizer;
//    NSString * _customArchiveName;
//    NSString * _buildConfiguration;
//    NSString * _packagerIdentifier;
//}
//@property char includeSnapshotInArchive;
//@property char revealArchiveInOrganizer;
//@property (copy) NSString * customArchiveName;
//@property (readonly) NSString * defaultArchiveName;
//@property (copy) NSString * packagerIdentifier;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (id)keyPathsForValuesAffectingDefaultArchiveName;
//- (id)init;
//- (void)_commonInit;
//- (id)name;
//- (id)subtitle;
//- (char)doesNonActionWork;
//- (id)overridingMacrosForArchiveBuildWithSchemeName:(id)v1 workspaceArena:(id)v2;
//- (id)archivingOperationGroupForExecutionEnvironment:(id)v1 buildLog:(id)v2 buildParameters:(id)v3 schemeActionRecord:(id)v4 error:(id *)v5 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v6;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setBuildConfigurationFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setCustomArchiveNameFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setPackagerIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setIncludeSnapshotInArchiveFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setRevealArchiveInOrganizerFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addArchivingStrategy:(id)v1 fromXMLUnarchiver:(id)v2;
//- (id)buildConfiguration;
//- (void)setBuildConfiguration:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEQualifiableProfileQualification : NSObject {
//    char _allowTeamProfiles;
//    char _verboseErrors;
//    NSObject<DVTQualifiableProfile> * _profile;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSString * _bundleID;
//    DVTPlatform * _platform;
//}
//@property (retain,nonatomic) NSObject<DVTQualifiableProfile> * profile;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (retain,nonatomic) NSString * bundleID;
//@property (retain,nonatomic) DVTPlatform * platform;
//@property (nonatomic) char allowTeamProfiles;
//@property (nonatomic) char verboseErrors;
//- (id)initWithProfile:(id)v1 team:(id)v2 bundleID:(id)v3 platform:(id)v4;
//- (id)manualQualifiersIncludingExpiredAndInactiveQualifiers:(char)v1;
//- (id)manualQualifiers;
//- (char)qualifyForManuallyManaged;
//- (char)qualifyForManuallyManagedActiveNotExpired;
//- (char)qualifyWithQualifiers:(id)v1;
//- (id)bundleIDQualifier;
//- (id)teamIDQualifier;
//- (id)platformQualifier;
//- (id)manuallyManagedQualifier;
//- (id)notExpiredQualifier;
//- (id)activeQualifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestProgressNotificationsObserver : NSObject<IDETestRunSessionEvents> {
//    IDETestRunSession * _testRunSession;
//    NSString * _currentSuite;
//    NSString * _currentTestClass;
//    NSString * _currentTestMethod;
//    double _postTimeForLastNotification;
//    NSTimer * _postNotificationCoalescingTimer;
//}
//@property (retain) IDETestRunSession * testRunSession;
//@property (copy) NSString * currentSuite;
//@property (copy) NSString * currentTestClass;
//@property (copy) NSString * currentTestMethod;
//@property double postTimeForLastNotification;
//@property (retain) NSTimer * postNotificationCoalescingTimer;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithTestOperationsObserver:(id)v1;
//- (void)testTargetRunnerDidStart:(id)v1;
//- (void)testTargetRunner:(id)v1 didEndWithError:(id)v2 wasCanceled:(char)v3;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didLaunchWithDiagnosticLogPath:(id)v3;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 didStartAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 willStartActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didFinishActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 willFinishAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuiteDidFinishWithRunCount:(unsigned long long)v3 skipCount:(unsigned long long)v4 failureCount:(unsigned long long)v5 unexpectedFailureCount:(unsigned long long)v6 testDuration:(double)v7 totalDuration:(double)v8 rawOutput:(id)v9;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 willFinishWithSuccess:(char)v3 withError:(id)v4;
//- (void)testRunSessionDidFinish:(id)v1 withCancellation:(char)v2;
//- (void)_considerPostingDistributedNotification;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didStartTestWithIdentifier:(id)v3 withRawOutput:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didMeasurePerformanceMetric:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testCaseWithIdentifier:(id)v3 didRecordIssue:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didSkipTestWithIdentifier:(id)v3 withTestResultMessage:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didFinishTestWithIdentifier:(id)v3 withTestResult:(id)v4 rawOutput:(id)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitGeniusCallersCalleesInfo : NSObject {
//    NSArray * _callers;
//    NSArray * _testCallers;
//    NSArray * _callees;
//}
//@property (readonly) NSArray * callers;
//@property (readonly) NSArray * testCallers;
//@property (readonly) NSArray * callees;
//- (id)initWithCallers:(id)v1 testCallers:(id)v2 callees:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitUnhandledURLSymbolInfo : NSObject {
//    NSString * _oldName;
//    NSString * _name;
//    NSObject<IDEIndexSymbol> * _symbol;
//}
//@property (readonly) NSString * oldName;
//@property (readonly) NSString * name;
//@property (readonly) NSObject<IDEIndexSymbol> * symbol;
//- (id)initWithSymbol:(id)v1 oldName:(id)v2 newName:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDESourceKitAvailableRefactoring : NSObject<IDESourceKitAvailableRefactoring> {
//    long long _kind;
//    long long _ident;
//    NSString * _name;
//}
//@property (readonly) long long kind;
//@property (readonly) long long ident;
//@property (readonly) NSString * name;
//- (id)initWithKind:(long long)v1 ident:(long long)v2 name:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDESourceKitSymbolNameResults : NSObject<IDEIndexSymbolNameResults> {
//    IDESourceKitResponseStringArray * _strArr;
//}
//@property (readonly) unsigned long long count;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithStringArray:(id)v1;
//- (const  char *)cStringAtIndex:(unsigned long long)v1;
//- (void)enumerateNamesUsingBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEIndexBuildSettingsForFileDelegateAndQueue : NSObject {
//    NSObject<IDEIndexBuildSettingsForFileDelegate> * delegate;
//    NSObject<OS_dispatch_queue> * queue;
//}
//- (id)initWithDelegate:(id)v1 queue:(id)v2;
//- (void)invokeWithInfo:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEIndexBuildSettingsForFileData : NSObject {
//    NSMutableArray * _delegates;
//    IDESourceKitNotificationOnBuildSettingsForFile * _info;
//}
//- (id)init;
//- (unsigned long long)count;
//- (void)addDelegate:(id)v1 queue:(id)v2;
//- (void)removeDelegate:(id)v1;
//- (void)invokeWithInfo:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitWorkspace : NSObject<IDEIndexStringSetFileWatcherDelegate,IDESourceKitWorkspaceDelegate,DVTInvalidation> {
//    IDESourceKitConnection * _conn;
//    long long _indexerToken;
//    IDEWorkspace * _workspace;
//    NSString * _workspaceName;
//    DVTFilePath * _indexFolderPath;
//    DVTFilePath * _indexStorePath;
//    DVTFilePath * _databaseFolder;
//    IDEIndexingPrebuildController * _prebuildController;
//    DVTDispatchLock * _stateLock;
//    NSMutableDictionary * _identifiersToIndexables;
//    NSMutableDictionary * _indexablesToProductHeaders;
//    NSMutableDictionary * _indexableIdToLinkedIndexables;
//    DVTObservingToken * _customIndexStoreObservingToken;
//    DVTObservingToken * _activeRunContextObservingToken;
//    DVTObservingToken * _activeRunDestinationObservingToken;
//    DVTNotificationToken * _indexableFileWasAddedNotificationObservingToken;
//    DVTNotificationToken * _indexableFileWillBeRemovedNotificationObservingToken;
//    DVTNotificationToken * _indexableDidRenameFileNotificationObservingToken;
//    DVTNotificationToken * _buildablesDidChangeNotificationObservingToken;
//    NSObject<DVTInvalidation> * _buildSettingsDidChangeNotificationObservingToken;
//    DVTNotificationToken * _buildOperationWillStartNotificationObservingToken;
//    DVTNotificationToken * _buildOperationDidStopNotificationObservingToken;
//    DVTNotificationToken * _prebuildNotificationToken;
//    DVTNotificationToken * _applicationIsQuittingNotificationToken;
//    IDEIndexStringSetFileWatcher * _outPathsFileWatcher;
//    DVTNotificationToken * _connectionInterruptedNotificationToken;
//    DVTNotificationToken * _connectionRestoredNotificationToken;
//    id _connectionWasInterrupted;
//    NSMutableDictionary * _settingsForFileDelegates;
//    long long _purgeCount;
//}
//@property (readonly,nonatomic) char isQuiescent;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (char)isDataStoreForBuildEnabled;
//+ (void)initialize;
//+ (id)auxiliaryIndexPreferencesForWorkspace:(id)v1;
//+ (void)syncPerformBlockOnMainThread:(void (^ /* unknown block signature */)(void))v1;
//+ (char)supportsInvalidationPrevention;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//- (char)filesContainingWordWithInfo:(id)v1 workspace:(id)v2;
//- (char)startIndex:(id *)v1;
//- (id)startIndex:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (char)closeIndex:(id *)v1;
//- (id)closeIndex:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (char)registerIndexable:(id)v1 error:(id *)v2;
//- (id)registerIndexable:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)unregisterIndexable:(id)v1 error:(id *)v2;
//- (id)unregisterIndexable:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)addUnitOutFilePaths:(id)v1 waitForProcessing:(char)v2 error:(id *)v3;
//- (id)addUnitOutFilePaths:(id)v1 waitForProcessing:(char)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)removeUnitOutFilePaths:(id)v1 waitForProcessing:(char)v2 error:(id *)v3;
//- (id)removeUnitOutFilePaths:(id)v1 waitForProcessing:(char)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)updatePreferredTargets:(id)v1 error:(id *)v2;
//- (id)updatePreferredTargets:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)prebuildCompleted:(id *)v1;
//- (id)prebuildCompleted:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (char)notifyIndexableDidAddFile:(id)v1 filePath:(id)v2 error:(id *)v3;
//- (id)notifyIndexableDidAddFile:(id)v1 filePath:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)notifyIndexableWillRemoveFile:(id)v1 filePath:(id)v2 error:(id *)v3;
//- (id)notifyIndexableWillRemoveFile:(id)v1 filePath:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)notifyIndexableDidRenameFile:(id)v1 prevFilePath:(id)v2 filePath:(id)v3 error:(id *)v4;
//- (id)notifyIndexableDidRenameFile:(id)v1 prevFilePath:(id)v2 filePath:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (char)notifyIndexableChangedLinkedIndexables:(id)v1 linkedIndexableIds:(id)v2 error:(id *)v3;
//- (id)notifyIndexableChangedLinkedIndexables:(id)v1 linkedIndexableIds:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)buildSettingsChanged:(id)v1 error:(id *)v2;
//- (id)buildSettingsChanged:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)buildOperationWillStart:(id)v1 buildOperationToken:(long long)v2 error:(id *)v3;
//- (id)buildOperationWillStart:(id)v1 buildOperationToken:(long long)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)buildOperationDidStop:(id)v1 buildOperationToken:(long long)v2 error:(id *)v3;
//- (id)buildOperationDidStop:(id)v1 buildOperationToken:(long long)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)notifyActiveRunDestinationDidChange:(id)v1 platformIdentifier:(id)v2 destinationSDKVariant:(id)v3 error:(id *)v4;
//- (id)notifyActiveRunDestinationDidChange:(id)v1 platformIdentifier:(id)v2 destinationSDKVariant:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (char)editorWillSaveFile:(id)v1 error:(id *)v2;
//- (id)editorWillSaveFile:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)editorDidSaveFile:(id)v1 error:(id *)v2;
//- (id)editorDidSaveFile:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)registerFileForBuildSettingsNotifications:(id)v1 error:(id *)v2;
//- (id)registerFileForBuildSettingsNotifications:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)unregisterFileForBuildSettingsNotifications:(id)v1 error:(id *)v2;
//- (id)unregisterFileForBuildSettingsNotifications:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)mainFilesForFile:(id)v1 crossLanguage:(id)v2 error:(id *)v3;
//- (id)mainFilesForFile:(id)v1 crossLanguage:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)setThrottleFactor:(double)v1 error:(id *)v2;
//- (id)setThrottleFactor:(double)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)isQuiescent:(id *)v1;
//- (id)isQuiescent:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (char)suspendIndexing:(id *)v1;
//- (id)suspendIndexing:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (char)resumeIndexing:(id *)v1;
//- (id)resumeIndexing:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (id)jumpToExpressionDefinition:(id)v1 docLocation:(id)v2 fileContent:(id)v3 isInComment:(char)v4 isInFuncOrMethodBody:(char)v5 looksLikeASetter:(char)v6 onlyCurrentDeclarator:(char)v7 includeCurrentLoc:(char)v8 error:(id *)v9;
//- (id)jumpToExpressionDefinition:(id)v1 docLocation:(id)v2 fileContent:(id)v3 isInComment:(char)v4 isInFuncOrMethodBody:(char)v5 looksLikeASetter:(char)v6 onlyCurrentDeclarator:(char)v7 includeCurrentLoc:(char)v8 queue:(id)v9 completion:(void (^ /* unknown block signature */)(void))v10;
//- (id)jumpToImportedFile:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)jumpToImportedFile:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)jumpToModuleImportHeaders:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)jumpToModuleImportHeaders:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)symbolsContaining:(id)v1 isAnchorStart:(char)v2 isAnchorEnd:(char)v3 isSubsequence:(char)v4 isIgnoreCase:(char)v5 error:(id *)v6;
//- (id)symbolsContaining:(id)v1 isAnchorStart:(char)v2 isAnchorEnd:(char)v3 isSubsequence:(char)v4 isIgnoreCase:(char)v5 queue:(id)v6 completion:(void (^ /* unknown block signature */)(void))v7;
//- (id)filesContaining:(id)v1 isAnchorStart:(char)v2 isAnchorEnd:(char)v3 isSubsequence:(char)v4 isIgnoreCase:(char)v5 error:(id *)v6;
//- (id)filesContaining:(id)v1 isAnchorStart:(char)v2 isAnchorEnd:(char)v3 isSubsequence:(char)v4 isIgnoreCase:(char)v5 queue:(id)v6 completion:(void (^ /* unknown block signature */)(void))v7;
//- (id)callersForSymbol:(id)v1 error:(id *)v2;
//- (id)callersForSymbol:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolQualifiedDisplayName:(id)v1 error:(id *)v2;
//- (id)symbolQualifiedDisplayName:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolDeclarations:(id)v1 error:(id *)v2;
//- (id)symbolDeclarations:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolDefinitions:(id)v1 error:(id *)v2;
//- (id)symbolDefinitions:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolOccurrences:(id)v1 error:(id *)v2;
//- (id)symbolOccurrences:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolReferences:(id)v1 error:(id *)v2;
//- (id)symbolReferences:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolSubclasses:(id)v1 error:(id *)v2;
//- (id)symbolSubclasses:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolSuperclasses:(id)v1 error:(id *)v2;
//- (id)symbolSuperclasses:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolCategories:(id)v1 error:(id *)v2;
//- (id)symbolCategories:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolInterfaces:(id)v1 error:(id *)v2;
//- (id)symbolInterfaces:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolProtocols:(id)v1 error:(id *)v2;
//- (id)symbolProtocols:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolAllProtocols:(id)v1 error:(id *)v2;
//- (id)symbolAllProtocols:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolAllSuperclasses:(id)v1 error:(id *)v2;
//- (id)symbolAllSuperclasses:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolAllSubclasses:(id)v1 error:(id *)v2;
//- (id)symbolAllSubclasses:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolImplementingClassesForProtocol:(id)v1 error:(id *)v2;
//- (id)symbolImplementingClassesForProtocol:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)implementingSymbolsForProtocol:(id)v1 error:(id *)v2;
//- (id)implementingSymbolsForProtocol:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolReferencingFiles:(id)v1 error:(id *)v2;
//- (id)symbolReferencingFiles:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolModelOccurrence:(id)v1 error:(id *)v2;
//- (id)symbolModelOccurrence:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolContainer:(id)v1 error:(id *)v2;
//- (id)symbolContainer:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolContainers:(id)v1 error:(id *)v2;
//- (id)symbolContainers:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolOverriddenSymbols:(id)v1 error:(id *)v2;
//- (id)symbolOverriddenSymbols:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolProperty:(id)v1 error:(id *)v2;
//- (id)symbolProperty:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolRelatedClass:(id)v1 error:(id *)v2;
//- (id)symbolRelatedClass:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolIBRelationClass:(id)v1 error:(id *)v2;
//- (id)symbolIBRelationClass:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolMembersMatchingKind:(id)v1 symbol:(id)v2 error:(id *)v3;
//- (id)symbolMembersMatchingKind:(id)v1 symbol:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)allSymbolsMatchingName:(id)v1 symbolKind:(id)v2 error:(id *)v3;
//- (id)allSymbolsMatchingName:(id)v1 symbolKind:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)allClassesMatchingName:(id)v1 error:(id *)v2;
//- (id)allClassesMatchingName:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)allSymbolsMatchingKind:(id)v1 workspaceOnly:(char)v2 topLevelOnly:(char)v3 error:(id *)v4;
//- (id)allSymbolsMatchingKind:(id)v1 workspaceOnly:(char)v2 topLevelOnly:(char)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)countOfSymbolsMatchingKind:(id)v1 workspaceOnly:(char)v2 error:(id *)v3;
//- (id)countOfSymbolsMatchingKind:(id)v1 workspaceOnly:(char)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)allParentsOfSymbols:(id)v1 error:(id *)v2;
//- (id)allParentsOfSymbols:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)symbolsForResolutions:(id)v1 error:(id *)v2;
//- (id)symbolsForResolutions:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)filesIncludingFile:(id)v1 error:(id *)v2;
//- (id)filesIncludingFile:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)filesIncludedByFile:(id)v1 error:(id *)v2;
//- (id)filesIncludedByFile:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)membersMatchingKinds:(id)v1 symbols:(id)v2 error:(id *)v3;
//- (id)membersMatchingKinds:(id)v1 symbols:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)allSymbolNames:(id *)v1;
//- (id)allSymbolNames:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (id)unitTestMethodsStructure:(id *)v1;
//- (id)unitTestMethodsStructure:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (id)codeComplete:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)codeComplete:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)symbolsMatchingNameAtDocument:(id)v1 docLocation:(id)v2 fileContent:(id)v3 error:(id *)v4;
//- (id)symbolsMatchingNameAtDocument:(id)v1 docLocation:(id)v2 fileContent:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)symbolOccurrencesAtDocument:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)symbolOccurrencesAtDocument:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)referencesToSymbolAtDocument:(id)v1 name:(id)v2 fileContent:(id)v3 error:(id *)v4;
//- (id)referencesToSymbolAtDocument:(id)v1 name:(id)v2 fileContent:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)codeDiagnosticsAtDocument:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)codeDiagnosticsAtDocument:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)parsedCodeCommentAtDocument:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)parsedCodeCommentAtDocument:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)typeSymbolForSymbolAtDocument:(id)v1 docLocation:(id)v2 fileContent:(id)v3 error:(id *)v4;
//- (id)typeSymbolForSymbolAtDocument:(id)v1 docLocation:(id)v2 fileContent:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)importedFilesAtDocument:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)importedFilesAtDocument:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)geniusCallersCalleesAtDocument:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)geniusCallersCalleesAtDocument:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)findRenameRangesAtLocation:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)findRenameRangesAtLocation:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (id)renameAtLocation:(id)v1 name:(id)v2 fileContent:(id)v3 error:(id *)v4;
//- (id)renameAtLocation:(id)v1 name:(id)v2 fileContent:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)localRefactoring:(id)v1 identifier:(struct _sourcekit_uid_s *)v2 fileContent:(id)v3 error:(id *)v4;
//- (id)localRefactoring:(id)v1 identifier:(struct _sourcekit_uid_s *)v2 fileContent:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)availableRefactorings:(id)v1 fileContent:(id)v2 error:(id *)v3;
//- (id)availableRefactorings:(id)v1 fileContent:(id)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)cancelRefactoringAction:(long long)v1 error:(id *)v2;
//- (id)cancelRefactoringAction:(long long)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)startRefactoringAction:(long long)v1 error:(id *)v2;
//- (id)startRefactoringAction:(long long)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)closeRefactoringAction:(long long)v1 error:(id *)v2;
//- (id)closeRefactoringAction:(long long)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)filesContainingWordUpdate:(long long)v1 isFinished:(char)v2 fileURLs:(id)v3 error:(id *)v4;
//- (id)filesContainingWordUpdate:(long long)v1 isFinished:(char)v2 fileURLs:(id)v3 queue:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)testFilesContainingWord:(id)v1 error:(id *)v2;
//- (id)testFilesContainingWord:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)initWithWorkspace:(id)v1 error:(id *)v2;
//- (id)initWithWorkspaceName:(id)v1 indexFolderPath:(id)v2 error:(id *)v3;
//- (id)initWithWorkspaceName:(id)v1 indexFolderPath:(id)v2 indexStorePath:(id)v3 indexPCHFolderPath:(id)v4 unitOutputsListPath:(id)v5 disableBackgroundIndexer:(char)v6 enableFullStoreVisibility:(char)v7 enablePCHCreation:(id)v8 workspace:(id)v9 error:(id *)v10;
//- (id)init;
//- (long long)indexerToken;
//- (id)UIDSet;
//- (id)internalConnection;
//- (char)connectionWasInterrupted;
//- (void)_setupObservers;
//- (void)_respondToFileChangeNotification:(id)v1;
//- (void)_buildSettingsDidChangeForBlueprints:(id)v1;
//- (void)_linkedProductsChangedForIndexable:(id)v1;
//- (void)_checkForLinkedIndexableChangesForIndexable:(id)v1;
//- (void)_buildOperationWillStart:(id)v1;
//- (void)_buildOperationDidStop:(id)v1;
//- (void)_activeRunContextDidChange:(id)v1;
//- (void)_activeRunDestinationDidChange:(id)v1;
//- (void)_connectionDidCrash;
//- (void)_connectionDidRestore;
//- (char)isCurrentForWorkspace:(id)v1;
//- (void)_applicationIsQuitting;
//- (void)fileAddedStrings:(id)v1 removedStrings:(id)v2 watcher:(id)v3;
//- (void)registerObject:(id)v1;
//- (void)unregisterObject:(id)v1;
//- (void)registerBuildSettingsNotificationsForFileDelegate:(id)v1 forFile:(id)v2 inQueue:(id)v3;
//- (void)unregisterBuildSettingsNotificationsForFileDelegate:(id)v1 forFile:(id)v2;
//- (id)indexableForIdentifier:(id)v1;
//- (id)registeredIndexables;
//- (id)linkedIndexablesForIndexableId:(id)v1;
//- (void)setThrottleFactor:(double)v1;
//- (void)suspendIndexing;
//- (void)resumeIndexing;
//- (id)jumpToDefinitionForName:(id)v1 inContext:(id)v2 withCurrentFileContentDictionary:(id)v3 isInComment:(char)v4 isInFunctionOrMethodBody:(char)v5 looksLikeASetter:(char)v6 onlyCurrentDeclarator:(char)v7 includeCurrentLoc:(char)v8;
//- (id)callersForSymbol:(id)v1;
//- (id)importedFileAtDocumentLocation:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (id)impliedHeadersForModuleImportLocation:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (id)filesContaining:(id)v1 anchorStart:(char)v2 anchorEnd:(char)v3 subsequence:(char)v4 ignoreCase:(char)v5 cancelWhen:(void (^ /* unknown block signature */)(void))v6;
//- (id)symbolsContaining:(id)v1 anchorStart:(char)v2 anchorEnd:(char)v3 subsequence:(char)v4 ignoreCase:(char)v5;
//- (id)symbolsContaining:(id)v1 anchorStart:(char)v2 anchorEnd:(char)v3 subsequence:(char)v4 ignoreCase:(char)v5 cancelWhen:(void (^ /* unknown block signature */)(void))v6;
//- (id)collectTestMethodsPerTestTargets;
//- (id)codeCompletionsAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2 language:(id)v3 completionContext:(id *)v4;
//- (id)codeCompletionsAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2 completionContext:(id *)v3;
//- (id)symbolsMatchingName:(id)v1 inContext:(id)v2;
//- (id)symbolsMatchingName:(id)v1 inContext:(id)v2 withCurrentFileContentDictionary:(id)v3;
//- (id)symbolsOccurrencesInContext:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (void)symbolsOccurrencesInContext:(id)v1 withCurrentFileContentDictionary:(id)v2 queue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)referencesToSymbolMatchingName:(id)v1 inContext:(id)v2 withCurrentFileContentDictionary:(id)v3;
//- (id)codeDiagnosticsAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (id)parsedCodeCommentAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2 symbolKindOut:(id *)v3;
//- (id)geniusCallersCalleesAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (id)geniusReferencingTestClassesForSymbol:(id)v1;
//- (id)importedFilesAtDocument:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (id)filesIncludingFile:(id)v1;
//- (id)filesIncludedByFile:(id)v1;
//- (void)allSymbolNamesQueue:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)allSymbolsMatchingName:(id)v1;
//- (void)allSymbolsMatchingName:(id)v1 queue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)allSymbolsMatchingName:(id)v1 kind:(id)v2;
//- (void)allSymbolsMatchingName:(id)v1 kind:(id)v2 queue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)allClassesMatchingName:(id)v1;
//- (id)membersMatchingKinds:(id)v1 forInterfaces:(id)v2;
//- (id)typeSymbolForSymbol:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (id)topLevelClassesWorkspaceOnly:(char)v1;
//- (id)topLevelClassesWorkspaceOnly:(char)v1 cancelWhen:(void (^ /* unknown block signature */)(void))v2;
//- (id)topLevelProtocolsWorkspaceOnly:(char)v1;
//- (id)topLevelProtocolsWorkspaceOnly:(char)v1 cancelWhen:(void (^ /* unknown block signature */)(void))v2;
//- (id)allSymbolsMatchingKind:(id)v1;
//- (void)allSymbolsMatchingKind:(id)v1 queue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)allSymbolsMatchingKind:(id)v1 workspaceOnly:(char)v2;
//- (id)allSymbolsMatchingKind:(id)v1 workspaceOnly:(char)v2 cancelWhen:(void (^ /* unknown block signature */)(void))v3;
//- (unsigned long long)countOfSymbolsMatchingKind:(id)v1 workspaceOnly:(char)v2;
//- (id)allParentsOfSymbols:(id)v1 cancelWhen:(void (^ /* unknown block signature */)(void))v2;
//- (id)symbolsForResolutions:(id)v1;
//- (id)symbolQualifiedDisplayName:(id)v1;
//- (id)symbolDeclarations:(id)v1;
//- (id)symbolDefinitions:(id)v1;
//- (id)symbolOccurrences:(id)v1;
//- (id)symbolReferences:(id)v1;
//- (id)symbolSubclassesForClass:(id)v1;
//- (id)symbolSuperclassesForClass:(id)v1;
//- (id)symbolCategoriesForClass:(id)v1;
//- (id)symbolInterfacesForClass:(id)v1;
//- (id)symbolProtocolsForClass:(id)v1;
//- (id)symbolAllProtocolsForClass:(id)v1;
//- (id)symbolAllSuperclassesForClass:(id)v1;
//- (id)symbolAllSubclassesForClass:(id)v1;
//- (id)symbolImplementingClassesForProtocol:(id)v1;
//- (id)implementingSymbolsForProtocol:(id)v1;
//- (id)symbolReferencingFiles:(id)v1;
//- (id)symbolModelOccurrence:(id)v1;
//- (id)symbolContainer:(id)v1;
//- (id)symbolContainers:(id)v1;
//- (id)overriddenSymbolsForCallable:(id)v1;
//- (id)propertyForCallable:(id)v1;
//- (id)symbolRelatedClass:(id)v1;
//- (id)symbolIBRelationClass:(id)v1;
//- (id)symbolMembersMatchingKind:(id)v1 forSymbol:(id)v2;
//- (id)makeIndexable:(id)v1 withLinkedIndexables:(id)v2;
//- (id)_computeLinkedTargetIndexablesForIndexable:(id)v1;
//- (void)onInitiatePrebuild;
//- (void)onDidChange;
//- (void)onDidChangeState;
//- (void)onWillIndexWorkspace:(id)v1;
//- (void)onIsIndexingWorkspace:(id)v1;
//- (void)onDidIndexWorkspace;
//- (void)onDidSuspendIndexingWorkspace;
//- (void)onDidResumeIndexingWorkspace;
//- (void)onIndexWillPopulateDatabase;
//- (void)onIndexIsPopulatingDatabase:(id)v1;
//- (void)onIndexDidPopulateDatabase;
//- (void)onIndexWillFastScan;
//- (void)onIndexIsFastScanning:(id)v1;
//- (void)onIndexDidFastScan;
//- (void)onUnitTestsDidChange;
//- (void)onBuildSettingsForFile:(id)v1;
//- (void)onWriteHeaderMapWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)onGatherProductHeadersWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)onSettingsForIndexableWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)_computePreferredTargets;
//- (void)filesContainingWordWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)headerMapFilePath;
//- (id)workspaceHeadersForIndexable:(id)v1;
//- (id)indexHeadersForIndexable:(id)v1;
//- (void)writeWorkspaceHeaderMap:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)gatherProductHeadersForIndexable:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (char)_shouldTriggerPrebuildOnSaveForFile:(id)v1;
//- (void)editorWillSaveFile:(id)v1;
//- (void)editorDidSaveFile:(id)v1;
//- (void)postNotificationName:(id)v1 userInfo:(id)v2;
//- (void)postNotificationName:(id)v1;
//- (void)primitiveInvalidate;
//- (char)isKindOfClass:(Class)v1;
//- (long long)purgeCount;
//- (void)purgeFileCaches;
//- (id)_adjustMainFilesForFileDict:(id)v1;
//- (id)mainFilesForFile:(id)v1 crossLanguage:(char)v2;
//- (id)mainFilesForFile:(id)v1;
//- (void)mainFilesForFile:(id)v1 crossLanguage:(char)v2 queue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)mainFilesForFile:(id)v1 queue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)sdkForFile:(id)v1 queue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)sdkForFile:(id)v1;
//- (id)symbolsUsedInContext:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (id)stringForRefactoringIdentifier:(long long)v1;
//- (long long)refactoringIdentifierForString:(id)v1;
//- (id)findRenameRangesAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2 delegate:(id)v3;
//- (id)renameAtLocation:(id)v1 toName:(id)v2 withCurrentFileContentDictionary:(id)v3 delegate:(id)v4;
//- (id)localRefactoringAtLocation:(id)v1 identifier:(long long)v2 withCurrentFileContentDictionary:(id)v3 delegate:(id)v4;
//- (long long)refactoringKindForUID:(struct _sourcekit_uid_s *)v1;
//- (id)availableRefactoringsAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2;
//- (void)availableRefactoringsAtLocation:(id)v1 withCurrentFileContentDictionary:(id)v2 queue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRefactoringAction : NSObject<IDESourceKitRefactoringActionDelegate> {
//    NSObject<IDESourceKitRefactoringDelegate> * _delegate;
//    long long _token;
//    long long _indexerToken;
//    IDESourceKitWorkspace * _workspace;
//    long long _state;
//    NSString * _failureReason;
//}
//@property long long state;
//@property (readonly) NSString * failureReason;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)getRemappedFiles:(id)v1 callback:(void (^ /* unknown block signature */)(void))v2 error:(id *)v3;
//- (id)initWithToken:(long long)v1 indexerToken:(long long)v2 delegate:(id)v3 workspace:(id)v4;
//- (void)dealloc;
//- (char)cancel:(id *)v1;
//- (long long)indexerToken;
//- (long long)refactoringActionToken;
//- (long long)refactoringStateForUID:(struct _sourcekit_uid_s *)v1;
//- (void)refactoringStateChanged:(id)v1;
//- (void)refactoringRenameRangesFound:(id)v1;
//- (void)refactoringProgressUpdated:(id)v1;
//- (void)refactoringUnhandledURLs:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitTest : NSObject {
//    DVTTextDocumentLocation * _location;
//    NSString * _parentClassName;
//}
//@property (readonly) DVTTextDocumentLocation * location;
//@property (readonly,copy) NSString * parentClassName;
//- (id)initWithLocation:(id)v1 parentClassName:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCopyItemStep : IDEDistributionItemProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchiveDeveloperIDStatusChecker : NSObject<DVTInvalidation> {
//    DVTFuture * _status;
//    IDEArchiveDistributionRecord * _record;
//    IDEITunesConnect * _iTunesConnect;
//}
//@property (readonly,nonatomic) IDEArchiveDistributionRecord * record;
//@property (retain,nonatomic) DVTFuture * status;
//@property (retain,nonatomic) IDEITunesConnect * iTunesConnect;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)statusCheckerForDistributionRecord:(id)v1;
//- (id)logAspect;
//- (void)primitiveInvalidate;
//- (id)initWithRecord:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOnDemandInstallCapableItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _entitlementsFlightCheck;
//}
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (char)allowsRemoval;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPortalServicesProvider : NSObject<DVTPortalServicesProviding>
//- (id)personIDForAccount:(id)v1 error:(id *)v2;
//- (id)isRegisteredAppleDeveloper:(id)v1 session:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildableProductRunnable : IDERunnable<DVTXMLUnarchiving> {
//    NSObject<IDEBuildableProduct> * _buildableProduct;
//    IDESchemeBuildableReference * _buildableReference;
//    NSString * _filePath;
//}
//@property (retain) IDESchemeBuildableReference * buildableReference;
//@property (readonly,copy) NSString * filePath;
//@property (readonly) NSObject<IDEBuildableProduct> * buildableProduct;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)keyPathsForValuesAffectingDisplayName;
//+ (id)keyPathsForValuesAffectingHasRunnablePath;
//+ (id)keyPathsForValuesAffectingBuildableProduct;
//- (id)initWithBuildableProduct:(id)v1 scheme:(id)v2;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (id)displayName;
//- (id)bundleIdentifier;
//- (id)toolTip;
//- (char)isBlueprint;
//- (id)pathToRunnableForBuildParameters:(id)v1;
//- (char)hasRunnablePath;
//- (id)runnableUTIType:(id *)v1;
//- (int)runnableType;
//- (void)setScheme:(id)v1;
//- (void)resolveBuildableFromImport;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)addBuildableReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildableProductReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)setFilePathFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodExport : IDEDistributionMethod
//- (long long)supportedTask;
//- (id)supportedDestinations;
//- (char)isAppStoreBound;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningCommandInputs : NSObject {
//    NSString * _identityHash;
//    NSString * _identityName;
//    DVTSigningCertificateSerialNumber * _identityCertificateSerialNumber;
//    NSString * _profileName;
//    NSString * _profileUUID;
//    DVTFilePath * _profilePath;
//    IDEProvisionableEntitlements * _mergedEntitlements;
//    NSString * _designatedRequirements;
//    NSString * _appIdentifierPrefix;
//    NSString * _teamIdentifierPrefix;
//    NSArray * _errors;
//    NSArray * _warnings;
//}
//@property (readonly) NSString * identityHash;
//@property (readonly) NSString * identityName;
//@property (readonly) DVTSigningCertificateSerialNumber * identityCertificateSerialNumber;
//@property (readonly) NSString * profileName;
//@property (readonly) NSString * profileUUID;
//@property (readonly) DVTFilePath * profilePath;
//@property (readonly) IDEProvisionableEntitlements * mergedEntitlements;
//@property (readonly) NSString * designatedRequirements;
//@property (readonly) NSString * appIdentifierPrefix;
//@property (readonly) NSString * teamIdentifierPrefix;
//@property (readonly) NSArray * errors;
//@property (readonly) NSArray * warnings;
//+ (id)inputsFromEvaluation:(id)v1;
//+ (id)inputsFromEvaluation:(id)v1 teamAccountPairManager:(id)v2;
//+ (id)_identityHashFromSnapshot:(id)v1;
//+ (id)_identityNameFromSnapshot:(id)v1;
//+ (id)_identityCertificateSerialNumberFromSnapshot:(id)v1;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindOpenQuicklyImportQuery : IDEBatchFindTextQuery
//- (id)activityReportTitle;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyWorkspaceContentContextProviderQuery : NSObject<IDEBatchFindQueryDelegate> {
//    IDEWorkspace * _workspace;
//    IDEBatchFindTextQuery * _query;
//    void (^ /* unknown block signature */)(void) _completionHandler;
//    NSMutableArray * _accumulatedResults;
//    IDEOpenQuicklyWorkspaceContentContextProviderQuery * _keepAliveUntilCompleted;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithWorkspace:(id)v1 searchingFilePaths:(id)v2;
//- (void)startWithCompletionHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void)findNavigatorQuery:(id)v1 progressUpdate:(long long)v2;
//- (void)findNavigatorQueryDidComplete:(id)v1;
//- (void)findNavigatorQuery:(id)v1 didGenerateResults:(id)v2;
//- (void)findNavigatorQuery:(id)v1 didFinishGeneratingLazyChildrenOfResult:(id)v2;
//- (void)findNavigatorQuery:(id)v1 isStalledOnFilePaths:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunGeneratesOutputAlertEvent : IDEAlertEvent
//- (void)runInWorkspace:(id)v1 context:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDiagnosticsProvisioning : NSObject<DVTDiagnosticsClient>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (void)collect:(id)v1;
//- (char)_writeDictionary:(id)v1 name:(id)v2 collector:(id)v3 error:(id *)v4;
//- (char)_gatherCertificateManagerInfo:(id)v1 outError:(id *)v2;
//- (char)_gatherTeamsInfo:(id)v1 outError:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebugProcess : NSObject<IDEDebugTopNavigableModel> {
//    NSMutableArray * _memoryDatas;
//    NSMutableArray * _memoryFaultedMemoryData;
//    NSMutableArray * _delayedInvalidationQueues;
//    NSMutableSet * _threadsAutoRefreshStackFrames;
//    char _threadsAutoRefreshStackFramesDone;
//    int _PID;
//    int _controlState;
//    NSString * _associatedProcessUUID;
//    IDELaunchSession * _launchSession;
//    NSString * _name;
//    NSString * _rawName;
//    NSString * _subtitle;
//    NSArray * _threads;
//    NSArray * _queues;
//    IDEThread * _currentThread;
//    IDEStackFrame * _currentStackFrame;
//    NSNumber * _restoreFrameNumber;
//    IDEStackFrame * _instructionPointerStackFrame;
//    NSArray * _loadedCodeModules;
//    unsigned long long _addressByteSize;
//    IDEDebugSession * _parentDebugSession;
//}
//@property (retain,nonatomic) IDEDebugSession * parentDebugSession;
//@property (retain) NSMutableArray * mutableMemoryDatas;
//@property (nonatomic) char threadsAutoRefreshStackFramesDone;
//@property (nonatomic) int PID;
//@property (readonly) NSString * rawName;
//@property (nonatomic) int controlState;
//@property (copy,nonatomic) NSString * subtitle;
//@property (copy,nonatomic) NSArray * threads;
//@property (copy,nonatomic) NSArray * queues;
//@property (retain,nonatomic) IDEThread * currentThread;
//@property (retain,nonatomic) IDEStackFrame * currentStackFrame;
//@property (retain,nonatomic) NSNumber * restoreFrameNumber;
//@property (retain,nonatomic) IDEStackFrame * instructionPointerStackFrame;
//@property (readonly,nonatomic) NSArray * loadedCodeModules;
//@property (readonly,nonatomic) unsigned long long addressByteSize;
//@property (readonly,nonatomic) NSArray * memoryDatas;
//@property (copy,nonatomic) NSString * name;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingThreads;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//- (id)initWithDebugSession:(id)v1;
//- (id)init;
//- (id)contentDelegateUIExtensionIdentifier;
//- (char)isPaused;
//- (Class)classForMemoryData;
//- (id)memoryDataForAddressOfExpression:(id)v1 numberOfBytes:(unsigned long long)v2;
//- (id)memoryDataForUUID:(id)v1;
//- (void)rawMemoryDataForAddressExpression:(id)v1 numberOfBytes:(unsigned long long)v2 resultHandler:(void (^ /* unknown block signature */)(void))v3;
//- (id)readMemoryAtAddress:(unsigned long long)v1 numberOfBytes:(unsigned long long)v2 resultHandler:(void (^ /* unknown block signature */)(void))v3;
//- (id)readMemoryAtAddress:(unsigned long long)v1 numberOfBytes:(unsigned long long)v2 progressHandler:(void (^ /* unknown block signature */)(void))v3 resultHandler:(void (^ /* unknown block signature */)(void))v4;
//- (void)autoUpdateAllMemoryDatas;
//- (void)removeMemoryData:(id)v1;
//- (void)addMemoryFaultedMemoryDatum:(id)v1;
//- (void)removeMemoryFaultedMemoryDatum:(id)v1;
//- (void)memoryPointerDescriptionForAddress:(unsigned long long)v1 handleOnMainQueueWithResultHandler:(void (^ /* unknown block signature */)(void))v2;
//- (void)shadowMemoryForAddress:(unsigned long long)v1 numberOfBytes:(unsigned long long)v2 handleOnMainQueueWithResultHandler:(void (^ /* unknown block signature */)(void))v3;
//- (void)recordedThreadsForAddress:(unsigned long long)v1 handleOnMainQueueWithResultHandler:(void (^ /* unknown block signature */)(void))v2;
//- (void)registerThreadAutoRefreshesStackFrames:(id)v1;
//- (void)deregisterThreadAutoRefreshesStackFrames:(id)v1;
//- (void)symbolicatedThreadFromAddress:(unsigned long long)v1 size:(unsigned long long)v2 isLiteZone:(char)v3 isVMregion:(char)v4 handler:(void (^ /* unknown block signature */)(void))v5;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyFileReferenceResultProvider : IDEOpenQuicklyAbstractWorkspaceResultProvider
//- (void)generateGeneratorsWithCompletionGroup:(id)v1 forWorkspace:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDELogProvider : NSObject<DVTInvalidation> {
//    id _domainItem;
//}
//@property (readonly) id domainItem;
//@property (readonly) NSArray * logRecords;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithDomainItem:(id)v1;
//- (void)primitiveInvalidate;
//- (id)ideModelObjectTypeIdentifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogTopLevelSection : IDEActivityLogSection
//+ (id)newWithDomainType:(id)v1 title:(id)v2;
//+ (Class)logRecorderClass;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOverridingBuildProperties : NSObject {
//    NSMutableDictionary * _macros;
//    NSArray * _arrayRepresentation;
//    unsigned long long _hash;
//}
//@property (readonly,copy) DVTMacroDefinitionTable * synthesizedMacros;
//@property (readonly,copy) DVTMacroDefinitionTable * macrosFromCommandLine;
//@property (readonly,copy) DVTMacroDefinitionTable * macrosFromCommandLineXcconfigFile;
//@property (readonly,copy) DVTMacroDefinitionTable * macrosFromEnvironmentXcconfigFile;
//@property (readonly) NSArray * macroDefinitionTables;
//- (id)init;
//- (id)initWithMacroDefinitionTable:(id)v1;
//- (id)copyWithSynthesizedMacros:(id)v1;
//- (id)_copyUsingOverridingPropertiesClass:(Class)v1 synthesizedMacros:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)mutableCopyWithZone:(struct _NSZone *)v1;
//- (id)macroDefinitionTableForLevel:(int)v1;
//- (void)_setMacroDefinitionTable:(id)v1 forLevel:(int)v2;
//- (char)isEmpty;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (id)dvt_detailedDebugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMutableOverridingBuildProperties : IDEOverridingBuildProperties
//@property (copy) DVTMacroDefinitionTable * synthesizedMacros;
//@property (copy) DVTMacroDefinitionTable * macrosFromCommandLine;
//@property (copy) DVTMacroDefinitionTable * macrosFromCommandLineXcconfigFile;
//@property (copy) DVTMacroDefinitionTable * macrosFromEnvironmentXcconfigFile;
//- (void)setMacroDefinitionTable:(id)v1 forLevel:(int)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyQueryContext : NSObject {
//    NSDictionary * _recentDocumentFilePathOrURLScoreBonuses;
//    DVTFilePath * _developerDirectory;
//    DVTFilePath * _workspaceDirectory;
//    DVTFilePath * _primarySDKPath;
//    NSSet * _referencedSDKPaths;
//    NSSet * _interestingFrameworkNames;
//    long long _swiftUsage;
//}
//@property (readonly) DVTFilePath * developerDirectory;
//@property (readonly) DVTFilePath * workspaceDirectory;
//@property (readonly) DVTFilePath * primarySDKPath;
//@property (readonly) NSSet * referencedSDKPaths;
//@property (readonly) NSSet * interestingFrameworkNames;
//@property (readonly) long long swiftUsage;
//- (id)initWithPrimarySDKPath:(id)v1 referencedSDKPaths:(id)v2 swiftUsage:(long long)v3 workspaceDirectory:(id)v4 developerDirectory:(id)v5 recentDocumentFilePathOrURLScoreBonuses:(id)v6 interestingFrameworkNames:(id)v7;
//- (double)recentlyOpenedBonusForFilePathOrURL:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEObjCModernizationTarget : IDEMigrationTarget {
//    char _enabled;
//    NSString * _subTitle;
//}
//@property (readonly,copy) NSString * subTitle;
//@property char enabled;
//- (id)initWithBlueprint:(id)v1 migrationContext:(id)v2;
//- (id)warningMessage;
//- (void)updateBuildSettings;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestingFileHandleOutputStream : NSObject<IDETestingOutputStream> {
//    NSFileHandle * _fileHandle;
//}
//@property (readonly,nonatomic) NSFileHandle * fileHandle;
//- (id)initWithFileHandle:(id)v1;
//- (void)writeString:(id)v1;
//- (void)finish;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
@interface IDELaunchSession : NSObject<_TtP13IDEFoundation37IDETestingLaunchSession_LaunchSession_> {
    NSMutableArray * _debugSessions;
    NSMutableArray * _debuggingAdditions;
    NSMutableSet * _shellXPCLaunchSessions;
    NSMutableSet * _xpcLaunchSessions;
    //DVTPerformanceMetric * _xpcDebuggingMetric;
    NSArray * _frameworkNamesIncludingExtensionsLinkedByExecutableForAllSlices;
    NSMutableSet * _gaugeLocations;
    char _allConsoleAdaptorsTerminated;
    char _hasAlreadyOutputExitString;
    //DVTFuture * _appExtensionInstallFuture;
    DVTObservingToken * _appExtensionObserverToken;
    NSMutableSet * _debugserverFileHandles;
    unsigned long long _launchTimeInContinuousTime;
    char _debuggerShouldAttachToTarget;
    char _wasDetached;
    char _shouldHidePID;
    char _representsAnXPCService;
    char _hasExitCode;
    char _hasCrashed;
    int _state;
    int _runnablePID;
    int _parentPID;
    int _simulatorPID;
    int _targetOutputState;
    //IDEExecutionEnvironment * _executionEnvironment;
    //DVTFileDataType * _runnableType;
    //IDESchemeActionRecord * _schemeActionRecord;
    IDEExecutionTracker * _executionTracker;
    //IDEDebugSession * _currentDebugSession;
    //NSObject<IDETraceInferiorSession> * _currentTraceInferiorSession;
    //IDELaunchParametersSnapshot * _launchParameters;
    //IDESchemeCommand * _schemeCommand;
    IDERunDestination * _runDestination;
    NSString * _runnableDisplayName;
    //IDELocationSimulator * _locationSimulator;
    NSError * _alertError;
    NSString * _explicitActivityViewTitle;
    NSArray * _xpcServices;
    //XCTestConfiguration * _testConfiguration;
    long long _exitCode;
    NSNumber * _terminatingSignal;
    //IDERuntimeIssuesCollector * _runtimeIssuesCollector;
    NSMutableSet * _consoleAdaptors;
    NSMapTable * _targetConsoleAdaptorToTerminationToken;
    DVTObservingToken * _codeModulesObserver;
    DVTObservingToken * _storeKitModulesObserver;
}
@property (nonatomic,readonly) char isForXCTestToolHostedTesting;
@property (readonly,copy) NSMutableSet * kvoConsoleAdaptors;
@property (retain,nonatomic) IDERunDestination * runDestination;
@property (retain,nonatomic) NSMutableSet * consoleAdaptors;
@property (retain,nonatomic) NSMapTable * targetConsoleAdaptorToTerminationToken;
@property (retain,nonatomic) DVTObservingToken * codeModulesObserver;
@property (retain,nonatomic) NSMutableArray * mutableDebuggingAdditions;
@property (retain,nonatomic) DVTObservingToken * storeKitModulesObserver;
@property (copy) NSArray * xpcServices;
//@property (readonly) IDEExecutionEnvironment * executionEnvironment;
//@property (retain) IDESchemeActionRecord * schemeActionRecord;
@property (retain) IDEExecutionTracker * executionTracker;
@property (nonatomic) int state;
@property (copy) NSArray * debugSessions;
@property (readonly,copy) NSMutableArray * mutableDebugSessions;
//@property (retain,nonatomic) IDEDebugSession * currentDebugSession;
@property (readonly,nonatomic) char debuggerShouldAttachToTarget;
@property (nonatomic) char wasDetached;
//@property (retain) NSObject<IDETraceInferiorSession> * currentTraceInferiorSession;
@property (readonly) char isCurrentlyTracing;
@property (readonly,copy) NSArray * debuggingAdditions;
@property (readonly) NSSet * gaugeLocations;
@property (readonly) NSMutableSet * mutableGaugeLocations;
@property (retain) IDELaunchParametersSnapshot * launchParameters;
//@property (readonly,nonatomic) DVTFileDataType * runnableType;
@property (nonatomic) int runnablePID;
@property char shouldHidePID;
@property int parentPID;
@property (readonly,nonatomic) IDELaunchSession * parentLaunchSession;
@property int simulatorPID;
//@property (retain) IDESchemeCommand * schemeCommand;
@property (readonly,copy) NSString * runnableDisplayName;
@property (readonly) int CPUType;
@property (readonly,nonatomic) int targetOutputState;
//@property (readonly) IDELocationSimulator * locationSimulator;
@property (copy) NSError * alertError;
@property (readonly) char supportsDebugSession;
@property (copy) NSString * explicitActivityViewTitle;
@property char representsAnXPCService;
//@property (retain) XCTestConfiguration * testConfiguration;
@property (readonly) NSArray * frameworkNamesIncludingExtensionsLinkedByExecutableForAllSlices;
@property char hasExitCode;
@property long long exitCode;
@property (retain) NSNumber * terminatingSignal;
@property char hasCrashed;
//@property (retain) IDERuntimeIssuesCollector * runtimeIssuesCollector;
+ (void)initialize;
+ (void)_setLaunchSession:(id)v1 forReference:(id)v2;
+ (id)launchSessionForReference:(id)v1;
+ (id)createLaunchSessionForDebuggingAddition:(id)v1 inWorkspace:(id)v2 launchParameters:(id)v3 runnableDisplayName:(id)v4 runDestination:(id)v5;
+ (id)createLaunchSessionForAnalyticsPoint:(id)v1 inWorkspace:(id)v2;
+ (void)terminateLaunchSession:(id)v1;
+ (void)terminateLaunchSession:(id)v1 inWorkspace:(id)v2;
+ (char)automaticallyNotifiesObserversOfTargetOutputState;
+ (id)keyPathsForValuesAffectingIsCurrentlyTracing;
+ (char)_registerLaunchSession:(id)v1 asSoleRecipientForAppExt:(id)v2 error:(id *)v3;
+ (char)_unregisterLaunchSession:(id)v1 asSoleRecipientForAppExt:(id)v2;
+ (char)_isLaunchSession:(id)v1 soleRecipientForAppExt:(id)v2;
+ (id)languageArguments;
+ (id)notificationPayloadForFilePath:(id)v1;
+ (id)watchLaunchOptionsForLaunchParameters:(id)v1;
- (id)initWithExecutionEnvironment:(id)v1 launchParameters:(id)v2 runnableDisplayName:(id)v3 runnableType:(id)v4 runDestination:(id)v5;
- (void)dealloc;
- (void)setTargetOutputState:(int)v1;
- (void)_emitLaunchSignpostIfNecessary;
- (void)addConsoleAdaptor:(id)v1;
- (void)removeConsoleAdaptor:(id)v1;
- (void)_handleConsoleItemAdded:(id)v1;
- (void)_handleConsoleAdaptorOutputTerminated:(id)v1;
- (void)_removeConsoleAdaptorObservations:(id)v1;
- (void)_didStart;
- (void)startDebugLaunchOfDaemonWithLaunchd;
- (char)_extensionHasLinkedFrameworkNameMatchCriteria:(id)v1;
- (id)_createDebuggingAdditionForExtension:(id)v1 availableBinariesNames:(id)v2 anyMatchCriteriaFailuresDueToAvailableBinaries:(char *)v3;
- (id)_frameworkNamesIncludingExtensionsFromLoadedCodeModules;
- (void)_invalidateExecutionEnvironment;
- (void)_willExpire;
- (char)isAlive;
- (id)referenceWhenAlive;
- (id)existingGaugeLocationForURL:(id)v1;
- (void)addNewGaugeLocation:(id)v1;
- (void)addNewGaugeLocation:(id)v1 withPriority:(unsigned long long)v2;
- (id)debuggingAdditionMatchingID:(id)v1;
- (id)debuggingAdditionMatchingClass:(id)v1;
- (id)_frameworkNamesIncludingExtensionsLinkedByExecutableForCpuType:(int)v1;
- (void)_cancelAllXPCRelatedWork;
- (id)_createLaunchSessionForXPCServiceName:(id)v1 withLaunchParameters:(id)v2;
- (id)_environmentVariablesWithTestingFilteredOut:(id)v1;
- (void)_startObservingXPCServicesAndAppExtensions;
- (id)_tweakEnvironmentVariablesForXPCDebugging;
- (void)_startObservingXPCServicesAndAppExtensionsStage2;
- (void)_performSiriQueryIfNeeded;
- (void)_startXPCPostLaunchActions;
- (void)_cancelXPCPostLaunchActions;
- (id)_findShellXPCLaunchSessionForServiceName:(id)v1;
- (void)_fillUpXPCServiceWithPid:(int)v1 forServiceName:(id)v2;
- (void)_createXPCLaunchSessionsShells:(id)v1 launchParameter:(id)v2;
- (void)_handleXPCServiceObservation:(id)v1;
- (id)performanceMetric_xpcIdentifierForLaunchSession;
- (void)performanceMetric_xpcDebuggingStarted;
- (void)performanceMetric_xpcDebuggingCompleted;
- (void)performanceMetric_xpcDebuggingCheckpointWithLabel:(id)v1;
- (id)storeKitConfigurationSync;
- (void)_checkForLoadedStoreKitFramework;
- (char)_hasExplicitStoreKitLink;
- (id)_storeKitConfigurationSyncFuture;
- (id)setupAppStoreServices;
@end
//
//
///*****************************************************************/
//
//@interface IDESyntheticLaunchSession : IDELaunchSession {
//    NSString * _debuggingAdditionIdentifier;
//}
//@property (copy) NSString * debuggingAdditionIdentifier;
//- (char)supportsDebugSession;
//- (void)_didStart;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpointArchivingProxy : NSObject {
//    NSString * _breakpointExtensionID;
//    char _wasSuccessfullyUnarchived;
//    IDEBreakpoint * _proxiedBreakpoint;
//}
//@property (readonly) IDEBreakpoint * proxiedBreakpoint;
//@property (readonly) char wasSuccessfullyUnarchived;
//+ (id)breakpointProxyForBreakpoint:(id)v1;
//+ (id)_extensionIDForBreakpoint:(id)v1;
//+ (id)_breakpointExtensions;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setBreakpointExtensionIDFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBreakpointContent:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentIndexDirectoryRegistry : NSObject
//+ (void)accessSharedTextFragmentIndexForFilePath:(id)v1 withCompletionHandler:(void (^ /* unknown block signature */)(void))v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlDocumentLocation : DVTTextDocumentLocation {
//    IDESourceControlBranch * _branch;
//    NSString * _revisionName;
//    DVTSourceControlWorkingCopy * _workingCopy;
//    NSURL * _currentDocumentURL;
//    unsigned long long _status;
//}
//@property (readonly) DVTSourceControlWorkingCopy * workingCopy;
//@property (readonly) IDESourceControlBranch * branch;
//@property (readonly) NSString * revisionName;
//@property (readonly) NSURL * currentDocumentURL;
//@property (readonly) NSURL * relativeCurrentDocumentURL;
//@property (readonly) NSString * relativeCurrentDocumentPath;
//@property (readonly) NSURL * relativeDocumentURL;
//@property (readonly) NSString * relativeDocumentPath;
//@property (readonly) unsigned long long status;
//- (id)initWithDocumentURL:(id)v1 workingCopy:(id)v2 branch:(id)v3 revisionName:(id)v4 status:(unsigned long long)v5;
//- (id)initWithDocumentURL:(id)v1 workingCopy:(id)v2 branch:(id)v3 revisionName:(id)v4;
//- (id)initWithDocumentLocation:(id)v1 workingCopy:(id)v2 branch:(id)v3 revisionName:(id)v4;
//- (id)initWithDocumentURL:(id)v1 currentDocumentURL:(id)v2 workingCopy:(id)v3 timestamp:(id)v4 lineRange:(struct _NSRange)v5;
//- (id)initWithDocumentURL:(id)v1 currentDocumentURL:(id)v2 workingCopy:(id)v3;
//- (id)initWithDocumentURL:(id)v1 currentDocumentURL:(id)v2 workingCopy:(id)v3 branch:(id)v4 revisionName:(id)v5 status:(unsigned long long)v6;
//- (id)initWithDocumentURL:(id)v1 currentDocumentURL:(id)v2 workingCopy:(id)v3 branch:(id)v4 revisionName:(id)v5;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (id)workingTreeItem;
//- (char)isEqualDisregardingTimestamp:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocation : NSObject {
//    NSNumber * _latitude;
//    NSNumber * _longitude;
//    NSDate * _time;
//    NSNumber * _speed;
//    NSNumber * _course;
//    IDELocationScenario * _scenario;
//}
//@property (readonly) NSNumber * latitude;
//@property (readonly) NSNumber * longitude;
//@property (readonly) NSDate * time;
//@property (readonly) NSNumber * speed;
//@property (readonly) NSNumber * course;
//@property (readonly) IDELocationScenario * scenario;
//- (id)initWithLatitude:(id)v1 longitude:(id)v2;
//- (id)initWithLatitude:(id)v1 longitude:(id)v2 time:(id)v3;
//- (id)initWithLatitude:(id)v1 longitude:(id)v2 time:(id)v3 speed:(id)v4 course:(id)v5;
//- (id)locationWithSpeed:(id)v1 course:(id)v2;
//- (id)description;
//- (char)hasSameCoordinateAs:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionUploadStep : IDEDistributionStep {
//    char _cancelled;
//    void (^ /* unknown block signature */)(void) _uploadWillBeginCallback;
//    void (^ /* unknown block signature */)(void) _updateUploadPercentageCallback;
//    void (^ /* unknown block signature */)(void) _updateUploadMessageCallback;
//    double _progress;
//    NSString * _message;
//}
//@property (nonatomic) double progress;
//@property (copy) NSString * message;
//@property char cancelled;
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) uploadWillBeginCallback;
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) updateUploadPercentageCallback;
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) updateUploadMessageCallback;
//@property (readonly,nonatomic) DVTFilePath * uploadFilePath;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (void)uploadWithDeviceToken:(id)v1;
//- (long long)destination;
//- (id)archiveSubmissionInfoWithIdentifier:(id)v1 issues:(id)v2;
//- (void)cancelUpload:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionICloudEnvironment : IDEDistributionOptionEntitlementProcessor
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)makeNewProcessorWithDistributionMethod:(id)v1 item:(id)v2 itemEntitlements:(id)v3 team:(id)v4;
//- (id)matchingProcessorFromProcessors:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageReportAggregator : NSObject {
//    IDESchemeActionCodeCoverage * _aggregatedCoverageReport;
//    NSDictionary * _aggregatedLines;
//}
//@property (retain,nonatomic) NSDictionary * aggregatedLines;
//@property (retain,nonatomic) IDESchemeActionCodeCoverage * aggregatedCoverageReport;
//- (id)init;
//- (void)aggregateLines:(id)v1;
//- (void)addCoverageReport:(id)v1 lines:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDocumentationCacheDeleteExtension : DVTDefaultPolicyCacheDeleteExtension
//- (id)itemsWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDECompressedStackFrame : NSObject<IDEDebugNavigableModel> {
//    unsigned long long _hash;
//    NSString * _associatedProcessUUID;
//    NSArray * _representedStackFrames;
//}
//@property (readonly,copy) NSArray * representedStackFrames;
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSNumber * frameNumber;
//@property (readonly,copy) NSString * displayName;
//@property (readonly) char hasSymbols;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithStackFrames:(id)v1;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributioniTunesConnectAccountStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)checkForITunesAccount;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchiveCommandLineVerb : IDESchemeBasedCommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogMajorGroupSection : IDEActivityLogSection
//+ (id)newWithDomainType:(id)v1 title:(id)v2;
//+ (Class)logRecorderClass;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceTrees : NSObject
//+ (Class)sourceTreeProviderClass;
//+ (id)stringByExpandingSourceTreeReferencesInString:(id)v1;
//+ (char)stringContainsSourceTreeReference:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDERuntimeProfileInfo : NSObject {
//    NSMapTable * _pathsForBundleIDsByDevice;
//    NSObject<OS_dispatch_queue> * _queue;
//}
//@property (retain) NSObject<OS_dispatch_queue> * queue;
//@property (readonly) NSMapTable * pathsForBundleIDsByDevice;
//- (id)init;
//- (void)trackPath:(id)v1 forBundleID:(id)v2 onDevice:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERuntimeProfileGenerationCoordinator : NSObject
//+ (id)relevantBuildablesForOptimizationProfileGenerationForSchemeCommand:(id)v1 buildSchemeAction:(id)v2;
//+ (id)destinationDirectoryForDownloadedRuntimeProfilesForBuildable:(id)v1 buildParameters:(id)v2;
//+ (id)mergedProfilePathForBuildable:(id)v1 buildParameters:(id)v2 doingCodeCoverage:(char)v3;
//+ (char)downloadProfiles:(id)v1 toDirectory:(id)v2 placingMergedProfileAt:(id)v3 addingMergedProfileToContainer:(id)v4 usingToolchain:(id)v5 warnings:(id)v6 error:(id *)v7;
//+ (char)setupProfileGenerationForLaunchSession:(id)v1 error:(id *)v2;
//+ (void)presentPGOResult:(id)v1 inWorkspace:(id)v2;
//+ (id)logAspect;
//+ (char)_prepareForDownloadingProfilesToDirectory:(id)v1 placingMergedProfileAt:(id)v2 error:(id *)v3;
//+ (char)_downloadProfiles:(id)v1 toDirectory:(id)v2 error:(id *)v3;
//+ (char)_mergeOptimizationProfiles:(id)v1 aggregateFile:(id)v2 toFileAtPath:(id)v3 withToolchain:(id)v4 returningError:(id *)v5;
//+ (char)isValidProfData:(id)v1 withToolchain:(id)v2 errorString:(id *)v3;
//+ (id)validProfilesFromProfiles:(id)v1 withToolchain:(id)v2 errorStrings:(id *)v3;
//+ (char)_mergeOptimizationProfilesFromDirectoryAtPath:(id)v1 toFileAtPath:(id)v2 withToolchain:(id)v3 warnings:(id)v4 returningError:(id *)v5;
//+ (void)_addOptimizationProfileFromFilePath:(id)v1 toContainer:(id)v2;
//+ (void)_updateEnvironmentVariables:(id)v1 forEmittingRawProfilesToDevicePath:(id)v2;
//+ (id)_addFileGroupForPath:(id)v1 container:(id)v2;
//+ (void)_addProfileDataPath:(id)v1 toGroup:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestAttachment : NSObject {
//    NSString * _payloadFileName;
//    char _hasPayload;
//    NSString * _uniformTypeIdentifier;
//    NSString * _name;
//    NSDate * _timestamp;
//    NSDictionary * _userInfo;
//    long long _lifetime;
//    long long _inActivityIdentifier;
//    long long _payloadSize;
//    NSUUID * _activityUUID;
//    NSString * _attachmentsDirectory;
//    _TtC13DVTFoundation14DVTFilePromise * _payloadFilePromise;
//    IDEResultReference * _payloadReference;
//}
//@property (readonly,copy) NSString * uniformTypeIdentifier;
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSDate * timestamp;
//@property (readonly,copy) NSDictionary * userInfo;
//@property (readonly) long long lifetime;
//@property (readonly) long long inActivityIdentifier;
//@property (readonly) long long payloadSize;
//@property (readonly,copy) NSUUID * activityUUID;
//@property (copy) NSString * attachmentsDirectory;
//@property (retain,nonatomic) _TtC13DVTFoundation14DVTFilePromise * payloadFilePromise;
//@property (retain,nonatomic) IDEResultReference * payloadReference;
//@property (readonly) NSDictionary * dictionaryRepresentation;
//@property (readonly) char hasPayload;
//@property (readonly,copy) NSString * payloadFileName;
//@property (readonly,copy) NSString * payloadFilePath;
//@property (readonly,copy) NSData * payload;
//- (char)savePayloadToIDEWriter:(id)v1 error:(id *)v2;
//- (id)initWithAttachment:(id)v1 inActivityIdentifier:(long long)v2 activityUUID:(id)v3 attachmentsDirectory:(id)v4;
//- (id)initWithUniformTypeIdentifier:(id)v1 name:(id)v2 timestamp:(id)v3 userInfo:(id)v4 lifetime:(long long)v5 inActivityIdentifier:(long long)v6 fileName:(id)v7 activityUUID:(id)v8 attachmentsDirectory:(id)v9 hasPayload:(char)v10 payloadSize:(long long)v11;
//- (void)_resolveLazyPayload:(id)v1;
//- (char)attachmentIsTarArchiveWithMultipleExtensions;
//- (id)humanReadableNameForTarArchiveFromFileName:(id)v1;
//- (void)_savePayload:(id)v1;
//- (id)_loadAttachmentData;
//- (void)deletePayload;
//- (id)initWithDictionaryRepresentation:(id)v1 activityUUID:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableManager : NSObject<IDEProvisioningManagerRepairObserver,DVTInvalidation,IDEProvisioningAssetSelectionDataSourceProvider> {
//    unsigned int _currentGeneration;
//    NSMutableSet * _repairStateObservers;
//    char _disableEvaluation;
//    char _configurationsFinishedLoading;
//    NSObject<IDEProvisioningTeamsDataSourceDelegate> * delegate;
//    NSObject<IDEProvisionable> * _provisionable;
//    IDEProvisionableStatusEvaluator * _statusEvaluator;
//    NSArray * _statusErrors;
//    NSArray * _configurations;
//    NSObject<DVTInvalidation> * _profilesDidChangeToken;
//    NSObject<DVTInvalidation> * _certificatesDidChangeToken;
//    NSObject<DVTInvalidation> * _provisionableDidChangeToken;
//    NSObject<DVTInvalidation> * _repairActionToken;
//    DVTObservingToken * _teamsObservation;
//    NSObject<DVTInvalidation> * _accountsToken;
//    DVTObservingToken * _provisionableDestinationsDidChangeToken;
//    NSSet * _entitlementsFilePaths;
//    DVTPerformanceMetric * _loadingMetric;
//    IDEProvisioningManager * _manager;
//    DVTDelayedInvocation * _delayedStatusEvaluation;
//}
//@property (retain,nonatomic) NSObject<IDEProvisionable> * provisionable;
//@property (readonly) NSObject<IDEMutableProvisionable> * mutableProvisionable;
//@property (retain,nonatomic) IDEProvisionableStatusEvaluator * statusEvaluator;
//@property (copy,nonatomic) NSArray * statusErrors;
//@property char disableEvaluation;
//@property (retain) NSArray * configurations;
//@property (retain) NSObject<DVTInvalidation> * profilesDidChangeToken;
//@property (retain) NSObject<DVTInvalidation> * certificatesDidChangeToken;
//@property (retain) NSObject<DVTInvalidation> * provisionableDidChangeToken;
//@property (retain) NSObject<DVTInvalidation> * repairActionToken;
//@property (retain,nonatomic) DVTObservingToken * teamsObservation;
//@property (retain) NSObject<DVTInvalidation> * accountsToken;
//@property (retain) DVTObservingToken * provisionableDestinationsDidChangeToken;
//@property (nonatomic) char configurationsFinishedLoading;
//@property (retain,nonatomic) NSSet * entitlementsFilePaths;
//@property (retain,nonatomic) DVTPerformanceMetric * loadingMetric;
//@property (retain) IDEProvisioningManager * manager;
//@property (retain) DVTDelayedInvocation * delayedStatusEvaluation;
//@property (readonly) char requiresImmediateUserActionResolution;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,getter=isFinishedLoading) char finishedLoading;
//@property (readonly) NSArray * provisioningSelectionDataSources;
//@property NSObject<IDEProvisioningTeamsDataSourceDelegate> * delegate;
//@property (readonly) NSOrderedSet * teams;
//+ (void)initialize;
//+ (id)statusEvaluatorQueue;
//+ (id)keyPathsForValuesAffectingFinishedLoading;
//+ (id)keyPathsForValuesAffectingTeams;
//+ (id)keyPathsForValuesAffectingProvisioningSelectionDataSources;
//- (id)initWithProvisionable:(id)v1 manager:(id)v2;
//- (void)_commonInit;
//- (void)_evaluateStatusWithStatusEvaluator:(id)v1;
//- (void)_setUpObservations;
//- (void)_updateEntitlementsFilePathsFromSnapshot:(id)v1;
//- (void)immediatelyEvaluateWithOverrides:(id)v1 destinationRequirement:(id)v2 shouldRepairIfNecessary:(char)v3 isXBS:(char)v4 callbackQueue:(id)v5 callback:(void (^ /* unknown block signature */)(void))v6;
//- (void)primitiveInvalidate;
//- (void)delayEvaluationUntilAfterPerformingBlock:(void (^ /* unknown block signature */)(void))v1 evaluateImmediately:(char)v2;
//- (id)iOSMacBuildParametersWithConfigurationName:(id)v1;
//- (void)refreshFromPortal;
//- (void)setBundleIdentifier:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setTeam:(id)v1 forConfigurationsNamed:(id)v2;
//- (void)setProvisioningProfile:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setSigningCertificateIdentifier:(id)v1 forConfigurationsNamed:(id)v2 sdk:(id)v3;
//- (void)setProvisioningStyle:(long long)v1 forConfigurationsNamed:(id)v2 secondarySDK:(id)v3;
//- (void)_processEvaluationResults:(id)v1;
//- (void)_performRepairsForConfigurations:(id)v1 retryExistingRepairs:(char)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERuntimeIssuesCollector : NSObject {
//    IDEDebugSession * _debugSession;
//    NSMutableArray * _issues;
//    IDERecordedThreadCollection * _collectionForBreakpoint;
//    DVTDispatchLock * _collectionForBreakpointLock;
//    DVTFuture * _tokenFuture;
//    NSString * _token;
//    char _useThirdPartyPredicate;
//    DVTObservingToken * _debugSessionToken;
//    DVTObservingToken * _coalescedStateToken;
//    char _stillReceivingIssues;
//    DVTDispatchLock * _stillReceivingIssuesLock;
//    IDELaunchSessionRuntimeGroup * _groupingObject;
//}
//@property (readonly,copy) NSMutableArray * mutableIssues;
//@property (readonly) IDELaunchSessionRuntimeGroup * groupingObject;
//@property (readonly,copy) NSArray * issues;
//+ (void)initialize;
//+ (void)registerDelegate:(id)v1 forIdentifier:(id)v2;
//+ (void)unregisterDelegate:(id)v1 forIdentifier:(id)v2;
//+ (id)_whiteListedImages;
//- (id)init;
//- (id)initWithLaunchSession:(id)v1;
//- (id)_getBacktraceFromDelegate:(id)v1 orDecoder:(id)v2;
//- (id)_backtraceThreads:(id)v1;
//- (id)_locationFromThreads:(id)v1;
//- (void)_parseMessage:(id)v1 forMessage:(id *)v2 delegate:(id *)v3;
//- (void)cancel;
//- (void)addSubcategory:(id)v1 forTopCategory:(id)v2;
//- (char)shouldDisplayRuntimeIssueWithSubsystem:(id)v1 category:(id)v2 imagePath:(id)v3 environmentVariables:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchSessionRuntimeGroup : NSObject<IDEIssueRuntimeGroupingObject> {
//    NSString * _name;
//    id _issueTypeIdentifier;
//    NSArray * subgroupTypeIdentifiers;
//    NSMutableDictionary * _typeIdentifierToSubgroupTypeIdenfiers;
//}
//@property (copy) NSString * name;
//@property (copy) id issueTypeIdentifier;
//@property (copy) NSArray * subgroupTypeIdentifiers;
//@property (copy) NSMutableDictionary * typeIdentifierToSubgroupTypeIdenfiers;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)init;
//- (id)initWithName:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildLogProvider : IDELogProvider
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (id)logRecords;
//- (id)ideModelObjectTypeIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationTaskOperation : DVTOperation {
//    DVTTask * _task;
//    NSObject<OS_dispatch_queue> * _queue;
//    DVTDisallowFinishToken * _finishToken;
//    DVTFilePath * _launchPath;
//    NSArray * _arguments;
//    NSDictionary * _environment;
//    NSNumber * _exitStatus;
//    NSNumber * _signalStatus;
//}
//@property (copy) NSNumber * exitStatus;
//@property (copy) NSNumber * signalStatus;
//@property (readonly,copy) DVTFilePath * launchPath;
//@property (readonly,copy) NSArray * arguments;
//@property (readonly,copy) NSDictionary * environment;
//- (id)initWithLaunchPath:(id)v1 arguments:(id)v2 environment:(id)v3;
//- (void)main;
//- (char)startTask:(id *)v1;
//- (void)taskDidFinish;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivePathsSnapshot : NSObject<NSCopying> {
//    DVTFilePath * _archivePath;
//    DVTFilePath * _archiveProductsPath;
//    DVTFilePath * _archiveDSYMsPath;
//}
//@property (retain) DVTFilePath * archivePath;
//@property (retain) DVTFilePath * archiveProductsPath;
//@property (retain) DVTFilePath * archiveDSYMsPath;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchiveManager : NSObject {
//    DVTDispatchLock * _archiveManagerLock;
//    NSFileManager * _fileManager;
//    NSMutableArray * _archives;
//    bool _hasScanned;
//    DVTObservingToken * _distributionArchivesLocationObservingToken;
//}
//@property (copy) NSArray * archives;
//@property (readonly) NSMutableArray * mutableArchives;
//@property (readonly) NSSet * supportedFileDataTypeIdentifiers;
//+ (id)sharedArchiveManager;
//+ (void)initialize;
//+ (id)archiveWithSubmissionIdentifier:(id)v1;
//- (id)init;
//- (void)archiveInstalledProductsDirectoryWithPath:(id)v1 auxiliaryFilesDirectoryPath:(id)v2 schemeName:(id)v3 archiveName:(id)v4 platform:(id)v5 toolchain:(id)v6 revealNewArchive:(char)v7 workspace:(id)v8 completionBlock:(void (^ /* unknown block signature */)(void))v9;
//- (void)_revealArchiveAtPath:(id)v1;
//- (char)_couldBeArchivePath:(id)v1;
//- (void)_checkPathForArchive:(id)v1 andAddToArray:(id)v2;
//- (id)_allPotentialArchivePathsWithin:(id)v1;
//- (void)_refreshArchives;
//- (void)_populateArchivesIfNeeded;
//- (void)deleteArchive:(id)v1;
//- (void)deleteArchives:(id)v1;
//- (id)_installedArchiveAtPath:(id)v1;
//- (char)installArchiveAtPath:(id)v1 revealInstalledArchive:(char)v2;
//- (char)installArchiveAtPath:(id)v1 revealInstalledArchive:(char)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningWorkspaceMonitor : NSObject<IDEProvisioningLedgerDelegate,DVTInvalidation> {
//    NSObject<OS_dispatch_queue> * _logQueue;
//    IDETypeIdentifier * _logDomainType;
//    IDETypeIdentifier * _logSectionDomainType;
//    NSMutableDictionary * _ledgerSections;
//    IDEProvisioningLogDVTLogAspectListener * _provisioningManagerListener;
//    IDEProvisioningLogDVTLogAspectListener * _provisioningMechanicListener;
//    IDEProvisioningLogDVTLogAspectListener * _codesigningAllTheThingsListener;
//    IDEProvisioningLogDVTLogAspectListener * _signingCertificateManagerListener;
//    NSMutableString * _orphanedLogEntries;
//    NSObject<IDEProvisioningWorkspaceMonitorDelegate> * _delegate;
//    IDELogStore * _logStore;
//    IDEActivityLogSection * _activeSessionLogSection;
//    IDEWorkspace * _workspace;
//}
//@property (retain) IDELogStore * logStore;
//@property (retain) IDEActivityLogSection * activeSessionLogSection;
//@property (retain) IDEWorkspace * workspace;
//@property (nonatomic) NSObject<IDEProvisioningWorkspaceMonitorDelegate> * delegate;
//@property (readonly) NSArray * logRecords;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (id)init;
//- (void)primitiveInvalidate;
//- (void)loadProvisioningLogsForWorkspace:(id)v1;
//- (void)provisioningLedger:(id)v1 didAddDetails:(id)v2 toLedgerEntry:(id)v3;
//- (void)provisioningLedger:(id)v1 didOpenLedgerEntry:(id)v2;
//- (void)provisioningLedger:(id)v1 didCloseLedgerEntry:(id)v2 withError:(id)v3;
//- (void)_invalidateObservers;
//- (void)_setupObservers;
//- (void)_setupMainLogRecorder;
//- (void)_logSectionForLedgerEntry:(id)v1 completionHandler:(void (^ /* unknown block signature */)(void))v2;
//- (void)_closeSection:(id)v1 entry:(id)v2;
//- (id)_blueprintForEntry:(id)v1;
//- (id)_repairableForEntry:(id)v1;
//- (id)_domainTypeForEntry:(id)v1;
//- (id)_subtitleForEntry:(id)v1;
//- (id)_nolock_logSectionForLedgerEntry:(id)v1;
//- (void)_nolock_removeSection:(id)v1 entry:(id)v2;
//- (void)debug_addMessageWithTitle:(id)v1 details:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEQueryBasedTextFragmentIndexPrescanner : NSObject<IDEBatchFindQueryDelegate> {
//    IDEWorkspace * _workspace;
//    IDEBatchFindPrescanTextQuery * _query;
//    void (^ /* unknown block signature */)(void) _completionObserver;
//    DVTObservingToken * _workspaceValidityToken;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)disablePrescan;
//+ (void)prescanWorkspace:(id)v1 completionHandler:(void (^ /* unknown block signature */)(void))v2;
//- (id)initWithWorkspace:(id)v1;
//- (void)startWithCompletionObserver:(void (^ /* unknown block signature */)(void))v1;
//- (void)cancel;
//- (void)findNavigatorQuery:(id)v1 progressUpdate:(long long)v2;
//- (void)findNavigatorQueryDidComplete:(id)v1;
//- (void)findNavigatorQuery:(id)v1 didGenerateResults:(id)v2;
//- (void)findNavigatorQuery:(id)v1 didFinishGeneratingLazyChildrenOfResult:(id)v2;
//- (void)findNavigatorQuery:(id)v1 isStalledOnFilePaths:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindPrescanTextQuery : IDEBatchFindAbstractFileByFileQuery
//- (char)trimsIndexAfterCompletion;
//- (char)requiresEditorDocumentsToSaveBeforeSearching;
//- (void)processFilePath:(id)v1 explicitFileDataType:(id)v2 fromIndex:(long long)v3 of:(id)v4 queryStartTime:(id)v5 statusAggregator:(id)v6 resultOrder:(long long)v7 completionHandler:(void (^ /* unknown block signature */)(void))v8;
//- (id)activityReportTitle;
//@end
//
//
///*****************************************************************/
//
@interface IDERunDeviceService : DVTDeviceService
- (id)operationWorkerWithLaunchSession:(id)v1 error:(id *)v2;
@end
//
//
///*****************************************************************/
//
//@interface IDEAppIDAbstractFlightCheck : NSObject<IDEFlightChecking> {
//    char _failed;
//    NSObject<IDEAppIDFeatureCoordination> * _coordinator;
//    NSError * _resolutionError;
//}
//@property (retain,nonatomic) NSObject<IDEAppIDFeatureCoordination> * coordinator;
//@property (nonatomic) char failed;
//@property (retain,nonatomic) NSError * resolutionError;
//@property (readonly,copy,nonatomic) NSString * title;
//@property (readonly,copy,nonatomic) NSString * resolvingTitle;
//@property (readonly,copy,nonatomic) NSString * pastTitle;
//@property (readonly,nonatomic) char requiresAccountAndTeamSelection;
//@property (readonly,nonatomic,getter=isLongRunning) char longRunning;
//@property (readonly,nonatomic) int status;
//@property (readonly,nonatomic,getter=isAutomaticallyResolvable) char automaticallyResolvable;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingStatus;
//+ (id)keyPathsForValuesAffectingRequiresAccountAndTeamSelection;
//+ (id)keyPathsForValuesAffectingAutomaticallyResolvable;
//- (void)primitiveInvalidate;
//- (id)initWithAppIDFeatureCoordinator:(id)v1;
//- (void)_setUpObservations;
//- (id)expectedFeaturesWithError:(id *)v1;
//- (void)_updateState;
//- (void)revert;
//- (void)resolveWithContext:(id)v1;
//- (void)unresolve;
//- (void)validate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppIDFeatureFlightCheck : IDEAppIDAbstractFlightCheck {
//    DVTPortalProfileFeature * _feature;
//}
//@property (readonly,nonatomic) DVTPortalProfileFeature * feature;
//- (id)initWithAppIDFeatureCoordinator:(id)v1 feature:(id)v2;
//- (id)expectedFeaturesWithError:(id *)v1;
//- (id)title;
//- (id)pastTitle;
//- (id)resolvingTitle;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppIDContainerFlightCheck : IDEAppIDAbstractFlightCheck {
//    NSObject<IDEAppIDContainerFlightCheckDelegate> * _delegate;
//    DVTPortalContainerType * _containerType;
//}
//@property (readonly,nonatomic) DVTPortalContainerType * containerType;
//@property (nonatomic) NSObject<IDEAppIDContainerFlightCheckDelegate> * delegate;
//- (id)initWithAppIDFeatureCoordinator:(id)v1 containerType:(id)v2;
//- (void)primitiveInvalidate;
//- (id)expectedFeaturesWithError:(id *)v1;
//- (id)title;
//- (id)pastTitle;
//- (id)resolvingTitle;
//- (void)unresolve;
//- (void)validate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDisassemblyStorageSupport : NSObject
//+ (char)isDisassemblyStorageURL:(id)v1;
//+ (unsigned long long)lineNumberForAddress:(id)v1 inDisassembly:(id)v2;
//+ (unsigned long long)_lineNumberForAddress:(id)v1 inLinesOfDisassembly:(id)v2;
//+ (id)addressForLineNumber:(unsigned long long)v1 inDisassembly:(id)v2;
//+ (id)hexAddressFromLineOfDisassembly:(id)v1;
//+ (unsigned long long)_integerAddressFromLineOfDisassembly:(id)v1;
//+ (unsigned long long)_integerFromHexString:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestBundleDeviceRecord : NSObject {
//    NSString * _platformIdentifier;
//    NSString * _modelCode;
//    NSString * _cpuKind;
//    NSNumber * _cpuCount;
//    NSNumber * _cpuSpeedInMHz;
//    NSNumber * _busSpeedInMHz;
//    NSNumber * _physicalCPUCoresPerPackage;
//    NSNumber * _logicalCPUCoresPerPackage;
//}
//@property (copy) NSString * platformIdentifier;
//@property (copy) NSString * modelCode;
//@property (copy) NSString * cpuKind;
//@property (copy) NSNumber * cpuCount;
//@property (copy) NSNumber * cpuSpeedInMHz;
//@property (copy) NSNumber * busSpeedInMHz;
//@property (copy) NSNumber * physicalCPUCoresPerPackage;
//@property (copy) NSNumber * logicalCPUCoresPerPackage;
//- (id)init;
//- (id)initWithPlatformIdentifier:(id)v1 modelCode:(id)v2 cpuKind:(id)v3 cpuCount:(id)v4 cpuSpeedInMHz:(id)v5 busSpeedInMHz:(id)v6 physicalCPUCoresPerPackage:(id)v7 logicalCPUCoresPerPackage:(id)v8;
//- (id)initWithDevice:(id)v1;
//- (id)initWithDeviceRecord:(id)v1;
//- (id)dictionaryRepresentation;
//- (id)initWithDictionary:(id)v1;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestBundleRunDestinationRecord : NSObject {
//    NSString * _targetArchitecture;
//    IDETestBundleDeviceRecord * _targetDevice;
//    IDETestBundleDeviceRecord * _localComputer;
//}
//@property (retain) NSString * targetArchitecture;
//@property (retain) IDETestBundleDeviceRecord * targetDevice;
//@property (retain) IDETestBundleDeviceRecord * localComputer;
//- (id)init;
//- (id)initWithTargetArchitecture:(id)v1 targetDeviceRecord:(id)v2 localComputerRecord:(id)v3;
//- (id)initWithRunDestinationRecord:(id)v1;
//- (id)initWithDictionary:(id)v1;
//- (id)dictionaryRepresentation;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFolderRootGroup : IDEGroup
//- (char)subitemsAreEditable;
//- (char)structureEditingCanAddNewSubgroup;
//- (char)createNewSubgroupAtIndex:(unsigned long long)v1;
//- (void)insertGroupSubitems:(id)v1 atIndexes:(id)v2;
//- (char)allowUserModificationOfSubitems;
//- (char)canStructureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (char)canStructureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2;
//- (char)canStructureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)structureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)canStructureEditRemoveSubitemsAtIndexes:(id)v1;
//- (char)structureEditRemoveSubitemsAtIndexes:(id)v1 error:(id *)v2;
//- (char)canStructureEditName;
//- (char)structureEditName:(id)v1 inContext:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (char)allowRemovingContainerGroup;
//- (char)_structureEditRemoveSubitemsShouldCloseDocumentsUnderPathWithoutSaving;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCompletionsArray : NSArray {
//    IDESourceKitResponse * _response;
//    IDESourceKitUIDSet * _UID;
//    struct anonymous_type_8 _completions;
//    id * _items;
//    unsigned long long _itemCount;
//    DVTSourceCodeLanguage * _language;
//}
//- (id)initWithSourceKitResponse:(id)v1 UIDSet:(id)v2 language:(id)v3;
//- (void)dealloc;
//- (unsigned long long)count;
//- (id)objectAtIndex:(unsigned long long)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCompletionItem : NSObject<IDEIndexCompletionItem> {
//    struct anonymous_type_9 _obj;
//    IDESourceKitResponse * _response;
//    IDESourceKitUIDSet * _UID;
//    char _notRecommended;
//    double _priority;
//    double _fuzzyMatchingScore;
//    DVTRangeArray * _fuzzyMatchingRanges;
//    NSString * _name;
//    NSString * _displaySignature;
//    DVTSourceCodeLanguage * _language;
//}
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * displayText;
//@property (readonly,copy) NSString * displayType;
//@property (readonly,copy) NSString * briefDisplayText;
//@property (readonly,copy) NSString * displaySignature;
//@property (readonly,copy) NSString * completionText;
//@property (readonly) DVTSourceCodeLanguage * language;
//@property (readonly,copy) NSString * parentText;
//@property (readonly) NSAttributedString * descriptionText;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) double priority;
//@property (nonatomic) double fuzzyMatchingScore;
//@property (retain) DVTRangeArray * fuzzyMatchingRanges;
//@property (readonly) char notRecommended;
//@property (readonly,copy) NSString * accessibilityLabel;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithSourceKitDictionary:(struct anonymous_type_10)v1 completionResponse:(id)v2 UIDSet:(id)v3 language:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitClassSymbol : IDESourceKitContainerSymbol<IDEIndexClassSymbol>
//@property (readonly) NSString * name;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly) NSString * resolution;
//@property (readonly) DVTSymbol * identifier;
//@property (readonly) NSString * moduleName;
//@property (readonly) char isVirtual;
//@property (readonly) char isSystem;
//@property (readonly) char hasOccurrence;
//@property (readonly) char navigationPrefersDefinition;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)classMethods;
//- (id)instanceMethods;
//- (id)classVariables;
//- (id)instanceVariables;
//- (id)properties;
//- (id)ibActionMethods;
//- (id)ibOutlets;
//- (id)ibOutletVariables;
//- (id)ibOutletProperties;
//- (id)ibOutletCollections;
//- (id)ibOutletCollectionVariables;
//- (id)ibOutletCollectionProperties;
//- (id)gkInspectableProperties;
//- (id)categories;
//- (id)superclasses;
//- (id)allSuperclasses;
//- (id)subclasses;
//- (id)allSubclasses;
//- (id)protocols;
//- (id)allProtocols;
//- (id)interfaces;
//- (char)isKindOfClass:(Class)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationImportReviewContext : NSObject {
//    IDELocalizationComparison * _comparison;
//}
//@property (readonly) IDELocalizationComparison * comparison;
//- (id)initWithComparison:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationImporter : IDELocalizationHandler<IDELocalizationWorkProgress> {
//    long long _completedFiles;
//    long long _totalFiles;
//    DVTNotificationToken * _localizationPhaseObserver;
//    DVTNotificationToken * _localizationDetectedFilesObserver;
//    DVTNotificationToken * _localizationProcessedFilesObserver;
//    DVTNotificationToken * _localizationImportFailedObserver;
//    DVTNotificationToken * _localizationNonFatalErrorObserver;
//    char _complete;
//    char _allowProjectChanges;
//    void (^ /* unknown block signature */)(void) _onErrorBlock;
//    void (^ /* unknown block signature */)(void) _onCompletedBlock;
//    void (^ /* unknown block signature */)(void) _onNeedsReviewBlock;
//    long long _progress;
//    NSString * _phase;
//    NSString * _workTitle;
//    NSURL * _sourceUrl;
//}
//@property char complete;
//@property long long progress;
//@property (copy) NSString * phase;
//@property (copy) NSString * workTitle;
//@property (copy) NSURL * sourceUrl;
//@property char allowProjectChanges;
//@property (copy) void (^ /* unknown block signature */)(void) onNeedsReviewBlock;
//@property (copy) void (^ /* unknown block signature */)(void) onErrorBlock;
//@property (copy) void (^ /* unknown block signature */)(void) onCompletedBlock;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithWorkspace:(id)v1 buildParameters:(id)v2 container:(id)v3 options:(id)v4 sourceLocale:(id)v5 sourceURL:(id)v6 allowProjectChanges:(char)v7 onNeedsReviewBlock:(void (^ /* unknown block signature */)(void))v8;
//- (void)primitiveInvalidate;
//- (id)_computedLocalizedContentsDirectoryForImportAtURL:(id)v1;
//- (void)compareAndImportLocalization;
//- (void)importLocalizationWithGroup:(id)v1;
//- (id)_fileReferenceForFilePath:(id)v1;
//- (id)_bestSuperitemForImportedFilePath:(id)v1 associatedWithBlueprints:(id)v2 bestPosition:(unsigned long long *)v3 withVariantGroupsForName:(id)v4;
//- (id)_blueprintsForImportedFileDescription:(id)v1 relativeToProjDir:(id)v2;
//- (id)_variantGroupForImportedFileDescription:(id)v1 relativeToProjDir:(id)v2;
//- (void)processImportedFileDescriptions:(id)v1;
//- (void)start;
//- (void)cancel;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAppThinningStep : IDEDistributionProcessingStep
//+ (id)sourceToDestinationPath:(id)v1 fromOldParentPath:(id)v2 toNewParentPath:(id)v3;
//+ (id)thinningDestinationPathMapWithSourceToDestinationPath:(id)v1 distributionCoalescedThinningVariant:(id)v2;
//+ (bool)runsPerThinningVariant;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateTextSubstitutionOperation : DVTOperation {
//    NSArray * _paths;
//    DVTFilePath * _primaryPath;
//}
//@property (copy) NSArray * paths;
//@property (copy) DVTFilePath * primaryPath;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateKind : NSObject {
//    Class _instantiationContextClass;
//    IDETemplateFactory * _factory;
//    NSArray * _conformedToTemplateKinds;
//    DVTExtension * _extension;
//    NSString * _assistantIdentifier;
//}
//@property (readonly) DVTExtension * extension;
//@property (readonly) IDETemplateFactory * factory;
//@property (readonly) Class templateClass;
//@property (readonly,copy) NSString * assistantIdentifier;
//@property (readonly,copy) NSArray * conformedToTemplateKinds;
//@property (readonly) NSString * createdObjectTypeName;
//@property (readonly,nonatomic) char wantsSimpleFilesWorkspace;
//@property (readonly,nonatomic) char wantsToolbarInSimpleFilesWorkspace;
//@property (readonly,nonatomic) char requiresProject;
//@property (readonly,nonatomic) char prefersStandaloneWorkspace;
//+ (void)initialize;
//+ (id)_templateKindForExtension:(id)v1;
//+ (id)templateKindForIdentifier:(id)v1;
//+ (id)allTemplateKinds;
//+ (id)fileTemplateKind;
//+ (id)playgroundTemplateKind;
//+ (id)projectTemplateKind;
//+ (id)packageTemplateKind;
//+ (id)targetTemplateKind;
//- (id)initWithExtension:(id)v1;
//- (id)description;
//- (char)conformsToTemplateKind:(id)v1;
//- (id)_possiblyInheritedValueForExtensionKey:(id)v1;
//- (Class)instantiationContextClass;
//- (id)newTemplateInstantiationContext;
//- (id)nextAssistantIdentifierForWorkspace:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionSigningMethodStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDECustomNetworkProtocolItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _entitlementsFlightCheck;
//}
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceIssueProvider : IDEIssueProvider {
//    id _modelObjectDidChangeObserver;
//    DVTObservingToken * _referencedContainersObserverToken;
//    NSMapTable * _referencedContainersToIssueObserverTokensMapTable;
//    NSMapTable * _referencedContainersToProviderContextsMapTable;
//    DVTObservingToken * _blueprintsObserverToken;
//    NSMapTable * _blueprintsToIssueObserverTokensMapTable;
//    NSMapTable * _blueprintsToProviderContextsMapTable;
//}
//+ (void)initialize;
//+ (int)providerType;
//- (id)initWithIssueManager:(id)v1 extension:(id)v2;
//- (void)primitiveInvalidate;
//- (id)_issueForMessage:(id)v1;
//- (id)_integrityIssuesForDataSource:(id)v1;
//- (void)_referencedContainersDidChange;
//- (void)_blueprintsDidChange;
//- (id)displayNameForIssueTypeIdentifier:(id)v1;
//- (id)ideModelObjectTypeIdentifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceIssueProviderContext : NSObject {
//    IDEIssueProvider * _issueProvider;
//    NSObject<IDEIssueLogDataSource> * _dataSource;
//    unsigned long long _hash;
//}
//@property (readonly) IDEIssueProvider * issueProvider;
//@property (readonly) NSObject<IDEIssueLogDataSource> * dataSource;
//- (id)initWithIssueManager:(id)v1 dataSource:(id)v2;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestSummariesBuilderWorkerState : NSObject {
//    double _duration;
//    IDETestIdentifier * _currentTestIdentifier;
//    NSMutableArray * _testSuiteStack;
//    NSMutableArray * _performanceMetricSummaries;
//    NSMutableArray * _failureSummaries;
//    IDESchemeActionTestNoticeSummary * _skipNoticeSummary;
//    NSMutableArray * _activitySummaries;
//    NSMutableArray * _currentActivityStack;
//}
//@property double duration;
//@property (retain) IDETestIdentifier * currentTestIdentifier;
//@property (readonly) NSMutableArray * testSuiteStack;
//@property (readonly) NSMutableArray * performanceMetricSummaries;
//@property (readonly) NSMutableArray * failureSummaries;
//@property (retain) IDESchemeActionTestNoticeSummary * skipNoticeSummary;
//@property (readonly) NSMutableArray * activitySummaries;
//@property (readonly) NSMutableArray * currentActivityStack;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestsSummariesBuilder : NSObject<IDETestRunSessionEvents> {
//    DVTFilePath * _workspaceFilePath;
//    IDESchemeActionTestableSummary * _currentTestableSummary;
//    NSObject<IDETestsSummariesBuilderDelegate> * _delegate;
//    IDESchemeActionResult * _actionResult;
//    NSMapTable * _stateForWorker;
//    NSString * _bundleDisplayName;
//    IDESchemeActionTestSummaryGroup * _synthesizedBundleSuiteGroup;
//    _TtC13IDEFoundation28IDETestRunSpecificationGroup * _currentTestRunSpecificationGroup;
//    NSMutableArray * _currentGroupTestableSummaries;
//    NSMutableArray * _testRunSummaries;
//    IDESchemeActionTestSummaryGroup * _currentTestableSummaryBootstrappingFailures;
//}
//@property (retain) NSMapTable * stateForWorker;
//@property (retain) IDESchemeActionResult * actionResult;
//@property (retain) NSString * bundleDisplayName;
//@property (retain) IDESchemeActionTestSummaryGroup * synthesizedBundleSuiteGroup;
//@property (retain) _TtC13IDEFoundation28IDETestRunSpecificationGroup * currentTestRunSpecificationGroup;
//@property (retain) NSMutableArray * currentGroupTestableSummaries;
//@property (retain) NSMutableArray * testRunSummaries;
//@property (retain) IDESchemeActionTestSummaryGroup * currentTestableSummaryBootstrappingFailures;
//@property (retain) NSObject<IDETestsSummariesBuilderDelegate> * delegate;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithActionResult:(id)v1 workspaceFilePath:(id)v2;
//- (void)testTargetRunnerDidStart:(id)v1;
//- (void)graftBootstrappingFailuresIntoCurrentTestableSummary:(id)v1;
//- (void)recursivelySendDelegateCallbacksForSummary:(id)v1;
//- (void)testTargetRunner:(id)v1 didEndWithError:(id)v2 wasCanceled:(char)v3;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didLaunchWithDiagnosticLogPath:(id)v3;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 didStartAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 willFinishAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuiteDidFinishWithRunCount:(unsigned long long)v3 skipCount:(unsigned long long)v4 failureCount:(unsigned long long)v5 unexpectedFailureCount:(unsigned long long)v6 testDuration:(double)v7 totalDuration:(double)v8 rawOutput:(id)v9;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 willFinishWithSuccess:(char)v3 withError:(id)v4;
//- (void)testRunSessionDidFinish:(id)v1 withCancellation:(char)v2;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didStartTestWithIdentifier:(id)v3 withRawOutput:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 willStartActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didFinishActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didMeasurePerformanceMetric:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testCaseWithIdentifier:(id)v3 didRecordIssue:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testCaseWithIdentifier:(id)v2 didRecordIssue:(id)v3 rawOutput:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didSkipTestWithIdentifier:(id)v3 withTestResultMessage:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didFinishTestWithIdentifier:(id)v3 withTestResult:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 didFinishTestWithIdentifier:(id)v2 withTestResult:(id)v3 rawOutput:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEXCTestRunCoder_V1 : NSObject<IDEXCTestRunCoder>
//- (id)testRunFileWithDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 derivedDataPath:(id)v3 error:(id *)v4;
//- (id)dictionaryRepresentationWithTestPlanInfo:(id)v1 testRunSpecificationGroups:(id)v2 codeCoverageBuildableInfos:(id)v3 testRootPathPlaceholder:(id)v4 derivedDataPathPlaceholder:(id)v5;
//- (void)insertCoverageBuildableInfos:(id)v1 intoMetadataDictionary:(id)v2 forTestRootPath:(id)v3;
//- (void)insertTestRunSpecifications:(id)v1 intoDictionaryRepresentation:(id)v2 forTestRootPath:(id)v3 derivedDataPath:(id)v4;
//- (id)coverageBuildableInfosInDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 error:(id *)v3;
//- (id)testRunSpecificationsInDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 derivedDataPath:(id)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodSaveBuiltProducts : IDEDistributionMethodExport
//- (double)sortOrder;
//- (bool)supportsDistributionOfArchive:(id)v1;
//- (id)title;
//- (id)shortTitle;
//- (id)subtitle;
//- (id)orderedDistributionStepClassNamesForDestination:(long long)v1;
//- (id)certificateKind;
//- (id)installerCertificateKind;
//- (long long)wantsProvisioningProfiles;
//- (id)exportStepName;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestPlanRunSummary : NSObject {
//    NSString * _name;
//    NSArray * _testableSummaries;
//}
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSArray * testableSummaries;
//+ (id)sparseTestPlanRunSummary:(id)v1 testIdentifiers:(id)v2;
//+ (id)sparseTestPlanRunSummaries:(id)v1 testIdentifiers:(id)v2;
//- (id)initWithName:(id)v1 testableSummaries:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESigningEditorCapabilityItemLibraryAssetLocallyDefinedSource : NSObject<IDESigningEditorCapabilityItemLibraryAssetManagerSource> {
//    NSObject<IDESigningEditorCapabilityItemLibraryAssetManagerSourceDelegate> * _delegate;
//    NSOperationQueue * _refreshQueue;
//    NSArray * _allItems;
//    NSMutableDictionary * _contextToResult;
//}
//@property (retain,nonatomic) NSOperationQueue * refreshQueue;
//@property (retain,nonatomic) NSArray * allItems;
//@property (retain,nonatomic) NSMutableDictionary * contextToResult;
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemLibraryAssetManagerSourceDelegate> * delegate;
//+ (id)projectItemExtensions;
//+ (id)projectPlatformItemExtensions;
//+ (id)projectProductItemExtensions;
//+ (id)projectItemCapabilities:(id)v1;
//+ (id)projectPlatformItemCapabilities:(id)v1;
//+ (id)projectProductItemCapabilities:(id)v1;
//+ (id)allItems;
//- (id)init;
//- (id)resultForContext:(id)v1;
//- (char)isBusyForContext:(id)v1;
//- (char)wantsRefreshForContext:(id)v1;
//- (void)refreshForContext:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductVersionBinaryInfos : NSObject<DVTServicesJSONSerialization> {
//    NSArray * _generationsOfBinaryUUIDs;
//}
//@property (readonly) NSArray * generationsOfBinaryUUIDs;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)objectFromJSONRepresentation:(id)v1 error:(id *)v2;
//- (id)initWithGenerationsSlices:(id)v1;
//- (id)initWithSoftwareGenerationDescriptions:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)UUIDs;
//- (id)JSONRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueProvider : NSObject<DVTInvalidation> {
//    IDEIssueManager * _issueManager;
//    DVTExtension * _extension;
//    IDEIssueProviderSession * _session;
//    char _canCreateBreakpoint;
//    IDEIssueProviderSession * _currentProviderSession;
//}
//@property (retain) IDEIssueManager * issueManager;
//@property (readonly) char _filterIssuesByActiveScheme;
//@property (readonly) DVTExtension * extension;
//@property (readonly) char canCreateBreakpoint;
//@property (retain) IDEIssueProviderSession * currentProviderSession;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (int)providerType;
//- (id)init;
//- (id)initWithIssueManager:(id)v1 extension:(id)v2;
//- (void)primitiveInvalidate;
//- (void)setIssues:(id)v1 forProviderContext:(id)v2;
//- (void)setIssues:(id)v1 forProviderContext:(id)v2 providerSession:(id)v3 container:(id)v4 blueprint:(id)v5;
//- (void)setIssues:(id)v1 forProviderContext:(id)v2 providerSession:(id)v3 container:(id)v4 blueprint:(id)v5 runtimeGroupingObject:(id)v6;
//- (void)addIssues:(id)v1 forProviderContext:(id)v2 providerSession:(id)v3 container:(id)v4 blueprint:(id)v5;
//- (void)addIssues:(id)v1 forProviderContext:(id)v2 providerSession:(id)v3 container:(id)v4 blueprint:(id)v5 runtimeGroupingObject:(id)v6;
//- (void)removeIssues:(id)v1 forProviderContext:(id)v2 providerSession:(id)v3;
//- (id)displayNameForIssueTypeIdentifier:(id)v1;
//- (void)startProviderSession;
//- (void)endProviderSession;
//- (id)activityLogRecordForIssue:(id)v1;
//- (id)logDocumentLocationForIssue:(id)v1;
//- (char)allowsNewIssuesToBeCoalesced;
//- (char)allowsExistingIssuesToBeCoalesced;
//- (id)createBreakpointIfNecessary:(id)v1 ignoreExisting:(char)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueProviderSession : NSObject {
//    double _timestamp;
//}
//@property (readonly) double timestamp;
//- (id)init;
//@end
//
//
///*****************************************************************/
//
//@interface IDEXMLPackageContainer : IDEContainer<DVTXMLUnarchiverDelegate,DVTXMLUnarchiving,IDECustomDataStoring> {
//    IDEGroup * _unarchivingGroup;
//    NSMutableDictionary * _unarchivingProperties;
//    IDEDirectoryBasedCustomDataStore * _customDataStore;
//    NSMapTable * _unsavedXMLDataForCustomDataStoreSpecifier;
//    char _hasUnhandledArchiveData;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (retain) IDEDirectoryBasedCustomDataStore * customDataStore;
//@property (readonly) char hasUnhandledArchiveData;
//@property (readonly) NSString * displayName;
//@property (readonly) float archiveVersion;
//@property (readonly) float maxSupportedArchiveVersion;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)supportsFilePersistence;
//+ (id)rootElementName;
//+ (id)xmlArchiveFileName;
//+ (id)containerDataFilePathsForFilePath:(id)v1;
//- (void)dvt_setProperty:(id)v1 fromUTF8String:(const  char *)v2 fromXMLUnarchiver:(id)v3;
//- (void)dvt_addObject:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)_archiveFilePathForFilePath:(id)v1;
//- (void)_createCustomDataStore:(id)v1;
//- (id)initWithFilePath:(id)v1 extension:(id)v2 workspace:(id)v3 options:(id)v4 error:(id *)v5;
//- (void)customDataStoreClosing:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (char)readFromFilePath:(id)v1 error:(id *)v2;
//- (char)willReadFromFilePath:(id)v1 error:(id *)v2;
//- (id)_subitemsForUnarchivedSubitems:(id)v1;
//- (char)didReadFromFilePath:(id)v1 error:(id *)v2;
//- (id)_xmlData;
//- (char)writeToFilePath:(id)v1 forceWrite:(char)v2 error:(id *)v3;
//- (void)_handleFilePathDidChange:(id)v1;
//- (void)scmStatusForSpecifier:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)addSpecifier:(id)v1 inWorkspace:(id)v2 toSCMWithCompletionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)primitiveInvalidate;
//- (id)customDataSpecifiersForGrouping:(id)v1 ownership:(id)v2;
//- (id)customDataOwnershipsForGrouping:(id)v1;
//- (id)readCustomDataWithSpecifier:(id)v1 error:(id *)v2;
//- (void)writeCustomData:(id)v1 withSpecifier:(id)v2 forceOverwrite:(char)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)removeCustomDataWithSpecifier:(id)v1 completionQueue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)moveCustomDataWithSpecifier:(id)v1 toSpecifier:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (char)supportsCustomDataForOwnership:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildTask : DVTOperation {
//    NSString * _identifier;
//    NSDictionary * _properties;
//    IDEActivityLogSection * _activityLogSection;
//    char _restorePersistedBuildResults;
//    char _dontActuallyRun;
//    int _exitCode;
//    NSObject<IDEBuildTaskCallbacks> * _callbackDelegate;
//}
//@property (retain,nonatomic) IDEActivityLogSection * activityLogSection;
//@property (nonatomic) int exitCode;
//@property char dontActuallyRun;
//@property (readonly) NSString * identifier;
//@property (readonly) NSDictionary * properties;
//@property (readonly) char restorePersistedBuildResults;
//@property NSObject<IDEBuildTaskCallbacks> * callbackDelegate;
//+ (void)initialize;
//+ (id)buildTaskWithIdentifier:(id)v1 restorePersistedBuildResults:(char)v2 properties:(id)v3;
//+ (id)defaultProperties;
//- (id)initWithIdentifier:(id)v1 restorePersistedBuildResults:(char)v2 properties:(id)v3;
//- (id)init;
//- (char)isWrapperForCommand:(id)v1;
//- (void)addStatisticsDataToStatisticsSection:(id)v1;
//- (void)main;
//- (id)description;
//- (id)longDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionSkipPackagingStep : IDEDistributionProcessingPackagingStep
//+ (char)wantsPayloadDir;
//+ (bool)supportsDryRun;
//- (bool)runWithError:(id *)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEXMLPackageContainerCore : IDEContainerCore<IDEXMLPackageContainerCore>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//- (id)initWithContentsOfFile:(id)v1 error:(id *)v2;
//- (char)writeToFile:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppClientTracker : NSObject<IDEClientTracking> {
//    IDEConcreteClientTracker * _clientTracker;
//}
//@property (readonly) char isCancelling;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)sharedAppClientTracker;
//- (id)init;
//- (id)registerClientWithName:(id)v1 promptForCancellation:(char)v2 terminationSignpost:(void (^ /* unknown block signature */)(void))v3 cancellationBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)registerUncancellableClientWithName:(id)v1 terminationSignpost:(void (^ /* unknown block signature */)(void))v2;
//- (id)clientsRequiringCancellationPrompt;
//- (id)clientsNotSupportingCancellation;
//- (void)cancelTrackedClients;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEConcreteClientTracker : NSObject<IDEClientTracking> {
//    NSMutableSet * _clientTrackingTokensRequiringCancellation;
//    NSMutableSet * _clientTrackingTokensRequiringCancellationPrompt;
//    NSMutableSet * _clientTrackingTokensNotSupportingCancellation;
//    char _isCancelling;
//}
//@property (readonly) char isCancelling;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)registerClientWithName:(id)v1 promptForCancellation:(char)v2 terminationSignpost:(void (^ /* unknown block signature */)(void))v3 cancellationBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)registerUncancellableClientWithName:(id)v1 terminationSignpost:(void (^ /* unknown block signature */)(void))v2;
//- (id)clientsRequiringCancellationPrompt;
//- (id)clientsNotSupportingCancellation;
//- (void)unregisterClient:(id)v1;
//- (void)_waitForTokensToCancel:(id)v1;
//- (void)_callSignpostForClientsBlockingCancellation:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)cancelTrackedClients;
//- (void)_clientCancellationTimeout;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEConcreteClientTrackingToken : NSObject<IDEClientTrackingToken> {
//    NSString * _clientName;
//    void (^ /* unknown block signature */)(void) _cancellationBlock;
//    char _hasUnregistered;
//    IDEConcreteClientTracker * _clientTracker;
//    DVTSystemActivityToken * _systemActivityToken;
//    DVTStackBacktrace * _creationBacktrace;
//    void (^ /* unknown block signature */)(void) _terminationSignpost;
//}
//@property (retain) DVTSystemActivityToken * systemActivityToken;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (copy) void (^ /* unknown block signature */)(void) terminationSignpost;
//@property (readonly) NSString * clientName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (void)unregisterClient;
//- (id)initWithClientName:(id)v1 clientTracker:(id)v2 terminationSignpost:(void (^ /* unknown block signature */)(void))v3 cancellationBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)cancelClient;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMigrationContext : NSObject<DVTInvalidation,NSCopying> {
//    IDEWorkspace * _workspace;
//    NSMutableArray * _targets;
//    NSMutableArray * _selectedTargets;
//    NSMutableArray * _targetsToApplyMigrationSettingsTo;
//}
//@property (retain) IDEWorkspace * workspace;
//@property (readonly) NSArray * targets;
//@property (readonly) NSArray * targetsToApplyMigrationSettingsTo;
//@property (retain) NSMutableArray * selectedTargets;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (Class)migrationTargetSublass;
//+ (char)buildableProducesWatchApp:(id)v1;
//+ (id)buildablesIncludingImplicitDependenciesForWorkspace:(id)v1 scheme:(id)v2 includingPackages:(char)v3;
//+ (id)buildablesIncludingImplicitDependenciesForWorkspace:(id)v1 scheme:(id)v2;
//- (id)init;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)primitiveInvalidate;
//- (void)selectDefaultTargets;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildableSnapshot : NSObject {
//    NSObject<IDEBuildable> * _buildable;
//    NSString * _name;
//    IDEBuildParameters * _buildParameters;
//    IDEActivityLogSection * _activityLogSection;
//    char _cleanupDidRun;
//    NSMutableArray * _postprocessingBlocks;
//    NSMutableArray * _readyBuildCommands;
//    NSMutableArray * _startedBuildTasks;
//    long long _buildResult;
//    DVTDispatchLock * _syncLock;
//}
//@property (readonly) NSObject<IDEBuildable> * buildable;
//@property (retain) NSMutableArray * postprocessingBlocks;
//@property (retain) NSMutableArray * readyBuildCommands;
//@property (retain) NSMutableArray * startedBuildTasks;
//@property long long buildResult;
//@property (retain) IDEActivityLogSection * activityLogSection;
//@property (retain) DVTDispatchLock * syncLock;
//@property (readonly) NSString * name;
//@property (readonly) IDEBuildParameters * buildParameters;
//@property (readonly) NSString * logOutputSubpath;
//+ (void)initialize;
//+ (id)_enqueue_semaphore;
//- (id)initFromBuildable:(id)v1 withBuildParameters:(id)v2;
//- (id)initWithName:(id)v1 buildParameters:(id)v2;
//- (void)addPostprocessingBlocks:(id)v1;
//- (void)_buildTaskDidStartForBuilder:(id)v1 buildTask:(id)v2;
//- (void)_updateBuildOperationStatusForBuilder:(id)v1 buildTask:(id)v2;
//- (void)_buildCommandDidRestoreCachedOutputs:(id)v1;
//- (void)prepareForBuildingForBuilder:(id)v1;
//- (long long)performBuildForBuilder:(id)v1 buildCommand:(long long)v2 buildOnlyTheseFiles:(id)v3;
//- (char)buildForBuilderWillStart:(id)v1;
//- (id)buildPlanForBuilder:(id)v1 buildCommand:(long long)v2 buildOnlyTheseFiles:(id)v3;
//- (char)prepareForBuildingWithBuildPlan:(id)v1;
//- (id)buildTaskForBuildCommand:(id)v1 builder:(id)v2;
//- (void)buildDidFinishForBuilder:(id)v1 buildPlan:(id)v2;
//- (void)builderWasCancelled:(id)v1;
//- (void)cleanupForBuilder:(id)v1;
//- (void)buildTask:(id)v1 didStartExecutingForBuilder:(id)v2;
//- (void)buildTask:(id)v1 activityLogSectionDidChange:(id)v2 forBuilder:(id)v3;
//- (void)buildTask:(id)v1 didSetExitCode:(int)v2 forBuilder:(id)v3;
//- (void)buildTask:(id)v1 updatesBuildStatusForBuilder:(id)v2;
//- (void)buildTask:(id)v1 addsPostprocessingBlocks:(id)v2 forBuilder:(id)v3;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEConcretePrimitiveSchemeCommand : IDESchemeCommand<IDEPrimitiveSchemeCommand>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeCommand : NSObject {
//    char _appleInternalOnly;
//    char _shouldLaunch;
//    char _shouldTest;
//    char _shouldProfile;
//    char _shouldPreview;
//    char _shouldArchive;
//    char _shouldInstall;
//    char _shouldBuildThinnedResources;
//    char _shouldGenerateOptimizationProfile;
//    char _supportsCodeCoverage;
//    char _supportsSingleFileProcessing;
//    char _supportsCompilerSanitizers;
//    NSString * _commandName;
//    NSString * _commandNameGerund;
//}
//@property (readonly,copy,nonatomic) NSString * commandName;
//@property (readonly,copy,nonatomic) NSString * commandNameGerund;
//@property (readonly,nonatomic,getter=isAppleInternalOnly) char appleInternalOnly;
//@property (readonly,nonatomic) char shouldLaunch;
//@property (readonly,nonatomic) char shouldTest;
//@property (readonly,nonatomic) char shouldProfile;
//@property (readonly,nonatomic) char shouldPreview;
//@property (readonly,nonatomic) char shouldArchive;
//@property (readonly,nonatomic) char shouldInstall;
//@property (readonly,nonatomic) char shouldBuildThinnedResources;
//@property (readonly,nonatomic) char shouldGenerateOptimizationProfile;
//@property (readonly,nonatomic) char supportsCodeCoverage;
//@property (readonly,nonatomic) char supportsSingleFileProcessing;
//@property (readonly,nonatomic) char supportsCompilerSanitizers;
//+ (void)initialize;
//+ (id)launchSchemeCommand;
//+ (id)testSchemeCommand;
//+ (id)profileSchemeCommand;
//+ (id)previewSchemeCommand;
//+ (id)analyzeSchemeCommand;
//+ (id)archiveSchemeCommand;
//+ (id)launchForPGOSchemeCommand;
//+ (id)testForPGOSchemeCommand;
//+ (id)installSchemeCommand;
//+ (id)allSchemeCommands;
//+ (id)allNonAppleInternalSchemeCommands;
//+ (id)availableSchemeCommands;
//+ (id)allPrimitiveSchemeCommands;
//+ (id)allNonAppleInternalPrimitiveSchemeCommands;
//+ (id)availablePrimitiveSchemeCommands;
//- (id)init;
//- (id)initWithCommandName:(id)v1 gerund:(id)v2 appleInternalOnly:(char)v3;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEClangDiagnosticActivityLogMessage : IDEDiagnosticActivityLogMessage
//+ (void)initialize;
//- (id)initWithDiagnostic:(void *)v1 timestamp:(double)v2;
//- (id)initWithDiagnostic:(void *)v1 timestamp:(double)v2 pathMap:(id)v3;
//- (id)initWithDiagnostic:(void *)v1 timestamp:(double)v2 documentURL:(id)v3;
//- (id)initWithDiagnostic:(void *)v1 timestamp:(double)v2 pathMap:(id)v3 documentURL:(id)v4;
//- (id)initWithDiagnostic:(void *)v1 timestamp:(double)v2 pathMap:(id)v3 workingDirectory:(id)v4;
//- (id)initWithDiagnostic:(void *)v1 timestamp:(double)v2 pathMap:(id)v3 workingDirectory:(id)v4 documentURL:(id)v5;
//@end
//
//
///*****************************************************************/
//
//@interface IDEXBSBuildOptionOverrides : NSObject {
//    NSString * _xbsProjectName;
//    NSString * _workspaceName;
//    NSString * _configurationName;
//    NSString * _schemeName;
//    NSString * _targetName;
//}
//@property (readonly,nonatomic) NSString * xbsProjectName;
//@property (readonly,nonatomic) NSString * workspaceName;
//@property (readonly,nonatomic) NSString * configurationName;
//@property (readonly,nonatomic) NSString * schemeName;
//@property (readonly,nonatomic) NSString * targetName;
//- (id)initWithXBSProjectNamed:(id)v1 workspaceNamed:(id)v2 configurationNamed:(id)v3 schemeNamed:(id)v4 targetNamed:(id)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivedContent : NSObject<IDEDistributableContent> {
//    IDEArchive * _archive;
//}
//@property (readonly) IDEArchive * archive;
//@property (readonly) NSString * bundleVersion;
//@property (readonly) NSString * shortBundleVersionString;
//@property (readonly) NSString * teamIdentifier;
//@property (readonly) DVTFilePath * contentPath;
//@property (readonly) DVTFilePath * path;
//@property (readonly) NSString * bundleIdentifier;
//@property (readonly) NSString * bundleName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)contentClasses;
//+ (char)fillArchivedContentInfoInArchiveInfoDictionary:(id)v1 forContentInArchiveProductsDirectory:(id)v2;
//+ (id)archivedContentWithArchive:(id)v1;
//+ (char)validArchivedContentInfoInArchive:(id)v1;
//+ (id)archivedContentInfoDictForArchive:(id)v1;
//+ (id)_archivedContentBundleIdentifierForArchive:(id)v1;
//+ (id)_archivedContentBundleVersionForArchive:(id)v1;
//+ (id)_archivedContentShortBundleVersionStringForArchive:(id)v1;
//+ (id)_archivedContentPathForArchive:(id)v1;
//+ (id)keyPathsForValuesAffectingContentPath;
//+ (id)teamIdentifierForPath:(id)v1;
//+ (id)archivedContentPropertiesPlistKey;
//+ (id)archivedContentPathPlistKey;
//+ (id)soleArchivedContentRelativePathInDirectory:(id)v1;
//+ (char)fillInfoDictionary:(id)v1 forContentAtPath:(id)v2;
//- (id)initWithArchive:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentIndexEntry : NSObject<NSSecureCoding> {
//    DVTFilePath * _filePath;
//    DVTFileDataType * _explicitFileDataType;
//    Class _providerClass;
//    NSNumber * _sourceFileModificationTimestamp;
//    NSObject<IDETextFragmentProviderSeed> * _retainedSeed;
//    IDETextFragmentIndexQuickRejectionFilter * _filter;
//    NSError * _providerError;
//}
//@property (readonly) DVTFilePath * filePath;
//@property (readonly) DVTFileDataType * explicitFileDataType;
//@property (readonly) Class providerClass;
//@property (readonly) NSNumber * sourceFileModificationTimestamp;
//@property (readonly) NSObject<IDETextFragmentProviderSeed> * retainedSeed;
//@property (readonly) IDETextFragmentIndexQuickRejectionFilter * filter;
//@property (readonly) NSError * providerError;
//+ (char)supportsSecureCoding;
//- (id)initWithFilePath:(id)v1 explicitFileDataType:(id)v2 providerClass:(Class)v3 sourceFileModificationTimestamp:(id)v4 providerError:(id)v5;
//- (id)initWithFilePath:(id)v1 explicitFileDataType:(id)v2 providerClass:(Class)v3 sourceFileModificationTimestamp:(id)v4 seed:(id)v5 retainFragments:(char)v6;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestRunnerResumeContext : NSObject {
//    NSSet * _testIdentifiersToRun;
//    NSSet * _testIdentifiersToSkip;
//    NSObject<OS_dispatch_queue> * _callbackQueue;
//    void (^ /* unknown block signature */)(void) _callback;
//}
//@property (readonly) NSSet * testIdentifiersToRun;
//@property (readonly) NSSet * testIdentifiersToSkip;
//@property (readonly) NSObject<OS_dispatch_queue> * callbackQueue;
//@property (readonly,copy) void (^ /* unknown block signature */)(void) callback;
//- (id)initWithTestIdentifiersToRun:(id)v1 testIdentifiersToSkip:(id)v2 callbackQueue:(id)v3 callback:(void (^ /* unknown block signature */)(void))v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEXCTestSuiteRecord : NSObject {
//    char _shouldUseForReportingSuiteCompletion;
//    IDETestIdentifier * _suiteIdentifier;
//    long long _runCount;
//    long long _skipCount;
//    long long _failureCount;
//    double _suiteStartTime;
//    long long _unexpectedFailureCount;
//}
//@property (copy) IDETestIdentifier * suiteIdentifier;
//@property long long runCount;
//@property long long skipCount;
//@property long long failureCount;
//@property double suiteStartTime;
//@property char shouldUseForReportingSuiteCompletion;
//@property long long unexpectedFailureCount;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestRunner : NSObject<XCTTestWorker,IDETestOperationCoordinatorEvents,IDETestRunner> {
//    NSMutableArray * _testResults;
//    NSMutableSet * _runningTests;
//    NSObject<IDETestRunnerEvents> * _testEventsObserver;
//    int _testRunnerPID;
//    IDETestRunnerResumeContext * _resumeContext;
//    IDETestOperationCoordinator * _currentTestOperationCoordinator;
//    char _needsToResyncStateWithRestartedOperation;
//    char _currentOperationSuccessfullyBootstrapped;
//    char _finished;
//    IDEExecutionEnvironment * _executionEnvironment;
//    NSString * _launchName;
//    IDESchemeCommand * _schemeCommand;
//    NSObject<IDEBuildableProduct> * _buildableProductForUIRecordingManager;
//    _TtC13IDEFoundation29IDETestingInstallationTracker * _testingInstallationTracker;
//    NSMutableArray * _testResultStack;
//    double _testRunStartedTime;
//    NSMutableSet * _testsThatHaveStarted;
//    NSMutableArray * _suiteStack;
//    DVTOperation<DVTOperationGroup> * _testSessionOperation;
//    NSObject<IDETestDaemonController> * _daemonController;
//    IDERunOperation * _currentTestRunOperation;
//    long long _restartCount;
//    unsigned long long _currentSuiteResyncIndex;
//    IDETestIdentifier * _currentTestIdentifier;
//    IDETestIdentifier * _crashingTestIdentifier;
//    DVTDisallowFinishToken * _testOperationDisallowFinishToken;
//    IDETestRunSpecification * _testRunSpecification;
//    _TtC13IDEFoundation28IDETestRunSpecificationGroup * _testRunSpecificationGroup;
//    NSNumber * _randomExecutionOrderingSeed;
//    IDERunDestination * _runDestination;
//    DVTFilePath * _runnerArtifactsDirectory;
//    DVTObservingToken * _testRunnerPIDObservationToken;
//    NSObject<IDETestingActivityGenerating> * _activityReporter;
//    NSString * _deviceName;
//    NSObject<OS_dispatch_queue> * _queue;
//    NSString * _runnerIdentifier;
//    void (^ /* unknown block signature */)(void) _launchParametersBlock;
//    NSString * _launchDescription;
//    long long _executionStyle;
//}
//@property (retain) NSMutableArray * testResultStack;
//@property double testRunStartedTime;
//@property (retain) NSMutableSet * testsThatHaveStarted;
//@property (retain) NSMutableArray * suiteStack;
//@property (retain) DVTOperation<DVTOperationGroup> * testSessionOperation;
//@property (retain) NSObject<IDETestDaemonController> * daemonController;
//@property (retain) IDERunOperation * currentTestRunOperation;
//@property char needsToResyncStateWithRestartedOperation;
//@property long long restartCount;
//@property unsigned long long currentSuiteResyncIndex;
//@property (retain) IDETestIdentifier * currentTestIdentifier;
//@property (retain) IDETestIdentifier * crashingTestIdentifier;
//@property (retain) DVTDisallowFinishToken * testOperationDisallowFinishToken;
//@property char currentOperationSuccessfullyBootstrapped;
//@property char finished;
//@property (retain) IDETestRunSpecification * testRunSpecification;
//@property (retain) _TtC13IDEFoundation28IDETestRunSpecificationGroup * testRunSpecificationGroup;
//@property (retain) NSNumber * randomExecutionOrderingSeed;
//@property (retain) IDERunDestination * runDestination;
//@property (retain) DVTFilePath * runnerArtifactsDirectory;
//@property (retain) DVTObservingToken * testRunnerPIDObservationToken;
//@property (readonly) NSObject<IDETestingActivityGenerating> * activityReporter;
//@property (retain) IDETestOperationCoordinator * currentTestOperationCoordinator;
//@property (retain) IDETestRunnerResumeContext * resumeContext;
//@property int testRunnerPID;
//@property (retain) NSString * deviceName;
//@property (retain) NSObject<OS_dispatch_queue> * queue;
//@property (readonly) NSString * runnerIdentifier;
//@property (copy) void (^ /* unknown block signature */)(void) launchParametersBlock;
//@property (readonly) NSString * launchDescription;
//@property (readonly) long long executionStyle;
//@property (readonly) IDEExecutionEnvironment * executionEnvironment;
//@property (readonly) NSString * launchName;
//@property (readonly) IDESchemeCommand * schemeCommand;
//@property (readonly) NSObject<IDEBuildableProduct> * buildableProductForUIRecordingManager;
//@property (readonly) _TtC13IDEFoundation29IDETestingInstallationTracker * testingInstallationTracker;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) NSString * currentDiagnosticLogPath;
//@property (readonly,copy) NSString * title;
//@property NSObject<IDETestRunnerEvents> * testEventsObserver;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (char)supportsInvalidationPrevention;
//+ (id)_configurationOperationForLaunchSession:(id)v1 testRunSpecification:(id)v2 executionStyle:(long long)v3 runDestination:(id)v4 runnerArtifactsDirectory:(id)v5 reportResultsToIDE:(char)v6 testsThatHaveStarted:(id)v7 aggregateStatisticsFromLastLaunch:(id)v8 randomExecutionOrderingSeed:(id)v9 error:(id *)v10;
//+ (id)_commandLineArgumentsForRunDestination:(id)v1;
//- (id)init;
//- (id)initWithTestRunSpecification:(id)v1 testRunSpecificationGroup:(id)v2 executionStyle:(long long)v3 executionEnvironment:(id)v4 runDestination:(id)v5 launchParametersBlock:(void (^ /* unknown block signature */)(void))v6 artifactsDirectory:(id)v7 daemonController:(id)v8 activityReporter:(id)v9 testingInstallationTracker:(id)v10;
//- (void)primitiveInvalidate;
//- (void)fetchDiscoveredTestClasses:(void (^ /* unknown block signature */)(void))v1;
//- (void)executeTestIdentifiers:(id)v1 skippingTestIdentifiers:(id)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3 completionQueue:(id)v4;
//- (void)shutdown;
//- (void)testProcessDidBecomeReadyForWork:(id)v1;
//- (id)configurationOperationForLaunchSession:(id)v1 error:(id *)v2;
//- (id)_testRunOperationWithLaunchParameters:(id)v1 error:(id *)v2;
//- (id)testOperationWithError:(id *)v1;
//- (char)_addTestRunOperation:(id *)v1;
//- (id)_aggregateStatisticsFromLastLaunch;
//- (char)_hasTestsLeftToRun;
//- (void)launchSessionStarted:(id)v1 diagnosticLogPath:(id)v2;
//- (void)willFinishWithError:(id)v1 didCancel:(char)v2 sessionState:(id)v3;
//- (void)_unwindTestSuiteStackForResultsProcessor:(id)v1;
//- (void)testSuiteWithIdentifier:(id)v1 didStartAt:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testSuiteWithIdentifier:(id)v1 didRecordIssue:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testSuiteWithIdentifier:(id)v1 willFinishAt:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testSuiteDidFinishWithRunCount:(unsigned long long)v1 skipCount:(unsigned long long)v2 failureCount:(unsigned long long)v3 unexpectedFailureCount:(unsigned long long)v4 testDuration:(double)v5 totalDuration:(double)v6 rawOutput:(id)v7 sessionState:(id)v8;
//- (void)testCaseWithIdentifier:(id)v1 didStartWithRawOutput:(id)v2 sessionState:(id)v3;
//- (void)testCaseWithIdentifier:(id)v1 wasSkippedWithMessage:(id)v2 file:(id)v3 line:(long long)v4 rawOutput:(id)v5 sessionState:(id)v6;
//- (void)testCaseWithIdentifier:(id)v1 willStartActivity:(id)v2 sessionState:(id)v3;
//- (void)testCaseWithIdentifier:(id)v1 didFinishActivity:(id)v2 sessionState:(id)v3;
//- (void)testCaseWithIdentifier:(id)v1 didMeasurePerformanceMetric:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testCaseWithIdentifier:(id)v1 didRecordIssue:(id)v2 rawOutput:(id)v3 sessionState:(id)v4;
//- (void)testCaseWithIdentifier:(id)v1 didFinishWithStatus:(id)v2 duration:(double)v3 rawOutput:(id)v4 sessionState:(id)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairStepGenerator : NSObject {
//    char _runningInIDE;
//}
//@property char runningInIDE;
//+ (id)generatorForProvisioningStyle:(long long)v1 runningInIDE:(char)v2;
//+ (id)generatorForProvisioningStyle:(long long)v1;
//- (id)initForProvisioningStyle:(long long)v1;
//- (id)stepsWithSession:(id)v1 context:(id)v2 userAction:(id *)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairStepGenerator_Automatic : IDEProvisioningRepairStepGenerator
//- (id)stepsWithSession:(id)v1 context:(id)v2 userAction:(id *)v3 error:(id *)v4;
//- (char)_newestLocalCertIsOnPortal:(id)v1 purpose:(id)v2 context:(id)v3;
//- (char)_isUnderLimitForCertificateType:(id)v1 certificates:(id)v2 context:(id)v3;
//- (id)_createCertificateRepairStepWithCertificateType:(id)v1;
//- (id)_allCertificateTypesForProgram:(id)v1 purpose:(id)v2 profileType:(id)v3 context:(id)v4;
//- (id)_getPrimaryCertificateType:(id)v1 team:(id)v2 context:(id)v3;
//- (char)_evaluateCertificatesWithSession:(id)v1 context:(id)v2 repairable:(id)v3 steps:(id)v4 userAction:(id *)v5 error:(id *)v6;
//- (id)_errorForDistributionCertsAlreadyExist:(id)v1 context:(id)v2;
//- (char)_evaluateDevicesWithSession:(id)v1 context:(id)v2 repairable:(id)v3 steps:(id)v4 userAction:(id *)v5 error:(id *)v6;
//- (id)_registerDeviceRepairStepWithDevice:(id)v1 team:(id)v2;
//- (char)_areDevicesRegisteredWithSession:(id)v1 context:(id)v2 devices:(id)v3 missingDevices:(id *)v4 error:(id *)v5;
//- (id)_createProfileStepWithCharacteristics:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairStepGenerator_Manual : IDEProvisioningRepairStepGenerator
//- (id)stepsWithSession:(id)v1 context:(id)v2 userAction:(id *)v3 error:(id *)v4;
//- (id)_evaluateProfilesWithSession:(id)v1 context:(id)v2 userAction:(id *)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDESwiftErrorBreakpoint : IDEBreakpoint {
//    NSString * _typeName;
//}
//@property (copy) NSString * typeName;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)displayName;
//- (char)shouldBeModifiedAfterCreation;
//- (id)accessibilityDescription;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMigrationTarget : NSObject {
//    IDEMigrationContext * _migrationContext;
//    NSObject<IDEBlueprint> * _blueprint;
//    NSMutableArray * _buildFiles;
//    id _iconImage;
//    NSString * _title;
//}
//@property (readonly) IDEMigrationContext * migrationContext;
//@property (readonly) NSObject<IDEBlueprint> * blueprint;
//@property (readonly,copy) NSArray * buildFiles;
//@property (readonly,copy) NSString * warningMessage;
//@property (readonly) char buildsValidArchtectures;
//@property (readonly) char buildsWithClang;
//@property (readonly,copy) NSString * title;
//@property (readonly) char canMigrate;
//@property (readonly) char shouldMigrate;
//- (id)initWithBlueprint:(id)v1 migrationContext:(id)v2;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (void)updateBuildSettings;
//- (id)latestSDK;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableSnapshot : NSObject {
//    NSString * _name;
//    NSOrderedSet * _configurations;
//    NSDictionary * _configurationSnapshots;
//    IDEProvisionableOverrides * _overrides;
//}
//@property (readonly,copy,nonatomic) NSDictionary * configurationSnapshots;
//@property (readonly,nonatomic) IDEProvisionableOverrides * overrides;
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSOrderedSet * configurations;
//+ (id)snapshotFromProvisionable:(id)v1 overrides:(id)v2;
//+ (id)snapshotFromProvisionable:(id)v1 buildParameters:(id)v2 overrides:(id)v3;
//- (id)description;
//- (char)_isConfigurationOverriden:(id)v1;
//- (id)provisioningPurposeForConfigurationNamed:(id)v1;
//- (long long)provisioningStyleForConfigurationNamed:(id)v1;
//- (id)teamForConfigurationNamed:(id)v1;
//- (long long)profileSupportForConfigurationNamed:(id)v1;
//- (id)platformForConfigurationNamed:(id)v1;
//- (id)sdkForConfigurationNamed:(id)v1;
//- (id)sdkVariantForConfigurationNamed:(id)v1;
//- (id)bundleIdentifierForConfigurationNamed:(id)v1;
//- (id)provisioningProfileSpecifierSpecifierForConfigurationNamed:(id)v1;
//- (id)provisioningProfileSpecifierForConfigurationNamed:(id)v1;
//- (id)signingCertificateIdentifierForConfigurationNamed:(id)v1;
//- (id)appIDFeaturesForConfigurationNamed:(id)v1;
//- (id)entitlementsFilePathForConfigurationNamed:(id)v1;
//- (id)entitlementsForConfigurationNamed:(id)v1;
//- (id)baseEntitlementsForConfigurationNamed:(id)v1;
//- (id)entitlementsExpansionForConfigurationNamed:(id)v1;
//- (unsigned long long)entitlementsDestinationForConfigurationNamed:(id)v1;
//- (char)allowSigningWithoutTeamSelectionForConfigurationNamed:(id)v1;
//- (char)signingRequiresTeamForConfigurationNamed:(id)v1;
//- (char)supportsIOSMacForConfigurationNamed:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEProvisionableConfigurationSnapshot : NSObject {
//    char _allowSigningWithoutTeamSelection;
//    char _signingRequiresTeam;
//    char _supportsIOSMac;
//    NSString * _name;
//    long long _provisioningStyle;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    long long _profileSupport;
//    DVTPlatform * _platform;
//    DVTSDK * _sdk;
//    NSString * _sdkVariant;
//    NSString * _bundleIdentifier;
//    NSString * _profileSpecifier;
//    NSString * _certificateIdentifier;
//    DVTFilePath * _entitlementsFilePath;
//    IDEProvisionableEntitlements * _baseEntitlements;
//    IDEProvisioningEntitlementsExpansion * _entitlementsExpansion;
//    unsigned long long _entitlementsDestination;
//    DVTPortalAppIDFeatures * _appIDFeatures;
//    DVTPortalProfilePurpose * _provisioningPurpose;
//}
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) long long provisioningStyle;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) long long profileSupport;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,nonatomic) DVTSDK * sdk;
//@property (readonly,nonatomic) NSString * sdkVariant;
//@property (readonly,nonatomic) NSString * bundleIdentifier;
//@property (readonly,nonatomic) NSString * profileSpecifier;
//@property (readonly,nonatomic) NSString * certificateIdentifier;
//@property (readonly,nonatomic) DVTFilePath * entitlementsFilePath;
//@property (readonly,nonatomic) IDEProvisionableEntitlements * baseEntitlements;
//@property (readonly,nonatomic) IDEProvisioningEntitlementsExpansion * entitlementsExpansion;
//@property (readonly,nonatomic) unsigned long long entitlementsDestination;
//@property (readonly,nonatomic) char allowSigningWithoutTeamSelection;
//@property (readonly,nonatomic) char signingRequiresTeam;
//@property (readonly,nonatomic) DVTPortalAppIDFeatures * appIDFeatures;
//@property (readonly,nonatomic) DVTPortalProfilePurpose * provisioningPurpose;
//@property (readonly,nonatomic) char supportsIOSMac;
//+ (id)snapshotWithConfigurationName:(id)v1 provisioningStyle:(long long)v2 team:(id)v3 profileSupport:(long long)v4 platform:(id)v5 sdk:(id)v6 sdkVariant:(id)v7 bundleIdentifier:(id)v8 profileSpecifier:(id)v9 certificateIdentifier:(id)v10 entitlementsFilePath:(id)v11 baseEntitlements:(id)v12 entitlementsExpansion:(id)v13 entitlementsDestination:(unsigned long long)v14 allowSigningWithoutTeamSelection:(char)v15 signingRequiresTeam:(char)v16 appIDFeatures:(id)v17 provisioningPurpose:(id)v18 supportsIOSMac:(char)v19;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestFailureSummary : NSObject {
//    char _isTopLevelFailure;
//    NSArray * _callStackSymbolInfos;
//    NSArray * _failureSteps;
//    NSString * _message;
//    NSString * _detailedDescription;
//    NSString * _issueType;
//    XCTSourceCodeContext * _sourceCodeContext;
//    NSUUID * _uuid;
//    NSArray * _attachments;
//    NSError * _associatedError;
//    NSDate * _timestamp;
//    id _urlRedirector;
//}
//@property (readonly,copy) NSString * message;
//@property (readonly,copy) NSString * fileName;
//@property (readonly) long long lineNumber;
//@property (readonly) DVTTextDocumentLocation * documentLocation;
//@property (readonly) char isPerformanceFailure;
//@property (readonly,copy) NSString * detailedDescription;
//@property (readonly) NSString * issueType;
//@property (readonly) XCTSourceCodeContext * sourceCodeContext;
//@property (readonly,copy) NSArray * callStackSymbolInfos;
//@property (readonly,copy) NSArray * failureSteps;
//@property (readonly,copy) NSUUID * uuid;
//@property (readonly,copy) NSArray * attachments;
//@property (readonly,copy) NSError * associatedError;
//@property (readonly,copy) NSDate * timestamp;
//@property (readonly) char isTopLevelFailure;
//@property id urlRedirector;
//- (id)initWithUUID:(id)v1 message:(id)v2 issueType:(id)v3 detailedDescription:(id)v4 sourceCodeContext:(id)v5 associatedError:(id)v6 attachments:(id)v7 timestamp:(id)v8 isTopLevelFailure:(char)v9;
//- (id)initWithIssue:(id)v1 attachmentsDirectory:(id)v2 isTopLevelFailure:(char)v3;
//- (id)initSystemFailureWithMessage:(id)v1 associatedError:(id)v2;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (id)dictionaryRepresentation;
//- (char)isEqualToTestFailureSummary:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductCoordinator : NSObject<DVTInvalidation> {
//    NSHashTable * _products;
//}
//@property (retain) NSHashTable * products;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)init;
//- (void)primitiveInvalidate;
//- (id)productWithProductIdentifier:(id)v1 productVersions:(id)v2;
//- (id)malformedProductWithArchives:(id)v1;
//- (void)registerProduct:(id)v1;
//- (void)transferProduct:(id)v1 toCoordinator:(id)v2;
//- (void)_forgetProduct:(id)v1 invalidate:(char)v2;
//- (void)invalidateProduct:(id)v1;
//- (void)invalidateProducts:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEEntitlementsProcessor : NSObject {
//    IDEDistributionMethod * _distributionMethod;
//    IDEDistributionItem * _distributionItem;
//    IDEEntitlementsDictionary * _itemEntitlements;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//}
//@property (readonly,nonatomic) IDEDistributionMethod * distributionMethod;
//@property (readonly,nonatomic) IDEDistributionItem * distributionItem;
//@property (readonly,nonatomic) IDEEntitlementsDictionary * itemEntitlements;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) char needsInteraction;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)init;
//- (id)initWithDistributionMethod:(id)v1 distributionItem:(id)v2 itemEntitlements:(id)v3 team:(id)v4;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (char)runWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEXCTestRunFileSerialization : NSObject {
//    _TtC13IDEFoundation28IDEXCTestRunFileTestPlanInfo * _testPlanInfo;
//    NSArray * _testRunSpecificationGroups;
//    NSArray * _codeCoverageBuildableInfos;
//    long long _version;
//}
//@property (readonly) _TtC13IDEFoundation28IDEXCTestRunFileTestPlanInfo * testPlanInfo;
//@property (readonly,copy) NSArray * testRunSpecificationGroups;
//@property (readonly,copy) NSArray * codeCoverageBuildableInfos;
//@property (readonly) long long version;
//+ (id)testRunFileWithDictionaryRepresentation:(id)v1 removingPathPlaceholdersForTestRootPath:(id)v2 derivedDataPath:(id)v3 error:(id *)v4;
//+ (id)testRunFileWithContentsOfURL:(id)v1 derivedDataPath:(id)v2 error:(id *)v3;
//+ (id)fileNameForTestRunFileWithSchemeName:(id)v1 testPlanName:(id)v2 sdkName:(id)v3 architectures:(id)v4;
//- (id)initWithTestPlanInfo:(id)v1 testRunSpecificationGroups:(id)v2 codeCoverageBuildableInfos:(id)v3 version:(long long)v4;
//- (id)dictionaryRepresentationWithPlaceholdersForTestRootPath:(id)v1 derivedDataPath:(id)v2;
//- (char)writeToURL:(id)v1 derivedDataPath:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInitializationErrorRecoveryAttempter : NSObject
//- (char)attemptRecoveryFromError:(id)v1 optionIndex:(unsigned long long)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFoundationTestInitializer : NSObject
//+ (char)initializeTestabilityWithUI:(char)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyAlternateGroupResult : IDEOpenQuicklyResult {
//    IDEOpenQuicklyResult * _primaryResult;
//    NSArray * _alternatesIncludingPrimaryChoice;
//    NSArray * _alternatesExcludingPrimaryChoice;
//}
//@property (readonly) IDEOpenQuicklyResult * primaryResult;
//@property (readonly) NSArray * alternatesIncludingPrimaryChoice;
//@property (readonly) NSArray * alternatesExcludingPrimaryChoice;
//+ (id)flattenAndOrderAlternates:(id)v1;
//+ (id)orderedResutlsByCombiningAlternates:(id)v1;
//+ (id)alternateGroupResultForAlternates:(id)v1;
//- (id)updatedResultForQuery:(id)v1 precision:(long long)v2;
//- (char)isSymbolic;
//- (id)location;
//- (id)sourceSDKFilePath;
//- (char)isFromPoject;
//- (id)flattenToPrimaryResult;
//- (unsigned long long)hashOfResultIdentity;
//- (char)representsSameResultAsAlternateGroupResult:(id)v1;
//- (char)representsSameResult:(id)v1;
//- (id)valueStandingInForForAlternateIdentity;
//- (unsigned long long)hashForAlternateIdentity;
//- (char)representsAlternativeOfResult:(id)v1;
//- (id)childResults;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableManagerConfiguration : NSObject<IDEProvisioningAssetSelectionDataSource> {
//    char _repairBusy;
//    char _finishedLoading;
//    IDEProvisionableManager * _provisionableManager;
//    NSString * _configurationName;
//    NSOrderedSet * _provisioningProfiles;
//    NSOrderedSet * _ineligibleProvisioningProfiles;
//    IDEProvisionableStatusEvaluatorResult * _evaluatorResult;
//    IDEProvisioningUserAction * _repairUserAction;
//    NSError * _repairError;
//    _TtC13IDEFoundation42IDEProvisionableManagerIOSMacConfiguration * _iOSMacConfiguration;
//    NSString * _repairBusyReason;
//}
//@property (retain,nonatomic) NSString * repairBusyReason;
//@property (readonly,nonatomic) IDEProvisionableManager * provisionableManager;
//@property (readonly,nonatomic) NSString * configurationName;
//@property (readonly,nonatomic) NSArray * errors;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicProfile> * provisioningProfile;
//@property (readonly,nonatomic) NSOrderedSet * provisioningProfiles;
//@property (readonly,nonatomic) NSOrderedSet * ineligibleProvisioningProfiles;
//@property (nonatomic,getter=isRepairBusy) char repairBusy;
//@property (readonly,nonatomic) IDEProvisionableStatusEvaluatorResult * evaluatorResult;
//@property (nonatomic) char finishedLoading;
//@property (readonly,nonatomic) char needsRepair;
//@property (readonly,nonatomic) NSSet * repairs;
//@property (retain,nonatomic) IDEProvisioningUserAction * repairUserAction;
//@property (retain,nonatomic) NSError * repairError;
//@property (readonly,nonatomic) _TtC13IDEFoundation42IDEProvisionableManagerIOSMacConfiguration * iOSMacConfiguration;
//@property (readonly) NSObject<IDEProvisioningSigningCertificateSelectionDataSource><IDEProvisioningProfileSelectionDataSource><IDEProvisioningiOSMacBundleIdentifierDataSource> * iOSMacDataSource;
//@property (nonatomic) long long provisioningStyle;
//@property (readonly) char isSigningIdentityChangeable;
//@property (readonly,nonatomic) NSOrderedSet * signingIdentities;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicSigningIdentity> * signingIdentity;
//@property (readonly) long long signingStyle;
//@property (readonly) char wantsTeamSelectionRegardlessOfSigningStyle;
//@property (readonly,nonatomic) char isTeamSelectionRequired;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,getter=isProfileChangeable) char profileChangeable;
//@property (readonly) long long profileSupport;
//@property (readonly,nonatomic) IDEProfileQualification * profileQualification;
//@property (readonly,nonatomic) char showEmptyProfileSelectionPlaceholder;
//@property (readonly) char wantsBundleIdentifierEditing;
//@property (readonly,nonatomic) char wantsBundleIdentifierEditingLabel;
//@property (retain,nonatomic) NSString * bundleIdentifier;
//@property (readonly) char isBundleIdentifierReadOnly;
//@property (readonly,nonatomic) NSString * bundleIdentifierPlaceholder;
//+ (id)configurationWithManager:(id)v1 configurationName:(id)v2 evaluatorResult:(id)v3;
//+ (id)keyPathsForValuesAffectingProvisioningStyle;
//+ (id)keyPathsForValuesAffectingErrors;
//+ (char)isSigningIdentityChangeableForConfiguration:(id)v1 evaluation:(id)v2;
//+ (id)signingIdentitiesForPlatform:(id)v1 provisioningStyle:(long long)v2;
//+ (id)_userDescriptionForSigningIdentityIdentifier:(id)v1;
//+ (id)signingIdentityForConfiguration:(id)v1 evaluation:(id)v2 isSigningIdentityChangeable:(char)v3;
//+ (id)provisioningProfileDownloaderContextForConfiguration:(id)v1 evaluation:(id)v2 bundleIdentifier:(id)v3 error:(id *)v4;
//+ (id)keyPathsForValuesAffectingNeedsRepair;
//- (id)evaluation;
//- (id)_errorsWithRepairIssues;
//- (id)_errorsWithRepairIssuesSuppressed;
//- (id)buildParameters;
//- (id)provisioningProfileIdentifier;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2;
//- (id)provisioningProfileDownloaderContextWithError:(id *)v1;
//- (char)matchesRepairable:(id)v1;
//- (void)waitForRepairable:(id)v1 message:(id)v2;
//- (void)repairable:(id)v1 requiresUserAction:(id)v2;
//- (id)_wrappedRepairError:(id)v1;
//- (void)repairable:(id)v1 completedWithError:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileBlockQualifier : NSObject<IDEProfileQualifier> {
//    char _onlyDisplayOnError;
//    NSString * _userFacingName;
//    NSString * _debugDescription;
//    IDEProfileQualifierResult * _result;
//    void (^ /* unknown block signature */)(void) _block;
//}
//@property (retain,nonatomic) IDEProfileQualifierResult * result;
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) block;
//@property (nonatomic) char onlyDisplayOnError;
//@property (copy,nonatomic) NSString * debugDescription;
//@property (readonly,nonatomic) NSString * userFacingName;
//- (id)initWithUserFacingName:(id)v1 onlyDisplayOnError:(char)v2 block:(void (^ /* unknown block signature */)(void))v3;
//- (id)initWithUserFacingName:(id)v1 block:(void (^ /* unknown block signature */)(void))v2;
//- (char)qualify;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileDevicesQualifier : NSObject<IDEProfileQualifier> {
//    IDEProfileQualifierResult * _result;
//    DVTProvisioningProfile * _profile;
//    NSArray * _devices;
//}
//@property (retain,nonatomic) IDEProfileQualifierResult * result;
//@property (readonly,nonatomic) DVTProvisioningProfile * profile;
//@property (readonly,nonatomic) NSArray * devices;
//@property (readonly,nonatomic) char onlyDisplayOnError;
//@property (readonly,nonatomic) NSString * userFacingName;
//@property (readonly,copy,nonatomic) NSString * debugDescription;
//- (id)initWithProfile:(id)v1 devices:(id)v2;
//- (char)_profileDoesntNeedToMatchDevices;
//- (char)qualify;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyResultBlockGenerator : IDEOpenQuicklyResultGenerator {
//    long long _previousResultsGeneration;
//    IDEOpenQuicklyQuery * _previousResultsQuery;
//    NSArray * _previousResults;
//    DVTFuzzyMatchCandidateBlock * _previousCandidateBlock;
//    DVTFuzzyMatchCandidateBlock * _originalCandidateBlock;
//}
//- (id)initWithCandidates:(id)v1 queryContext:(id)v2 consumer:(id)v3;
//- (void)start;
//- (char)supportsLineNumberMatches;
//- (id)resultForCandidate:(struct DVTFuzzyMatchCandidate *)v1 query:(id)v2 fromIndex:(long long)v3;
//- (id)candidateBlockForQuery:(id)v1;
//- (id)regenerateResults;
//- (void)continueProcessing;
//- (void)updateUserInput:(id)v1 generation:(long long)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEShellCommandBreakpointAction : IDEBreakpointAction {
//    char _waitUntilDone;
//    NSString * _command;
//    NSString * _arguments;
//}
//@property (copy,nonatomic) NSString * command;
//@property (copy,nonatomic) NSString * arguments;
//@property char waitUntilDone;
//+ (id)propertiesAffectingPersistenceState;
//- (id)init;
//- (void)_shellCommandActionCommonInit;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)_extractExpressionsAndMacrosFromCommandAndArguments;
//- (id)_argumentsArrayForBreakpoint:(id)v1;
//- (void)performActionUsingContext:(id)v1 andBreakpoint:(id)v2;
//- (id)_fullPathOfCommand:(int *)v1;
//- (int)_commandValidity:(id)v1;
//- (id)_errorMessageForShellCommandValidity:(int)v1 shellCommand:(id)v2;
//- (id)_taskWithLaunchPath:(id)v1 arguments:(id)v2 consoleAdaptor:(id)v3;
//- (id)_stringForFileHandleData:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)setCommandFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setArgumentsFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setWaitUntilDoneFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestFailureStep : NSObject {
//    NSString * _imageName;
//    NSString * _symbolName;
//    XCTSourceCodeLocation * _location;
//    long long _index;
//    NSString * _uniqueIdentifier;
//    id _urlRedirector;
//}
//@property (readonly,copy) NSString * imageName;
//@property (readonly,copy) NSString * symbolName;
//@property (readonly) XCTSourceCodeLocation * location;
//@property (readonly) long long index;
//@property (readonly,copy) NSString * uniqueIdentifier;
//@property (readonly,copy) DVTTextDocumentLocation * documentLocation;
//@property id urlRedirector;
//- (id)initWithImageName:(id)v1 symbolName:(id)v2 location:(id)v3 index:(long long)v4 uniqueIdentifier:(id)v5;
//- (id)initWithSymbolInfo:(id)v1 failureUUID:(id)v2 index:(long long)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningProfileDownloaderContext : NSObject {
//    DVTPlatform * _platform;
//    NSString * _sdkVariant;
//    NSString * _bundleIdentifier;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSString * _provisionableName;
//    IDEProvisionableStatusEvaluation * _evaluation;
//    DVTProvisioningProfileManager * _profileManager;
//    DVTDeveloperAccountManager * _accountManager;
//    IDEProvisioningTeamManager * _teamManager;
//    IDEProvisioningTeamAccountPairManager * _teamAccountPairManager;
//    IDEProvisioningSessionManager * _sessionManager;
//    DVTPortalCertificateType * _certificateType;
//}
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (retain,nonatomic) DVTPortalCertificateType * certificateType;
//@property (retain,nonatomic) DVTPlatform * platform;
//@property (retain,nonatomic) NSString * bundleIdentifier;
//@property (retain,nonatomic) DVTProvisioningProfileManager * profileManager;
//@property (retain,nonatomic) DVTDeveloperAccountManager * accountManager;
//@property (retain,nonatomic) IDEProvisioningTeamManager * teamManager;
//@property (retain,nonatomic) IDEProvisioningTeamAccountPairManager * teamAccountPairManager;
//@property (retain,nonatomic) IDEProvisioningSessionManager * sessionManager;
//@property (readonly,nonatomic) NSString * sdkVariant;
//@property (readonly,nonatomic) NSString * provisionableName;
//@property (readonly,nonatomic) IDEProvisionableStatusEvaluation * evaluation;
//@property (readonly,nonatomic) NSObject<IDEProvisioningProfileDownloaderPortal> * portal;
//- (id)initWithPlatform:(id)v1 sdkVariant:(id)v2 bundleIdentifier:(id)v3 team:(id)v4 provisionableName:(id)v5 evaluation:(id)v6 profileManager:(id)v7 accountManager:(id)v8 teamManager:(id)v9 teamAccountPairManager:(id)v10 sessionManager:(id)v11;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExecutionActionArchivingProxy : NSObject {
//    NSString * _actionExtensionID;
//    IDEExecutionAction * _proxiedAction;
//}
//@property (readonly) NSString * actionExtensionID;
//@property (readonly) IDEExecutionAction * proxiedAction;
//+ (id)actionProxyForAction:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setActionTypeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addActionContent:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationDisambiguator : NSObject
//+ (id)disambiguatedRunDestinationsWithNameAdditionForRunDestinations:(id)v1 scheme:(id)v2 runDestinationManager:(id)v3;
//+ (id)disambiguatedRunDestinationsWithNameAdditionsForRunDestinations:(id)v1 scheme:(id)v2;
//+ (id)disambiguationAdditionsForDisambiguationInfos:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationWithNameAddition : NSObject<IDERunDestinationRepresentedObject> {
//    char _isWatchDestination;
//    IDERunDestination * _runDestination;
//    NSObject<IDERunDestinationScheme> * _scheme;
//    NSString * _nameAddition;
//}
//@property (readonly) NSString * nameAddition;
//@property (readonly) NSString * fullDisplayName;
//@property (readonly) NSObject<IDERunDestinationScheme> * scheme;
//@property (readonly) IDERunDestination * runDestination;
//@property (readonly) char isWatchDestination;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingFullDisplayName;
//- (id)initWithRunDestination:(id)v1 nameAddition:(id)v2;
//- (id)initWithRunDestination:(id)v1 nameAddition:(id)v2 isWatchDestination:(char)v3 scheme:(id)v4;
//- (id)_nameWithAddition;
//- (id)_baseName;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationDisambiguationInfo : NSObject<NSCopying> {
//    NSString * _deviceOperatingSystemVersion;
//    NSString * _deviceOperatingSystemBuild;
//    NSString * _deviceModelName;
//    NSString * _deviceIdentifier;
//    DVTPlatform * _devicePlatform;
//    NSString * _targetArchitecture;
//    DVTSDK * _targetSDK;
//    DVTSDKVariant * _targetSDKVariant;
//}
//@property (readonly) NSString * deviceOperatingSystemVersion;
//@property (readonly) NSString * deviceOperatingSystemBuild;
//@property (readonly) NSString * deviceModelName;
//@property (readonly) NSString * deviceIdentifier;
//@property (readonly) DVTPlatform * devicePlatform;
//@property (readonly) NSString * targetArchitecture;
//@property (readonly) DVTSDK * targetSDK;
//@property (readonly) DVTSDKVariant * targetSDKVariant;
//- (id)initWithDeviceOperatingSystemVersion:(id)v1 deviceOperatingSystemBuild:(id)v2 deviceModelName:(id)v3 deviceIdentifier:(id)v4 devicePlatform:(id)v5 targetArchitecture:(id)v6 targetSDK:(id)v7 targetSDKVariant:(id)v8;
//- (id)initWithRunDestination:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionContext : NSObject {
//    IDEITunesConnect * _iTunesConnectProxy;
//    IDEDistributionContext * _parent;
//    NSDate * _startDate;
//    NSObject<IDEDistributable> * _archive;
//    DVTSigningCertificateManager * _certificateManager;
//    DVTProvisioningProfileManager * _profileManager;
//    IDEProvisioningTeamManager * _teamManager;
//    DVTDeveloperAccountManager * _accountManager;
//    IDEDistributionMethod * _distributionMethod;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSNumber * _distributionTask;
//    NSNumber * _distributionDestination;
//    IDEDistributionProvisioningEvaluation * _provisioningEvaluation;
//    NSArray * _topLevelDistributionItems;
//    IDEDistributionCoalescedThinningVariantAbstractClass * _firstProcessedDistributionCoalescedThinningVariant;
//    NSDictionary * _processedTopLevelDistributionItems;
//    IDEDistributionLogging * _logging;
//    DVTLogAspect * _logAspect;
//    NSNumber * _uploadSymbols;
//    NSNumber * _uploadBitcode;
//    NSNumber * _compileBitcode;
//    NSNumber * _stripSwiftSymbols;
//    NSNumber * _generateAppStoreInformation;
//    IDEAppStoreSubmissionConfiguration * _appStoreSubmissionConfiguration;
//    IDEITunesConnectConfigurationResponse * _appStoreSubmissionConfigurationResponse;
//    NSArray * _distributionIssues;
//    DVTMutableOrderedDictionary * _itemToEntitlementsProcessorsMap;
//    IDEDistributionProcessingPipeline * _pipeline;
//    IDEITunesConnectApplicationDescription * _applicationRecord;
//    DVTDeveloperAccount * _iTunesConnectAccount;
//    NSURL * _ODRAssetPackBaseURL;
//    NSNumber * _includeODRAssetPackInBundle;
//    IDEDistributionManifest * _distributionManifest;
//    NSString * _thinningChoiceDisplayName;
//    NSString * _thinningChoiceDeviceIdentifier;
//    NSSet * _distributionCoalescedThinningVariants;
//    NSNumber * _archivedProvisioningStyle;
//    NSNumber * _provisioningStyle;
//    IDEDistributionProvisioningManualSigningMap * _manualSigningAssetMap;
//    NSMutableOrderedSet * _certificatesCreated;
//    NSDictionary * _cachedDeviceDisplayNameToCoalescedThinningVariantSet;
//    NSNumber * _registerRequiredDevices;
//    NSDictionary * _infoPlistOverrides;
//    DVTFilePath * _temporaryDirectory;
//    DistributionArchiveValidatedReformatterSelection * _validatedReformatterSelection;
//    NSSet * _allowedInputs;
//    NSSet * _allowedOutputs;
//    NSArray * _stepClasses;
//    NSMutableSet * _itemsWithProfileSelection;
//}
//@property (readonly,nonatomic) NSSet * allowedInputs;
//@property (readonly,nonatomic) NSSet * allowedOutputs;
//@property (readonly,nonatomic) NSArray * stepClasses;
//@property (retain,nonatomic) NSMutableSet * itemsWithProfileSelection;
//@property (readonly,nonatomic) IDEDistributionContext * parent;
//@property (retain,nonatomic) NSDate * startDate;
//@property (retain,nonatomic) NSObject<IDEDistributable> * archive;
//@property (retain,nonatomic) DVTSigningCertificateManager * certificateManager;
//@property (retain,nonatomic) DVTProvisioningProfileManager * profileManager;
//@property (retain,nonatomic) IDEProvisioningTeamManager * teamManager;
//@property (retain,nonatomic) DVTDeveloperAccountManager * accountManager;
//@property (retain,nonatomic) IDEDistributionMethod * distributionMethod;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (retain,nonatomic) NSNumber * distributionTask;
//@property (retain,nonatomic) NSNumber * distributionDestination;
//@property (retain,nonatomic) IDEDistributionProvisioningEvaluation * provisioningEvaluation;
//@property (retain,nonatomic) NSArray * topLevelDistributionItems;
//@property (retain,nonatomic) IDEDistributionCoalescedThinningVariantAbstractClass * firstProcessedDistributionCoalescedThinningVariant;
//@property (retain,nonatomic) NSDictionary * processedTopLevelDistributionItems;
//@property (retain,nonatomic) IDEDistributionLogging * logging;
//@property (retain,nonatomic) DVTLogAspect * logAspect;
//@property (retain,nonatomic) NSNumber * uploadSymbols;
//@property (retain,nonatomic) NSNumber * uploadBitcode;
//@property (retain,nonatomic) NSNumber * compileBitcode;
//@property (retain,nonatomic) NSNumber * stripSwiftSymbols;
//@property (retain,nonatomic) NSNumber * generateAppStoreInformation;
//@property (retain,nonatomic) IDEAppStoreSubmissionConfiguration * appStoreSubmissionConfiguration;
//@property (retain,nonatomic) IDEITunesConnectConfigurationResponse * appStoreSubmissionConfigurationResponse;
//@property (retain,nonatomic) NSArray * distributionIssues;
//@property (retain,nonatomic) DVTMutableOrderedDictionary * itemToEntitlementsProcessorsMap;
//@property (retain,nonatomic) IDEDistributionProcessingPipeline * pipeline;
//@property (retain,nonatomic) IDEITunesConnectApplicationDescription * applicationRecord;
//@property (retain,nonatomic) DVTDeveloperAccount * iTunesConnectAccount;
//@property (retain,nonatomic) NSURL * ODRAssetPackBaseURL;
//@property (retain,nonatomic) NSNumber * includeODRAssetPackInBundle;
//@property (retain,nonatomic) IDEDistributionManifest * distributionManifest;
//@property (retain,nonatomic) NSString * thinningChoiceDisplayName;
//@property (retain,nonatomic) NSString * thinningChoiceDeviceIdentifier;
//@property (retain,nonatomic) NSSet * distributionCoalescedThinningVariants;
//@property (retain,nonatomic) NSNumber * archivedProvisioningStyle;
//@property (retain,nonatomic) NSNumber * provisioningStyle;
//@property (retain,nonatomic) IDEDistributionProvisioningManualSigningMap * manualSigningAssetMap;
//@property (retain,nonatomic) NSMutableOrderedSet * certificatesCreated;
//@property (retain,nonatomic) NSDictionary * cachedDeviceDisplayNameToCoalescedThinningVariantSet;
//@property (retain,nonatomic) NSNumber * registerRequiredDevices;
//@property (retain,nonatomic) NSDictionary * infoPlistOverrides;
//@property (retain,nonatomic) DVTFilePath * temporaryDirectory;
//@property (retain,nonatomic) DistributionArchiveValidatedReformatterSelection * validatedReformatterSelection;
//@property (retain,nonatomic) IDEITunesConnect * iTunesConnectProxy;
//+ (void)initialize;
//- (id)destinationRequirementWithDevices:(id)v1;
//- (id)initWithParent:(id)v1 stepClass:(Class)v2;
//- (id)initWithParent:(id)v1 allowedInputs:(id)v2 allowedOutputs:(id)v3;
//- (id)init;
//- (id)initWithParent:(id)v1 stepClass:(Class)v2 allowedInputs:(id)v3 allowedOutputs:(id)v4;
//- (id)description;
//- (id)nonChainedDescription;
//- (id)flattenedDistributionItems;
//- (char)isInAppContent;
//- (char)strictTeamIDMatch;
//- (id)propertyListRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDeviceThinningTraits : NSObject {
//    NSString * _productType;
//    NSString * _artworkDeviceIdiom;
//    long long _artworkDeviceScaleFactor;
//    long long _artworkDeviceSubtype;
//    long long _devicePerformanceMemoryClass;
//    NSString * _deviceGraphicsFeatureSetClass;
//    NSArray * _deviceGraphicsFeatureSetFallbacks;
//    NSArray * _artworkHostedIdioms;
//    NSString * _displayGamut;
//    NSString * _artworkDynamicDisplayMode;
//    NSString * _deploymentTargetVersion;
//}
//@property (readonly) NSString * productType;
//@property (readonly) NSString * artworkDeviceIdiom;
//@property (readonly) long long artworkDeviceScaleFactor;
//@property (readonly) long long artworkDeviceSubtype;
//@property (readonly) long long devicePerformanceMemoryClass;
//@property (readonly) NSString * deviceGraphicsFeatureSetClass;
//@property (readonly) NSArray * deviceGraphicsFeatureSetFallbacks;
//@property (readonly) NSArray * artworkHostedIdioms;
//@property (readonly) NSString * displayGamut;
//@property (readonly) NSString * artworkDynamicDisplayMode;
//@property (readonly) NSString * deploymentTargetVersion;
//+ (id)findAppropriateMatchForDeploymentVersionInResults:(id)v1 deviceOSVersion:(id)v2 firstVersionForOSVariants:(id)v3;
//+ (id)deviceTraitInfoForProductType:(id)v1 deviceOSVersion:(id)v2 firstVersionForOSVariants:(id)v3 fromPlatform:(id)v4 error:(id *)v5;
//- (id)initWithProductType:(id)v1 artworkDeviceIdiom:(id)v2 artworkDeviceScaleFactor:(long long)v3 artworkDeviceSubtype:(long long)v4 devicePerformanceMemoryClass:(long long)v5 deviceGraphicsFeatureSetClass:(id)v6 deviceGraphicsFeatureSetFallbacks:(id)v7 artworkHostedIdioms:(id)v8 displayGamut:(id)v9 artworkDynamicDisplayMode:(id)v10 deploymentTargetVersion:(id)v11;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEUpgradeTask : NSObject {
//    char _selected;
//    NSString * _title;
//    NSString * _subtitle;
//    NSString * _category;
//    IDEUpgradeContext * _context;
//}
//@property (copy) NSString * category;
//@property (readonly,copy) NSString * title;
//@property (readonly,copy) NSString * subtitle;
//@property (readonly) IDEUpgradeContext * context;
//@property char selected;
//+ (id)metricLogAspect;
//+ (id)analyzeInContext:(id)v1;
//- (id)initWithTitle:(id)v1 subtitle:(id)v2 context:(id)v3;
//- (char)upgrade;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECustomUpgradeTask : IDEUpgradeTask
//@property (readonly) char shouldHandleImmediately;
//- (id)handlerForTask;
//- (void)deferHandlingTask;
//@end
//
//
///*****************************************************************/
//
//@interface IDEdSYMDownloader : NSObject {
//    IDEArchive * _archive;
//    NSURLSession * _urlSession;
//    void (^ /* unknown block signature */)(void) _fileDownloadedCallback;
//    void (^ /* unknown block signature */)(void) _completionCallback;
//    unsigned long long _maximumConcurrentTasks;
//    NSArray * _downloadTasks;
//}
//@property (copy) NSArray * downloadTasks;
//@property (readonly) IDEArchive * archive;
//@property (readonly) NSURLSession * urlSession;
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) fileDownloadedCallback;
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) completionCallback;
//@property (nonatomic) unsigned long long maximumConcurrentTasks;
//- (id)initWithArchive:(id)v1;
//- (void)initiateDownloadWithAccount:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebuggerCommandBreakpointAction : IDEBreakpointAction {
//    NSString * _consoleCommand;
//}
//@property (copy,nonatomic) NSString * consoleCommand;
//+ (id)propertiesAffectingPersistenceState;
//- (id)init;
//- (void)_debuggerCommandActionCommonInit;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)performActionUsingContext:(id)v1 andBreakpoint:(id)v2;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)setConsoleCommandFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuilder : DVTOperation<IDEBuildTaskCallbacks> {
//    long long _buildCommand;
//    IDEBuildableSnapshot * _snapshot;
//    NSArray * _exclusiveSourceFiles;
//    NSArray * _warningsToEmit;
//    NSString * _uniqueIdentifier;
//    long long _result;
//    IDEActivityLogSection * _activityLogSection;
//    NSString * _localizedDescription;
//    IDEBuildOperationQueueSet * _buildTaskQueueSet;
//    char _restorePersistedBuildResults;
//    NSObject<DVTCancellationBlockCompletion> * _cancellationToken;
//    NSMutableSet * _generatedFileInfo;
//    NSMutableArray * _buildTaskStatistics;
//    NSDictionary * _copiedFilePathsFromBuildOperation;
//    NSDictionary * _copiedFilePathsFromBuildableProduct;
//    DVTSystemStatisticsMeasurement * _initialSystemStats;
//    char _dontActuallyRunCommands;
//    DVTDynamicLogController * _builderTimingDataLogController;
//    IDEBuildStatisticsSection * _buildStatisticsSection;
//    IDEBuilderHarvestedInfo * _harvestedInfo;
//    NSObject<IDEBuilderCallbacks> * _callbackDelegate;
//    IDESchemeActionResult * _schemeBuildResult;
//}
//@property (nonatomic) long long result;
//@property (retain,nonatomic) IDEActivityLogSection * activityLogSection;
//@property (copy) NSDictionary * copiedFilePathsFromBuildableProduct;
//@property (retain) IDESchemeActionResult * schemeBuildResult;
//@property (readonly) long long buildCommand;
//@property (readonly) IDEBuildableSnapshot * snapshot;
//@property (copy) NSArray * warningsToEmit;
//@property (readonly,copy) NSString * uniqueIdentifier;
//@property (copy) NSString * localizedDescription;
//@property (readonly) IDEBuildOperationQueueSet * buildTaskQueueSet;
//@property (readonly) NSArray * exclusiveSourceFiles;
//@property (readonly) char restorePersistedBuildResults;
//@property (readonly) NSSet * generatedFileInfo;
//@property char dontActuallyRunCommands;
//@property (retain) DVTDynamicLogController * builderTimingDataLogController;
//@property (retain) IDEBuildStatisticsSection * buildStatisticsSection;
//@property (copy) NSDictionary * copiedFilePathsFromBuildOperation;
//@property (readonly) IDEBuilderHarvestedInfo * harvestedInfo;
//@property NSObject<IDEBuilderCallbacks> * callbackDelegate;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initForBuildCommand:(long long)v1 withBuildableSnapshot:(id)v2 buildTaskQueueSet:(id)v3 buildOnlyTheseFiles:(id)v4 restorePersistedBuildResults:(char)v5;
//- (id)init;
//- (void)prepareForBuilding;
//- (void)main;
//- (void)primitiveMain;
//- (void)cleanupAfterBuilding;
//- (void)buildTaskDidStartExecuting:(id)v1;
//- (void)buildTask:(id)v1 activityLogSectionDidChange:(id)v2;
//- (void)buildTask:(id)v1 didSetExitCode:(int)v2;
//- (void)buildTaskDidUpdateStatus:(id)v1;
//- (void)buildTask:(id)v1 addsPostprocessingBlocks:(id)v2;
//- (void)addGeneratedFileInfo:(id)v1;
//- (void)_logBuilderTimingDataIfNecessary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuilderHarvestedInfo : NSObject {
//    DVTMacroExpansionScope * _macroExpansionScope;
//    NSString * _threadSanitizerMessage;
//    char _isImmutable;
//}
//@property (copy) DVTMacroExpansionScope * macroExpansionScope;
//@property (copy) NSString * threadSanitizerMessage;
//@property (readonly) char isImmutable;
//- (id)init;
//- (void)makeImmutable;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuilderGeneratedFileInfo : NSObject<NSCoding> {
//    long long _buildCommand;
//    DVTFilePath * _sourceFilePath;
//    DVTFilePath * _generatedFilePath;
//    long long _commandResult;
//    NSString * _errorString;
//    IDEActivityLogSection * _commandLogSection;
//}
//@property (readonly) long long buildCommand;
//@property (readonly) DVTFilePath * sourceFilePath;
//@property (readonly) DVTFilePath * generatedFilePath;
//@property (readonly) long long commandResult;
//@property (readonly) NSString * errorString;
//@property (readonly) IDEActivityLogSection * commandLogSection;
//- (id)initWithBuildCommand:(long long)v1 sourceFilePath:(id)v2 generatedFilePath:(id)v3 commandResult:(long long)v4 errorString:(id)v5 commandLogSection:(id)v6;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspace : IDEXMLPackageContainer<IDEBuildNoticeWorkspace,IDEClientTracking,IDEIssueLogDataSource,IDEProvisionableProvider> {
//    NSString * _untitledName;
//    IDEWorkspaceArena * _workspaceArena;
//    DVTFilePath * _headerMapFilePath;
//    IDEExecutionEnvironment * _executionEnvironment;
//    IDEContainerQuery * _containerQuery;
//    DVTObservingToken * _containerQueryObservingToken;
//    NSMutableSet * _referencedContainers;
//    NSHashTable * _fileRefsWithContainerLoadingIssues;
//    IDEActivityLogSection * _containerLoadingIntegrityLog;
//    NSMutableSet * _customDataStores;
//    IDEWorkspaceUserSettings * _userSettings;
//    IDEWorkspaceSharedSettings * _sharedSettings;
//    NSMapTable * _blueprintProviderObserverMap;
//    NSMapTable * _blueprintProviderEditedObserverMap;
//    NSMutableSet * _referencedBlueprints;
//    char _initialContainerScanComplete;
//    NSMutableArray * _referencedRunnableBuildableProducts;
//    IDERunContextManager * _runContextManager;
//    IDELogManager * _logManager;
//    IDEIssueManager * _issueManager;
//    IDENoticeCollator * _noticeCollator;
//    _TtC13IDEFoundation22IDEBuildNoticeProvider * _buildNoticeProvider;
//    IDEBreakpointManager * _breakpointManager;
//    IDETestManager * _testManager;
//    _TtC16DVTDocumentation23DVTDocumentationManager * _documentationManager;
//    IDEContainerQuery * _indexableSourceQuery;
//    DVTObservingToken * _indexableSourceQueryObservingToken;
//    NSMapTable * _observedIndexableSourcesToObservingTokensTable;
//    IDEIndex * _index;
//    NSMutableDictionary * _identifiersToIndexablesPendingRegistration;
//    IDEDeviceInstallWorkspaceMonitor * _deviceInstallWorkspaceMonitor;
//    IDEProvisioningWorkspaceMonitor * _provisioningWorkspaceMonitor;
//    IDESourceControlWorkspaceMonitor * _sourceControlWorkspaceMonitor;
//    IDEProvisioningManager * _provisioningManager;
//    IDELocalizationManager * _localizationManager;
//    _TtC13IDEFoundation30IDEStructureEditingCoordinator * _structureEditingMoveCoordinator;
//    NSNumber * _shouldUseLegacyBuildSystem;
//    NSObject<IDEBuildSystemService> * _buildSystemService;
//    DVTNotificationToken * _buildSystemSettingsNotificationToken;
//    DVTFilePath * _wrappedContainerPath;
//    IDEContainer<IDECustomDataStoring> * _wrappedContainer;
//    DVTObservingToken * _wrappedContainerValidObservingToken;
//    DVTObservingToken * _newWrappedContainerObservingToken;
//    NSHashTable * _pendingReferencedFileReferences;
//    NSHashTable * _pendingReferencedContainers;
//    DVTNotificationToken * _holdFilesOnAppActivationNotificationToken;
//    IDEConcreteClientTracker * _clientTracker;
//    NSHashTable * _fileReferencesForProblem8727051;
//    DVTObservingToken * _finishedLoadingObservingToken;
//    NSDictionary * _Problem9887530_preferredStructurePaths;
//    char _simpleFilesFocused;
//    id _openingPerformanceMetricIdentifier;
//    DVTStackBacktrace * _finishedLoadingBacktrace;
//    NSMutableOrderedSet * _initialOrderedReferencedBlueprintProviders;
//    char _hasPostedIndexingRegistrationBatchNotification;
//    char _didFinishLoadingFirstStage;
//    char _finishedLoading;
//    char _postLoadingPerformanceMetricsAllowed;
//    char _willInvalidate;
//    char _pendingFileReferencesAndContainers;
//    char _didProcessFileReferencesForProblem8727051;
//    char _isCleaningBuildFolder;
//    char _indexingAndRefactoringRestartScheduled;
//    char _indexCreationInFlight;
//    char _didFinishBuildingInitialBlueprintProviderOrderedSet;
//    NSMapTable * _pendingExecutionNotificationTokens;
//    char _isWaitingForSourcePackages;
//    char _wasLoadedForUIContext;
//    char _hostsOnlyWrappedContainer;
//    char _hostsOnlyXcode3Project;
//    char _hostsOnlyPackages;
//    char _hostsOnlyPlayground;
//    char _isPotentiallyClosing;
//    IDEDynamicContentRootGroup * _dynamicContentRootGroup;
//    NSArray * _sourcePackageLoadingErrors;
//    IDEActivityLogSection * _sourcePackageResolutionIssueLog;
//    IDETextFragmentIndex * _textFragmentIndex;
//    IDERefactoring * _refactoring;
//    IDEWorkspaceUpgradeTasksController * _deferredUpgradeTasksController;
//    NSDate * _icloudDriveLastHeldDate;
//    NSString * _nameOverride;
//    NSObject<IDEActiveRunContextStoring> * _activeRunContextStore;
//}
//@property (retain) NSArray * namedBatchFindScopes;
//@property (readonly) IDENoticeCollator * noticeCollator;
//@property (readonly) NSObject<IDEBuildNoticeLogSection> * latestBuildLogForBuildNoticeProvider;
//@property (retain,nonatomic) IDEWorkspaceArena * workspaceArena;
//@property (retain) IDEDynamicContentRootGroup * dynamicContentRootGroup;
//@property (retain) IDEDeviceInstallWorkspaceMonitor * deviceInstallWorkspaceMonitor;
//@property (retain) IDEProvisioningWorkspaceMonitor * provisioningWorkspaceMonitor;
//@property (retain) IDESourceControlWorkspaceMonitor * sourceControlWorkspaceMonitor;
//@property (retain) IDEIndex * index;
//@property char initialContainerScanComplete;
//@property (nonatomic) char finishedLoading;
//@property (nonatomic) char pendingFileReferencesAndContainers;
//@property (readonly) IDEConcreteClientTracker * clientTracker;
//@property (retain) IDERunContextManager * runContextManager;
//@property (retain) IDEExecutionEnvironment * executionEnvironment;
//@property (retain) IDEBreakpointManager * breakpointManager;
//@property (retain,nonatomic) IDEWorkspaceUserSettings * userSettings;
//@property (retain,nonatomic) IDEWorkspaceSharedSettings * sharedSettings;
//@property (retain) IDETestManager * testManager;
//@property (retain,nonatomic) IDEProvisioningManager * provisioningManager;
//@property (retain) _TtC16DVTDocumentation23DVTDocumentationManager * documentationManager;
//@property (retain) IDEWorkspaceUpgradeTasksController * deferredUpgradeTasksController;
//@property char hostsOnlyXcode3Project;
//@property char hostsOnlyPackages;
//@property char hostsOnlyPlayground;
//@property (readonly) char shouldShowSwiftDeprecationWarning;
//@property (copy) NSDate * icloudDriveLastHeldDate;
//@property (retain) NSString * nameOverride;
//@property char hostsOnlyWrappedContainer;
//@property (nonatomic) char isPotentiallyClosing;
//@property (retain) NSObject<IDEWorkspaceDelegate> * workspaceDelegate;
//@property (retain) NSObject<IDEActiveRunContextStoring> * activeRunContextStore;
//@property (readonly) NSString * name;
//@property (readonly) NSSet * referencedContainers;
//@property (readonly) NSSet * referencedBlueprintProviders;
//@property (readonly) NSSet * referencedBlueprints;
//@property (readonly) NSSet * referencedSourcePackages;
//@property (readonly) NSSet * referencedRemoteSourcePackages;
//@property char isWaitingForSourcePackages;
//@property (copy) NSArray * sourcePackageLoadingErrors;
//@property (copy) IDEActivityLogSection * sourcePackageResolutionIssueLog;
//@property (readonly) NSSet * customDataStores;
//@property (readonly) NSArray * notificationPayloadFileReferences;
//@property (readonly) IDELogManager * logManager;
//@property (readonly) IDEIssueManager * issueManager;
//@property (readonly) IDENoticeCollator * noticeCollator;
//@property (readonly) IDETextFragmentIndex * textFragmentIndex;
//@property (readonly) IDERefactoring * refactoring;
//@property (readonly) IDELocalizationManager * localizationManager;
//@property (readonly) NSObject<IDEBuildSystemService> * buildSystemServiceProvider;
//@property (readonly) NSObject<IDEBuildSystemService> * buildSystemService;
//@property (readonly) _TtC13IDEFoundation30IDEStructureEditingCoordinator * structureEditingMoveCoordinator;
//@property (nonatomic) char wasLoadedForUIContext;
//@property (retain,nonatomic) NSNumber * shouldUseLegacyBuildSystem;
//@property (readonly) char usesModernBuildSystem;
//@property (readonly) char wantsModernBuildSystem;
//@property (readonly) char supportsSourcePackages;
//@property (readonly) NSSet * referencedRunnableBuildableProducts;
//@property (readonly,nonatomic) char postLoadingPerformanceMetricsAllowed;
//@property (readonly) DVTFilePath * wrappedContainerPath;
//@property (readonly,getter=isSimpleFilesFocused) char simpleFilesFocused;
//@property (readonly) NSString * representingTitle;
//@property (readonly) DVTFilePath * representingFilePath;
//@property (readonly) IDEContainer<IDECustomDataStoring> * representingCustomDataStore;
//@property (readonly) IDEActivityLogMessage * swiftDeprecationLogMessage;
//@property char isCleaningBuildFolder;
//@property (readonly) char isCancelling;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) IDEActivityLogSection * issueLog;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly,nonatomic) NSSet * provisionables;
//@property (readonly,nonatomic) NSSet * provisionableDestinations;
//+ (id)createGlobalScopeStore;
//+ (id)globalScopeStore;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (char)automaticallyNotifiesObserversOfFileRefsWithContainerLoadingIssues;
//+ (id)rootElementName;
//+ (id)xmlArchiveFileName;
//+ (id)containerFileDataType;
//+ (id)containerTypeDisplayName;
//+ (id)_workspaceFileExtension;
//+ (id)keyPathsForValuesAffectingContainsPackageReferences;
//+ (id)keyPathsForValuesAffectingReferencedSourcePackages;
//+ (id)keyPathsForValuesAffectingReferencedRemoteSourcePackages;
//+ (id)keyPathsForValuesAffectingName;
//+ (id)keyPathsForValuesAffectingRepresentingFilePath;
//+ (id)keyPathsForValuesAffectingRepresentingTitle;
//+ (id)keyPathsForValuesAffectingHostsOnlyXcode3Project;
//+ (id)keyPathsForValuesAffectingHostsOnlyPlayground;
//+ (id)keyPathsForValuesAffectingRepresentingCustomDataStore;
//+ (char)_shouldTrackReadOnlyStatus;
//+ (id)keyPathsForValuesAffectingProvisionables;
//+ (id)keyPathsForValuesAffectingProvisionableDevices;
//- (id)ideIndex_buildParametersForIndexingBlueprint:(id)v1 synthesizedMacroOverrides:(id)v2;
//- (id)ideIndex_bestSchemeForBlueprint:(id)v1;
//- (id)ideIndex_runDestinationForIndexingWithScheme:(id)v1;
//- (id)ideIndex_configurationNameForIndexingBlueprint:(id)v1 scheme:(id)v2;
//- (id)ideModelObjectTypeIdentifier;
//- (id)latestSourcePackageVersionFromTags:(id)v1;
//- (id)beginSourcePackagePreflightResolutionWithReference:(id)v1 delegate:(id)v2 error:(id *)v3;
//- (void)endSourcePackagePreflightResolution:(id)v1;
//- (id)observeLatestBuildLogIdentityDidChange:(void (^ /* unknown block signature */)(void))v1;
//- (id)activeBlueprintLogSectionIDs;
//- (id)makeLogStoreForNoticeLogs;
//- (id)observeActiveBlueprintLogSectionIDs:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeActiveSchemeDidChange:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeBuildImplicitDependenciesDidChange:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeActiveRunDestinationDidChange:(void (^ /* unknown block signature */)(void))v1;
//- (id)localScopeStore;
//- (id)newScriptingObjectOfClass:(Class)v1 forValueForKey:(id)v2 withContentsValue:(id)v3 properties:(id)v4;
//- (id)sdefSupport_schemesForDocument:(id)v1;
//- (id)sdefSupport_activeSchemeForDocument:(id)v1;
//- (void)setSdefSupport_activeScheme:(id)v1;
//- (id)_disambiguatedRunDestinations;
//- (id)sdefSupport_runDestinationsForDocument:(id)v1;
//- (id)sdefSupport_activeRunDestinationForDocument:(id)v1;
//- (void)setSdefSupport_activeRunDestination:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)_openingPerformanceMetricIdentifier;
//- (void)_addPendingReferencedFileReference:(id)v1;
//- (void)_removePendingReferencedFileReference:(id)v1;
//- (void)_addPendingReferencedContainerPath:(id)v1;
//- (void)_removePendingReferencedContainerPath:(id)v1;
//- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
//- (void)_handleContainerResolutionFailureForFileReference:(id)v1;
//- (void)_setFileRefsWithContainerLoadingIssues:(id)v1;
//- (void)analyzeModelForIssues;
//- (void)_validateSchemeOptionReference:(id)v1 scheme:(id)v2 referenceDisplayType:(id)v3;
//- (void)holdOnDiskFilesForICloudDriveIfNecessary;
//- (char)_shouldLoadUISubsystems;
//- (void)_setupWorkspaceArenaIfNeeded;
//- (void)_finishLoadingAsynchronously:(char)v1 shouldUpgradeFromSimpleFilesFocused:(char)v2;
//- (void)_checkIfHasFinishedLoading;
//- (void)_containerDidLoad;
//- (void)_buildProductsLocationDidChange;
//- (id)initWithFilePath:(id)v1 extension:(id)v2 workspace:(id)v3 options:(id)v4 error:(id *)v5;
//- (void)_setWrappedContainerPath:(id)v1;
//- (id)_wrappedPlaygroundContainer;
//- (char)wrappedContainerConformsToProtocol:(id)v1;
//- (id)_wrappingContainerPath;
//- (char)_configureWrappedWorkspaceWithError:(id *)v1;
//- (void)_changeContainerFilePath:(id)v1 inContext:(id)v2;
//- (void)_changeContainerFilePath:(id)v1 inContext:(id)v2 upgradeToWorkspace:(char)v3;
//- (char)_setContainerFilePath:(id)v1 upgradeToWorkspace:(char)v2 error:(id *)v3;
//- (char)setContainerFilePath:(id)v1 error:(id *)v2;
//- (void)_setupBuildCompletedNotificationForExecutionEnvironment:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (char)_cancelOngoingBuildWithCompletionBlockIfNeeded:(void (^ /* unknown block signature */)(void))v1;
//- (id)registerClientWithName:(id)v1 promptForCancellation:(char)v2 terminationSignpost:(void (^ /* unknown block signature */)(void))v3 cancellationBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)registerUncancellableClientWithName:(id)v1 terminationSignpost:(void (^ /* unknown block signature */)(void))v2;
//- (id)clientsRequiringCancellationPrompt;
//- (id)clientsNotSupportingCancellation;
//- (void)cancelTrackedClients;
//- (void)_setFileRefsForProblem8727051:(id)v1;
//- (void)_processFileReferencesForProblem8727051;
//- (id)_Problem9887530_wrappedContainerFileReferences:(id)v1 forPath:(id)v2;
//- (id)_Problem9887530_preferredStructurePathsForContainerToContainerFileReferences:(id)v1;
//- (id)_Problem9887530_preferredStructurePaths;
//- (id)_Problem9887530_preferredStructurePathForContainerAtPath:(id)v1;
//- (void)_addBlueprintProviderToOrderedSet:(id)v1;
//- (void)_setupContainerQueries;
//- (void)_setupHeaderMapPath;
//- (id)buildableProductsForProductName:(id)v1;
//- (id)buildableProductsForProductWithModuleName:(id)v1;
//- (void)_referencedBlueprintsDidUpdateForProvider:(id)v1;
//- (void)_referencedBlueprintProviderDidEdit:(id)v1;
//- (void)invokeChangingValueForKey:(id)v1 fromSet:(id)v2 toSet:(id)v3 block:(void (^ /* unknown block signature */)(void))v4;
//- (void)_referencedContainersDidUpdate;
//- (id)containerGraphOrderForBlueprintProviders:(id)v1;
//- (char)containsSwiftPackages;
//- (char)fileIsMemberOfRemoteSourcePackage:(id)v1;
//- (id)referencedSourcePackageForURL:(id)v1;
//- (id)likelyAttachToTargetRunnableBuildableNames;
//- (id)blueprintsContainingFilePaths:(id)v1;
//- (void)_setupLogManagerIfNeeded;
//- (void)_setupIssueManagerIfNeeded;
//- (void)_invalidateBuildSystemService;
//- (id)displayName;
//- (float)archiveVersion;
//- (float)maxSupportedArchiveVersion;
//- (id)_subitemsForUnarchivedSubitems:(id)v1;
//- (void)_setupExecutionEnvironment;
//- (void)_setHostsOnlyPlayground:(char)v1;
//- (void)_primitiveSetSimpleFilesFocused:(char)v1;
//- (void)_setSimpleFilesFocused:(char)v1;
//- (void)_setWrappedContainer:(id)v1;
//- (void)_updateWrappedContainer;
//- (void)primitiveInvalidate;
//- (void)_handleIndexableSourcesChange:(id)v1;
//- (void)_scheduleIndexingAndRefactoringRestart;
//- (void)_restartIndexingAndRefactoring;
//- (void)tearDownIndexAndRefactoring;
//- (void)_setupDeviceInstallWorkspaceMonitor;
//- (void)_setupProvisioningWorkspaceMonitor;
//- (void)_initializeSourceControlWorkspaceMonitor;
//- (void)_setupSourceControlWorkspaceMonitorIfNeeded;
//- (void)_setupWorkspaceUpgradeTasksController;
//- (void)_scheduleWorkspaceUpgradeTasksController:(id)v1;
//- (void)initializeIndexAndRefactoring;
//- (void)didCreateIndex:(id)v1;
//- (void)_enqueueRegistrationFromPendingIndexables;
//- (void)_handleIndexablesChange:(id)v1;
//- (id)buildableProductsForBaseName:(id)v1;
//- (void)notifyBuildSystemServiceThatBlueprintProviderDidChange:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDynamicContentRootGroup : IDEGroup
//- (char)canStructureEditName;
//- (char)canStructureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2;
//- (char)canStructureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (char)canStructureEditRemoveSubitemsAtIndexes:(id)v1;
//- (char)canStructureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildableContext : NSObject {
//    NSObject<IDEBuildable> * _buildable;
//    NSMutableDictionary * _supportedVariants;
//    NSMutableDictionary * _buildablePlatformsImpliedByVariants;
//    NSMutableDictionary * _targetedDeviceFamilies;
//    NSMutableDictionary * _supportedPlatforms;
//    NSMutableDictionary * _buildableArchitectures;
//    NSMutableDictionary * _availableArchitectures;
//    NSMutableDictionary * _productTypes;
//}
//@property (retain,nonatomic) NSObject<IDEBuildable> * buildable;
//@property (retain,nonatomic) NSMutableDictionary * supportedVariants;
//@property (retain,nonatomic) NSMutableDictionary * buildablePlatformsImpliedByVariants;
//@property (retain,nonatomic) NSMutableDictionary * targetedDeviceFamilies;
//@property (retain,nonatomic) NSMutableDictionary * supportedPlatforms;
//@property (retain,nonatomic) NSMutableDictionary * buildableArchitectures;
//@property (retain,nonatomic) NSMutableDictionary * availableArchitectures;
//@property (retain,nonatomic) NSMutableDictionary * productTypes;
//- (id)initWithBuildable:(id)v1;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (void)calculateSupportedVariants:(id *)v1 andBuildablePlatformsImpliedByVariants:(id *)v2 withBuildParameters:(id)v3;
//- (void)createAndCacheValuesForBuildParameters:(id)v1;
//- (id)supportedVariantsWithBuildParameters:(id)v1;
//- (id)buildablePlatformsImpliedByVariantsWithBuildParameters:(id)v1;
//- (id)targetedDeviceFamiliesWithBuildParameters:(id)v1;
//- (id)supportedPlatformsForBuildParameters:(id)v1;
//- (id)buildableArchitecturesWithBuildParameters:(id)v1;
//- (id)availableArchitecturesWithBuildParameters:(id)v1;
//- (id)productTypeWithBuildParameters:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInMemoryActivityLogRecord : IDEActivityLogRecord {
//    DVTFileDataType * _documentType;
//    IDEActivityLogObservableRecord * _primaryObservable;
//    char _hasPrimaryLog;
//    char _hasAuxiliaryLog;
//    char _hasTests;
//    char _hasCoverageData;
//    char _hasTimelineData;
//    char _isImported;
//    char _disablesSourceIntegration;
//    NSObject<IDELogStoreManageable> * _fullLog;
//}
//@property (retain) NSObject<IDELogStoreManageable> * fullLog;
//+ (id)keyPathsForValuesAffectingPrimaryObservable;
//+ (id)keyPathsForValuesAffectingIsRecording;
//+ (id)keyPathsForValuesAffectingTimeStoppedRecording;
//- (id)initWithLog:(id)v1 parameters:(id)v2;
//- (id)logStoreManageable;
//- (id)fullLogWithError:(id *)v1;
//- (id)fullLogStoreManageableWithError:(id *)v1;
//- (id)fullLogIfInMemory;
//- (char)isRecording;
//- (id)domainType;
//- (id)uniqueIdentifier;
//- (id)title;
//- (double)timeStartedRecording;
//- (id)documentType;
//- (id)signature;
//- (id)primaryLogItems;
//- (id)auxiliaryLogItems;
//- (id)logSectionForItem:(id)v1 error:(id *)v2;
//- (id)coverageReportFilePromise;
//- (id)coverageArchiveFilePromise;
//- (id)auxiliaryLogWithError:(id *)v1;
//- (id)buildMetricsReportFilePath;
//- (double)timeStoppedRecording;
//- (id)onDiskPath;
//- (id)description;
//- (id)primaryObservable;
//- (char)hasPrimaryLog;
//- (char)hasAuxiliaryLog;
//- (char)hasTests;
//- (char)hasCoverageData;
//- (char)hasTimelineData;
//- (char)isImported;
//- (void)setIsImported:(char)v1;
//- (char)disablesSourceIntegration;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInMemoryLogStore : IDELogStore
//+ (id)inMemoryStore;
//- (id)addLog:(id)v1 parameters:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)removeLogRecord:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)setPreserveOldLogs:(char)v1;
//- (char)preserveOldLogs;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationProfile : NSObject {
//    IDEWorkspaceArenaSnapshot * _workspaceArenaSnapshot;
//    IDEScheme * _scheme;
//    NSArray * _runDestinations;
//    double _timeTaken;
//}
//+ (void)generateProfileForWorkspaceArenaSnapshot:(id)v1 scheme:(id)v2 sortedRunDestinations:(id)v3 timeTaken:(double)v4;
//- (id)initWithWorkspaceArenaSnapshot:(id)v1 scheme:(id)v2 sortedRunDestinations:(id)v3 timeTaken:(double)v4;
//- (id)_runDestinationDictionaryFor:(id)v1;
//- (id)_deviceDictionaryFor:(id)v1;
//- (void)generateProfile;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningBasicTeam : NSObject<IDEProvisioningBasicTeam> {
//    char _freeProvisioningTeam;
//    NSString * _teamID;
//    NSString * _teamName;
//}
//@property (readonly,nonatomic) NSString * teamID;
//@property (readonly,nonatomic) NSString * teamName;
//@property (nonatomic,getter=isFreeProvisioningTeam) char freeProvisioningTeam;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)basicTeamWithID:(id)v1 name:(id)v2;
//- (id)initWithTeamID:(id)v1 teamName:(id)v2;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningTeamReference : NSObject {
//    NSObject<IDEProvisioningBasicTeam> * _team;
//}
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//- (id)initWithTeam:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionConsoleLogger : DVTConsoleLogger {
//    unsigned long long _exclusiveLogLevel;
//}
//@property (readonly) unsigned long long exclusiveLogLevel;
//- (id)initWithExclusiveLogLevel:(unsigned long long)v1;
//- (void)logMessage:(id)v1 forAspect:(id)v2 logLevel:(unsigned long long)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDECapabilitiesContext : NSObject<IDEPortalInfoDelegate> {
//    char _internal;
//    NSObject<IDEEntitlementsCoordination> * _entitlementsCoordinator;
//    NSObject<IDEInfoPlistCoordination> * _infoPlistCoordinator;
//    NSObject<IDEBuildSettingsCoordination> * _buildSettingsCoordinator;
//    NSObject<IDEAppIDFeatureCoordination> * _appIDFeatureCoordinator;
//    NSObject<IDELinkedFrameworksCoordination> * _linkedFrameworksCoordinator;
//    NSString * _platformIdentifier;
//    NSString * _productTypeIdentifier;
//    NSString * _bundleIdentifier;
//    NSObject<IDEBlueprint> * _blueprint;
//    NSArray * _capabilityItemModels;
//    NSString * _buildConfiguration;
//}
//@property (readonly) NSObject<IDEEntitlementsCoordination> * entitlementsCoordinator;
//@property (readonly) NSObject<IDEInfoPlistCoordination> * infoPlistCoordinator;
//@property (readonly) NSObject<IDEBuildSettingsCoordination> * buildSettingsCoordinator;
//@property (readonly) NSObject<IDEAppIDFeatureCoordination> * appIDFeatureCoordinator;
//@property (readonly) NSObject<IDELinkedFrameworksCoordination> * linkedFrameworksCoordinator;
//@property (readonly) NSString * platformIdentifier;
//@property (readonly) NSString * productTypeIdentifier;
//@property (readonly) NSString * bundleIdentifier;
//@property (readonly,getter=isInternal) char internal;
//@property (readonly) NSObject<IDEBlueprint> * blueprint;
//@property (readonly) NSArray * capabilityItemModels;
//@property (readonly) NSString * buildConfiguration;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * selectedProvisioningTeam;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)projectItemExtensions;
//+ (id)allCapabilityItems;
//+ (id)projectItemExtensionsForPlatform:(id)v1;
//+ (id)capabilityItemsForPlatformIdentifier:(id)v1;
//+ (id)appIDFeaturesBasedOnEntitlements:(id)v1 availableCapabilities:(id)v2;
//- (id)expandEntitlements:(id)v1 expansion:(id)v2 error:(id *)v3;
//- (id)appIDFeatureStateBasedOnCapabilitiesAndEntitlements;
//- (id)appIDFeatureStateBasedOnCapabilitiesAndEntitlementsForEntitlements:(id)v1 expansion:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
@interface IDELaunchParametersSnapshot : NSObject {
    //struct anonymous_type_14 _uninitializedFlags;
    char _debugPauseAtEntry;
    char _enableAddressSanitizer;
    char _enableThreadSanitizer;
    char _isLaunchedForTesting;
    char _suppressSimulatorApplication;
    char _enableMallocStackLoggingDuringAttach;
    char _queueDebuggingEnabled;
    char _enableMallocStackLoggingLiteForXPCServices;
    char _memoryGraphOnResourceException;
    char _allowDeviceSensorReplayData;
    char _skipInstallForTest;
    char _askOnLaunchChangedRunnable;
    char _allowLocationSimulation;
    char _showNonLocalizedStrings;
    char _debugAsAService;
    char _usingCommandLineUnitTesting;
    char _debugXPCServices;
    char _debugAppExtensions;
    char _viewDebuggingEnabled;
    char _insertViewDebuggingDylibOnLaunch;
    char _shouldGenerateRuntimeProfile;
    char _stopOnEveryThreadSanitizerIssue;
    char _stopOnEveryUBSanitizerIssue;
    char _stopOnEveryMainThreadCheckerIssue;
    char _enableUBSanitizer;
    char _mallocScribble;
    char _mallocGuardEdges;
    char _guardMalloc;
    char _NSZombieEnabled;
    char _mallocStackLogging;
    char _mallocStackLoggingLite;
    char _skipInternalInstallSDKCheck;
    int _debugserverPort;
    int _enableGPUShaderValidationMode;
    int _launchStyle;
    int _runnableType;
    unsigned int _debugProcessAsUID;
    int _enableGPUFrameCaptureMode;
    int _enableGPUValidationMode;
    int _debugServiceFD;
    int _runnableAppExtensionHostRunMode;
    int _internalIOSLaunchStyle;
    NSMutableDictionary * _testingEnvironmentVariables;
    NSDictionary * _environmentVariables;
    DVTFilePath * _runnableLocation;
    DVTFilePath * _filePathToBinary;
    NSString * _toolchainLLDBFrameworkPath;
    NSArray * _commandLineArgs;
    NSString * _customLLDBInitFile;
    NSString * _launchdServiceSpecifier;
    NSString * _debugserverConnectionAddress;
    long long _attachingToiOSApp;
    //IDERuntimeProfileInfo * _runtimeProfileInfo;
    NSString * _deviceSensorReplayFile;
    //IDESchemeOptionReference * _storeKitConfigurationFileReference;
    unsigned long long _processLauncherKind;
    //IDEEntityIdentifier * _schemeIdentifier;
    NSString * _selectedLauncherIdentifier;
    NSString * _selectedDebuggerIdentifier;
    unsigned long long _launchAutomaticallySubstyle;
    NSString * _runnableBundleIdentifier;
    NSDictionary * _appExtensionBuiltPaths;
    DVTFilePath * _replacementRunnableLocation;
    DVTFilePath * _workingDirectory;
    //IDELocationScenarioReference * _locationScenarioReference;
    NSString * _language;
    NSString * _region;
    //IDESchemeOptionReference * _routingCoverageFileReference;
    NSString * _sdkPath;
    NSString * _remoteInstallPath;
    id _debugServiceObject;
    id _deviceArbitrationObject;
    NSString * _platformIdentifier;
    NSString * _buildConfiguration;
    //NSObject<IDEBuildableProduct> * _buildableProduct;
    NSSet * _buildProductDirectories;
    NSArray * _testingCommandLineArgs;
    NSArray * _testingAdditionalBuiltDependenciesProductPaths;
    NSDictionary * _additionalDeviceSubstitutionPaths;
    NSString * _deviceAppDataPackage;
    long long _consoleMode;
    //IDEProductType * _productType;
    NSString * _internalIOSSubstitutionApp;
    NSString * _customLaunchCommand;
    NSString * _debugServiceExtension;
    //DVTVersion * _runnableSwiftVersion;
}
@property (readonly) NSArray * rawCommandLineArgs;
//@property (readonly) IDEEntityIdentifier * schemeIdentifier;
@property (readonly) NSString * selectedLauncherIdentifier;
@property (readonly) NSString * selectedDebuggerIdentifier;
@property (nonatomic) int launchStyle;
@property (readonly) unsigned long long launchAutomaticallySubstyle;
@property (readonly,copy) DVTFilePath * runnableLocation;
@property (copy) NSString * runnableBundleIdentifier;
@property int runnableType;
@property (copy) NSDictionary * appExtensionBuiltPaths;
@property char askOnLaunchChangedRunnable;
@property (copy) DVTFilePath * replacementRunnableLocation;
@property (readonly) DVTFilePath * originalRunnableLocation;
@property (readonly) DVTFilePath * filePathToBinary;
@property unsigned int debugProcessAsUID;
@property (readonly) DVTFilePath * workingDirectory;
@property (copy,nonatomic) NSArray * commandLineArgs;
@property (readonly,copy) NSDictionary * environmentVariables;
@property (readonly,copy) NSDictionary * originalEnvironmentVariables;
@property (readonly) char allowLocationSimulation;
//@property (readonly) IDELocationScenarioReference * locationScenarioReference;
@property (readonly) char showNonLocalizedStrings;
@property (readonly,copy,nonatomic) NSString * language;
@property (readonly,copy,nonatomic) NSString * region;
//@property (readonly) IDESchemeOptionReference * routingCoverageFileReference;
//@property (retain,nonatomic) IDESchemeOptionReference * storeKitConfigurationFileReference;
@property (readonly) int enableGPUFrameCaptureMode;
@property (readonly) int enableGPUValidationMode;
@property (nonatomic) int enableGPUShaderValidationMode;
@property (copy) NSString * sdkPath;
@property (copy) NSString * remoteInstallPath;
@property char debugAsAService;
@property (copy,nonatomic) NSString * customLLDBInitFile;
@property (copy,nonatomic) NSString * launchdServiceSpecifier;
@property int debugServiceFD;
@property (nonatomic) int debugserverPort;
@property (copy,nonatomic) NSString * debugserverConnectionAddress;
@property (retain) id debugServiceObject;
@property (retain) id deviceArbitrationObject;
@property (readonly) NSString * platformIdentifier;
@property (readonly) NSString * buildConfiguration;
//@property (readonly) NSObject<IDEBuildableProduct> * buildableProduct;
@property (copy) NSSet * buildProductDirectories;
@property (readonly,copy) NSMutableDictionary * testingEnvironmentVariables;
@property (copy) NSArray * testingCommandLineArgs;
@property (copy) NSArray * testingAdditionalBuiltDependenciesProductPaths;
@property (getter=isUsingCommandLineUnitTesting) char usingCommandLineUnitTesting;
@property (copy) NSDictionary * additionalDeviceSubstitutionPaths;
@property (readonly) NSString * deviceAppDataPackage;
@property (nonatomic) char allowDeviceSensorReplayData;
@property (retain,nonatomic) NSString * deviceSensorReplayFile;
@property char debugXPCServices;
@property (readonly) char debugAppExtensions;
@property (nonatomic) long long attachingToiOSApp;
@property (nonatomic) char enableMallocStackLoggingDuringAttach;
@property int runnableAppExtensionHostRunMode;
@property int internalIOSLaunchStyle;
@property (nonatomic) unsigned long long processLauncherKind;
@property char viewDebuggingEnabled;
@property char insertViewDebuggingDylibOnLaunch;
@property (nonatomic) char queueDebuggingEnabled;
@property (nonatomic) char memoryGraphOnResourceException;
@property long long consoleMode;
@property char shouldGenerateRuntimeProfile;
//@property (retain,nonatomic) IDERuntimeProfileInfo * runtimeProfileInfo;
//@property (retain) IDEProductType * productType;
@property (copy) NSString * internalIOSSubstitutionApp;
@property (copy) NSString * customLaunchCommand;
@property (nonatomic) char debugPauseAtEntry;
@property (copy) NSString * debugServiceExtension;
//@property (retain) DVTVersion * runnableSwiftVersion;
@property (copy,nonatomic) NSString * toolchainLLDBFrameworkPath;
@property (nonatomic) char enableAddressSanitizer;
@property (nonatomic) char enableThreadSanitizer;
@property (nonatomic) char stopOnEveryThreadSanitizerIssue;
@property (nonatomic) char stopOnEveryUBSanitizerIssue;
@property (nonatomic) char stopOnEveryMainThreadCheckerIssue;
@property (nonatomic) char enableUBSanitizer;
@property (nonatomic) char mallocScribble;
@property (nonatomic) char mallocGuardEdges;
@property (nonatomic) char guardMalloc;
@property (nonatomic) char NSZombieEnabled;
@property (nonatomic) char mallocStackLogging;
@property (nonatomic) char mallocStackLoggingLite;
@property (nonatomic) char skipInstallForTest;
@property (nonatomic) char skipInternalInstallSDKCheck;
@property (nonatomic) char isLaunchedForTesting;
@property (nonatomic) char suppressSimulatorApplication;
@property (nonatomic) char enableMallocStackLoggingLiteForXPCServices;
+ (id)launchParametersWithSchemeIdentifier:(id)v1 launcherIdentifier:(id)v2 debuggerIdentifier:(id)v3 launchStyle:(int)v4 runnableLocation:(id)v5 debugProcessAsUID:(unsigned int)v6 workingDirectory:(id)v7 commandLineArgs:(id)v8 environmentVariables:(id)v9 platformIdentifier:(id)v10 buildConfiguration:(id)v11 buildableProduct:(id)v12 deviceAppDataPackage:(id)v13 allowLocationSimulation:(char)v14 locationScenarioReference:(id)v15 showNonLocalizedStrings:(char)v16 language:(id)v17 region:(id)v18 routingCoverageFileReference:(id)v19 enableGPUFrameCaptureMode:(int)v20 enableGPUValidationMode:(int)v21 debugXPCServices:(char)v22 debugAppExtensions:(char)v23 internalIOSLaunchStyle:(int)v24 internalIOSSubstitutionApp:(id)v25 launchAutomaticallySubstyle:(unsigned long long)v26;
+ (id)snapshotForUnitTestingWithLauncherIdentifier:(id)v1 debuggerIdentifier:(id)v2 runnableLocation:(id)v3 commandLineArgs:(id)v4 environmentVariables:(id)v5;
+ (id)environmentVariablesToMergeFromTestingEnvironmentVariablesByPrependingUserValues;
+ (id)environmentVariablesToMergeFromTestingEnvironmentVariablesByAppendingUserValues;
+ (id)commandLineArgumentsArrayBySplittingElementsOfArray:(id)v1;
- (id)init;
- (void)_setUninitializedFlagsToInitialized;
- (void)setlaunchdServiceSpecifier:(id)v1;
- (id)launchParametersByReplacingCommandLineArgsWithArray:(id)v1;
- (id)launchParametersByReplacingEnvironmentVariablesWithDictionary:(id)v1;
- (id)launchParametersByPrependingPath:(id)v1 toSearchPathEnvironmentVariable:(id)v2;
- (id)launchParametersByAppendingPath:(id)v1 toSearchPathEnvironmentVariable:(id)v2;
@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCopyAppleProvidedContentStep : IDEDistributionProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestResultMessage : NSObject {
//    NSString * _text;
//    unsigned long long _messageType;
//    NSString * _filePath;
//    NSNumber * _lineNumber;
//}
//@property (readonly,copy) NSString * text;
//@property (readonly) unsigned long long messageType;
//@property (readonly,copy) NSString * filePath;
//@property (readonly,copy) NSNumber * lineNumber;
//- (id)initWithText:(id)v1 messageType:(unsigned long long)v2 filePath:(id)v3 lineNumber:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestResult : NSObject<NSCopying> {
//    IDETestIdentifier * _identifier;
//    NSString * _testName;
//    NSString * _configurationName;
//    unsigned long long _status;
//    NSDate * _date;
//    double _duration;
//    NSMutableArray * _mutablePerformanceMetrics;
//    NSMutableArray * _mutableMessages;
//    NSMutableArray * _mutableIssues;
//    NSMutableSet * _mutableValidatedSourceCodeLocations;
//}
//@property (retain) NSMutableArray * mutablePerformanceMetrics;
//@property (retain) NSMutableArray * mutableMessages;
//@property (retain) NSMutableArray * mutableIssues;
//@property (retain) NSMutableSet * mutableValidatedSourceCodeLocations;
//@property (readonly,copy) IDETestIdentifier * identifier;
//@property (readonly,copy) NSString * testName;
//@property (readonly,copy) NSString * configurationName;
//@property unsigned long long status;
//@property (copy) NSDate * date;
//@property double duration;
//@property (readonly,copy) NSArray * performanceMetrics;
//@property (readonly,copy) NSArray * messages;
//@property (readonly,copy) NSArray * issues;
//@property (readonly,copy) NSSet * dynamicallyReportedSourceCodeLocations;
//- (id)initWithIdentifier:(id)v1 testName:(id)v2 configurationName:(id)v3;
//- (void)addPerformanceMetric:(id)v1;
//- (void)addMessage:(id)v1;
//- (void)addIssue:(id)v1;
//- (void)addDynamicallyReportedSourceCodeLocation:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairInfo : NSObject<IDERepairable> {
//    char _matchingExplicitAppIDExistsOnPortal;
//    NSString * _repairableName;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    DVTPortalCertificatePurpose * _certificatePurpose;
//    _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * _destinationRequirement;
//    NSArray * _instigatingErrors;
//    long long _provisioningStyle;
//    NSObject<IDEProvisioningBasicProfile> * _profile;
//    DVTPlatform * _platform;
//    IDEProvisionableEntitlements * _entitlements;
//    DVTPortalProfileType * _profileType;
//    NSString * _machineName;
//    NSString * _machineID;
//    NSString * _bundleID;
//    DVTPortalAppIDFeatures * _appIDFeatures;
//    DVTSigningCertificate * _signingCertificate;
//    NSError * _signingCertificateError;
//}
//@property (readonly,nonatomic) NSString * bundleID;
//@property (readonly,nonatomic) DVTPortalAppIDFeatures * appIDFeatures;
//@property (readonly,nonatomic) DVTSigningCertificate * signingCertificate;
//@property (readonly,nonatomic) NSError * signingCertificateError;
//@property (readonly,nonatomic) IDEProvisionableEntitlements * entitlements;
//@property (nonatomic) char matchingExplicitAppIDExistsOnPortal;
//@property (readonly,nonatomic) NSString * repairableName;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) long long provisioningStyle;
//@property (readonly,nonatomic) DVTPortalCertificatePurpose * certificatePurpose;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,nonatomic) NSString * machineName;
//@property (readonly,nonatomic) NSString * machineID;
//@property (readonly,nonatomic) _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * destinationRequirement;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicProfile> * profile;
//@property (readonly,nonatomic) DVTPortalProfileType * profileType;
//@property (readonly,nonatomic) char wantsRepairStatusSuppressed;
//@property (readonly,nonatomic) NSArray * instigatingErrors;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)repairInfoWithRepairableName:(id)v1 team:(id)v2 provisioningStyle:(long long)v3 certificatePurpose:(id)v4 destinationRequirement:(id)v5 bundleID:(id)v6 profileType:(id)v7 appIDFeatures:(id)v8 platform:(id)v9 profile:(id)v10 signingCertificate:(id)v11 signingCertificateError:(id)v12 entitlements:(id)v13 instigatingErrors:(id)v14;
//+ (id)repairInfoWithProvisioningInputs:(id)v1 instigatingErrors:(id)v2;
//- (char)profileCharacteristicsWithContext:(id)v1 profileCharacteristics:(id *)v2 error:(id *)v3;
//- (id)profileQualificationWithProfile:(id)v1;
//- (id)instigatingErrorsDescription;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestingActivity : NSObject {
//    NSString * _title;
//}
//@property (copy) NSString * title;
//- (id)initWithTitle:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEUpgradeContext : NSObject
//@end
//
//
///*****************************************************************/
//
//@interface IDEUpgradeContainerContext : IDEUpgradeContext {
//    IDEContainer * _container;
//}
//@property (readonly) IDEContainer * container;
//- (id)initWithContainer:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEUpgradeBlueprintContext : IDEUpgradeContext {
//    NSObject<IDEBlueprint> * _blueprint;
//}
//@property (readonly) NSObject<IDEBlueprint> * blueprint;
//- (id)initWithBlueprint:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEUpgradeSchemeContext : IDEUpgradeContext {
//    IDEScheme * _scheme;
//}
//@property (readonly) IDEScheme * scheme;
//- (id)initWithScheme:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitProtocolSymbol : IDESourceKitContainerSymbol<IDEIndexProtocolSymbol>
//@property (readonly) NSString * name;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly) NSString * resolution;
//@property (readonly) DVTSymbol * identifier;
//@property (readonly) NSString * moduleName;
//@property (readonly) char isVirtual;
//@property (readonly) char isSystem;
//@property (readonly) char hasOccurrence;
//@property (readonly) char navigationPrefersDefinition;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)classMethods;
//- (id)instanceMethods;
//- (id)properties;
//- (id)subProtocols;
//- (id)implementingClasses;
//- (id)implementingSymbols;
//- (char)isKindOfClass:(Class)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindUnionSource : IDEBatchFindFileSource {
//    NSArray * _sources;
//}
//@property (readonly) NSArray * sources;
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)initWithSources:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isEqualToFileSourceWithIdenticalClass:(id)v1;
//- (unsigned long long)hash;
//- (void)accumulateContributingSources:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPseudoTerminal : NSObject {
//    int _masterFD;
//    int _slaveFD;
//    NSFileHandle * _masterFileHandle;
//    NSString * _slaveName;
//}
//@property (readonly) NSFileHandle * masterFileHandle;
//@property (readonly) NSFileHandle * slaveFileHandle;
//@property (readonly) NSString * slaveName;
//@property (readonly) int slaveFD;
//+ (void)initialize;
//- (id)initWithAccessMode:(int)v1 ownsSlaveFileDescriptor:(char)v2 error:(id *)v3;
//- (id)initWithAccessMode:(int)v1 error:(id *)v2;
//- (id)description;
//- (void)_closeMasterFD;
//- (char)_openFirstAvailableMasterOwnsSlaveFileDescriptor:(char)v1 error:(id *)v2;
//- (char)_configSlaveCounterpartWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeBuildableReference : NSObject<DVTXMLUnarchiving,NSCopying> {
//    NSString * _buildableIdentifier;
//    NSString * _blueprintIdentifier;
//    NSString * _cachedBuildableName;
//    NSString * _cachedBlueprintName;
//    NSString * _legacyBuildableIdentifier;
//    IDEContainer<IDEBlueprintProvider> * _referencedContainer;
//    NSString * _lastArchivedReferencedContainerPath;
//    IDEScheme * _scheme;
//    NSObject<IDEBlueprint> * _cachedResolvedBlueprint;
//    NSObject<IDEBuildable> * _cachedResolvedBuildable;
//    DVTObservingToken * _referencedContainersObservingToken;
//    DVTObservingToken * _schemeClosedToken;
//    DVTObservingToken * _schemeValidToken;
//    DVTObservingToken * _referencedContainerFilePathObservingToken;
//    DVTObservingToken * _referencedContainerBlueprintsObservingToken;
//    DVTObservingToken * _referencedContainerIsValidObservingToken;
//    DVTObservingToken * _resolvedBuildableNameObservingToken;
//    DVTObservingToken * _resolvedBlueprintNameObservingToken;
//    char _resolvingBlueprint;
//    char _willBeArchived;
//}
//@property (readonly) NSObject<IDEBlueprint> * resolvedBlueprint;
//@property (copy) NSString * buildableIdentifier;
//@property (copy) NSString * blueprintIdentifier;
//@property (copy) NSString * cachedBuildableName;
//@property (copy) NSString * cachedBlueprintName;
//@property (retain,nonatomic) IDEContainer<IDEBlueprintProvider> * referencedContainer;
//@property (readonly) char willBeArchived;
//@property (retain,nonatomic) IDEScheme * scheme;
//@property (readonly,nonatomic) NSString * currentReferencedContainerPath;
//@property (readonly) NSObject<IDEBuildable> * resolvedBuildable;
//@property (readonly) NSString * buildableName;
//@property (readonly) NSString * blueprintName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)keyPathsForValuesAffectingBuildableName;
//+ (id)keyPathsForValuesAffectingBlueprintName;
//+ (id)resolvedBuildableForLegacyIdentifier:(id)v1 inContainer:(id)v2;
//- (id)initWithBuildable:(id)v1 scheme:(id)v2 willBeArchived:(char)v3;
//- (id)initWithBuildableReference:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)dealloc;
//- (void)setBlueprintIdentifierWithoutInvalidatingResolvedBlueprint:(id)v1;
//- (void)_invalidateResolvedBlueprint;
//- (void)_invalidateResolvedBuildable;
//- (char)updateCachedBlueprintName;
//- (char)updateCachedBuildableName;
//- (id)blueprintNameAddingMissingSpecifierIfNecessary:(char)v1;
//- (id)containerReferenceResolver;
//- (id)referenceResolutionContext;
//- (id)referencedContainerFromSchemeForArchivedPath:(id)v1;
//- (void)_markSchemeDirty;
//- (char)referencesSameBuildableAsReference:(id)v1;
//- (void)resolveBuildableFromImport;
//- (void)loadLegacyBuildableWithResolutionContextContainer:(id)v1;
//- (void)setBuildableProductIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildableIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBlueprintIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildableNameFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBlueprintNameFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setReferencedContainerFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitSymbol : IDESourceKitSymbolOccurrence<IDEIndexSymbol> {
//    NSString * _name;
//    NSString * _displayName;
//    NSString * _qualifiedDisplayName;
//    DVTSourceCodeSymbolKind * _symbolKind;
//    DVTSourceCodeLanguage * _symbolLanguage;
//    NSString * _resolution;
//    _TtC13DVTFoundation9DVTSymbol * _identifier;
//    char _haveModelOccurrence;
//    char _isVirtual;
//    char _isInProject;
//    char _isSystem;
//    NSString * _moduleName;
//    NSString * _completionString;
//    char _lookedForContainerSymbol;
//    IDESourceKitContainerSymbol * _containerSymbol;
//}
//@property (nonatomic) char isVirtual;
//@property (nonatomic) char isSystem;
//@property (nonatomic) char isInProject;
//@property (retain,nonatomic) NSString * moduleName;
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly,nonatomic) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly,nonatomic) NSString * resolution;
//@property (readonly,nonatomic) _TtC13DVTFoundation9DVTSymbol * identifier;
//@property (readonly,nonatomic) char hasOccurrence;
//@property (readonly,nonatomic) char navigationPrefersDefinition;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (Class)classForSymbolKind:(id)v1;
//+ (id)newSymbolOfKind:(id)v1 language:(id)v2 name:(id)v3 displayName:(id)v4 qualifiedDisplayName:(id)v5 moduleName:(id)v6 resolution:(id)v7 isVirtual:(char)v8 isInProject:(char)v9 isSystem:(char)v10 role:(long long)v11 location:(id)v12 line:(long long)v13 column:(long long)v14 file:(id)v15 moduleUrl:(id)v16 completion:(id)v17 forSourceKitWorkspace:(id)v18;
//- (id)sourcekit_asRequest:(id)v1;
//- (void)resetWithKind:(id)v1 language:(id)v2 name:(id)v3 displayName:(id)v4 qualifiedDisplayName:(id)v5 moduleName:(id)v6 resolution:(id)v7 isVirtual:(char)v8 isInProject:(char)v9 isSystem:(char)v10 completion:(id)v11;
//- (char)isEqual:(id)v1;
//- (id)modelOccurrence;
//- (void)setModelOccurrence:(id)v1;
//- (id)occurrence;
//- (long long)lineNumber;
//- (long long)column;
//- (id)correspondingSymbol;
//- (id)occurrences;
//- (id)declarations;
//- (id)definitions;
//- (id)containerSymbols;
//- (id)containerSymbol;
//- (id)referencingFiles;
//- (id)references;
//- (id)ibRelationClass;
//- (id)displayName;
//- (id)qualifiedDisplayName;
//- (id)completionString;
//- (id)filePathToHeaderToImport;
//- (id)classMethods;
//- (id)instanceMethods;
//- (id)classVariables;
//- (id)instanceVariables;
//- (id)properties;
//- (id)ibActionMethods;
//- (id)ibOutlets;
//- (id)ibOutletVariables;
//- (id)ibOutletProperties;
//- (id)ibOutletCollections;
//- (id)ibOutletCollectionVariables;
//- (id)ibOutletCollectionProperties;
//- (id)gkInspectableProperties;
//- (char)isKindOfClass:(Class)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindPlistDecoder : NSObject {
//    NSString * _classDefiningKey;
//    NSDictionary * _plistIDsToClassNames;
//    Class _defaultClass;
//}
//- (id)initWithClassDefiningKey:(id)v1 defaultClass:(Class)v2 decodableClasses:(id)v3;
//- (id)decodeObjectFromPropertyList:(id)v1;
//- (id)decodeObjectsFromPropertyListArray:(id)v1 allowingParshalDecodes:(char)v2;
//- (id)decodeObjectsFromPropertyList:(id)v1 subarrayKey:(id)v2 allowingParshalDecodes:(char)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFileReferenceContainerContentObserver : NSObject<DVTInvalidation> {
//    NSMutableDictionary * _observations;
//    void (^ /* unknown block signature */)(void) _consitencyValidatingObserver;
//    IDEContainer * _container;
//    IDEContainerQuery * _containerQuery;
//    NSObject<DVTCancellable> * _containerQueryObservation;
//    DVTTimeSlicedMainThreadWorkQueue * _processingQueue;
//    NSMutableDictionary * _filePathsToFileDataTypeCandidates;
//    NSMapTable * _fileReferenceRecords;
//}
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)observeContainer:(id)v1 filteredToTypes:(id)v2 withHandler:(void (^ /* unknown block signature */)(void))v3;
//+ (id)observeContainer:(id)v1 withBufferedHandler:(void (^ /* unknown block signature */)(void))v2;
//+ (id)observeContainer:(id)v1 optionallyFilteredToTypes:(id)v2 withBufferedHandler:(void (^ /* unknown block signature */)(void))v3;
//+ (id)observeContainer:(id)v1 optionallyFilteredToTypes:(id)v2 ignoreModifiedUpdateType:(char)v3 withBufferedHandler:(void (^ /* unknown block signature */)(void))v4;
//+ (void)initialize;
//+ (id)observeContainer:(id)v1 handler:(void (^ /* unknown block signature */)(void))v2;
//- (id)initWithContainer:(id)v1;
//- (void)primitiveInvalidate;
//- (id)addObserver:(void (^ /* unknown block signature */)(void))v1;
//- (void)enqueueUpdateForContainerQueryKVOChange:(id)v1;
//- (void)enqueueUpdate:(void (^ /* unknown block signature */)(void))v1;
//- (void)deliverObservationForFilePath:(id)v1 updateType:(long long)v2;
//- (void)startObservingFileReference:(id)v1;
//- (void)stopObservingFileReferenceIfNeeded:(id)v1;
//- (void)observeValueForKeyPath:(id)v1 ofObject:(id)v2 change:(id)v3 context:(void *)v4;
//- (void)removeReferenceToFilePath:(id)v1 withFileDataType:(id)v2;
//- (void)addReferenceToFilePath:(id)v1 withFileDataType:(id)v2;
//- (void)processUnionedFileReference:(id)v1;
//- (char)isTrackedFilePath:(id)v1;
//- (char)isTrackedFileReference:(id)v1;
//- (void)processSubtractedFileReference:(id)v1;
//- (void)processFileReference:(id)v1 withNewResolvedFilePath:(id)v2;
//- (void)processFileReference:(id)v1 withNewLastKnownFileDataType:(id)v2;
//- (void)processFilePathWithContentChange:(id)v1;
//- (void)processResetFileReferences:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFileReferenceContainerContentObservationRecord : NSObject {
//    char _observed;
//    DVTFilePath * _previousResolvedFilePath;
//    DVTFileDataType * _previousLastKnownFileDataType;
//}
//@property char observed;
//@property (retain) DVTFilePath * previousResolvedFilePath;
//@property (retain) DVTFileDataType * previousLastKnownFileDataType;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionArchThinningStep : IDEDistributionItemProcessingStep
//+ (bool)supportsDryRun;
//+ (bool)runsPerThinningVariant;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (id)lipoPath;
//- (bool)verifyArch:(id)v1 path:(id)v2 archExists:(bool *)v3 error:(id *)v4;
//- (bool)removeArch:(id)v1 path:(id)v2 error:(id *)v3;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDERecordedThreadCollection : NSObject<IDEDebugNavigableModel,DVTInvalidation> {
//    NSMutableArray * _delayedInvalidationChildren;
//    DVTDispatchLock * _delayedInvalidationChildrenLock;
//    char _usedInRuntimeIssue;
//    char _selectStackFrameWhenFirstShown;
//    IDEDebugProcess * _parentProcess;
//    NSArray * _recordedThreads;
//    NSString * _displayName;
//}
//@property (retain) IDEDebugProcess * parentProcess;
//@property (copy,nonatomic) NSArray * recordedThreads;
//@property (copy) NSString * displayName;
//@property char usedInRuntimeIssue;
//@property char selectStackFrameWhenFirstShown;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//- (id)init;
//- (id)initWithProcess:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESDKInfoCommandLineVerb : IDECommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//+ (void)_enumerateAllPlatformsAlphabeticallyWithBlock:(void (^ /* unknown block signature */)(void))v1;
//+ (int)_printVerboseInfoForSDK:(id)v1 inEnvironment:(id)v2 keysToEmit:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestPerformanceMetricBaselineRecord : NSObject {
//    NSString * _baselineDisplayName;
//    NSNumber * _average;
//    NSNumber * _maxPercentRegression;
//    NSNumber * _maxPercentImprovement;
//    NSNumber * _maxPercentRelativeStandardDeviation;
//    NSNumber * _maxRegression;
//    NSNumber * _maxStandardDeviation;
//}
//@property (readonly) NSString * baselineDisplayName;
//@property (readonly) NSNumber * average;
//@property (readonly) NSNumber * maxPercentRegression;
//@property (readonly) NSNumber * maxPercentImprovement;
//@property (readonly) NSNumber * maxPercentRelativeStandardDeviation;
//@property (readonly) NSNumber * maxRegression;
//@property (readonly) NSNumber * maxStandardDeviation;
//+ (void)initialize;
//- (id)init;
//- (id)initWithBaselineDisplayName:(id)v1 average:(id)v2 maxPercentRegression:(id)v3 maxPercentImprovement:(id)v4 maxPercentRelativeStandardDeviation:(id)v5 maxRegression:(id)v6 maxStandardDeviation:(id)v7;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestBaselineRecord : NSObject {
//    NSMutableDictionary * _performanceMetricIdentifiersDict;
//    NSMutableDictionary * _classNamesDict;
//}
//+ (void)initialize;
//- (id)init;
//- (char)_validatePerformanceMetricBaselinesByPerformanceMetricIdentifierDictionary:(id)v1 locationDescription:(id)v2 errorString:(id *)v3;
//- (char)_validateClassNamesDictionary:(id)v1 locationDescription:(id)v2 errorString:(id *)v3;
//- (char)_validatePropertyList:(id)v1 errorString:(id *)v2;
//- (id)initWithFilePath:(id)v1 error:(id *)v2;
//- (id)_plistDataWithError:(id *)v1;
//- (char)writeToFilePath:(id)v1 workspace:(id)v2 versionedFileManager:(id)v3 error:(id *)v4;
//- (id)testClassNames;
//- (id)testMethodNamesForClassName:(id)v1;
//- (id)performanceMetricIdentifiersForClassName:(id)v1 testMethodName:(id)v2;
//- (id)performanceMetricIdentifiersWithDefaultBaseline;
//- (id)defaultBaselineForPerformanceMetricIdentifier:(id)v1;
//- (void)setDefaultBaselineForPerformanceMetricIdentifier:(id)v1 maxPercentRegression:(id)v2 maxPercentImprovement:(id)v3 maxPercentRelativeStandardDeviation:(id)v4 maxRegression:(id)v5 maxStandardDeviation:(id)v6;
//- (id)baselineForTestClassName:(id)v1 testMethodName:(id)v2 performanceMetricIdentifier:(id)v3;
//- (void)_setBaselineForTestClassName:(id)v1 testMethodName:(id)v2 performanceMetricIdentifier:(id)v3 baselineDisplayName:(id)v4 average:(id)v5 maxPercentRegression:(id)v6 maxPercentImprovement:(id)v7 maxPercentRelativeStandardDeviation:(id)v8 maxRegression:(id)v9 maxStandardDeviation:(id)v10;
//- (void)setBaselineForTestClassName:(id)v1 testMethodName:(id)v2 performanceMetricIdentifier:(id)v3 baselineDisplayName:(id)v4 average:(id)v5 maxPercentRegression:(id)v6 maxPercentImprovement:(id)v7 maxPercentRelativeStandardDeviation:(id)v8 maxRegression:(id)v9 maxStandardDeviation:(id)v10;
//- (void)setBaselineForTestClassName:(id)v1 testMethodName:(id)v2 performanceMetricIdentifier:(id)v3 maxPercentRegression:(id)v4 maxPercentImprovement:(id)v5 maxPercentRelativeStandardDeviation:(id)v6 maxRegression:(id)v7 maxStandardDeviation:(id)v8;
//- (void)removeBaselinesForTestClassName:(id)v1;
//- (void)removeBaselinesForTestClassName:(id)v1 testMethodName:(id)v2;
//- (void)removeBaselinesForTestClassName:(id)v1 testMethodName:(id)v2 performanceMetricIdentifier:(id)v3;
//- (void)unionWithDefaultsInBaselineRecord:(id)v1;
//- (void)applyBaselineRecord:(id)v1 usingBehavior:(unsigned long long)v2 testClassName:(id)v3 testMethodName:(id)v4;
//- (void)applyBaselineRecord:(id)v1 usingBehavior:(unsigned long long)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableOverrides : NSObject {
//    NSString * _configuration;
//    NSNumber * _profileSupport;
//    NSNumber * _provisioningStyle;
//    DVTPortalProfilePurpose * _provisioningPurpose;
//    IDEProvisioningTeamReference * _team;
//    DVTPlatform * _platform;
//    DVTSDK * _sdk;
//    NSString * _sdkVariant;
//    NSString * _profileSpecifier;
//    NSString * _certificateIdentifier;
//    NSString * _bundleIdentifier;
//    NSString * _entitlementsFile;
//    NSDictionary * _entitlements;
//    IDEProvisionableEntitlements * _baseEntitlements;
//    IDEProvisioningEntitlementsExpansion * _entitlementsExpansion;
//    NSNumber * _entitlementsDestination;
//    DVTPortalAppIDFeatures * _appIDFeatures;
//    NSNumber * _allowSigningWithoutTeamSelection;
//    NSNumber * _signingRequiresTeam;
//}
//@property (readonly,nonatomic) NSString * configuration;
//@property (readonly,nonatomic) NSNumber * profileSupport;
//@property (readonly,nonatomic) NSNumber * provisioningStyle;
//@property (readonly,nonatomic) DVTPortalProfilePurpose * provisioningPurpose;
//@property (readonly,nonatomic) IDEProvisioningTeamReference * team;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,nonatomic) DVTSDK * sdk;
//@property (readonly,nonatomic) NSString * sdkVariant;
//@property (readonly,nonatomic) NSString * profileSpecifier;
//@property (readonly,nonatomic) NSString * certificateIdentifier;
//@property (readonly,nonatomic) NSString * bundleIdentifier;
//@property (readonly,nonatomic) NSString * entitlementsFile;
//@property (readonly,nonatomic) NSDictionary * entitlements;
//@property (readonly,nonatomic) IDEProvisionableEntitlements * baseEntitlements;
//@property (readonly,nonatomic) IDEProvisioningEntitlementsExpansion * entitlementsExpansion;
//@property (readonly,nonatomic) NSNumber * entitlementsDestination;
//@property (readonly,nonatomic) DVTPortalAppIDFeatures * appIDFeatures;
//@property (readonly,nonatomic) NSNumber * allowSigningWithoutTeamSelection;
//@property (readonly,nonatomic) NSNumber * signingRequiresTeam;
//+ (id)overridesWithConfiguration:(id)v1 profileSupport:(id)v2;
//+ (id)overridesWithConfiguration:(id)v1 profileSupport:(id)v2 provisioningStyle:(id)v3 provisioningPurpose:(id)v4 team:(id)v5 platform:(id)v6 sdk:(id)v7 sdkVariant:(id)v8 profileSpecifier:(id)v9 certificateIdentifier:(id)v10 bundleIdentifier:(id)v11 entitlementsFile:(id)v12 entitlements:(id)v13 baseEntitlements:(id)v14 entitlementsExpansion:(id)v15 entitlementsDestination:(id)v16 allowSigningWithoutTeamSelection:(id)v17 signingRequiresTeam:(id)v18 appIDFeatures:(id)v19;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningCreateTeamOwnedCertificateUserAction : IDEProvisioningUserAction {
//    DVTPortalCertificateType * _type;
//}
//@property (readonly,nonatomic) DVTPortalCertificateType * type;
//+ (id)userActionWithType:(id)v1 context:(id)v2;
//- (id)initWithContext:(id)v1 type:(id)v2;
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//- (id)executionMessage;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCodeCompletionContext : NSObject {
//    unsigned long long _contexts;
//    unsigned int _containerKind;
//    NSString * _containerUSR;
//    char _containerIsIncomplete;
//    NSString * _partialSelector;
//    NSSet * _includedFiles;
//}
//@property unsigned long long contexts;
//@property unsigned int containerKind;
//@property (copy) NSString * containerResolution /* backed by _containerUSR */;
//@property char containerIsIncomplete;
//@property (copy) NSString * partialSelector;
//@property (copy) NSSet * includedFiles;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildArbitrator : NSObject {
//    NSOperationQueue * _serializationQueue;
//    NSMapTable * _fileProducingBuildTasksByFilePath;
//    NSMapTable * _registeringBuildersByFilePath;
//    NSMapTable * _registeredFilePathsByBuilder;
//}
//+ (void)initialize;
//+ (id)sharedBuildArbitrator;
//- (id)init;
//- (id)registerBuildTask:(id)v1 asProducerOfFileAtPath:(id)v2 forBuilder:(id)v3;
//- (void)unregisterBuildTaskWhichProducesFileAtPath:(id)v1 forBuilder:(id)v2;
//- (void)unregisterAllBuildTasksForBuilder:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueGroup : NSObject {
//    NSMutableArray * _issueFileGroups;
//    NSMapTable * _issueFileGroupsIndex;
//    NSMutableArray * _issuesWithNoFile;
//    NSMutableArray * _issueTypeGroups;
//    NSMapTable * _issueTypeGroupsIndex;
//    NSMutableArray * _runtimeTopGroups;
//    unsigned long long _testFailureCount;
//    unsigned long long _errorCount;
//    unsigned long long _warningCount;
//    unsigned long long _noticeCount;
//    unsigned long long _analyzerResultCount;
//    unsigned long long _runtimeCount;
//    IDEIssueProvider * _issueProvider;
//    IDEContainer * _container;
//    NSObject<IDEBlueprint> * _blueprint;
//    NSObject<IDEIssueRuntimeGroupingObject> * _runtimeGroupingObject;
//    unsigned long long _issueType;
//}
//@property (readonly) NSSet * _allIssues;
//@property (readonly) IDEIssueProvider * issueProvider;
//@property (readonly) IDEContainer * container;
//@property (readonly) NSObject<IDEBlueprint> * blueprint;
//@property (readonly) NSObject<IDEIssueRuntimeGroupingObject> * runtimeGroupingObject;
//@property (readonly,copy) NSArray * issueFileGroups;
//@property (readonly,copy) NSArray * issuesWithNoFile;
//@property (readonly,copy) NSArray * issueTypeGroups;
//@property (readonly) unsigned long long issueCount;
//@property unsigned long long issueType;
//- (id)init;
//- (id)_initWithIssueProvider:(id)v1 container:(id)v2 blueprint:(id)v3 runtimeGroupingObject:(id)v4;
//- (void)_updateIssueType;
//- (void)_addNoFileIssues:(id)v1;
//- (void)_createRuntimeGroupIfNecessary:(id)v1;
//- (void)_addIssues:(id)v1;
//- (void)_removeIssues:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCodesignStep : IDEDistributionItemProcessingStep
//+ (bool)supportsDryRun;
//+ (bool)runsPerThinningVariant;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunContextManager : NSObject<DVTInvalidation> {
//    IDEWorkspace * _workspace;
//    NSMutableSet * _customDataStores;
//    NSMapTable * _storeToSpecifierMap;
//    NSMapTable * _storeToUserDataMap;
//    NSMutableArray * _runContexts;
//    NSArray * _nonTransientRunContexts;
//    IDEScheme * _activeRunContext;
//    IDERunDestination * _activeRunDestination;
//    NSMutableArray * _ignoredChangesDevices;
//    NSCountedSet * _schemeNameCounts;
//    NSEvent * _schemeForcedSwitchEvent;
//    char _bulkChangingBlueprints;
//    char _blueprintChangedDuringBulkChanges;
//    char _suppressingAutocreation;
//    DVTObservingToken * _customDataStoresObserver;
//    DVTObservingToken * _availableDevicesObserver;
//    NSObject<DVTInvalidation> * _blueprintDidChangeObserver;
//}
//@property (readonly) NSCountedSet * schemeNameCounts;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) NSArray * runContexts;
//@property (readonly) NSArray * nonTransientRunContexts;
//@property (retain,nonatomic) IDEScheme * activeRunContext;
//@property (retain,nonatomic) IDERunDestination * activeRunDestination;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingNonTransientRunContexts;
//+ (char)automaticallyNotifiesObserversOfActiveRunContext;
//+ (char)automaticallyNotifiesObserversOfActiveRunDestination;
//+ (id)observeAllBlueprintChangesOnQueue:(id)v1 withBlock:(void (^ /* unknown block signature */)(void))v2;
//+ (id)observeAllBlueprintChangesOnQueue:(id)v1 withTarget:(id)v2 selector:(SEL)v3;
//+ (void)postBlueprintsDidChange:(id)v1;
//+ (void)postBlueprintsDidChangeWithBlueprintSet:(id)v1;
//- (id)init;
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void)_addScheme:(id)v1;
//- (void)_updateMap:(id)v1 contextForCustomDataStore:(id)v2 specifier:(id)v3;
//- (void)_restoreActiveRunContextIfPossible;
//- (void)_restoreActiveRunDestinationIfPossibleForScheme:(id)v1;
//- (void)_ensureActiveRunContext;
//- (void)_startUpdatingRunContexts;
//- (void)_finishUpdatingRunContexts;
//- (void)_customDataStoresDidUpdate;
//- (id)_schemesInvolvingBuildables:(id)v1 excludingContexts:(id)v2;
//- (void)suppressAutocreationForBuildables:(id)v1;
//- (void)allowAutocreationForBuildables:(id)v1;
//- (void)_setAutocreationSuppressed:(char)v1 forBuildables:(id)v2;
//- (void)_setAutocreationSuppressed:(char)v1 forBuildables:(id)v2 returningStoresNeedingSave:(id *)v3;
//- (id)_uniqueSpecifierForSpecifier:(id)v1 inMap:(id)v2;
//- (void)_addContext:(id)v1 specifierToRunContextMap:(id)v2;
//- (id)_newSchemeWithCustomDataStore:(id)v1 customDataSpecifier:(id)v2 orderHint:(unsigned long long)v3 schemeCreationBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)newSchemeWithCustomDataStore:(id)v1 customDataSpecifier:(id)v2 orderHint:(unsigned long long)v3;
//- (id)newTransientSchemeWithCustomDataStore:(id)v1 customDataSpecifier:(id)v2 orderHint:(unsigned long long)v3;
//- (id)duplicateRunContext:(id)v1 withCustomDataSpecifier:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)importRunContextAtURL:(id)v1 withCustomDataStore:(id)v2 customDataSpecifier:(id)v3 orderHint:(unsigned long long)v4 completionQueue:(id)v5 completionBlock:(void (^ /* unknown block signature */)(void))v6;
//- (void)deleteRunContexts:(id)v1 completionQueue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)moveRunContext:(id)v1 toCustomDataStore:(id)v2 customDataSpecifier:(id)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (id)_contextUserStateKeyForSpecifier:(id)v1;
//- (id)_contextUserStateDictForCustomDataStore:(id)v1 createIfNeeded:(char)v2;
//- (id)_contextUserStateForCustomDataStore:(id)v1 specifier:(id)v2 createIfNeeded:(char)v3;
//- (void)_lookupIsShown:(char *)v1 orderHint:(unsigned long long *)v2 forCustomDataStore:(id)v3 specifier:(id)v4;
//- (void)saveRunContextManagementDictionaryForStore:(id)v1;
//- (id)runContextManagementDictionaryForStore:(id)v1;
//- (void)_updateIsShown:(char)v1 forRunContext:(id)v2;
//- (void)_updateOrderHint:(unsigned long long)v1 forRunContext:(id)v2;
//- (void)shouldIgnoreDeviceChangesWillBegin:(id)v1;
//- (void)shouldIgnoreDeviceChangesDidEnd:(id)v1;
//- (void)_invalidateActiveRunDestination;
//- (void)_invalidateActiveRunDestinationDueToDeviceAvailable:(id)v1;
//- (void)_invalidateAvailableRunDestinationsForSchemes:(id)v1;
//- (void)_invalidateAvailableRunDestinations;
//- (id)_preferredDestinationForRunDestination:(id)v1 inDestinations:(id)v2;
//- (void)deviceUsabilityDidChange:(id)v1;
//- (void)blueprintsDidChange:(id)v1;
//- (void)blueprintsWillBulkChange:(id)v1;
//- (void)blueprintsDidBulkChange:(id)v1;
//- (void)setActiveRunContext:(id)v1 andRunDestination:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexingPrebuildController : NSObject {
//    IDEWorkspace * _workspace;
//    NSObject<OS_dispatch_queue> * _queue;
//    char _hasInitiatedPrebuild;
//    char _hasPerformedPrebuild;
//}
//@property char hasPerformedPrebuild;
//- (id)initWithWorkspace:(id)v1;
//- (void)initiatePrebuild;
//- (void)needsPrebuild;
//- (void)cancelAnyPrebuild;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAppThinningManifestStep : IDEDistributionProcessingStep
//+ (bool)runsPerThinningVariant;
//+ (bool)runsPerDistributionItem;
//+ (id)variantDescriptorsUserDescriptionForVariantDescriptorDictionaries:(id)v1;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRegisterDeviceRepairStep : IDEProvisioningRepairStep {
//    NSObject<DVTPortalDevice> * _device;
//    DVTPortalTeam * _team;
//}
//@property (readonly) NSObject<DVTPortalDevice> * device;
//@property (readonly) DVTPortalTeam * team;
//+ (id)createRegisterDeviceRepairStepWithDevice:(id)v1 team:(id)v2;
//- (id)initWithDevice:(id)v1 team:(id)v2;
//- (id)stepDescription;
//- (id)activityDescription;
//- (char)preflightWithContext:(id)v1 error:(id *)v2;
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELegacyBatchFindScopePredicate : NSObject {
//    NSString * _name;
//    NSString * _uuid;
//    NSPredicate * _predicate;
//}
//@property (copy,nonatomic) NSString * name;
//@property (copy,nonatomic) NSString * uuid;
//@property (copy,nonatomic) NSPredicate * predicate;
//+ (id)archivedScopesFromData:(id)v1;
//+ (id)predicatesFromData:(id)v1;
//+ (id)namedScopeFromLegacyPredicate:(id)v1;
//+ (id)namedScopeFromLegacyPredicates:(id)v1;
//+ (id)readGlobalPredicates;
//+ (id)readLocalPredicatesForWorkspace:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)setPredicateFromUTF8String:(const  char *)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELegacyBatchFindScopeArchive : NSObject {
//    NSMutableArray * _unarchivedScopes;
//}
//@property (readonly) NSArray * unarchivedScopes;
//- (void)addScope:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningPermissionsFailureUserAction : IDEProvisioningUserAction {
//    long long _requiredRole;
//}
//@property (readonly) long long requiredRole;
//+ (id)permissionsFailureUserActionWithSteps:(id)v1 permissionsError:(id)v2 context:(id)v3;
//- (char)preflightWithError:(id *)v1;
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceSharedSettings : IDEWorkspaceSettings {
//    DVTObservingToken * _workspaceLoadingObservingToken;
//}
//@property char autocreateContextsIfNeeded;
//@property char previewsEnabled;
//@property char disableBuildSystemDeprecationWarning;
//+ (char)automaticallyNotifiesObserversForPreviewsEnabled;
//- (id)settingsOwnership;
//- (void)saveSettings;
//- (id)initWithWorkspace:(id)v1;
//- (void)_propagateBuildSystemSelectionForWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void)setBuildSystemType:(int)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPIFGUID : NSObject {
//    NSString * _string;
//    unsigned long long _hash;
//}
//@property (readonly) NSString * stringRepresentation;
//+ (id)newFromStringRepresentation:(id)v1;
//- (id)initFromStringRepresentation:(id)v1;
//- (id)pifGuidByCombiningWithString:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildSettingTable : DVTMacroDefinitionTable
//+ (id)macroNameRegistry;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningInstallProfileUserAction : IDEProvisioningUserAction {
//    DVTProvisioningProfile * _profile;
//}
//@property (readonly) DVTProvisioningProfile * profile;
//- (id)initWithProfile:(id)v1 context:(id)v2;
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//- (char)supportsBatchAuthorization;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningDownloadProfileUserAction : IDEProvisioningInstallProfileUserAction
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//- (id)executionMessage;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningUpdateProfileUserAction : IDEProvisioningInstallProfileUserAction
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//- (id)executionMessage;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestableDataSource : NSObject<IDETestableDataSource,DVTInvalidation> {
//    IDEWorkspace * _workspace;
//    id _currentGeneration;
//    unsigned long long _latestFinishedGeneration;
//    NSOperationQueue * _testSearchQueue;
//    NSDictionary * _unprocessedIndexableIdsToTestIdentifiersToTests;
//    NSDictionary * _indexableIdsToTestIdentifiersToTests;
//    NSMapTable * _indexableIdsToTestableTokens;
//    DVTNotificationToken * _indexUnitTestsDidChangeNotificationToken;
//    char _providesLiveUpdates;
//    char _needsUpdate;
//}
//@property char providesLiveUpdates;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (char)automaticallyNotifiesObserversOfProvidesLiveUpdates;
//+ (id)testableDataSourceTokenForWorkspace:(id)v1 indexableIdentifier:(id)v2 callbackBlock:(void (^ /* unknown block signature */)(void))v3;
//+ (id)testableDataSourceForWorkspace:(id)v1;
//- (id)init;
//- (id)_initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void)_indexDidUpdate:(id)v1;
//- (void)setTestableToken:(id)v1 indexableIdentifier:(id)v2;
//- (void)clearTestableTokenForIndexableIdentifier:(id)v1;
//- (unsigned long long)beginNewGeneration;
//- (unsigned long long)finishCurrentGeneration;
//- (unsigned long long)latestFinishedGeneration;
//- (unsigned long long)currentGeneration;
//- (char)isCurrentGeneration:(unsigned long long)v1;
//- (void)_searchForTests;
//- (void)searchForTestsForIndexableIdentifier:(id)v1 callbackBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)_setIndexableIdsToTestIdentifiersToTests:(id)v1;
//- (id)_indexableIdsToTestIdentifiersToTests;
//- (id)_computeIndexableIdsToLinkedTargetIndexableIds;
//- (id)_aggregatedTestDataFromTestData:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestableDataSourceToken : NSObject<IDETestableDataSourceToken> {
//    IDETestableDataSource * _dataSource;
//    NSString * _indexableIdentifier;
//    void (^ /* unknown block signature */)(void) _callbackBlock;
//}
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithDataSource:(id)v1 indexableIdentifier:(id)v2 callbackBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)_setTestIdentifiersToTests:(id)v1;
//- (void)_clearDataSource;
//- (void)primitiveInvalidate;
//- (void)search;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerQuery : NSObject<DVTInvalidation> {
//    NSObject<DVTModelObject><DVTInvalidation> * _containerGraphObject;
//    DVTObservingToken * _containerGraphObjectValidObservationToken;
//    void (^ /* unknown block signature */)(void) _skipSubgraphBlock;
//    void (^ /* unknown block signature */)(void) _predicateBlock;
//    void (^ /* unknown block signature */)(void) _visitorBlock;
//    NSMutableSet * _matches;
//    NSMutableSet * _visitedContainerGraphObjects;
//    char _isCancelled;
//    char _isLiveQuery;
//    char _inObjectsDidChangeNotification;
//    char _skipInvalidObjects;
//    unsigned long long _objectsDidChangeCount;
//}
//@property (readonly) NSSet * matches;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (void)traverseContainerGraphRootedInContainerGraphObject:(id)v1 skipSubgraphBlock:(void (^ /* unknown block signature */)(void))v2 visitorBlock:(void (^ /* unknown block signature */)(void))v3;
//+ (void)traverseContainerGraphRootedInContainerGraphObject:(id)v1 skipInvalidObjects:(char)v2 skipSubgraphBlock:(void (^ /* unknown block signature */)(void))v3 visitorBlock:(void (^ /* unknown block signature */)(void))v4;
//+ (id)containerQueryWithContainerGraphObject:(id)v1 predicateBlock:(void (^ /* unknown block signature */)(void))v2;
//+ (char)automaticallyNotifiesObserversOfMatches;
//+ (id)_invalidContainerObjectsRootedInContainerGraphObject:(id)v1;
//- (id)init;
//- (id)_initWithContainerGraphObject:(id)v1 skipSubgraphBlock:(void (^ /* unknown block signature */)(void))v2 predicateBlock:(void (^ /* unknown block signature */)(void))v3 visitorBlock:(void (^ /* unknown block signature */)(void))v4 skipInvalidObjects:(char)v5;
//- (void)_cancelQueryIfNeeded;
//- (void)primitiveInvalidate;
//- (void)_addContainerGraphObject:(id)v1 insertedMatches:(id)v2;
//- (void)_removeContainerGraphObject:(id)v1 deletedMatches:(id)v2;
//- (void)_processContainerGraphObject:(id)v1 insertedMatches:(id)v2 deletedMatches:(id)v3;
//- (void)_traverseContainerGraphObject:(id)v1 forDeletion:(char)v2 checkedContainers:(id)v3 insertedMatches:(id)v4 deletedMatches:(id)v5;
//- (char)_isTrackingContainer:(id)v1 checkedContainers:(id)v2;
//- (char)_workspaceVerified_isTrackingContainer:(id)v1 checkedContainers:(id)v2;
//- (char)_isTrackingContainerItem:(id)v1 checkedContainers:(id)v2;
//- (char)_workspaceVerified_isTrackingContainerItem:(id)v1 checkedContainers:(id)v2;
//- (char)_isInterestedInContainerGraphObject:(id)v1 forDeletion:(char)v2;
//- (void)_traverseContainerGraphObjects:(id)v1 forDeletion:(char)v2 insertedMatches:(id)v3 deletedMatches:(id)v4;
//- (void)_updateWithInsertedMatches:(id)v1 deletedMatches:(id)v2;
//- (void)_objectsDidChange:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERuntimeIssueBreakpoint : IDEBreakpoint {
//    char _isRuntimeIssue;
//    NSSet * _categoriesAsSet;
//    unsigned long long _type;
//    NSString * _categories;
//}
//@property unsigned long long type;
//@property (copy,nonatomic) NSString * categories;
//@property (readonly,nonatomic) NSSet * categoriesAsSet;
//@property (readonly,nonatomic) char isSanitizerBreakpoint;
//+ (void)initialize;
//+ (id)propertiesAffectingPersistenceState;
//+ (id)supportedTypes;
//+ (id)displayNameForType:(unsigned long long)v1;
//- (id)init;
//- (void)_dvt_RuntimeIssueBreakpointCommonInit;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)displayName;
//- (id)accessibilityDescription;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setCategoriesFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (char)isRuntimeIssue;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionGenerateProcessedDistributionItems : IDEDistributionProcessingStep
//+ (id)processedTopLevelDistributionItemsForVariant:(id)v1 topLevelDistributionItems:(id)v2 flattenedDistributionItems:(id)v3 distributionCoalescedThinningVariants:(id)v4 context:(id)v5 logAspect:(id)v6;
//+ (id)processedTopLevelDistributionItemsForTopLevelDistributionItems:(id)v1 flattenedDistributionItems:(id)v2 distributionCoalescedThinningVariants:(id)v3 context:(id)v4 logAspect:(id)v5;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)processedTopLevelDistributionItems;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationSelectable : NSObject {
//    char _targetDeviceIsConcrete;
//    char _targetDeviceIsWireless;
//    char _isEligible;
//    NSURL * _targetDeviceLocation;
//    NSString * _targetDeviceModelCode;
//    NSString * _targetDeviceFamily;
//    DVTPlatform * _targetDevicePlatform;
//    DVTSDK * _targetSDK;
//    DVTSDKVariant * _targetSDKVariant;
//    NSString * _targetArchitecture;
//}
//@property (readonly,nonatomic) NSURL * targetDeviceLocation;
//@property (readonly,nonatomic) NSString * targetDeviceModelCode;
//@property (readonly,nonatomic) NSString * targetDeviceFamily;
//@property (readonly,nonatomic) char targetDeviceIsConcrete;
//@property (readonly,nonatomic) char targetDeviceIsWireless;
//@property (readonly,nonatomic) DVTPlatform * targetDevicePlatform;
//@property (readonly,nonatomic) DVTSDK * targetSDK;
//@property (readonly,nonatomic) DVTSDKVariant * targetSDKVariant;
//@property (readonly,nonatomic) NSString * targetArchitecture;
//@property (readonly,nonatomic) char isEligible;
//- (id)initWithTargetDeviceLocation:(id)v1 targetDeviceFamily:(id)v2 targetDeviceModelCode:(id)v3 targetDeviceIsConcrete:(char)v4 targetDeviceIsWireless:(char)v5 targetDevicePlatform:(id)v6 targetSDK:(id)v7 targetSDKVariant:(id)v8 targetArchitecture:(id)v9 isEligible:(char)v10;
//- (id)initWithRunDestination:(id)v1;
//- (id)initWithPlistRepresentation:(id)v1;
//- (id)plistRepresentation;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationFallbackSelector : NSObject
//+ (id)bestDestinationWithPreviousDestination:(id)v1 scheme:(id)v2;
//+ (id)bestDestinationWithPreviousDestinationSelectable:(id)v1 scheme:(id)v2;
//+ (id)bestDestinationSelectableWithPreviousDestinationSelectable:(id)v1 availableDestinationSelectables:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEFrameworkRootGroup : IDEGroup
//- (char)subitemsAreEditable;
//- (char)allowUserModificationOfSubitems;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFramework : IDEFolder
//+ (void)initialize;
//+ (char)_THREAD_shouldAddFileWithName:(id)v1;
//+ (id)containerTypeDisplayName;
//+ (char)isOnlyUsedForUserInteraction;
//- (char)textIndex_shouldSkipDescendantsForBatchFind;
//- (char)openQuickly_shouldIncludeDescendants;
//- (char)openQuickly_shouldIncludeAsResult;
//- (id)createRootGroup;
//- (char)isEditable;
//- (id)displayName;
//@end
//
//
///*****************************************************************/
//
//@interface IDEEnergyAddition : NSObject<IDEDebuggingAddition,DVTSysmonBridgeDelegate> {
//    int _selectedPID;
//    IDEDataMatrix * _metricsOverTime;
//    NSString * _identifier;
//    IDELaunchSession * _launchSession;
//    id _launchSessionObservationToken;
//    id _launchSessionObservationToken2;
//    DVTSysmonBridge * _sysmonBridge;
//}
//@property (retain,nonatomic) NSString * identifier;
//@property (retain,nonatomic) IDELaunchSession * launchSession;
//@property (retain,nonatomic) id launchSessionObservationToken;
//@property (retain,nonatomic) id launchSessionObservationToken2;
//@property (retain,nonatomic) DVTSysmonBridge * sysmonBridge;
//@property (retain,nonatomic) IDEDataMatrix * metricsOverTime;
//@property (readonly,nonatomic) int selectedPID;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (char)shouldInstantiateInLaunchSession:(id)v1;
//+ (void)initialize;
//- (id)initInLaunchSession:(id)v1 withAppDisplayName:(id)v2 runDestination:(id)v3 fromExtension:(id)v4;
//- (void)processFinalLaunchParameters:(id)v1;
//- (void)_sysmondControl:(int)v1;
//- (void)_handlePIDChange:(int)v1;
//- (void)bridgeHasNewProcessInformation:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodAppleSigning : IDEDistributionMethod
//@property (readonly) DVTPlatform * supportedPlatform;
//- (id)exportStepName;
//- (char)requiresAppStoreConfigurationForDestination:(long long)v1;
//- (id)orderedDistributionStepClassNamesForDestination:(long long)v1;
//- (id)orderedDistributionStepClassNamesForTask:(long long)v1 destination:(long long)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductVersion : NSObject<DVTServicesJSONSerialization,DVTInvalidation,NSCopying> {
//    NSString * _name;
//    IDEProductVersionIdentifier * _productVersionIdentifier;
//    NSString * _platformSDKIdentifier;
//    NSURL * _imageURL;
//    NSURL * _cacheImageURL;
//    NSDate * _creationDate;
//    NSArray * _childProducts;
//    NSString * _adamId;
//    NSSet * _supportedDeviceTypes;
//    NSSet * _supportedOSVersions;
//    IDEProductVersionBinaryInfos * _binaryInfos;
//    NSArray * _archives;
//    unsigned long long _appStoreStatus;
//}
//@property (retain) NSDate * creationDate;
//@property (retain) NSURL * imageURL;
//@property (retain) NSURL * cacheImageURL;
//@property unsigned long long appStoreStatus;
//@property (copy) NSString * adamId;
//@property (retain) NSSet * supportedDeviceTypes;
//@property (retain) NSSet * supportedOSVersions;
//@property (retain) IDEProductVersionBinaryInfos * binaryInfos;
//@property (retain) NSArray * childProducts;
//@property (retain) NSArray * archives;
//@property (retain) NSString * platformSDKIdentifier;
//@property (readonly) IDEProductVersionIdentifier * productVersionIdentifier;
//@property (readonly) NSString * bundleIdentifier;
//@property (readonly) NSString * version;
//@property (readonly) NSString * buildNumber;
//@property (readonly) NSString * name;
//@property (readonly) NSArray * flatChildProducts;
//@property (readonly) IDEProductCategory * productCategory;
//@property (readonly,getter=isAvailableForPrerelease) char availableForPrerelease;
//@property (readonly,getter=isAvailableForSale) char availableForSale;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)mostRecentVersion:(id)v1;
//+ (id)productVersionByMerging:(id)v1;
//+ (char)isValidProductVersionFromArchive:(id)v1 withError:(id *)v2;
//+ (id)productVersionFromArchive:(id)v1 withError:(id *)v2;
//+ (id)objectFromJSONRepresentation:(id)v1 error:(id *)v2;
//- (id)init;
//- (id)initWithProductVersionIdentifier:(id)v1 name:(id)v2 childProducts:(id)v3;
//- (id)newerVersion:(id)v1;
//- (id)olderVersion:(id)v1;
//- (id)cachePathWithRootProductVersion:(id)v1 productDirectory:(id)v2;
//- (void)primitiveInvalidate;
//- (id)JSONRepresentation;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMasterPtyFileHandle : NSFileHandle {
//    NSFileHandle * _masterFileHandle;
//    char _readObserverAdded;
//    char _isInGotData;
//    NSFileHandle * _slaveFileHandle;
//}
//@property (readonly) NSFileHandle * slaveFileHandle;
//- (id)initWithFileDescriptor:(int)v1 slaveFileDescriptor:(int)v2 ownsSlaveFileDescriptor:(char)v3;
//- (void)dealloc;
//- (id)description;
//- (id)availableData;
//- (id)readDataToEndOfFile;
//- (id)readDataOfLength:(unsigned long long)v1;
//- (void)writeData:(id)v1;
//- (unsigned long long)offsetInFile;
//- (unsigned long long)seekToEndOfFile;
//- (void)seekToFileOffset:(unsigned long long)v1;
//- (void)truncateFileAtOffset:(unsigned long long)v1;
//- (void)synchronizeFile;
//- (void)closeFile;
//- (void)readInBackgroundAndNotifyForModes:(id)v1;
//- (void)_gotData:(id)v1;
//- (void)readInBackgroundAndNotify;
//- (void)readToEndOfFileInBackgroundAndNotifyForModes:(id)v1;
//- (void)readToEndOfFileInBackgroundAndNotify;
//- (void)acceptConnectionInBackgroundAndNotifyForModes:(id)v1;
//- (void)acceptConnectionInBackgroundAndNotify;
//- (void)waitForDataInBackgroundAndNotifyForModes:(id)v1;
//- (void)waitForDataInBackgroundAndNotify;
//- (int)fileDescriptor;
//- (void)setReadabilityHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildPlan : NSObject {
//    NSString * _debugName;
//    NSMutableArray * _bucketList;
//    char _isImmutable;
//    NSSet * _productArtifactNodes;
//}
//@property (readonly) NSArray * bucketList;
//@property (copy) NSSet * productArtifactNodes;
//@property (readonly) NSString * debugName;
//- (id)initWithDebugName:(id)v1;
//- (void)addBucket:(id)v1;
//- (char)isImmutable;
//- (void)makeImmutable;
//- (id)description;
//- (void)writeDebugRepresentationToFileAtPath:(id)v1 format:(long long)v2 basePath:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationRecordItem : NSObject {
//    char _projectChange;
//    NSString * _message;
//}
//@property (readonly,copy) NSString * message;
//@property (readonly,getter=isProjectChange) char projectChange;
//- (id)initWithMessage:(id)v1 projectChange:(char)v2;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationRecorder : NSObject {
//    NSMutableArray * _records;
//}
//@property (readonly,copy) NSArray * records;
//+ (void)initialize;
//+ (id)sharedLocalizationRecorder;
//- (id)init;
//- (void)willAddReferenceWithPath:(id)v1 toGroup:(id)v2 forLanguage:(id)v3;
//- (void)willAddGroupWithName:(id)v1 inDirectory:(id)v2 toItem:(id)v3 forLanguage:(id)v4;
//- (void)removeAllRecords;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateCommandLineVerb : IDECommandLineVerb
//+ (id)templateKindForTemplateTypeString:(id)v1;
//+ (id)shortIdentifierForPlatform:(id)v1;
//+ (id)platformForString:(id)v1;
//+ (void)emitJSONForPropertyList:(id)v1 toFileHandle:(id)v2;
//+ (void)emitSimpleList:(id)v1 withSeparator:(id)v2 toFileHandle:(id)v3;
//+ (id)templateDescriptionsOfKind:(id)v1 forPlatform:(id)v2;
//+ (id)templateIdentifiersOfKind:(id)v1 forPlatform:(id)v2;
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//- (id)findTemplateFromIdentifier:(id)v1 ofKind:(id)v2 requestedPlatform:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDeviceSupportCacheDeleteExtension : DVTDefaultPolicyCacheDeleteExtension {
//    DVTFilePath * _userLibraryXcodeLocation;
//}
//@property (readonly) DVTFilePath * userLibraryXcodeLocation;
//+ (void)_setupUserDefaults;
//+ (char)enableDeviceSupportCacheCleanup;
//+ (long long)maximumCacheAgeAllowedInDays;
//- (id)initWithUserXcodeLocation:(id)v1;
//- (id)init;
//- (id)_userDeviceSupportDirectories;
//- (id)_directoriesToDelete;
//- (id)itemsWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningSessionManager : NSObject {
//    DVTDispatchLock * _lock;
//    NSMapTable * _sessionProviderToSessionMap;
//}
//+ (id)sharedManager;
//- (id)initWithLock:(id)v1 sessionProvidersToSessionMap:(id)v2;
//- (id)sessionForSessionProvider:(id)v1 error:(id *)v2;
//- (void)invalidateSession:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExecutionActionOperation : DVTOperation {
//    void (^ /* unknown block signature */)(void) _environmentPopulationBlock;
//}
//@property (copy) void (^ /* unknown block signature */)(void) environmentPopulationBlock;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateFactory : NSObject
//- (char)canInstantiateTemplateForContext:(id)v1;
//- (id)proposedFilePathsForContext:(id)v1 options:(id)v2 error:(id *)v3;
//- (void)instantiateTemplateForContext:(id)v1 options:(id)v2 whenDone:(void (^ /* unknown block signature */)(void))v3;
//- (char)_isHiddenFilePath:(id)v1;
//- (char)shouldProcessPath:(id)v1 forContext:(id)v2 inTemplate:(id)v3;
//- (id)mainFileNameForContext:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestWorkerProxy : NSObject<XCTTestSchedulerWorker> {
//    NSObject<IDETestRunner> * _worker;
//    IDETestTargetRunner * _testTargetRunner;
//    unsigned long long _state;
//    NSError * _overridingError;
//}
//@property (readonly) NSObject<IDETestRunner> * worker;
//@property IDETestTargetRunner * testTargetRunner;
//@property unsigned long long state;
//@property (copy) NSError * overridingError;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithWorker:(id)v1;
//- (void)intentionallyCancelWithError:(id)v1;
//- (void)shutdown;
//- (void)executeTestIdentifiers:(id)v1 skippingTestIdentifiers:(id)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3 completionQueue:(id)v4;
//- (void)logMessage:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestTargetRunner : NSObject<XCTTestSchedulerDelegate,IDETestTargetRunner,IDETestRunnerEvents> {
//    char _hasNotifiedObserverOfStart;
//    char _shouldParallelize;
//    NSObject<IDETestTargetRunnerEvents> * _testEventsObserver;
//    IDETestRunSpecification * _testRunSpecification;
//    _TtC13IDEFoundation28IDETestRunSpecificationGroup * _testRunSpecificationGroup;
//    NSObject<XCTTestScheduler> * _scheduler;
//    NSMutableArray * _testResults;
//    unsigned long long _state;
//    DVTOperation<DVTOperationGroup> * _operation;
//    NSMutableSet * _workerProxies;
//    DVTDisallowFinishToken * _disallowFinishToken;
//    NSObject<IDETestWorkerProvider> * _workerProvider;
//    NSURL * _artifactsDirectory;
//    NSOutputStream * _logStream;
//    NSObject<OS_dispatch_queue> * _loggingQueue;
//    NSObject<IDETestMetadataDatabase> * _testDatabase;
//    NSMutableArray * _workerErrors;
//    long long _requestedWorkerCount;
//    long long _numberOfTestClasses;
//}
//@property (retain) IDETestRunSpecification * testRunSpecification;
//@property (retain) _TtC13IDEFoundation28IDETestRunSpecificationGroup * testRunSpecificationGroup;
//@property (retain) NSObject<XCTTestScheduler> * scheduler;
//@property (retain) NSMutableArray * testResults;
//@property unsigned long long state;
//@property char hasNotifiedObserverOfStart;
//@property (retain) DVTOperation<DVTOperationGroup> * operation;
//@property (retain) NSMutableSet * workerProxies;
//@property (retain) DVTDisallowFinishToken * disallowFinishToken;
//@property (retain) NSObject<IDETestWorkerProvider> * workerProvider;
//@property (retain) NSURL * artifactsDirectory;
//@property (retain) NSOutputStream * logStream;
//@property (retain) NSObject<OS_dispatch_queue> * loggingQueue;
//@property (readonly) NSObject<IDETestMetadataDatabase> * testDatabase;
//@property (retain) NSMutableArray * workerErrors;
//@property long long requestedWorkerCount;
//@property long long numberOfTestClasses;
//@property (readonly) char shouldParallelize;
//@property NSObject<IDETestTargetRunnerEvents> * testEventsObserver;
//@property (readonly) char finished;
//@property (readonly) char successfullyBootstrapped;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (char)supportsInvalidationPrevention;
//+ (id)keyPathsForValuesAffectingFinished;
//+ (id)artifactsDirectoryURLForTestRunSpecification:(id)v1 testSessionDirectory:(id)v2;
//+ (id)logFileURLForArtifactsDirectory:(id)v1;
//- (id)initWithTestRunSpecification:(id)v1 testRunSpecificationGroup:(id)v2 workerProvider:(id)v3 scheduler:(id)v4 testDatabase:(id)v5 artifactsDirectory:(id)v6;
//- (void)primitiveInvalidate;
//- (id)proxyForWorker:(id)v1;
//- (void)setupOperation;
//- (void)requestNewWorker;
//- (void)workerWasProvided:(id)v1;
//- (void)didFailToBootstrapWithError:(id)v1;
//- (void)requestNewWorkerIfNeeded;
//- (void)considerFinishingWithError:(id)v1 wasCanceled:(char)v2;
//- (void)observeOperationCancellation;
//- (void)handleCancellation;
//- (void)requestTestPlanUsingWorker:(id)v1;
//- (void)startWithTestIdentifiersToRun:(id)v1 testIdentifiersToSkip:(id)v2;
//- (void)purgeStaleClassesInTestDatabase:(id)v1;
//- (void)notifyObserverOfStartIfNecessary;
//- (void)initializeLogging;
//- (void)logMessage:(id)v1;
//- (void)finishLogging;
//- (void)testScheduler:(id)v1 queueDidChange:(id)v2;
//- (void)testRunnerDidBecomeReadyForWork:(id)v1;
//- (void)testRunner:(id)v1 didLaunchWithDiagnosticLogPath:(id)v2;
//- (void)testRunner:(id)v1 willFinishWithError:(id)v2 didCancel:(char)v3;
//- (void)testRunner:(id)v1 testSuite:(id)v2 didStartAt:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 testSuite:(id)v2 willFinishAt:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 testSuiteDidFinishWithRunCount:(unsigned long long)v2 skipCount:(unsigned long long)v3 failureCount:(unsigned long long)v4 unexpectedFailureCount:(unsigned long long)v5 testDuration:(double)v6 totalDuration:(double)v7 rawOutput:(id)v8;
//- (void)testRunner:(id)v1 didStartTestWithIdentifier:(id)v2 rawOutput:(id)v3;
//- (void)testRunner:(id)v1 testWithIdentifier:(id)v2 willStartActivity:(id)v3;
//- (void)testRunner:(id)v1 testWithIdentifier:(id)v2 didFinishActivity:(id)v3;
//- (void)testRunner:(id)v1 testWithIdentifier:(id)v2 didMeasurePerformanceMetric:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 testCaseWithIdentifier:(id)v2 didRecordIssue:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 didSkipTestWithIdentifier:(id)v2 withTestResultMessage:(id)v3 rawOutput:(id)v4;
//- (void)testRunner:(id)v1 didFinishTestWithIdentifier:(id)v2 withTestResult:(id)v3 rawOutput:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMemoryFootprintMonitorProgressWindowController : NSWindowController
//@end
//
//
///*****************************************************************/
//
//@interface IDEMemoryFootprintMonitor : NSObject<DVTMemoryFootprintMonitor> {
//    int _pid;
//    NSObject<OS_dispatch_queue> * _physFootprintMonitorQueue;
//    NSObject<OS_dispatch_source> * _timer;
//    unsigned long long _thresholdInGB;
//    NSTimer * _testMemoryTimer;
//}
//+ (void)initialize;
//+ (id)sharedFootprintMonitor;
//- (id)_initForCurrentProcess;
//- (void)useMemoryForTesting;
//- (void)showAlertForAbandonedObjectAfterDuration:(double)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)showAlertWithCurrentUsage:(id)v1;
//- (id)_memoryGraphCollector;
//- (id)_leaksFilePath;
//- (char)_isTestingEnabled;
//- (void)startMonitor;
//- (void)startMonitorWithThresholdInGB:(unsigned long long)v1;
//- (char)_enableMallocStackLoggingLite;
//- (void)_disableMallocStackLogging;
//- (void)_startMonitorWithInterval:(unsigned long long)v1 thresholdInGB:(unsigned long long)v2 consecutiveSampleThreshold:(unsigned long long)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEMemoryGraphCollector : NSObject {
//    int _pid;
//    unsigned long long _thresholdInGB;
//    DVTFilePath * _leaksFilePath;
//}
//+ (id)_gatherMemgraphQueue;
//+ (id)_memgraphFilePathWithPID:(int)v1 fileNameSuffix:(id)v2;
//+ (char)_primitiveCaptureMemoryGraphAtPath:(id)v1 leaksURL:(id)v2 pid:(int)v3 useCorpse:(char)v4 error:(id *)v5;
//+ (char)_LOCKED_showModalUIAndCaptureMemoryGraphAtPath:(id)v1 pid:(int)v2 leaksURL:(id)v3 showSuccessDialog:(char)v4;
//+ (void)_LOCKED_showAlertWithMessage:(id)v1 informativeText:(id)v2 accessibilityLabel:(id)v3 suppressionButtonTitle:(id)v4 useCorpse:(char)v5 completionBlock:(void (^ /* unknown block signature */)(void))v6;
//- (id)initWithPID:(int)v1 leaksFilePath:(id)v2 thresholdInGB:(unsigned long long)v3;
//- (void)showAlertForAbandonedObjectAfterDuration:(double)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)showAlertWithCurrentUsage:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBackgroundModesItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _infoPlistFlightCheck;
//    char _isProgrammaticallySettingSessionType;
//    NSArray * _sessionTypes;
//    _TtC13IDEFoundation25BackgroundModeSessionType * _sessionType;
//    NSDictionary * _backgroundModesInfoPlistKeyToEnabledBackgroundModes;
//    DVTVersion * _deploymentTargetVersion;
//    DVTObservingToken * _backgroundModesObservation;
//    DVTObservingToken * _sessionTypeObservation;
//}
//@property (readonly) id infoPlistCoordinator;
//@property (copy,nonatomic) NSDictionary * backgroundModesInfoPlistKeyToEnabledBackgroundModes;
//@property (retain,nonatomic) DVTVersion * deploymentTargetVersion;
//@property (retain,nonatomic) DVTObservingToken * backgroundModesObservation;
//@property (retain,nonatomic) DVTObservingToken * sessionTypeObservation;
//@property (nonatomic) char isProgrammaticallySettingSessionType;
//@property (nonatomic) char audio;
//@property (nonatomic) char location;
//@property (nonatomic) char voip;
//@property (nonatomic) char externalAccessory;
//@property (nonatomic) char bluetoothCentral;
//@property (nonatomic) char bluetoothPeripheral;
//@property (nonatomic) char opportunisticFetch;
//@property (nonatomic) char remoteNotificationInitiatedFetch;
//@property (nonatomic) char processing;
//@property (nonatomic) char workoutProcessing;
//@property (readonly,nonatomic) NSArray * sessionTypes;
//@property (retain,nonatomic) _TtC13IDEFoundation25BackgroundModeSessionType * sessionType;
//+ (id)defaultSessionTypes;
//+ (id)selectedBackgroundSessionTypes:(id)v1 forBackgroundModes:(id)v2;
//+ (id)keyPathsForValuesAffectingAudio;
//+ (id)keyPathsForValuesAffectingLocation;
//+ (id)keyPathsForValuesAffectingVoip;
//+ (id)keyPathsForValuesAffectingExternalAccessory;
//+ (id)keyPathsForValuesAffectingBluetoothCentral;
//+ (id)keyPathsForValuesAffectingBluetoothPeripheral;
//+ (id)keyPathsForValuesAffectingOpportunisticFetch;
//+ (id)keyPathsForValuesAffectingRemoteNotificationInitiatedFetch;
//+ (id)keyPathsForValuesAffectingProcessing;
//+ (id)keyPathsForValuesAffectingWorkoutProcessing;
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (void)setUpObservations;
//- (id)allSessionTypeBackgroundKeys;
//- (void)targetCoordinatorsChanged:(id)v1;
//- (void)readValuesFromPlist;
//- (void)readValuesFromBuildSettings;
//- (char)isBackgroundModeEnabled:(id)v1 withUpperCaseName:(id)v2;
//- (void)addEnabledBackgroundMode:(id)v1 toBackgroundModesInfoPlistKey:(id)v2;
//- (void)addEnabledBackgroundMode:(id)v1 toBackgroundModesInfoPlistKey:(id)v2 removingModes:(id)v3;
//- (void)removeEnabledBackgroundModes:(id)v1 fromBackgroundModesInfoPlistKey:(id)v2;
//- (void)_setAudio:(char)v1;
//- (id)backgroundModesInfoPlistKeyForAudio;
//- (void)_setLocation:(char)v1;
//- (id)backgroundModesInfoPlistKeyForLocation;
//- (void)_setVoip:(char)v1;
//- (id)backgroundModesInfoPlistKeyForVoip;
//- (void)_setExternalAccessory:(char)v1;
//- (id)backgroundModesInfoPlistKeyForExternalAccessory;
//- (void)_setBluetoothCentral:(char)v1;
//- (id)backgroundModesInfoPlistKeyForBluetoothCentral;
//- (void)_setBluetoothPeripheral:(char)v1;
//- (id)backgroundModesInfoPlistKeyForBluetoothPeripheral;
//- (void)_setOpportunisticFetch:(char)v1;
//- (id)backgroundModesInfoPlistKeyForOpportunisticFetch;
//- (void)_setRemoteNotificationInitiatedFetch:(char)v1;
//- (id)backgroundModesInfoPlistKeyForRemoteNotificationInitiatedFetch;
//- (void)_setProcessing:(char)v1;
//- (id)backgroundModesInfoPlistKeyForProcessing;
//- (void)_setWorkoutProcessing:(char)v1;
//- (id)backgroundModesInfoPlistKeyForWorkoutProcessing;
//- (id)infoPlistFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (void)primitiveInvalidate;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindFileSource : NSObject<IDEBatchFindPlistCodable,NSCopying>
//+ (id)plistDecoder;
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isEqualToFileSourceWithIdenticalClass:(id)v1;
//- (char)isEqualToFileSource:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (id)buildTextIndexSnapshotsByUniquingAndApplyingFilter:(void (^ /* unknown block signature */)(void))v1 toFilePathTables:(id)v2 withSuffixTrees:(id)v3 representingTextIndexes:(id)v4;
//- (void)accessTextFragmentIndexContentSnapshotsWithWorkspace:(id)v1 priority:(long long)v2 filter:(void (^ /* unknown block signature */)(void))v3 andCompletionHandler:(void (^ /* unknown block signature */)(void))v4;
//- (void)accessOrderedContentGroupsForSources:(id)v1 withWorkspace:(id)v2 priority:(long long)v3 completionHandler:(void (^ /* unknown block signature */)(void))v4;
//- (void)accumulateContributingSources:(id)v1;
//- (void)accessContentWithWorkspace:(id)v1 priority:(long long)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIntegrateSchemeAction : IDESchemeAction {
//    char _performsAnalyze;
//    char _performsTest;
//    char _performsArchive;
//}
//@property (nonatomic) char performsAnalyze;
//@property (nonatomic) char performsTest;
//@property (nonatomic) char performsArchive;
//+ (char)shouldAllowCustomPhaseActions;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (id)keyPathsForValuesAffectingDoesNonActionWork;
//+ (id)keyPathsForValuesAffectingHasDefaultValues;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)_commonInit;
//- (id)prePhaseExecutionActions;
//- (id)mutablePrePhaseExecutionActions;
//- (id)postPhaseExecutionActions;
//- (id)mutablePostPhaseExecutionActions;
//- (id)name;
//- (id)subtitle;
//- (char)doesNonActionWork;
//- (char)hasDefaultValues;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setPerformsAnalyzeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setPerformsTestFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setPerformsArchiveFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEUserNotificationCenter : NSObject<UNUserNotificationCenterDelegate>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)sharedIDEUserNotificationCenter;
//+ (id)_getNotificationCategories;
//+ (void)setUserNotificationCenterCategories:(id)v1;
//- (id)findNotificationHandler:(id)v1;
//- (void)userNotificationCenter:(id)v1 didReceiveNotificationResponse:(id)v2 withCompletionHandler:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEITunesSoftwareServiceDelegate : NSObject<IDEITunesSoftwareServiceDelegateProtocol> {
//    void (^ /* unknown block signature */)(void) _uploadWillBeginCallback;
//    void (^ /* unknown block signature */)(void) _updateUploadPercentageCallback;
//    void (^ /* unknown block signature */)(void) _updateUploadMessageCallback;
//    void (^ /* unknown block signature */)(void) _uploadDidCompleteCallback;
//}
//@property (copy) void (^ /* unknown block signature */)(void) uploadWillBeginCallback;
//@property (copy) void (^ /* unknown block signature */)(void) updateUploadPercentageCallback;
//@property (copy) void (^ /* unknown block signature */)(void) updateUploadMessageCallback;
//@property (copy) void (^ /* unknown block signature */)(void) uploadDidCompleteCallback;
//- (void)uploadWillBegin;
//- (void)updateUploadPercentage:(double)v1;
//- (void)updateUploadMessage:(id)v1;
//- (void)uploadDidComplete;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEFoundationPrivateClassForFindingBundle : NSObject
//@end
//
//
///*****************************************************************/
//
//@interface IDETestReportDocumentLocation : DVTDocumentLocation {
//    NSString * _testClassName;
//    NSString * _testMethodName;
//}
//@property (copy) NSString * testClassName;
//@property (copy) NSString * testMethodName;
//- (id)initWithDocumentURL:(id)v1 timestamp:(id)v2 testClassName:(id)v3 testMethodName:(id)v4;
//- (void)encodeWithCoder:(id)v1;
//- (id)initWithCoder:(id)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOption : NSObject {
//    NSString * _identifier;
//    IDEDistributionContext * _context;
//}
//@property (retain,nonatomic) IDEDistributionContext * context;
//@property (readonly,nonatomic) NSString * identifier;
//@property (readonly) NSSet * requiredInputContextPropertyNames;
//@property (readonly) NSSet * providedOutputContextPropertyNames;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)initWithIdentifier:(id)v1 context:(id)v2;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindScopeStore : NSObject {
//    NSObject<DVTCustomDataStoring> * _storage;
//    NSArray * _scopes;
//    void (^ /* unknown block signature */)(void) _legacyImporter;
//}
//@property (copy) NSArray * scopes;
//- (id)initWithStorage:(id)v1 legacyImporter:(void (^ /* unknown block signature */)(void))v2;
//- (id)loadScopes;
//- (void)writeScopes:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESwiftMigrationTarget : IDEMigrationTarget {
//    NSString * _currentSwiftVersion;
//    NSString * _alwaysEmbedSwiftLibraries;
//    char _enabled;
//    NSString * _subTitle;
//}
//@property (readonly,copy) NSString * subTitle;
//@property char enabled;
//- (id)initWithBlueprint:(id)v1 migrationContext:(id)v2;
//- (void)updateBuildSettings;
//- (id)currentSwiftVersion;
//- (char)alwaysEmbedSwiftLibraries;
//- (char)canMigrate;
//- (char)shouldMigrate;
//- (id)warningMessage;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindExplicitNamedScope : IDEBatchFindNamedScope {
//    IDEBatchFindFilePathPredicate * _predicate;
//    IDEBatchFindFileSource * _source;
//    NSString * _name;
//}
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)initWithName:(id)v1 source:(id)v2 predicate:(id)v3;
//- (id)name;
//- (id)source;
//- (id)predicate;
//- (id)propertyListRepresentation;
//- (unsigned long long)hash;
//- (char)isEqualToNamedScopeWithIdenticalClass:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindTextFragmentIndexContentSnapshot : NSObject {
//    IDETextFragmentIndex * _textFragmentIndex;
//    IDEBatchFindContextualSuffixTree * _suffixTree;
//    IDEBatchFindFilePathTable * _filePathTable;
//}
//@property (readonly) IDETextFragmentIndex * textFragmentIndex;
//@property (readonly) IDEBatchFindContextualSuffixTree * suffixTree;
//@property (readonly) IDEBatchFindFilePathTable * filePathTable;
//@property (readonly) NSArray * allPossiblySkippedFilePaths;
//- (id)initWithContextualSuffixTree:(id)v1 filePathTable:(id)v2 textFragmentIndex:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindContextualSuffixTree : NSObject {
//    IDEBatchFindIndexTable * _table;
//}
//- (id)init;
//- (long long)addComponent:(id)v1;
//- (long long)addComponent:(id)v1 withParentIndex:(long long)v2;
//- (void)populateSuffix:(id *)v1 capacity:(long long)v2 forIndex:(long long)v3 tail:(char)v4;
//- (id)pathForIndex:(long long)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindFilePathTable : NSObject {
//    IDEBatchFindIndexTable * _table;
//    NSPointerArray * _fileDataTypes;
//}
//@property (readonly) long long count;
//@property (readonly) NSArray * allPossiblySkippedFilePaths;
//- (id)init;
//- (void)addFilePath:(id)v1 explicitDataType:(id)v2 suffixEntry:(long long)v3;
//- (void)setIsSkipped:(char)v1 atIndex:(long long)v2;
//- (void)enumerateFilePaths:(void (^ /* unknown block signature */)(void))v1;
//- (id)nonSkippedFilePathAtIndex:(long long)v1;
//- (id)explicitFileDataTypeAtIndex:(long long)v1;
//- (id)possiblySkippedFilePathAtIndex:(long long)v1;
//- (id)contextualStuffixForIndex:(long long)v1 suffixTree:(id)v2;
//- (long long)numberOfNonSkippedFilePaths;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindContextualizedFilePaths : NSObject {
//    IDEBatchFindContextualSuffixTree * _suffixTree;
//    IDEBatchFindFilePathTable * _filePathTable;
//}
//@property (readonly) IDEBatchFindContextualSuffixTree * suffixTree;
//@property (readonly) IDEBatchFindFilePathTable * filePathTable;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningCreateProfileRepairStep : IDEProvisioningRepairStep {
//    DVTPortalProfileCharacteristics * _characteristics;
//}
//@property (readonly,nonatomic) DVTPortalProfileCharacteristics * characteristics;
//+ (id)createProfileRepairStepWithCharacteristics:(id)v1;
//- (id)initWithCharacteristics:(id)v1;
//- (id)stepDescription;
//- (id)activityDescription;
//- (char)preflightWithContext:(id)v1 error:(id *)v2;
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//- (char)_installPortalProfile:(id)v1 profileManager:(id)v2 logAspect:(id)v3 error:(id *)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerContentProductionSpecifier : NSObject<NSCopying> {
//    IDEContainer * _container;
//    NSSet * _types;
//    NSObject<IDEContainerContentProducer> * _producer;
//}
//@property (readonly) IDEContainer * container;
//@property (readonly) NSSet * types;
//@property (readonly) NSObject<IDEContainerContentProducer> * producer;
//- (id)initWithContainer:(id)v1 types:(id)v2 producer:(id)v3;
//- (id)description;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (unsigned long long)hash;
//- (char)isEqualToContentProductionSpecifier:(id)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerContentProductionCoordinator : NSObject<DVTInvalidation> {
//    NSObject<DVTInvalidation> * _filePathObservationToken;
//    NSMutableDictionary * _deliveredResults;
//    NSMutableDictionary * _pendingProducedValues;
//    NSMutableSet * _pendingRemoves;
//    NSObject<OS_dispatch_queue> * _productionQueue;
//    NSMutableDictionary * _observers;
//    IDEContainerContentProductionSpecifier * _specifier;
//    DVTDelayedInvocation * _observationInvocation;
//    NSObject<IDEContainerContentProducer> * _producer;
//}
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)observeContentProductionSpecifier:(id)v1 handler:(void (^ /* unknown block signature */)(void))v2;
//- (id)initWithContentProductionSpecifier:(id)v1;
//- (void)primitiveInvalidate;
//- (id)addObserver:(void (^ /* unknown block signature */)(void))v1;
//- (void)scheduleUpdateToFilePath:(id)v1 withDataType:(id)v2 updateType:(long long)v3;
//- (void)scheduleUpdateOrAddToFilePath:(id)v1 withDataType:(id)v2;
//- (void)scheduleRemoveOfFilePath:(id)v1;
//- (void)deliverPendingResults:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEDistributionCodesignableDevice : NSObject<DVTCodesignableDevice> {
//    NSString * _name;
//    NSString * _identifier;
//    DVTPlatform * _platform;
//}
//@property (readonly,copy,nonatomic) NSString * name;
//@property (readonly,copy) NSString * nameForDeveloperPortal;
//@property (readonly,copy,nonatomic) NSString * identifier;
//@property (readonly,copy) NSString * platformIdentifier;
//@property (readonly) DVTPlatform * platform;
//@property (readonly) char supportsProvisioning;
//@property (readonly,copy) NSSet * proxiedDevices;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)codesignableDeviceWithIdentifier:(id)v1 platform:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionSigningAssetsStep : IDEDistributionStep {
//    NSSet * _testDevices;
//}
//@property (retain) NSSet * testDevices;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)_loadSigningAssetMapFromExportOptions:(id)v1 error:(id *)v2;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)_platformForArchive;
//- (id)_portalPlatform;
//- (id)requiredDevices;
//- (id)_devicesFromPortalForSessionProvider:(id)v1 teamID:(id)v2 profileType:(id)v3 error:(id *)v4;
//- (char)populateProvisioningEvaluationtWithError:(id *)v1;
//- (id)_wrappedErrors;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAnalysisTool : NSObject {
//    int _type;
//    NSString * _identifier;
//    NSString * _displayName;
//    NSString * _path;
//}
//@property (readonly) int type;
//@property (readonly) NSString * identifier;
//@property (readonly) NSString * displayName;
//@property (readonly) NSString * path;
//- (id)initWithType:(int)v1 identifer:(id)v2 displayName:(id)v3 path:(id)v4;
//- (long long)displayNameCompare:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFolderFileReference : IDEFileReference {
//    char _editable;
//    char _alwaysExists;
//}
//- (id)initWithSubpath:(id)v1 alwaysExists:(char)v2 fileDataType:(id)v3;
//- (void)setAssignedFileDataType:(id)v1;
//- (char)isEditable;
//- (char)_filePathExists;
//- (void)changePath:(id)v1 resolutionStrategies:(id)v2;
//- (char)structureEditName:(id)v1 inContext:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileSchemeAction : IDESchemeAction<DVTXMLUnarchiving> {
//    NSMutableArray * _commandLineArgumentEntries;
//    NSMutableArray * _environmentVariableEntries;
//    NSObject<IDEAnalysisToolService> * _analysisToolService;
//    DVTNotificationToken * _buildablesToken;
//    char _debugDocumentVersioning;
//    char _ignoresPersistentStateOnLaunch;
//    char _shouldUseLaunchSchemeArgsEnv;
//    char _useCustomWorkingDirectory;
//    char _enableTestabilityWhenProfilingTests;
//    IDESchemeBuildableReference * _buildableReferenceToUseForMacroExpansion;
//    NSString * _customWorkingDirectory;
//    NSString * _resolvedCustomWorkingDirectory;
//    NSString * _savedToolIdentifier;
//    unsigned long long _launchAutomaticallySubstyle;
//    Class _analysisToolServiceClass;
//}
//@property (retain) Class analysisToolServiceClass;
//@property char askForAppToLaunch;
//@property char launchWithGlance;
//@property char launchWithComplication;
//@property char launchWithNotification;
//@property char staticNotificationSelected;
//@property (copy) NSArray * commandLineArgumentEntries;
//@property (readonly) NSMutableArray * mutableCommandLineArgumentEntries;
//@property (nonatomic) char shouldUseLaunchSchemeArgsEnv;
//@property (copy) NSArray * environmentVariableEntries;
//@property (readonly) NSMutableArray * mutableEnvironmentVariableEntries;
//@property (nonatomic) unsigned long long launchAutomaticallySubstyle;
//@property char enableTestabilityWhenProfilingTests;
//@property char useCustomWorkingDirectory;
//@property (copy,nonatomic) NSString * customWorkingDirectory;
//@property (readonly) NSString * resolvedCustomWorkingDirectory;
//@property char ignoresPersistentStateOnLaunch;
//@property char debugDocumentVersioning;
//@property (retain,nonatomic) NSString * savedToolIdentifier;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (id)keyPathsForValuesAffectingDoesNonActionWork;
//+ (char)automaticallyNotifiesObserversOfAnalysisToolService;
//+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)_commonInit;
//- (id)schemeCommand;
//- (id)name;
//- (id)subtitle;
//- (char)doesNonActionWork;
//- (void)setRunContext:(id)v1;
//- (void)updateBuildableForChangeInRunnable;
//- (void)_updateProfileActionBuildableToUseForMacroExpansion;
//- (id)primitiveProfileOperationForRunnableType:(id)v1 runDestination:(id)v2 launchParametersProvider:(void (^ /* unknown block signature */)(void))v3 workspaceFilePath:(id)v4 projectFilePath:(id)v5 schemeCommand:(id)v6 outError:(id *)v7;
//- (void)setSelectedAnalysisToolIdentifier:(id)v1 forPlatformIdentifier:(id)v2;
//- (id)profileOperationWithSchemeOperationParameters:(id)v1 testManager:(id)v2 buildOperation:(id)v3 buildParameters:(id)v4 buildableProductDirectories:(id)v5 overridingTestingSpecifiers:(id)v6 schemeActionRecord:(id)v7 outError:(id *)v8 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v9;
//- (id)profileOperationWithSchemeOperationParameters:(id)v1 buildOperation:(id)v2 buildParameters:(id)v3 buildableProductDirectories:(id)v4 schemeActionRecord:(id)v5 outError:(id *)v6 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v7;
//- (id)_operationGroupWithSchemeOperationParameters:(id)v1 buildOperation:(id)v2 buildParameters:(id)v3 buildableProductDirectories:(id)v4 testManager:(id)v5 overridingTestingSpecifiers:(id)v6 schemeActionRecord:(id)v7 environmentVariables:(id)v8 commandLineArguments:(id)v9 outError:(id *)v10 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v11;
//- (id)_UITestOperationForSchemeOperationParameters:(id)v1 buildOperation:(id)v2 buildParameters:(id)v3 buildableProductDirectories:(id)v4 overridingTestingSpecifier:(id)v5 schemeActionRecord:(id)v6 environmentVariables:(id)v7 commandLineArguments:(id)v8 testManager:(id)v9 outError:(id *)v10;
//- (id)_profileOperationForSchemeOperationParameters:(id)v1 buildOperation:(id)v2 buildParameters:(id)v3 buildableProductDirectories:(id)v4 overridingTestingSpecifiers:(id)v5 schemeActionRecord:(id)v6 environmentVariables:(id)v7 commandLineArguments:(id)v8 outError:(id *)v9;
//- (id)commandLineArgumentsForDevice:(id)v1 forBuildParameters:(id)v2;
//- (id)environmentVariablesForBuildParameters:(id)v1;
//- (id)buildableReferenceToUseForMacroExpansion;
//- (void)setBuildableReferenceToUseForMacroExpansion:(id)v1;
//- (id)_expandMacrosInString:(id)v1;
//- (id)_expandMacrosInString:(id)v1 forBuildParameters:(id)v2;
//- (char)_launchOptionIsSet:(unsigned long long)v1;
//- (void)_setLaunchOption:(unsigned long long)v1 enabled:(char)v2;
//- (unsigned long long)launchAutomaticallySubstyleForBuildableProduct:(id)v1;
//- (id)intentQueryString;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setNotificationPayloadFileFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setAskForAppToLaunchFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setLaunchAutomaticallySubstyleFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableTestabilityWhenProfilingTestsFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setSavedToolIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setDebugDocumentVersioningFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)addCommandLineArguments:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addEnvironmentVariables:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addMacroExpansion:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEUITestingPermissionManager : NSObject {
//    int _availabilityToken;
//    int _tccAllowedToken;
//}
//@property int availabilityToken;
//@property int tccAllowedToken;
//@property (readonly,copy) NSRunningApplication * runningApplicationForXcodeHelper;
//+ (id)sharedManager;
//- (id)init;
//- (void)dealloc;
//- (char)_needToLaunchXcodeHelper;
//- (char)_waitForXcodeHelperToBeAvailable:(id *)v1;
//- (char)_checkPermissionsWithPrompt:(char)v1 error:(id *)v2;
//- (char)shouldUseTCC;
//- (void)checkUITestingPermissionForXcodeUITestingAgentWithPrompt:(char)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (id)_URLForXcodeHelper;
//- (id)_newInstanceOfXcodeHelper:(id *)v1;
//- (char)setXcodeUITestingAgentAsResponsibleProcessForPID:(int)v1 errorString:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindDataTypePredicate : IDEBatchFindAbstractOperatorOperandPredicate
//@property (readonly) long long dataTypeOperator;
//@property (readonly) NSString * fileDataTypeIdentifier;
//+ (long long)operatorFromString:(id)v1;
//+ (id)operatorToString:(long long)v1;
//+ (id)propertyListIdentifier;
//- (id)initWithOperator:(long long)v1 operand:(id)v2;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionPackagingStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)pipeline;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseMainFilesForFile : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSDictionary * result;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseIsQuiescent : IDESourceKitVariantDictionaryWrapper
//@property (readonly) char result;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseJumpToImportedFile : IDESourceKitVariantDictionaryWrapper
//@property (readonly) DVTFilePath * filePath;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseCallersForSymbol : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * results;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseSymbolQualifiedDisplayName : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * name;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseCountOfSymbolsMatchingKind : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long result;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseAllSymbolNames : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseStringArray * results;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseUnitTestMethodsStructure : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * results;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseCodeComplete : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * results;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseCodeDiagnosticsAtDocument : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * diagnostics;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseParsedCodeCommentAtDocument : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * result;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseGeniusCallersCalleesAtDocument : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * callers;
//@property (readonly) IDESourceKitResponseArray * testCallers;
//@property (readonly) IDESourceKitResponseSymbolCollection * callees;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseFindRenameRangesAtLocation : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long refactoringActionToken;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseRenameAtLocation : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long refactoringActionToken;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseLocalRefactoring : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long refactoringActionToken;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseAvailableRefactorings : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * results;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseTestFilesContainingWord : IDESourceKitVariantDictionaryWrapper
//@property (readonly) char isSupported;
//@property (readonly) IDESourceKitResponseStringArray * fileURLs;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnWillIndexWorkspace : IDESourceKitVariantDictionaryWrapper
//@property (readonly) char onWillIndexWorkspaceDeferredReindexing;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnIsIndexingWorkspace : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSDictionary * onIsIndexingWorkspaceUserInfo;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnIndexIsPopulatingDatabase : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSDictionary * notificationUserInfo;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnIndexIsFastScanning : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSDictionary * notificationUserInfo;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnBuildSettingsForFile : IDESourceKitVariantDictionaryWrapper
//@property (readonly) DVTFilePath * filePath;
//@property (readonly) DVTFilePath * mainFilePath;
//@property (readonly) NSString * indexableIdentifier;
//@property (readonly) IDESourceKitResponseStringArray * compilerArgs;
//@property (readonly) IDESourceKitResponseStringArray * toolchains;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCallbackOnWriteHeaderMap : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSDictionary * indexableRootPaths;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCallbackOnGatherProductHeaders : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * indexableIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCallbackOnSettingsForIndexable : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * indexableIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCallbackFilesContainingWord : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long findFilesToken;
//@property (readonly) NSString * searchString;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitWorkspaceNotification : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long indexerToken;
//- (void)invokeOnDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitWorkspaceCallback : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long indexerToken;
//- (void)invokeOnDelegate:(id)v1 reply:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationRefactoringStateChanged : IDESourceKitVariantDictionaryWrapper
//@property (readonly) struct _sourcekit_uid_s * newState;
//@property (readonly) NSString * error;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationRefactoringProgressUpdated : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * message;
//@property (readonly) double percentCompleted;
//@property (readonly) IDESourceKitResponseArray * edits;
//@property (readonly) IDESourceKitResponseArray * diagnostics;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationRefactoringRenameRangesFound : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * message;
//@property (readonly) double percentCompleted;
//@property (readonly) IDESourceKitResponseArray * ranges;
//@property (readonly) IDESourceKitResponseArray * diagnostics;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationRefactoringUnhandledURLs : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * symbols;
//@property (readonly) IDESourceKitResponseStringArray * URLs;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRefactoringNotification : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long refactoringActionToken;
//@property (readonly) long long indexerToken;
//- (void)invokeOnDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourcePackageRequirement : NSObject<NSCopying> {
//    long long _kind;
//    NSObject<NSCopying> * _value;
//}
//@property (readonly) NSObject<NSCopying> * value;
//@property (readonly) long long kind;
//@property (readonly) NSString * minimumVersion;
//@property (readonly) NSString * maximumVersion;
//@property (readonly) NSString * exactVersion;
//@property (readonly) NSString * branchName;
//@property (readonly) NSString * revision;
//+ (id)requirementWithMinimumVersionUpToNextMajorVersion:(id)v1;
//+ (id)requirementWithMinimumVersionUpToNextMinorVersion:(id)v1;
//+ (id)requirementWithExactVersion:(id)v1;
//+ (id)requirementWithMinimumVersion:(id)v1 upToMaximumVersion:(id)v2;
//+ (id)requirementWithBranchName:(id)v1;
//+ (id)requirementWithRevision:(id)v1;
//- (id)init;
//- (id)initWithKind:(long long)v1 value:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourcePackageVersionRange : NSObject<NSCopying> {
//    NSString * _minimumVersion;
//    NSString * _maximumVersion;
//}
//@property (readonly) NSString * minimumVersion;
//@property (readonly) NSString * maximumVersion;
//- (id)initWithMinimumVersion:(id)v1 maximumVersion:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlHostServiceEndpoint : NSObject<IDESourceControlHostServiceEndpointProtocol> {
//    IDESourceControlHostService * _extension;
//    NSString * _name;
//    NSString * _identifier;
//    NSURL * _forcedURL;
//    NSDictionary * _relativeLinks;
//    NSDictionary * _links;
//    unsigned long long _staticCapabilities;
//}
//@property (nonatomic) unsigned long long staticCapabilities;
//@property (readonly) IDESourceControlHostService * extension;
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * identifier;
//@property (readonly,copy) NSURL * forcedURL;
//@property (readonly,copy) NSDictionary * relativeLinks;
//@property (readonly,copy) NSDictionary * links;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (double)cancellationDelay;
//- (id)initWithEndpointDefinition:(id)v1 inExtension:(id)v2;
//- (char)_checkForStaticCapabilities:(unsigned long long)v1;
//- (char)usesPrivateTokenAuthentication;
//- (char)usesBearerAuthentication;
//- (char)requiresPersonalAccessToken;
//- (id)extensionIdentifier;
//- (id)validateCredentials:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)capabilities:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (id)star:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)unstar:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)requestAuthCode:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)requestPersonalAccessToken:(id)v1 twoFactorCode:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURL:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)webURL:(id)v1 sha:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURL:(id)v1 tag:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURL:(id)v1 branch:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)webURLComponents:(void (^ /* unknown block signature */)(void))v1;
//- (id)avatar:(id)v1 email:(id)v2 username:(id)v3 url:(id)v4 size:(unsigned int)v5 completionBlock:(void (^ /* unknown block signature */)(void))v6;
//- (id)createRepository:(id)v1 owner:(id)v2 name:(id)v3 description:(id)v4 homepage:(id)v5 private:(char)v6 completionBlock:(void (^ /* unknown block signature */)(void))v7;
//- (id)repositories:(id)v1 type:(unsigned long long)v2 paginationBlock:(void (^ /* unknown block signature */)(void))v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)repositories:(id)v1 type:(unsigned long long)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)searchCodeRepositories:(id)v1 type:(unsigned long long)v2 query:(id)v3 path:(id)v4 filename:(id)v5 fileExtension:(id)v6 paginationBlock:(void (^ /* unknown block signature */)(void))v7 completionBlock:(void (^ /* unknown block signature */)(void))v8;
//- (id)searchRepositories:(id)v1 query:(id)v2 pageCompletionBlock:(void (^ /* unknown block signature */)(void))v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)membership:(id)v1 options:(long long)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)user:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)validateSSHKey:(id)v1 publicSSHKey:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)uploadSSHKey:(id)v1 publicSSHKey:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)listSSHKeys:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)repositoryMetadata:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)usernameFromURL:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)pullRequests:(id)v1 repository:(id)v2 filter:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)pullRequestMergabilityInformation:(id)v1 pullRequest:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)mergePullRequest:(id)v1 pullRequest:(id)v2 action:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)branch:(id)v1 repositoryURL:(id)v2 branchName:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)pullRequest:(id)v1 repository:(id)v2 identifier:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)createPullRequest:(id)v1 pullRequest:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)repositoryBranches:(id)v1 repository:(id)v2 includeUpstream:(char)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)searchBranches:(id)v1 repository:(id)v2 query:(id)v3 paginationBlock:(void (^ /* unknown block signature */)(void))v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (id)updatePullRequest:(id)v1 pullRequest:(id)v2 force:(char)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)updatePullRequest:(id)v1 pullRequest:(id)v2 targetBranch:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)uploadPullRequestAttachments:(id)v1 repository:(id)v2 fileURLs:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)fetchParticipants:(id)v1 repository:(id)v2 pullRequest:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)addParticipants:(id)v1 pullRequest:(id)v2 participants:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)removeParticipants:(id)v1 pullRequest:(id)v2 participants:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)actionPullRequest:(id)v1 pullRequest:(id)v2 action:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)updateRepositoryPermissions:(id)v1 repository:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)createFileDiscussion:(id)v1 pullRequest:(id)v2 account:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)createComment:(id)v1 pullRequest:(id)v2 account:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)updateComment:(id)v1 pullRequest:(id)v2 account:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)repositoryForURL:(id)v1 account:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)replyTo:(id)v1 withComment:(id)v2 inPullRequest:(id)v3 account:(id)v4 repository:(id)v5 completionBlock:(void (^ /* unknown block signature */)(void))v6;
//- (id)deleteComment:(id)v1 pullRequest:(id)v2 account:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)fetchEventsIn:(id)v1 account:(id)v2 repository:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)commentFor:(id)v1 in:(id)v2 account:(id)v3 repository:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (id)findUsersMatching:(id)v1 account:(id)v2 repository:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)renderMarkdown:(id)v1 account:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)commitDetails:(id)v1 repository:(id)v2 revision:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)listCommits:(id)v1 pullRequest:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)listCommits:(id)v1 pullRequest:(id)v2 file:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)exportFile:(id)v1 file:(id)v2 revisionLocation:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)exportFile:(id)v1 file:(id)v2 revision:(id)v3 repositoryURL:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (id)listChanges:(id)v1 pullRequest:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)statusAnnotation:(id)v1 repository:(id)v2 commit:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (id)fetchMilestones:(id)v1 repository:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)setMilestone:(id)v1 on:(id)v2 account:(id)v3 repository:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)fetchLabels:(id)v1 repository:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)setLabels:(id)v1 on:(id)v2 account:(id)v3 repository:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (id)commonAncestor:(id)v1 repository:(id)v2 sourceBranch:(id)v3 targetBranch:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (id)_setupOperation:(void (^ /* unknown block signature */)(void))v1;
//- (void)setNetworkActivityLoggingEnabled:(char)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEToolchainIssueReporter : NSObject<IDESourceKitConnectionDelegate> {
//    char _isAppleInternal;
//    IDESourceKitConnection * _conn;
//    DVTNotificationToken * _connectionInterruptedNotificationToken;
//    NSOperationQueue * _queue;
//    DVTFilePath * _toolchainInvocationLoggingPath;
//    NSObject<IDEToolchainIssueReporterDelegate> * _delegate;
//    NSObject<IDEToolchainIssueReporterDelegate> * _signatureObserver;
//}
//@property (readonly) DVTFilePath * toolchainInvocationLoggingPath;
//@property NSObject<IDEToolchainIssueReporterDelegate> * delegate;
//@property NSObject<IDEToolchainIssueReporterDelegate> * signatureObserver;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)sharedInstance;
//- (id)connection;
//- (id)init;
//- (unsigned long long)reportFrequency;
//- (char)isAlwaysDisabled;
//- (id)_parseReproducerOutputFiles:(id)v1;
//- (void)handleToolchainCompilerCrash;
//- (void)onLogOutput:(id)v1;
//- (void)onToolchainCompilerCrashed:(id)v1;
//- (void)onIndexCompileWillStart:(id)v1;
//- (void)onIndexCompileDidFinish:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESandboxItemModel : IDEProjectItemModel
//+ (id)marzipanPrivileges;
//+ (id)sandboxItemModelPrivileges;
//+ (id)keyToPrivilege;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPortalToolDevice : NSObject<DVTPortalDevice> {
//    NSString * _name;
//    DVTPlatform * _platform;
//    NSString * _identifier;
//}
//@property (readonly,copy,nonatomic) NSString * name;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,copy,nonatomic) NSString * identifier;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithIdentifier:(id)v1 platform:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPortalTool : NSObject {
//    NSString * _name;
//    NSArray * _arguments;
//    NSFileHandle * _standardInput;
//    NSFileHandle * _standardOutput;
//    NSFileHandle * _standardError;
//    NSString * _inputUser;
//    NSString * _inputTeamID;
//    NSString * _inputUDID;
//    NSString * _inputPlatformIdentifier;
//    NSString * _inputBundleIdentifier;
//    NSString * _inputProfileTypeIdentifier;
//    NSString * _inputCertificateTypeIdentifier;
//    NSString * _inputKeychainPassword;
//    NSString * _inputKeychainPath;
//    NSString * _inputProfilePath;
//    NSArray * _inputManualStyleProfileUDIDs;
//    NSString * _inputManualStyleProfileName;
//    NSArray * _inputFeatureIdentifiers;
//    NSArray * _inputFeatureValues;
//    NSArray * _inputContainerIdentifiers;
//    NSString * _inputMachineName;
//    NSString * _inputMachineID;
//    DVTSigningCertificateSerialNumber * _inputSerialNumber;
//    long long _command;
//    DVTServicesAccountBasedSession * _session;
//    DVTPortalTeam * _team;
//    DVTKeychain * _keychain;
//    NSError * _keychainError;
//}
//@property (retain,nonatomic) NSString * inputUser;
//@property (retain,nonatomic) NSString * inputTeamID;
//@property (retain,nonatomic) NSString * inputUDID;
//@property (retain,nonatomic) NSString * inputPlatformIdentifier;
//@property (retain,nonatomic) NSString * inputBundleIdentifier;
//@property (retain,nonatomic) NSString * inputProfileTypeIdentifier;
//@property (retain,nonatomic) NSString * inputCertificateTypeIdentifier;
//@property (retain,nonatomic) NSString * inputKeychainPassword;
//@property (retain,nonatomic) NSString * inputKeychainPath;
//@property (retain,nonatomic) NSString * inputProfilePath;
//@property (retain,nonatomic) NSArray * inputManualStyleProfileUDIDs;
//@property (retain,nonatomic) NSString * inputManualStyleProfileName;
//@property (retain,nonatomic) NSArray * inputFeatureIdentifiers;
//@property (retain,nonatomic) NSArray * inputFeatureValues;
//@property (retain,nonatomic) NSArray * inputContainerIdentifiers;
//@property (retain,nonatomic) NSString * inputMachineName;
//@property (retain,nonatomic) NSString * inputMachineID;
//@property (retain,nonatomic) DVTSigningCertificateSerialNumber * inputSerialNumber;
//@property (nonatomic) long long command;
//@property (retain,nonatomic) DVTServicesAccountBasedSession * session;
//@property (retain,nonatomic) DVTPortalTeam * team;
//@property (retain,nonatomic) DVTKeychain * keychain;
//@property (retain,nonatomic) NSError * keychainError;
//@property (copy,nonatomic) NSString * name;
//@property (copy,nonatomic) NSArray * arguments;
//@property (copy,nonatomic) NSFileHandle * standardInput;
//@property (copy,nonatomic) NSFileHandle * standardOutput;
//@property (copy,nonatomic) NSFileHandle * standardError;
//- (id)init;
//- (char)runWithError:(id *)v1;
//- (id)_keychainWithError:(id *)v1;
//- (char)_wantsAllApplicationsToAccessKeychainItems;
//- (id)_credentialsManagerWithError:(id *)v1;
//- (id)_provisioningProfileManager;
//- (id)_signingCertificateManagerWithError:(id *)v1;
//- (id)_developerAccountWithError:(id *)v1;
//- (id)_teamWithError:(id *)v1;
//- (id)_sessionWithError:(id *)v1;
//- (id)_profileTypeWithError:(id *)v1;
//- (id)_platformWithError:(id *)v1;
//- (id)_programWithError:(id *)v1;
//- (id)_certificateTypeWithError:(id *)v1;
//- (id)_portalDevicesForManualStyleProfile:(id *)v1;
//- (id)_featuresToValues:(id *)v1;
//- (id)_containerTypesToValues:(id *)v1;
//- (char)purgeDeveloperAccountWithError:(id *)v1;
//- (char)addDeviceWithError:(id *)v1;
//- (char)downloadProfileWithError:(id *)v1;
//- (char)downloadIdentityWithError:(id *)v1;
//- (char)revokeIdentityWithError:(id *)v1;
//- (char)_ensureRequiredArgumentsWithError:(id *)v1;
//- (id)_platformRequiredError;
//- (id)_pathRequiredError;
//- (char)_parseArgumentsWithError:(id *)v1;
//- (long long)_commandFromString:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpointManager : NSObject<IDEBreakpointDelegate,DVTInvalidation> {
//    DVTObservingToken * _workspaceReferencedContainersToken;
//    DVTObservingToken * _currentDebugSessionObserverToken;
//    DVTObservingToken * _currentDebugSessionStateObserverToken;
//    NSMapTable * _bucketsToObserverTokens;
//    NSMutableArray * _userProjectBuckets;
//    IDEBreakpointBucket * _watchpointBucket;
//    NSMutableArray * _sharedProjectBuckets;
//    NSMapTable * _userToSharedBuckets;
//    NSMapTable * _sharedToUserBuckets;
//    NSMutableArray * _allBucketsWithBreakpoints;
//    NSMutableArray * _breakpoints;
//    DVTTimeSlicedMainThreadWorkQueue * _breakpointIdentifierChangedQueue;
//    DVTDispatchLock * _registrationLock;
//    unsigned long long _registrationNumber;
//    NSMutableArray * _breakpointsToBeInvalidated;
//    NSMutableSet * _breakpointObservers;
//    char _breakpointsActivated;
//    IDEBreakpointBucket * _defaultBucket;
//    IDEBreakpointBucket * _userWorkspaceBucket;
//    IDEBreakpointBucket * _userGlobalBucket;
//    IDEBreakpointBucket * _sharedWorkspaceBucket;
//    IDEWorkspace * _workspace;
//}
//@property (readonly) IDEWorkspace * workspace;
//@property (retain) NSArray * userProjectBuckets;
//@property (readonly) NSMutableArray * mutableUserProjectBuckets;
//@property (retain) NSArray * sharedProjectBuckets;
//@property (readonly) NSMutableArray * mutableSharedProjectBuckets;
//@property (readonly) NSMutableArray * mutableBreakpoints;
//@property (copy) NSArray * breakpoints;
//@property (retain,nonatomic) IDEBreakpointBucket * defaultBucket;
//@property (readonly) IDEBreakpointBucket * userWorkspaceBucket;
//@property (readonly) IDEBreakpointBucket * userGlobalBucket;
//@property (readonly) IDEBreakpointBucket * sharedWorkspaceBucket;
//@property (readonly) NSArray * allBucketsWithBreakpoints;
//@property (nonatomic) char breakpointsActivated;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (char)_isBreakpointAtLocation:(id)v1 location:(id)v2;
//- (id)initWithWorkspace:(id)v1 error:(id *)v2;
//- (void)_dealWithSanitizerPauseOnIssuesMigration;
//- (void)_handleCurrentDebugSessionStateChanged:(id)v1;
//- (void)_handleWorkspaceContainersChanges:(id)v1;
//- (void)_handleWorkspaceContainerInserted:(id)v1;
//- (void)_handleWorkspaceContainerRemoved:(id)v1;
//- (id)createBreakpointAtDocumentLocation:(id)v1 usingStringAtLine:(id)v2;
//- (id)createFileBreakpointAtDocumentLocation:(id)v1;
//- (id)createAddressBreakpoint:(id)v1;
//- (id)_createAddressBreakpointFrom:(id)v1 usingLineOfDisassembly:(id)v2;
//- (id)createWatchpoint:(id)v1 variableName:(id)v2;
//- (void)addBreakpoint:(id)v1;
//- (void)addWatchpoint:(id)v1;
//- (void)_addBreakpoint:(id)v1 toBucket:(id)v2;
//- (char)_managesBucket:(id)v1;
//- (void)removeBreakpoint:(id)v1;
//- (void)removeBreakpoints:(id)v1;
//- (void)removeWatchpoint:(id)v1;
//- (void)registerDoingWorkOnBreakpoint:(id)v1 block:(void (^ /* unknown block signature */)(void))v2;
//- (id)fileBreakpointAtDocumentLocation:(id)v1;
//- (void)setBreakpointShared:(id)v1 shared:(char)v2;
//- (char)_anyFileReferenceForPath:(id)v1 matchesDataTypeIdentifier:(id)v2;
//- (char)_canSetBreakpointAtURL:(id)v1;
//- (void)_removeListenerFromBucketsBreakpointList:(id)v1;
//- (void)_addListenerToBucketsBreakpointList:(id)v1;
//- (void)_handleBreakpointsForBucket:(id)v1 change:(id)v2;
//- (id)createSanitizerBreakpointIfNecessary:(unsigned long long)v1 categories:(id)v2 ignoreExisting:(char)v3;
//- (void)addBreakpointObserver:(id)v1;
//- (void)removeBreakpointObserver:(id)v1;
//- (void)_notifyObserversOfActivationStateChange;
//- (void)breakpointEnablementChanged:(id)v1;
//- (void)breakpointModificationChanged:(id)v1;
//- (void)breakpointNameChanged:(id)v1;
//- (void)breakpointTextFilterablePropertyChanged:(id)v1;
//- (char)breakpointShouldBeActivated:(id)v1;
//- (void)breakpointLocationsAdded:(id)v1 removed:(id)v2;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIPAProcessorDevice : NSObject {
//    NSString * _modelIdentifier;
//    NSString * _displayName;
//}
//@property (readonly) NSString * modelIdentifier;
//@property (readonly) NSString * displayName;
//- (id)initWithModelIdentifier:(id)v1 displayName:(id)v2;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (long long)compare:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIPAProcessorDeviceFamily : NSObject {
//    IDEIPAProcessorDevice * _idiomaticDevice;
//    NSSet * _devices;
//    NSString * _displayName;
//    unsigned long long _sortOrder;
//    NSDictionary * _traits;
//}
//@property (readonly) IDEIPAProcessorDevice * idiomaticDevice;
//@property (readonly) NSSet * devices;
//@property (readonly) NSString * displayName;
//@property (readonly) unsigned long long sortOrder;
//@property (readonly) NSDictionary * traits;
//- (id)initWithIdiomaticDevice:(id)v1 devices:(id)v2 displayName:(id)v3 sortOrder:(unsigned long long)v4 traits:(id)v5;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (long long)compare:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIPAProcessor : NSObject
//+ (id)sharedInstance;
//- (id)binSearchPathForIPAToolWithAppStoreToolsPath:(id)v1;
//- (char)runIPAToolWithInputPath:(id)v1 outputPath:(id)v2 arguments:(id)v3 logAspect:(id)v4 standardOutput:(id *)v5 standardError:(id *)v6 json:(id *)v7 outError:(id *)v8;
//- (char)runIPAToolWithInputPath:(id)v1 outputPath:(id)v2 arguments:(id)v3 appStoreToolsImagePath:(id)v4 logAspect:(id)v5 standardOutput:(id *)v6 standardError:(id *)v7 json:(id *)v8 outError:(id *)v9;
//- (char)optimizePayloadAppAtPath:(id)v1 toPath:(id)v2 forDeviceFamily:(id)v3 logAspect:(id)v4 error:(id *)v5;
//- (char)compileBitcodeForPayloadAppAtPath:(id)v1 toPath:(id)v2 logAspect:(id)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDEHealthKitItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _linkedFrameworksFlightCheck;
//    NSObject<IDEFlightChecking> * _entitlementsFlightCheck;
//    char _supportsHealthRecords;
//    NSSet * _healthKitCapabilities;
//}
//@property (retain,nonatomic) NSSet * healthKitCapabilities;
//@property (nonatomic) char supportsHealthRecords;
//@property (nonatomic) char healthRecords;
//+ (id)keyPathsForValuesAffectingHealthRecords;
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)linkedFrameworksFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (void)readValuesFromEntitlements;
//- (void)targetCoordinatorsChanged:(id)v1;
//- (char)isEnabledHealthKitCapability:(id)v1;
//- (void)addEnabledHealthKitCapability:(id)v1;
//- (void)removeEnabledHealthKitCapability:(id)v1;
//- (void)_setHealthRecords:(char)v1;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERefactoringKeyValueAccessorMethodDescriptor : NSObject {
//    NSString * _methodName;
//    int _keyStyle;
//    unsigned long long _indexOfKey;
//}
//@property (readonly) NSString * methodName;
//@property (readonly) int keyStyle;
//@property (readonly) unsigned long long indexOfKey;
//- (id)initWithMethodName:(const  char *)v1 keyStyle:(int)v2 indexOfKey:(unsigned long long)v3;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestObjectWrapper : NSObject {
//    struct _sourcekit_object_s * _obj;
//}
//- (id)initWithSourceKitObject:(struct _sourcekit_object_s *)v1;
//- (id)init;
//- (void)dealloc;
//- (struct _sourcekit_object_s *)sourceKitObject;
//- (id)description;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestDictionary : IDESourceKitRequestObjectWrapper
//+ (id)createFromYAML:(id)v1 connection:(id)v2 error:(id *)v3;
//- (void)setNSDictionary:(id)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setFilePath:(id)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (id)init;
//- (void)setString:(id)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setInt:(long long)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setBool:(char)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setDouble:(double)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setUID:(struct _sourcekit_uid_s *)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setDictionary:(id)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setArray:(id)v1 forKey:(struct _sourcekit_uid_s *)v2;
//- (void)setData:(id)v1 forKey:(struct _sourcekit_uid_s *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestArray : IDESourceKitRequestObjectWrapper
//- (id)init;
//- (void)appendString:(id)v1;
//- (void)appendInt:(long long)v1;
//- (void)appendUID:(struct _sourcekit_uid_s *)v1;
//- (void)appendDictionary:(id)v1;
//- (void)appendArray:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestArrayType : NSObject {
//    IDESourceKitRequestArray * _arr;
//}
//- (id)init;
//- (id)internalArray;
//- (void)append:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestStringArray : NSObject {
//    IDESourceKitRequestArray * _arr;
//}
//- (id)init;
//- (id)internalArray;
//- (void)append:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestFilePathArray : NSObject {
//    IDESourceKitRequestArray * _arr;
//}
//+ (id)filePathArrayFromEnumeration:(id)v1;
//- (id)init;
//- (id)internalArray;
//- (void)append:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCallbackReplyDictionary : IDESourceKitRequestDictionary {
//    IDESourceKitLowLevelConnection * _conn;
//}
//- (id)initWithConnection:(id)v1 sourceKitObject:(struct _sourcekit_object_s *)v2;
//- (id)init;
//- (void)dealloc;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCancellableRequestHandle : NSObject<DVTCancellable> {
//    void * _handle;
//    NSObject<DVTCancellable> * _underlyingCancellable;
//}
//@property (readonly,getter=isCancelled) char cancelled;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithHandle:(void *)v1;
//- (id)initWithNilHandle;
//- (id)init;
//- (void)cancel;
//- (void)dealloc;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppleScriptBreakpointAction : IDEBreakpointAction {
//    NSString * _script;
//}
//@property (copy,nonatomic) NSString * script;
//+ (id)propertiesAffectingPersistenceState;
//- (id)init;
//- (void)_appleScriptActionCommonInit;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)performActionUsingContext:(id)v1 andBreakpoint:(id)v2;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)setScriptFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionsInvocationRecord : NSObject<IDELogStoreManageable,IDELogStoreObservable> {
//    NSMutableArray * _actions;
//    NSMutableArray * _warningSummaries;
//    NSMutableArray * _errorSummaries;
//    NSMutableArray * _analyzerWarningSummaries;
//    NSMutableArray * _testFailureSummaries;
//    NSMapTable * _strongActionRecordsObservers;
//    IDESchemeActionCodeCoverage * _coverageReport;
//    char _running;
//    char _hasSaved;
//    char _saveSuccess;
//    char _remoteTestSummaryNeedsFetch;
//    char _remoteCodeCoverageNeedsFetch;
//    char _hasStartedSaving;
//    char _hasUpdatedSummariesAfterRecordingFinished;
//    NSString * _uniqueIdentifier;
//    IDETypeIdentifier * _domainType;
//    DVTFilePath * _filePath;
//    NSString * _defaultFileName;
//    long long _formatVersion;
//    IDEEntityIdentifier * _schemeIdentifier;
//    DVTFilePath * _archivePath;
//    NSString * _archiveName;
//    unsigned long long _archiveSize;
//    DVTFilePath * _productPath;
//    NSString * _productName;
//    unsigned long long _productSize;
//    unsigned long long _warningCount;
//    unsigned long long _errorCount;
//    unsigned long long _analyzerWarningCount;
//    unsigned long long _testsCount;
//    unsigned long long _testsFailedCount;
//    unsigned long long _testsSkippedCount;
//    DVTFilePath * _creatingWorkspaceFilePath;
//    NSError * _saveError;
//    id _remoteTestSummaryIdentifier;
//    id _remoteCodeCoverageIdentifier;
//    NSMutableArray * _performanceSignpostEvents;
//    id _performanceSignpostNotificationToken;
//    NSMutableArray * _completionBlocks;
//    DVTObservingToken * _completionToken;
//    NSArray * _coalescedTestableSummaries;
//    id _modernResultBundleWriter;
//    id _modernResultBundleReader;
//    id __resultStreamWriter;
//    id __metadataRef;
//    id __recordRef;
//    id __testSummariesStream;
//    id __advisoryMessagesStream;
//}
//@property (readonly,copy) NSString * uniqueIdentifier;
//@property (readonly,copy) NSString * signature;
//@property (readonly,copy) NSString * title;
//@property (readonly) IDETypeIdentifier * domainType;
//@property (readonly) double timeStartedRecording;
//@property (readonly) double timeStoppedRecording;
//@property (readonly) char isRecording;
//@property (readonly) NSObject<IDELogStoreObservable> * primaryObservable;
//@property (readonly) NSObject<IDELogStoreObservable> * auxiliaryObservable;
//@property (readonly) char hasTests;
//@property (readonly) char hasCoverageData;
//@property (readonly) char hasTimelineData;
//@property (readonly) char hasPrimaryLog;
//@property (readonly) char hasAuxiliaryLog;
//@property (readonly) IDEActivityLogSection * primaryLogSectionIfInMemory;
//@property (readonly,copy) NSString * defaultFileName;
//@property (copy) DVTFilePath * filePath;
//@property (readonly,copy) _TtC13DVTFoundation14DVTFilePromise * coverageReportFilePromise;
//@property (readonly,copy) _TtC13DVTFoundation14DVTFilePromise * coverageArchiveFilePromise;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) char isRecording;
//@property (readonly) unsigned long long totalNumberOfTestFailures;
//@property (readonly) unsigned long long totalNumberOfErrors;
//@property (readonly) unsigned long long totalNumberOfWarnings;
//@property (readonly) unsigned long long totalNumberOfAnalyzerResults;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (retain,nonatomic) NSMutableArray * warningSummaries;
//@property (retain,nonatomic) NSMutableArray * errorSummaries;
//@property (retain,nonatomic) NSMutableArray * analyzerWarningSummaries;
//@property (retain,nonatomic) NSMutableArray * testFailureSummaries;
//@property (nonatomic) unsigned long long warningCount;
//@property (nonatomic) unsigned long long errorCount;
//@property (nonatomic) unsigned long long analyzerWarningCount;
//@property (nonatomic) unsigned long long testsFailedCount;
//@property (nonatomic) unsigned long long testsSkippedCount;
//@property (nonatomic) unsigned long long testsCount;
//@property (copy,nonatomic) id remoteTestSummaryIdentifier;
//@property (nonatomic) char remoteTestSummaryNeedsFetch;
//@property (copy,nonatomic) id remoteCodeCoverageIdentifier;
//@property (nonatomic) char remoteCodeCoverageNeedsFetch;
//@property (retain) NSMutableArray * performanceSignpostEvents;
//@property (retain) id performanceSignpostNotificationToken;
//@property char hasStartedSaving;
//@property char hasSaved;
//@property (nonatomic) char saveSuccess;
//@property (retain,nonatomic) NSError * saveError;
//@property char hasUpdatedSummariesAfterRecordingFinished;
//@property (nonatomic,getter=isRunning) char running;
//@property (copy) NSString * uniqueIdentifier;
//@property (retain,nonatomic) DVTFilePath * archivePath;
//@property (retain,nonatomic) DVTFilePath * productPath;
//@property (retain,nonatomic) NSString * archiveName;
//@property (nonatomic) unsigned long long archiveSize;
//@property (retain,nonatomic) NSString * productName;
//@property (nonatomic) unsigned long long productSize;
//@property (retain,nonatomic) DVTFilePath * creatingWorkspaceFilePath;
//@property (copy,nonatomic) NSString * defaultFileName;
//@property (retain) NSMutableArray * completionBlocks;
//@property (retain) DVTObservingToken * completionToken;
//@property long long formatVersion;
//@property (copy) NSArray * coalescedTestableSummaries;
//@property (retain,nonatomic) id modernResultBundleWriter;
//@property (retain,nonatomic) id modernResultBundleReader;
//@property (retain,nonatomic) id _resultStreamWriter;
//@property (retain,nonatomic) id _metadataRef;
//@property (retain,nonatomic) id _recordRef;
//@property (retain,nonatomic) id _testSummariesStream;
//@property (retain,nonatomic) id _advisoryMessagesStream;
//@property (readonly,nonatomic) char isRecording;
//@property (readonly) char usesModernFormat;
//@property (readonly,nonatomic) NSArray * actions;
//@property (copy) IDEEntityIdentifier * schemeIdentifier;
//@property (retain) IDETypeIdentifier * domainType;
//@property (readonly,nonatomic) long long status;
//@property (readonly,nonatomic) long long simpleOperationStatus;
//@property (readonly,nonatomic) IDESchemeActionCodeCoverage * aggregateCoverageReport;
//@property (copy,nonatomic) DVTFilePath * filePath;
//+ (long long)resultBundleFormatVersionWithPath:(id)v1;
//+ (char)isLikelyIncompleteModernResultBundleWithPath:(id)v1;
//+ (char)isModernResultBundleWithPath:(id)v1;
//+ (id)createUnsupportedV1Error;
//+ (id)readResultBundleWithPath:(id)v1 error:(id *)v2;
//+ (id)deduplicatedIssues:(id)v1;
//+ (id)makeInstanceWithContentsOfFile:(id)v1 error:(id *)v2;
//+ (long long)defaultFormatVersion;
//+ (id)supportedFormatVersions;
//+ (id)supportedFormatVersionsForStreaming;
//+ (id)deprecatedFormatVersions;
//+ (id)nonDeprecatedFormatVersions;
//+ (id)prettyPrintedSupportedVersionsUsingSeparator:(id)v1;
//+ (id)prettyPrintedNonDeprecatedVersionsUsingSeparator:(id)v1;
//+ (id)prettyPrintedVersions:(id)v1 usingSeparator:(id)v2;
//+ (long long)requestedFormatVersionForPassedInFormatVersion:(id)v1;
//+ (long long)requestedFormatVersion;
//+ (char)useDebugResultBundleStorage;
//+ (void)invocationRecordWithLocalActionResultFilePath:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//+ (char)invocationRecordExistsAtFilePath:(id)v1;
//+ (id)currentLegacyFormatVersion;
//+ (char)automaticallyNotifiesObserversOfActions;
//+ (id)keyPathsForValuesAffectingIsRecording;
//+ (unsigned long long)countOfFailedTestsInSchemeActions:(id)v1;
//+ (unsigned long long)countOfSkippedTestsInSchemeActions:(id)v1;
//+ (id)coalescedTestableSummariesForActions:(id)v1;
//+ (unsigned long long)countOfTestsInSchemeActionRecords:(id)v1;
//+ (char)updateSummariesFromDictionaryRepresentations:(id)v1 withSummaryOwner:(id)v2 summaryPropertyName:(id)v3 summaryiVarArrayRef:(id *)v4 summariesAreTestFailures:(char)v5;
//+ (id)keyPathsForValuesAffectingStatus;
//+ (id)keyPathsForValuesAffectingSimpleOperationStatus;
//- (char)invocationDidCancelAndReturnError:(id *)v1;
//- (id)reportMetrics;
//- (char)createResultStreamIfNeededWithSocketAtPath:(id)v1 error:(id *)v2;
//- (void)didStartAction:(id)v1;
//- (void)didFinishAction:(id)v1;
//- (id)exportActivityLogWithRef:(id)v1 error:(id *)v2;
//- (id)exportTestRunSummariesWithRef:(id)v1 error:(id *)v2;
//- (id)exportableFileWithRef:(id)v1 name:(id)v2 error:(id *)v3;
//- (id)exportableDirectoryWithRef:(id)v1 name:(id)v2 error:(id *)v3;
//- (id)writerAndReturnError:(id *)v1;
//- (id)importActivityLog:(id)v1 error:(id *)v2;
//- (id)importFileFrom:(id)v1 error:(id *)v2;
//- (id)importDirectoryFrom:(id)v1 error:(id *)v2;
//- (id)readerAndReturnError:(id *)v1;
//- (id)underlyingWriterAndReturnError:(id *)v1;
//- (char)writeResultBundleWithPath:(id)v1 error:(id *)v2;
//- (char)writeToFile:(id)v1 error:(id *)v2;
//- (void)addCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)primaryLogSectionWithError:(id *)v1;
//- (id)auxiliaryLogSectionWithError:(id *)v1;
//- (id)_logItemsIsPrimary:(char)v1;
//- (id)primaryLogItems;
//- (id)auxiliaryLogItems;
//- (id)logSectionForItem:(id)v1 error:(id *)v2;
//- (id)testableSummariesForRunDestination:(id *)v1 error:(id *)v2;
//- (id)_init;
//- (id)initLocalRecordWithWorkspace:(id)v1;
//- (id)initWithFilePath:(id)v1 error:(id *)v2;
//- (id)initWithFilePath:(id)v1 creatingWorkspaceFilePath:(id)v2 uniqueIdentifier:(id)v3 analyzerWarningCount:(long long)v4 errorCount:(long long)v5 testsCount:(long long)v6 testsFailedCount:(long long)v7 testsSkippedCount:(long long)v8 warningCount:(long long)v9 analyzerWarningSummaries:(id)v10 errorSummaries:(id)v11 testFailureSummaries:(id)v12 warningSummaries:(id)v13 actions:(id)v14 coalescedTestableSummaries:(id)v15;
//- (void)saveSparseInvocationRecordToFilePath:(id)v1 testIdentifiers:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (void)dealloc;
//- (void)_startCollectingPerformanceSignposts;
//- (void)_stopCollectingPerformanceSignposts;
//- (void)saveWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)_reportMetricsIfNeeded;
//- (void)_ensureValidFilePathForPersistence;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (char)loadActionsTestSummariesAndCoverage:(id *)v1;
//- (void)close;
//- (id)makeActionRecordWithSchemeCommand:(id)v1 schemeCommandName:(id)v2 schemeTask:(long long)v3 runDestination:(id)v4;
//- (id)filePathForSchemeActionRecordDirectoryWithSchemeCommand:(id)v1 atIndex:(unsigned long long)v2;
//- (void)updateAllSchemeActionRecordDirectoryFilePaths;
//- (char)_areActionsRecording;
//- (void)_didUpdateSummaries;
//- (void)setUpObserversForSchemeActionRecord:(id)v1;
//- (void)tearDownObserversForSchemeActionRecord:(id)v1;
//- (void)_updateSummaries;
//- (id)localTestSummaryFilePath;
//- (id)testSummaryFormatVersionString;
//- (char)saveTestSummariesWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateTester : NSObject {
//    char _crossPlatformOnly;
//    NSString * _outputPath;
//    DVTPlatform * _platform;
//    NSArray * _requiredOptions;
//    NSDictionary * _nonPermutedOptionValues;
//    NSMutableDictionary * _usedTemplateNamesByPlatform;
//    unsigned long long _testProjectCounter;
//    IDEProvisioningTeamManager * _teamManager;
//    DVTFuture * _teamsLoadingFuture;
//    DVTPromise * _teamsLoadingPromise;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//}
//@property (retain) NSMutableDictionary * usedTemplateNamesByPlatform;
//@property unsigned long long testProjectCounter;
//@property (retain) IDEProvisioningTeamManager * teamManager;
//@property (retain) DVTFuture * teamsLoadingFuture;
//@property (retain) DVTPromise * teamsLoadingPromise;
//@property (retain) NSObject<IDEProvisioningBasicTeam> * team;
//@property (copy) NSString * outputPath;
//@property (retain) DVTPlatform * platform;
//@property char crossPlatformOnly;
//@property (copy) NSArray * requiredOptions;
//@property (copy) NSDictionary * nonPermutedOptionValues;
//+ (id)platformForString:(id)v1;
//- (id)initWithOutputPath:(id)v1 teamID:(id)v2;
//- (void)observeValueForKeyPath:(id)v1 ofObject:(id)v2 change:(id)v3 context:(void *)v4;
//- (id)init;
//- (id)uniqueTemplateNameForName:(id)v1 platformName:(id)v2;
//- (void)createSingleProjectFromTemplate:(id)v1 withOptionValues:(id)v2 atPath:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (void)instantiateProjectsForIterableOptions:(id)v1 unboundOptions:(id)v2 inProjectTemplate:(id)v3 withPlatformName:(id)v4 withFolderName:(id)v5 indentationPrefix:(id)v6;
//- (id)platformFolderNameForPlatform:(id)v1;
//- (id)platformFolderName;
//- (id)overrideValueForOption:(id)v1 inOptions:(id)v2;
//- (void)doProjectTemplate:(id)v1;
//- (void)runCreateNewProjectWithTemplateNamed:(id)v1 platform:(id)v2 options:(id)v3;
//- (char)runCreateNewProjectWithTemplateNamed:(id)v1 platform:(id)v2 options:(id)v3 error:(id *)v4;
//- (void)runTemplateTests;
//- (id)_templateNamed:(id)v1 forPlatform:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractFileByFileQuery : IDEBatchFindAbstractQuery
//+ (char)supportsQueryAction:(long long)v1;
//- (id)makeRootResult;
//- (id)resultForRange:(struct _NSRange)v1 ofText:(id)v2 forDocumentLocation:(id)v3 withTimestamp:(id)v4 parent:(id)v5;
//- (void)processFilePath:(id)v1 explicitFileDataType:(id)v2 fromIndex:(long long)v3 of:(id)v4 queryStartTime:(id)v5 statusAggregator:(id)v6 resultOrder:(long long)v7 completionHandler:(void (^ /* unknown block signature */)(void))v8;
//- (void)checkCancelStatusAndConitionallyProcessFilePath:(id)v1 explicitFileDataType:(id)v2 fromIndex:(long long)v3 of:(id)v4 queryStartTime:(id)v5 statusAggregator:(id)v6 resultOrder:(long long)v7 completionHandler:(void (^ /* unknown block signature */)(void))v8;
//- (char)trimsIndexAfterCompletion;
//- (long long)totalNumberOfFilesInContentSnapshots:(id)v1;
//- (void)continueProcessingSnapshot:(id)v1 filePathCandidateIndex:(long long)v2 baseResultIndex:(long long)v3 batchedProgress:(long long)v4 queryStartTime:(id)v5 statusAggregator:(id)v6 completionHandler:(void (^ /* unknown block signature */)(void))v7;
//- (void)continueProcessingSnapshots:(id)v1 concurrencyIndex:(long long)v2 baseResultIndex:(long long)v3 snapshotIndex:(long long)v4 queryStartTime:(id)v5 statusAggregator:(id)v6 completionHandler:(void (^ /* unknown block signature */)(void))v7;
//- (void)processContentSnapshots:(id)v1 queryStartTime:(id)v2 statusAggregator:(id)v3 completionHandler:(void (^ /* unknown block signature */)(void))v4;
//- (void)execute;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionCodeCoverage : DVTCoverageDataContainer {
//    NSNumber * _functionCoverage;
//    NSString * _filePath;
//    NSArray * _codeCoverageTargets;
//    NSArray * _creationErrors;
//    NSString * _fullDescription;
//    NSString * _reportIdentifier;
//    NSArray * _devices;
//}
//@property (retain,nonatomic) NSArray * codeCoverageTargets;
//@property (copy) NSString * filePath;
//@property (copy) NSString * reportIdentifier;
//@property (copy) NSArray * devices;
//@property (readonly,nonatomic) NSNumber * functionCoverage;
//@property (readonly) NSArray * creationErrors;
//@property (retain,nonatomic) NSString * fullDescription;
//+ (id)coverageReportForPath:(id)v1 error:(id *)v2;
//+ (char)supportsSecureCoding;
//- (unsigned long long)diffType;
//- (id)diffIdentifier;
//- (id)diffableChildren;
//- (id)makeCopyWithChildren:(id)v1;
//- (id)initWithCodeCoverageTargets:(id)v1 creationErrors:(id)v2;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (char)writeToPath:(id)v1 error:(id *)v2;
//- (id)wrappedContainer;
//- (id)uniquedCopy;
//- (id)copyWithSourceFilePathsMapped:(void (^ /* unknown block signature */)(void))v1;
//- (id)functions;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionCodeCoverageTarget : DVTCoverageDataContainer {
//    NSNumber * _functionCoverage;
//    NSString * _buildableIdentifier;
//    NSArray * _sourceFiles;
//    NSString * _productPath;
//    NSString * _fullDescription;
//}
//@property (retain,nonatomic) NSString * buildableIdentifier;
//@property (readonly,nonatomic) NSArray * sourceFiles;
//@property (readonly,nonatomic) NSString * productPath;
//@property (readonly,nonatomic) NSNumber * functionCoverage;
//@property (retain,nonatomic) NSString * fullDescription;
//+ (char)supportsSecureCoding;
//- (unsigned long long)diffType;
//- (id)diffIdentifier;
//- (id)diffableChildren;
//- (id)makeCopyWithChildren:(id)v1;
//- (id)initWithBuildableIdentifier:(id)v1 name:(id)v2 productPath:(id)v3 sourceFiles:(id)v4;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (id)functions;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionCodeCoverageFunction : DVTCoverageDataContainer {
//    unsigned long long _executionCount;
//    IDESchemeActionCodeCoverageFile * _sourceFile;
//    DVTSourceCodeSymbolKind * _symbolKind;
//    struct _NSRange _lineRange;
//}
//@property (retain,nonatomic) DVTSourceCodeSymbolKind * symbolKind;
//@property (nonatomic) IDESchemeActionCodeCoverageFile * sourceFile;
//@property (readonly,nonatomic) unsigned long long executionCount;
//@property (readonly,nonatomic) struct _NSRange lineRange;
//- (unsigned long long)diffType;
//- (id)diffIdentifier;
//- (id)diffableChildren;
//- (id)aggregateWith:(id)v1 selfParent:(id)v2 usingMergedLines:(id)v3;
//- (id)initWithName:(id)v1 lineRange:(struct _NSRange)v2 executionCount:(unsigned long long)v3 executableLines:(unsigned int)v4 coveredLines:(unsigned int)v5;
//- (id)wrappedContainer;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionCodeCoverageFile : DVTCoverageDataContainer {
//    NSNumber * _functionCoverage;
//    NSString * _documentLocation;
//    NSArray * _functions;
//}
//@property (readonly,nonatomic) NSString * documentLocation;
//@property (readonly,nonatomic) NSArray * functions;
//@property (readonly,nonatomic) NSNumber * functionCoverage;
//+ (char)supportsSecureCoding;
//- (unsigned long long)diffType;
//- (id)diffIdentifier;
//- (id)diffableChildren;
//- (id)makeCopyWithChildren:(id)v1;
//- (id)initWithDocumentLocation:(id)v1 functions:(id)v2;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (id)description;
//- (id)wrappedContainer;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProjectItemModelFlightCheck : NSObject<IDEFlightChecking,DVTInvalidation> {
//    char _requiresAccountAndTeamSelection;
//    char _longRunning;
//    char _failed;
//    int _status;
//    void (^ /* unknown block signature */)(void) _resolutionBlock;
//    void (^ /* unknown block signature */)(void) _unresolutionBlock;
//    void (^ /* unknown block signature */)(void) _validityCheckBlock;
//    NSString * _title;
//    NSString * _resolvingTitle;
//    NSString * _pastTitle;
//    NSError * _resolutionError;
//}
//@property (readonly,copy,nonatomic) void (^ /* unknown block signature */)(void) resolutionBlock;
//@property (readonly,copy,nonatomic) void (^ /* unknown block signature */)(void) unresolutionBlock;
//@property (readonly,copy,nonatomic) void (^ /* unknown block signature */)(void) validityCheckBlock;
//@property (readonly,copy,nonatomic) NSString * title;
//@property (readonly,copy,nonatomic) NSString * resolvingTitle;
//@property (readonly,copy,nonatomic) NSString * pastTitle;
//@property (nonatomic) int status;
//@property (retain,nonatomic) NSError * resolutionError;
//@property (nonatomic) char failed;
//@property (readonly,nonatomic) char requiresAccountAndTeamSelection;
//@property (readonly,nonatomic,getter=isLongRunning) char longRunning;
//@property (readonly,nonatomic,getter=isAutomaticallyResolvable) char automaticallyResolvable;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithResolutionBlock:(void (^ /* unknown block signature */)(void))v1 unresolutionBlock:(void (^ /* unknown block signature */)(void))v2 validityCheckBlock:(void (^ /* unknown block signature */)(void))v3 title:(id)v4 resolvingTitle:(id)v5 pastTitle:(id)v6;
//- (void)primitiveInvalidate;
//- (id)initForEntitlementsWithResolutionBlock:(void (^ /* unknown block signature */)(void))v1 unresolutionBlock:(void (^ /* unknown block signature */)(void))v2 validityCheckBlock:(void (^ /* unknown block signature */)(void))v3 entitlement:(id)v4;
//- (id)initForInfoPlistWithResolutionBlock:(void (^ /* unknown block signature */)(void))v1 unresolutionBlock:(void (^ /* unknown block signature */)(void))v2 validityCheckBlock:(void (^ /* unknown block signature */)(void))v3 plistKey:(id)v4;
//- (id)initForBuildSettingsWithResolutionBlock:(void (^ /* unknown block signature */)(void))v1 unresolutionBlock:(void (^ /* unknown block signature */)(void))v2 validityCheckBlock:(void (^ /* unknown block signature */)(void))v3 buildSetting:(id)v4;
//- (id)initForFrameworksWithResolutionBlock:(void (^ /* unknown block signature */)(void))v1 unresolutionBlock:(void (^ /* unknown block signature */)(void))v2 validityCheckBlock:(void (^ /* unknown block signature */)(void))v3 framework:(id)v4;
//- (void)validate;
//- (void)resolveWithContext:(id)v1;
//- (void)unresolve;
//- (void)revert;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEGroup : IDEContainerItem<IDEStructureEditing> {
//    NSString * _name;
//    IDEContainer * _container;
//    DVTFilePath * _resolvedFilePath;
//    DVTCopyOnWriteMutableArray * _subitems;
//    char _subitemsAreValid;
//    char _pendingAsynchronousUpdate;
//    unsigned long long _sourceControlLocalStatus;
//    unsigned long long _sourceControlServerStatus;
//    unsigned long long _conflictStateForUpdateOrMerge;
//}
//@property (nonatomic,readonly) char handlesStructureEditing;
//@property (copy,nonatomic) NSString * name;
//@property (readonly,nonatomic) char ownsFileSystemDirectory;
//@property (readonly) char subitemsAreEditable;
//@property (readonly) char subitemsAreComputed;
//@property (readonly) NSArray * subitems;
//@property (readonly) NSMutableArray * mutableSubitems;
//@property (readonly,getter=isLocationKnown) char locationKnown;
//+ (id)keyPathsForValuesAffectingSourceControlLocalStatus;
//+ (id)keyPathsForValuesAffectingSourceControlServerStatus;
//+ (id)keyPathsForValuesAffectingConflictStateForUpdateOrMerge;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (id)keyPathsForValuesAffectingOwnsFileSystemDirectory;
//+ (char)automaticallyNotifiesObserversOfSubitems;
//+ (char)automaticallyNotifiesObserversOfSourceControlLocalStatus;
//+ (char)automaticallyNotifiesObserversOfSourceControlServerStatus;
//+ (char)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
//+ (char)_shouldCreateContainerItemForFileURL:(id)v1 isFolder:(char *)v2;
//+ (id)_fileReferenceWithFileURL:(id)v1 targetGroup:(id)v2;
//+ (id)_groupForFolderURL:(id)v1 targetGroup:(id)v2;
//+ (Class)_fileReferenceClassForSubitems;
//+ (Class)_groupClassForSubitems;
//+ (Class)_fileReferenceClassForFileReference:(id)v1;
//+ (Class)_groupClassForGroup:(id)v1;
//- (id)structureEditingMoveOperationTo:(id)v1 insertionHelper:(void (^ /* unknown block signature */)(void))v2 errorHandlingBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)structureEditingCopyOperationTo:(id)v1 insertionHelper:(void (^ /* unknown block signature */)(void))v2 errorHandlingBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)ide_populateFilePathsSkipingOwnSuffix:(id)v1 parentSuffixIndex:(long long)v2 visitedContainers:(id)v3;
//- (void)ide_populateFilePaths:(id)v1 parentSuffixIndex:(long long)v2 visitedContainers:(id)v3;
//- (id)ideModelObjectTypeIdentifier;
//- (void)ideFindScope_accumulateFilePaths:(id)v1 andVisitedContainers:(id)v2;
//- (id)ideFindScope_componentForGroupPath;
//- (id)ideFindScope_itemAtPath:(id)v1 position:(long long)v2 preferContainerFileReferenceToRootGroup:(char)v3;
//- (void)setNameFromUTF8String:(const  char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_addObject:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)openQuickly_enumerateCandidateFilePathsNotingVisitedContainers:(id)v1 enumerator:(void (^ /* unknown block signature */)(void))v2;
//- (id)init;
//- (id)initWithName:(id)v1;
//- (id)initWithPath:(id)v1 resolutionStrategies:(id)v2;
//- (id)container;
//- (char)_willSetContainer:(id)v1;
//- (void)_setContainer:(id)v1;
//- (void)_didSetContainer;
//- (void)changePath:(id)v1 resolutionStrategies:(id)v2;
//- (void)_invalidateResolvedFilePath;
//- (id)resolvedFilePath;
//- (id)_subitems;
//- (void)_setSubitems:(id)v1;
//- (id)objectInGroupSubitemsAtIndex:(unsigned long long)v1;
//- (unsigned long long)countOfGroupSubitems;
//- (void)removeGroupSubitemsAtIndexes:(id)v1;
//- (void)insertGroupSubitems:(id)v1 atIndexes:(id)v2;
//- (void)removeObjectFromGroupSubitemsAtIndex:(unsigned long long)v1;
//- (void)insertObject:(id)v1 inGroupSubitemsAtIndex:(unsigned long long)v2;
//- (id)computedSubitemsWithOldSubitems:(id)v1;
//- (void)invalidateComputedSubitems;
//- (unsigned long long)sourceControlLocalStatus;
//- (unsigned long long)sourceControlServerStatus;
//- (unsigned long long)conflictStateForUpdateOrMerge;
//- (unsigned long long)aggregateSourceControlLocalStatus;
//- (unsigned long long)aggregateSourceControlServerStatus;
//- (unsigned long long)aggregateSourceControlConflictStatus;
//- (id)issueLog;
//- (long long)progress;
//- (void)_setSourceControlLocalStatus:(unsigned long long)v1;
//- (void)_setSourceControlServerStatus:(unsigned long long)v1;
//- (void)_setConflictStateForUpdateOrMerge:(unsigned long long)v1;
//- (void)_setSourceControlLocalStatusNeedsUpdate;
//- (void)_setSourceControlServerStatusNeedsUpdate;
//- (void)_setConflictStateForUpdateOrMergeNeedsUpdate;
//- (void)_invalidateComputedSourceControlStatus;
//- (void)debugPrintInnerStructure;
//- (void)primitiveInvalidate;
//- (void)_copyAndInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (void)_takeConfigurationFromGroup:(id)v1;
//- (id)allowedFileTypesOfChildItems;
//- (char)allowRemovingContainerGroup;
//- (char)_isSubitemOfItem:(id)v1;
//- (char)_acceptsItem:(id)v1;
//- (char)allowUserModificationOfSubitems;
//- (char)canStructureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (id)structureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (char)canStructureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2;
//- (id)structureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2 createGroupsForFolders:(char)v3;
//- (char)canStructureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)structureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)canStructureEditRemoveSubitemsAtIndexes:(id)v1;
//- (char)structureEditRemoveSubitemsPreflightForIndexes:(id)v1 error:(id *)v2;
//- (char)structureEditRemoveSubitemsAtIndexes:(id)v1 error:(id *)v2;
//- (char)canStructureEditName;
//- (char)structureEditSetName:(id)v1 inContext:(id)v2;
//- (char)structureEditName:(id)v1 inContext:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)_subgroupNamed:(id)v1;
//- (id)_availableNameBasedOn:(id)v1;
//- (char)createNewSubgroupAtIndex:(unsigned long long)v1 createDirectory:(char)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (char)_structureEditRemoveSubitemsShouldCloseDocumentsUnderPathWithoutSaving;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestRunSession : NSObject<IDETestsActivityLogBuilderDelegate,IDETestTargetRunnerEvents,IDETestsInTestableObserver,IDETestingActivityGenerating,DVTProgressReporting,DVTInvalidation> {
//    NSMutableSet * _unitTestsObservers;
//    NSMutableArray * _errors;
//    unsigned long long _lastReportedMax;
//    IDETestManager * _testManager;
//    NSCountedSet * _runningTests;
//    DVTOneShotBlock * _cleanupTestRunSessionBlock;
//    NSDate * _startDate;
//    char _atLeastOneTestRunnerFailedWithError;
//    char _atLeastOneTestFailed;
//    NSMutableArray * _testingActivities;
//    char _isUITestingSession;
//    char _hasFinished;
//    char _didCancel;
//    IDESchemeActionRecord * _schemeActionRecord;
//    DVTFilePath * _testSessionDirectory;
//    void (^ /* unknown block signature */)(void) _daemonControllerProvider;
//    NSObject<IDETestTargetRunner> * _currentTestTargetRunner;
//    IDETestIdentifier * _currentTestIdentifier;
//    NSArray * _testTargetRunners;
//    unsigned long long _totalNumberOfTests;
//    unsigned long long _currentTestNumber;
//    NSMapTable * _pendingTestIDsForTargetRunner;
//    NSMapTable * _alreadyRunTestIDsForTargetRunner;
//    NSString * _sessionIdentifier;
//    unsigned long long _sessionGenerationCount;
//    DVTDisallowFinishToken * _testOperationDisallowFinishToken;
//    DVTDisallowFinishToken * _finishWritingLogsToken;
//    IDETestsActivityLogBuilder * _activityLogBuilder;
//    _TtC13IDEFoundation29IDETestingInstallationTracker * _testingInstallationTracker;
//    _TtC13IDEFoundation30IDETestRunDestinationAllocator * _runDestinationAllocator;
//    NSObject<_TtP13IDEFoundation25IDETestRunDestinationPool_> * _runDestinationPool;
//    DVTPerformanceMetric * _performanceMetric;
//    NSString * _currentDiagnosticsTask;
//}
//@property (readonly) char isUITestingSession;
//@property char hasFinished;
//@property char didCancel;
//@property (copy) void (^ /* unknown block signature */)(void) daemonControllerProvider;
//@property (retain) NSObject<IDETestTargetRunner> * currentTestTargetRunner;
//@property (retain) IDETestIdentifier * currentTestIdentifier;
//@property (retain) NSArray * testTargetRunners;
//@property (nonatomic) unsigned long long totalNumberOfTests;
//@property (nonatomic) unsigned long long currentTestNumber;
//@property (retain) NSMapTable * pendingTestIDsForTargetRunner;
//@property (retain) NSMapTable * alreadyRunTestIDsForTargetRunner;
//@property (readonly) NSString * sessionIdentifier;
//@property (readonly) unsigned long long sessionGenerationCount;
//@property (retain) DVTDisallowFinishToken * testOperationDisallowFinishToken;
//@property (retain) DVTDisallowFinishToken * finishWritingLogsToken;
//@property (retain) IDETestsActivityLogBuilder * activityLogBuilder;
//@property (retain) _TtC13IDEFoundation29IDETestingInstallationTracker * testingInstallationTracker;
//@property (retain) _TtC13IDEFoundation30IDETestRunDestinationAllocator * runDestinationAllocator;
//@property (retain) NSObject<_TtP13IDEFoundation25IDETestRunDestinationPool_> * runDestinationPool;
//@property (readonly) NSMutableArray * mutableTestingActivities;
//@property (retain) DVTPerformanceMetric * performanceMetric;
//@property (copy) NSString * currentDiagnosticsTask;
//@property (readonly) IDETest * currentTest;
//@property (readonly) long long progress;
//@property (readonly) IDESchemeActionRecord * schemeActionRecord;
//@property (readonly) NSArray * testingActivities;
//@property (readonly) DVTFilePath * testSessionDirectory;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)fallbackTestSessionDiectoryForSessionIdentifier:(id)v1;
//+ (id)keyPathsForValuesAffectingProgress;
//+ (id)bundleIDsForCrashReportEmphasisForTestRunSpecifications:(id)v1;
//+ (id)processNamesToToolchainsForTestRunSpecifications:(id)v1;
//- (id)initWithTestManager:(id)v1 sessionGenerationCount:(unsigned long long)v2 runDestinationPool:(id)v3 actionRecord:(id)v4;
//- (void)primitiveInvalidate;
//- (void)_addUnitTestsObserver:(id)v1;
//- (id)runningTests;
//- (id)targetRunnersForTestable:(id)v1;
//- (void)_addObserversWithActionRecord:(id)v1 workspace:(id)v2 activityLogSection:(id)v3;
//- (id)testOperationForTestRunSpecificationGroups:(id)v1 executionEnvironment:(id)v2 actionRecord:(id)v3 schemeIdentifier:(id)v4 outSchemeActionResultOperation:(id *)v5 launchParametersBlock:(void (^ /* unknown block signature */)(void))v6 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v7 error:(id *)v8;
//- (char)_shouldCollectLogArchives;
//- (char)_shouldPrintProgressMessagesForTestTargetRunner:(id)v1;
//- (id)_contextStringForProgressMessageFromWorker:(id)v1;
//- (void)_startMonitoringTestables;
//- (void)_stopMonitoringTestables;
//- (void)testTargetRunnerDidStart:(id)v1;
//- (void)testTargetRunner:(id)v1 didEndWithError:(id)v2 wasCanceled:(char)v3;
//- (void)workerDidBecomeReadyForWork:(id)v1 forTestTargetRunner:(id)v2;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didLaunchWithDiagnosticLogPath:(id)v3;
//- (void)_considerFinishingWithCancellationFlag:(char)v1;
//- (void)_finishTestSession;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 willFinishWithError:(id)v3 didCancel:(char)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testSuite:(id)v3 didStartAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testSuite:(id)v3 willFinishAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testSuiteDidFinishWithRunCount:(unsigned long long)v3 skipCount:(unsigned long long)v4 failureCount:(unsigned long long)v5 unexpectedFailureCount:(unsigned long long)v6 testDuration:(double)v7 totalDuration:(double)v8 rawOutput:(id)v9;
//- (void)_addRunningTest:(id)v1;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didStartTestWithIdentifier:(id)v3 rawOutput:(id)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testWithIdentifier:(id)v3 willStartActivity:(id)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testWithIdentifier:(id)v3 didFinishActivity:(id)v4;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testWithIdentifier:(id)v3 didMeasurePerformanceMetric:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 testCaseWithIdentifier:(id)v3 didRecordIssue:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didSkipTestWithIdentifier:(id)v3 withTestResultMessage:(id)v4 rawOutput:(id)v5;
//- (void)_removeRunningTest:(id)v1;
//- (void)worker:(id)v1 forTestTargetRunner:(id)v2 didFinishTestWithIdentifier:(id)v3 withTestResult:(id)v4 rawOutput:(id)v5;
//- (char)testIsPendingRun:(id)v1 forTargetRunner:(id)v2;
//- (char)testIsPendingRun:(id)v1;
//- (char)testableIsPendingRun:(id)v1;
//- (void)_updateStatisticsForTargetRunner:(id)v1;
//- (void)_updateStatisticsForTestable:(id)v1;
//- (unsigned long long)_calculateTestsReported;
//- (id)fileURLForTestIdentifier:(id)v1;
//- (void)testablesChanged:(id)v1;
//- (void)testsChanged:(id)v1;
//- (void)allTestablesChanged;
//- (id)startActivityWithTitle:(id)v1;
//- (void)endActivity:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEStandardTestable : NSObject<IDETestable,DVTInvalidation> {
//    NSMutableSet * _subtests;
//    NSMutableArray * _cachedArrangedSubtests;
//    char _isSearchingForTests;
//    NSObject<IDETestableDataSourceToken> * _testableDataSourceToken;
//    NSMutableDictionary * _testIDsByURL;
//    NSMutableDictionary * _testsByID;
//}
//@property char isSearchingForTests;
//@property (retain) NSObject<IDETestableDataSourceToken> * testableDataSourceToken;
//@property (readonly,copy) NSMutableSet * mutableSubtests;
//@property (readonly,copy) NSMutableDictionary * testIDsByURL;
//@property (readonly,copy) NSMutableDictionary * testsByID;
//@property (readonly) NSObject<IDETestableProvider> * testableProvider;
//@property (readonly) NSSet * testFiles;
//@property (readonly) char isUITest;
//@property (readonly) NSObject<IDEBuildable> * primaryBuildable;
//@property (readonly,copy) NSString * name;
//@property (readonly) char canHaveSubtests;
//@property (readonly,copy) NSSet * subtests;
//@property (readonly,copy) NSArray * arrangedSubtests;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)_blueprintProviderRelativePathForTestingSpecifier:(id)v1;
//+ (id)_blueprintNameForTestingSpecifier:(id)v1;
//+ (id)_supportedPlatformsForBlueprint:(id)v1 buildParameters:(id)v2;
//- (void)_initializeInstanceVariables;
//- (id)init;
//- (id)initWithWorkspace:(id)v1 indexable:(id)v2;
//- (void)primitiveInvalidate;
//- (void)cancelTestDiscovery;
//- (long long)testHostStyle;
//- (id)testRunSpecificationWithTestingSpecifier:(id)v1 forScheme:(id)v2 buildParameters:(id)v3 buildables:(id)v4 error:(id *)v5;
//- (id)testHostBuildableInWorkspace:(id)v1 buildParameters:(id)v2;
//- (id)parentBuildableInWorkspace:(id)v1;
//- (id)targetApplicationBuildableForWorkspace:(id)v1 withBuildParameters:(id)v2;
//- (void)searchForTestsInWorkspace:(id)v1;
//- (void)_setupTestDiscoveryWithWorkspace:(id)v1 indexable:(id)v2;
//- (void)_updateExistingTests:(id)v1 toMatchNewTestIdentifiersToTests:(id)v2;
//- (id)testsInFile:(id)v1;
//- (void)_updateLocationOfTest:(id)v1 oldLocation:(id)v2;
//- (void)_removeTestIDFromURL:(id)v1 testID:(id)v2;
//- (id)testForIdentifier:(id)v1 createIfNeeded:(char)v2;
//- (id)testForIdentifier:(id)v1 createIfNeeded:(char)v2 fromSourceKitTest:(id)v3;
//- (id)nameForTestWithIdentifier:(id)v1;
//- (id)supertestForTestWithIdentifier:(id)v1 createIfNeeded:(char)v2;
//- (id)supertestForTestWithIdentifier:(id)v1;
//- (char)canHaveSubtestsForTestWithIdentifier:(id)v1;
//- (void)_primitiveAddSubtest:(id)v1;
//- (void)_addSubtest:(id)v1;
//- (void)_primitiveRemoveSubtest:(id)v1;
//- (void)_recursiveUnregisteringOfSubtest:(id)v1;
//- (void)removeSubtest:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEiCloudEntitlementsProcessor : IDEEntitlementsProcessor
//@property (readonly,nonatomic) NSArray * availableEnvironments;
//@property (copy,nonatomic) NSString * selectedEnvironment;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (char)needsInteraction;
//- (char)isApplicable;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (char)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchSessionEventSource : NSObject<DVTInvalidation> {
//    DVTObservingToken * _launchSessionStartObserverToken;
//    DVTObservingToken * _launchSessionHasCrashedObserverToken;
//    DVTObservingToken * _launchSessionAlertErrorObserverToken;
//    DVTObservingToken * _launchSessionPIDObserverToken;
//    NSObject<IDELaunchSessionEventSourceEvents> * _delegate;
//}
//@property (retain) DVTObservingToken * launchSessionStartObserverToken;
//@property (retain) DVTObservingToken * launchSessionHasCrashedObserverToken;
//@property (retain) DVTObservingToken * launchSessionAlertErrorObserverToken;
//@property (retain) DVTObservingToken * launchSessionPIDObserverToken;
//@property (retain) NSObject<IDELaunchSessionEventSourceEvents> * delegate;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithDelegate:(id)v1 launchSession:(id)v2;
//- (void)primitiveInvalidate;
//- (void)_observeAlertsForLaunchSession:(id)v1;
//- (void)_observeStartForLaunchSession:(id)v1;
//- (void)_observeRunnablePIDForLaunchSession:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocationSimulator : NSObject<DVTInvalidation> {
//    IDELaunchSession * _launchSession;
//    IDESimulateLocationService * _service;
//    int _state;
//    IDELocationScenario * _scenario;
//    DVTObservingToken * _debugSessionStateObserver;
//    char _playingBack;
//    NSTimer * _playbackTimer;
//    unsigned long long _currentPlaybackIndex;
//    double _lastUpdateTime;
//    NSOperationQueue * _playbackQueue;
//    IDELocation * _currentSimulatedLocation;
//}
//@property (retain) IDESimulateLocationService * service;
//@property (retain) IDELocation * currentSimulatedLocation;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) int state;
//@property (retain,nonatomic) IDELocationScenario * scenario;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)locationSimulatorLogAspect;
//+ (void)initialize;
//- (id)initWithLaunchSession:(id)v1;
//- (void)primitiveInvalidate;
//- (void)stopSimulating;
//- (id)_simulateLocationCapability;
//- (void)_updateService;
//- (void)_updateLocationScenario;
//- (int)_locationSimulatorStateForDebugSessionState:(int)v1;
//- (void)_updateScenarioSimulation;
//- (void)_setState:(int)v1;
//- (void)_debugSessionStateChanged;
//- (void)_stopPlayback;
//- (void)_pausePlayback;
//- (void)_startOrResumePlayback;
//- (void)_playbackTimerFired:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionAppStoreInformation : IDEDistributionOption
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEDeferredInitializationInvocation : NSObject {
//    Class _initializerClass;
//    unsigned long long _options;
//    DVTExtension * _extension;
//}
//- (id)initWithInitalizerClass:(Class)v1 options:(unsigned long long)v2 extension:(id)v3;
//- (void)invokeWithFailureHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyWorkspaceContentContextProvider : NSObject<DVTInvalidation> {
//    NSMutableSet * _pendingRemovedFilePaths;
//    NSMutableSet * _pendingAddedOrModifiedFilePaths;
//    NSDictionary * _filePathsToFrameworkNames;
//    NSObject<DVTInvalidation> * _workspaceObserver;
//    DVTDelayedInvocation * _refreshInvocation;
//    char _queryInProgress;
//    IDEWorkspace * _workspace;
//    NSSet * _directlyImportedFrameworkNames;
//}
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) NSSet * directlyImportedFrameworkNames;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void)beginRefresh;
//- (void)workspaceFilePath:(id)v1 didChangeWithType:(long long)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindFilePathPredicate : NSObject<NSCopying,IDEBatchFindPlistCodable>
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//+ (id)propertyListIdentifier;
//+ (id)plistDecoder;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//- (id)propertyListRepresentation;
//- (id)description;
//- (char)isWorkspaceSpecific;
//- (unsigned long long)hash;
//- (char)isEqualToFilePathPredicateWithIdenticalClass:(id)v1;
//- (char)isEqualToFilePathPredicate:(id)v1;
//- (char)isEqual:(id)v1;
//@end
//
//
///*****************************************************************/
//
@interface IDERunOperation : DVTOperation<IDEExecutingOperationTrackable> {
    //DVTDispatchLock * _workerAndFinishedTokenLock;
    NSMutableArray * _trackerObserverTokens;
    //DVTDisallowFinishToken * _finishToken;
    char _workaroundIsCancelled;
    IDERunOperationWorker * _worker;
    NSMutableArray * _trackers;
}
@property (retain) IDERunOperationWorker * worker;
@property (retain) NSMutableArray * trackers;
@property char workaroundIsCancelled;
@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly,copy) NSString * description;
@property (readonly,copy) NSString * debugDescription;
+ (id)keyPathsForValuesAffectingIsCancelled;
+ (id)keyPathsForValuesAffectingLaunchSession;
- (id)init;
- (id)initWithWorker:(id)v1;
- (void)main;
- (char)isCancelled;
- (void)cancel;
- (void)runningDidFinish;
- (void)_runningTrackerFinished:(id)v1;
- (void)registerTracker:(id)v1;
- (id)notFinishedReasonWithDepth:(unsigned long long)v1;
@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySDKFilePathResult : IDEOpenQuicklyResult {
//    DVTFilePath * _sourceSDKFilePath;
//    char _fromInterestingFramework;
//    char _isPrivateSDKContent;
//    DVTFilePath * _filePath;
//}
//@property (readonly) DVTFilePath * filePath;
//+ (id)resultWithCandidate:(struct DVTFuzzyMatchCandidate *)v1 precision:(long long)v2 sourceSDKFilePath:(id)v3 filePath:(id)v4 isFromInterestingFramework:(char)v5 isPrivateSDKContent:(char)v6 query:(id)v7;
//- (id)updatedResultForQuery:(id)v1 precision:(long long)v2;
//- (char)isSymbolic;
//- (unsigned long long)hashOfResultIdentity;
//- (char)representsSameResultAsSDKFilePathResult:(id)v1;
//- (char)representsSameResult:(id)v1;
//- (id)location;
//- (id)sourceSDKFilePath;
//- (char)isFromPoject;
//- (unsigned long long)hashForAlternateIdentity;
//- (id)valueStandingInForForAlternateIdentity;
//- (id)alternateTitleGivenParentResult:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCreatePKGStep : IDEDistributionProcessingPackagingStep
//+ (char)wantsPayloadDir;
//+ (bool)supportsDryRun;
//+ (id)packagePathExtension;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)name;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindQueryTerm : NSObject<NSSecureCoding> {
//    long long _termType;
//    NSString * _symbolResolution;
//    NSString * _text;
//    DVTFindPatternComponents * _patternComponents;
//    NSString * _explicitDisplayString;
//}
//@property (readonly) long long termType;
//@property (readonly) NSString * symbolResolution;
//@property (readonly) NSString * text;
//@property (readonly) DVTFindPatternComponents * patternComponents;
//@property (readonly) NSString * displayString;
//@property (readonly) NSString * explicitDisplayString;
//@property (readonly) DVTFindPatternComponents * displayFindPatternComponents;
//+ (char)supportsSecureCoding;
//- (id)initWithPattern:(id)v1;
//- (id)initWithIndexSymbol:(id)v1;
//- (id)initWithText:(id)v1;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (unsigned long long)hash;
//- (char)isEmpty;
//- (char)isEqualToQueryTerm:(id)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestToolchainInfo : NSObject<IDESourceKitRequestDictionaryWrapper> {
//    IDESourceKitRequestDictionary * _dict;
//}
//- (id)initWithUIDSet:(id)v1 identifier:(id)v2 name:(id)v3 filePath:(id)v4 isDefault:(char)v5 disableClientResponseHandling:(id)v6;
//- (id)internalDictionary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestIndexable : NSObject<IDESourceKitRequestDictionaryWrapper> {
//    IDESourceKitRequestDictionary * _dict;
//}
//- (id)initWithUIDSet:(id)v1 indexableIdentifier:(id)v2 fileURLs:(id)v3 supportedPlatforms:(id)v4 linkedIndexableIds:(id)v5 indexableIsUnitTest:(id)v6;
//- (id)internalDictionary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestPreferredTargetInfo : NSObject<IDESourceKitRequestDictionaryWrapper> {
//    IDESourceKitRequestDictionary * _dict;
//}
//- (id)initWithUIDSet:(id)v1 indexableIdentifier:(id)v2 isBuiltForRun:(char)v3 isImplicitDependency:(char)v4;
//- (id)internalDictionary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestDocumentLocation : NSObject<IDESourceKitRequestDictionaryWrapper> {
//    IDESourceKitRequestDictionary * _dict;
//}
//- (id)initWithUIDSet:(id)v1 url:(id)v2 startLine:(long long)v3 startCol:(long long)v4 endLine:(long long)v5 endCol:(long long)v6 rangeLoc:(long long)v7 rangeCount:(long long)v8 timeStamp:(id)v9 encoding:(long long)v10;
//- (id)internalDictionary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitRequestSymbol : NSObject<IDESourceKitRequestDictionaryWrapper> {
//    IDESourceKitRequestDictionary * _dict;
//}
//- (id)initWithUIDSet:(id)v1 symbolName:(id)v2 symbolKind:(id)v3 language:(id)v4 resolution:(id)v5;
//- (id)internalDictionary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseDocumentLocation : IDESourceKitVariantDictionaryWrapper
//@property (readonly) DVTTextDocumentLocation * ide_documentLocation;
//@property (readonly) DVTTextDocumentLocation * ide_documentLocationWithDocumentURLAndLineRange;
//@property (readonly) NSString * url;
//@property (readonly) long long startLine;
//@property (readonly) long long startCol;
//@property (readonly) long long endLine;
//@property (readonly) long long endCol;
//@property (readonly) long long rangeLoc;
//@property (readonly) long long rangeCount;
//@property (readonly) NSNumber * timeStamp;
//@property (readonly) long long encoding;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseRenameRange : IDESourceKitVariantDictionaryWrapper<IDESourceKitRenameRange>
//@property (readonly) unsigned long long kind;
//@property (readonly) NSNumber * argIndex;
//@property (readonly) long long line;
//@property (readonly) long long column;
//@property (readonly) long long endLine;
//@property (readonly) long long endColumn;
//@property (readonly) long long line;
//@property (readonly) long long column;
//@property (readonly) long long endLine;
//@property (readonly) long long endColumn;
//@property (readonly) struct _sourcekit_uid_s * rawKind;
//@property (readonly) NSNumber * argIndex;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseRenameRangeGroup : IDESourceKitVariantDictionaryWrapper<IDESourceKitRenameRangeGroup>
//@property (readonly) unsigned long long category;
//@property (readonly) NSArray * ranges;
//@property (readonly) struct _sourcekit_uid_s * rawCategory;
//@property (readonly) IDESourceKitResponseArray * rawRanges;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseFileRenameRanges : IDESourceKitVariantDictionaryWrapper<IDESourceKitRefactoringFileRenameRanges>
//@property (readonly) NSString * filePath;
//@property (readonly) char shouldRenameFile;
//@property (readonly) NSArray * categorizedRanges;
//@property (readonly) NSString * filePath;
//@property (readonly) NSNumber * renameFile;
//@property (readonly) IDESourceKitResponseArray * rawRanges;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseEdit : IDESourceKitVariantDictionaryWrapper<IDESourceKitRefactoringEdit>
//@property (readonly) long long line;
//@property (readonly) long long column;
//@property (readonly) long long endLine;
//@property (readonly) long long endColumn;
//@property (readonly) NSString * sourceText;
//@property (readonly) NSArray * renameRanges;
//@property (readonly) struct _sourcekit_uid_s * rawKind;
//@property (readonly) long long line;
//@property (readonly) long long column;
//@property (readonly) long long endLine;
//@property (readonly) long long endColumn;
//@property (readonly) NSString * sourceText;
//@property (readonly) IDESourceKitResponseArray * rawRanges;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseFileEdits : IDESourceKitVariantDictionaryWrapper<IDESourceKitRefactoringFileEdits>
//@property (readonly) NSString * filePath;
//@property (readonly) NSString * newName;
//@property (readonly) NSArray * edits;
//@property (readonly) NSString * filePath;
//@property (readonly) NSString * newName;
//@property (readonly) IDESourceKitResponseArray * rawEdits;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseAvailableRefactoring : IDESourceKitVariantDictionaryWrapper
//@property (readonly) struct _sourcekit_uid_s * kind;
//@property (readonly) struct _sourcekit_uid_s * identifier;
//@property (readonly) NSString * description;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseSymbol : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * symbolName;
//@property (readonly) NSString * symbolKind;
//@property (readonly) NSString * language;
//@property (readonly) NSString * resolution;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseSymbolOccurrence : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long role;
//@property (readonly) IDESourceKitResponseDocumentLocation * location;
//@property (readonly) long long lineNumber;
//@property (readonly) long long indexerColumn;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSString * moduleUrlOpt;
//@property (readonly) IDESourceKitResponseSymbol * symbol;
//@property (readonly) NSString * displayName;
//@property (readonly) NSString * symbolModuleName;
//@property (readonly) char isInProject;
//@property (readonly) char isVirtual;
//@property (readonly) char symbolIsSystem;
//- (id)ide_collectionItem:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseRenamedSymbolInfo : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * oldName;
//@property (readonly) NSString * newName;
//@property (readonly) IDESourceKitResponseSymbolOccurrence * symbol;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseUnitTestMethod : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * symbolName;
//@property (readonly) IDESourceKitResponseDocumentLocation * location;
//@property (readonly) NSString * parent;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseUnitTestTarget : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * targetName;
//@property (readonly) IDESourceKitResponseArray * symbolLocation;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseCodeCompletionResult : IDESourceKitVariantDictionaryWrapper
//@property (readonly) struct _sourcekit_uid_s * kind;
//@property (readonly) NSString * name;
//@property (readonly) NSString * sourceText;
//@property (readonly) NSString * description;
//@property (readonly) NSString * typeName;
//@property (readonly) NSString * docBrief;
//@property (readonly) NSString * parent;
//@property (readonly) long long priority;
//@property (readonly) char notRecommended;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseDiagnosticFixItItem : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * sourceText;
//@property (readonly) IDESourceKitResponseDocumentLocation * range;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseDiagnostic : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * description;
//@property (readonly) NSString * categoryName;
//@property (readonly) long long severity;
//@property (readonly) IDESourceKitResponseDocumentLocation * docLocation;
//@property (readonly) IDESourceKitResponseArray * ranges;
//@property (readonly) IDESourceKitResponseArray * fixits;
//@property (readonly) IDESourceKitResponseArray * diagnosticNotes;
//- (id)ide_collectionItem:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseSymbolCollection : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseArray * symbols;
//- (id)ide_collection:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseFilePathCollection : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseFilePathArray * filePaths;
//- (id)ide_collection;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseSymbolOccurrenceResult : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseSymbolOccurrence * symbolOccurrence;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseCallerOccurrence : IDESourceKitVariantDictionaryWrapper
//@property (readonly) IDESourceKitResponseSymbolOccurrence * symbolOccurrence;
//@property (readonly) IDESourceKitResponseSymbolOccurrence * containingSymbol;
//- (id)ide_collectionItem:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseTestMe : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * outputName;
//@property (readonly) char notRecommended;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseSetLoggingSettings : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long previousLogLevel;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseOpenIndex : IDESourceKitVariantDictionaryWrapper
//@property (readonly) long long indexerToken;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnLogOutput : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * message;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnToolchainCompilerCrashed : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * toolID;
//@property (readonly) char affectsAllCompilationsForTool;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnIndexCompileWillStart : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * compileID;
//@property (readonly) NSNumber * indexerToken;
//@property (readonly) NSString * toolID;
//@property (readonly) NSString * title;
//@property (readonly) NSString * invocation;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitNotificationOnIndexCompileDidFinish : IDESourceKitVariantDictionaryWrapper
//@property (readonly) NSString * compileID;
//@property (readonly) NSNumber * indexerToken;
//@property (readonly) long long result;
//@property (readonly) char crashed;
//@property (readonly) NSString * consoleOutput;
//@property (readonly) IDESourceKitResponseArray * diagnostics;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitConnectionNotification : IDESourceKitVariantDictionaryWrapper
//- (char)invokeOnDelegate:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppTransportSecurityItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _entitlementsFlightCheck;
//}
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeAction : NSObject<DVTXMLUnarchiving,DVTInvalidation> {
//    char _hasAwoken;
//    NSMutableArray * _prePhaseExecutionActions;
//    NSMutableArray * _postPhaseExecutionActions;
//    NSObject<DVTInvalidation> * _buildSettingsDidChangeNotificationObservingToken;
//    DVTObservingToken * _activeRunDestinationObservingToken;
//    int _internalDebuggerToolchainSelectionMode;
//    int _toolchainState;
//    IDEScheme * _runContext;
//    IDERunnable * _runnable;
//    NSString * _buildConfiguration;
//    IDEFileReference * _notificationPayloadFile;
//    IDESchemeBuildableReference * _buildableReferenceToUseForMacroExpansion;
//    NSString * _selectedInternalDebuggerToolchainIdentifier;
//    DVTToolchain * _lldbToolchain;
//    DVTToolchain * _llvmProfdataToolchain;
//    NSString * _intentQueryString;
//}
//@property (readonly) NSArray * _prePhaseExecutionActionsProxies;
//@property (readonly) NSArray * _postPhaseExecutionActionsProxies;
//@property (retain) DVTToolchain * lldbToolchain;
//@property (readonly) char hasAwoken;
//@property (readonly) IDEScheme * runContext;
//@property (retain,nonatomic) IDERunnable * runnable;
//@property (readonly) NSString * name;
//@property (readonly) NSString * subtitle;
//@property (readonly) char doesNonActionWork;
//@property (readonly,nonatomic) char debugAppExtensions;
//@property (copy) NSString * buildConfiguration;
//@property (retain) IDEFileReference * notificationPayloadFile;
//@property (copy) NSArray * prePhaseExecutionActions;
//@property (readonly) NSMutableArray * mutablePrePhaseExecutionActions;
//@property (copy) NSArray * postPhaseExecutionActions;
//@property (readonly) NSMutableArray * mutablePostPhaseExecutionActions;
//@property (retain) IDESchemeBuildableReference * buildableReferenceToUseForMacroExpansion;
//@property (readonly,nonatomic) char runnableUsesInternalSDK;
//@property (nonatomic) int internalDebuggerToolchainSelectionMode;
//@property (retain) NSString * selectedInternalDebuggerToolchainIdentifier;
//@property int toolchainState;
//@property (readonly) DVTToolchain * llvmProfdataToolchain;
//@property (retain) NSString * intentQueryString;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)addressSanitizerEnabledOverride;
//+ (void)setAddressSanitizerEnabledOverride:(id)v1;
//+ (id)threadSanitizerEnabledOverride;
//+ (void)setThreadSanitizerEnabledOverride:(id)v1;
//+ (id)undefinedBehaviorSanitizerEnabledOverride;
//+ (void)setUndefinedBehaviorSanitizerEnabledOverride:(id)v1;
//+ (id)localizableStringsDataGatheringEnabledOverride;
//+ (void)setLocalizableStringsDataGatheringEnabledOverride:(id)v1;
//+ (bool)schemeActionIsSupportedForDevice:(id)v1 schemeCommand:(id)v2 outError:(id *)v3;
//+ (char)runDestinationSupportsSwiftDevelopmentRuntime:(id)v1 outError:(id *)v2;
//+ (char)shouldAllowCustomPhaseActions;
//+ (id)keyPathsForValuesAffectingRunnable;
//+ (id)_sanitizerOptions:(id)v1 debugging:(char)v2 testingSpecifier:(id)v3;
//+ (char)_addSanitizer:(unsigned long long)v1 environmentVariables:(id)v2 buildParameters:(id)v3 buildable:(id)v4 debugAppExtensions:(char)v5 debugging:(char)v6 testingSpecifier:(id)v7 error:(id *)v8;
//+ (char)addAddressSanitizerEnvironmentVariables:(id)v1 buildParameters:(id)v2 buildable:(id)v3 debugAppExtensions:(char)v4 debugging:(char)v5 testingSpecifier:(id)v6 error:(id *)v7;
//+ (char)addThreadSanitizerEnvironmentVariables:(id)v1 buildParameters:(id)v2 buildable:(id)v3 debugAppExtensions:(char)v4 debugging:(char)v5 testingSpecifier:(id)v6 error:(id *)v7;
//+ (char)addUBSanitizerEnvironmentVariables:(id)v1 buildParameters:(id)v2 buildable:(id)v3 debugAppExtensions:(char)v4 debugging:(char)v5 testingSpecifier:(id)v6 error:(id *)v7;
//+ (void)setupMainThreadCheckerInEnvironmentVariables:(id)v1 dylibPath:(id)v2;
//+ (id)bundleIdentifierFromBuildableProduct:(id)v1 withBuildParameters:(id)v2;
//+ (void)modifyEnvironmentForLogging:(id)v1 buildParameters:(id)v2;
//+ (void)updateSearchPathSettingsInEnvironment:(id)v1 withBuildProducts:(id)v2 runDestination:(id)v3;
//+ (void)updateSearchPathSettingsInEnvironment:(id)v1 withBuildProducts:(id)v2 runDestination:(id)v3 workspace:(id)v4;
//+ (id)commandLineArgumentsForLanguage:(id)v1 andRegion:(id)v2;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)setupObservers;
//- (void)updateRunnableForDevice;
//- (void)setRunContext:(id)v1;
//- (void)_resetToolchainStatusHard:(char)v1;
//- (void)updateBuildableForChangeInRunnable;
//- (id)extensionInfosForExtensions:(id)v1;
//- (id)extensionInfosForExtensionBuildables:(id)v1 schemeCommand:(id)v2;
//- (id)_addWatchSettingsToExtensionInfo:(id)v1 foundIn:(id)v2;
//- (id)filePathsForContainersAndExtensionsForBuildParameters:(id)v1 runnableProductType:(id)v2 schemeCommand:(id)v3;
//- (void)updateExtensionInfosOfLaunchParmeters:(id)v1;
//- (id)realAppNameForRunnablePath:(id)v1;
//- (id)setUpActionDependenciesForCorePhaseOperation:(id)v1 shouldRunPostActionsBlock:(void (^ /* unknown block signature */)(void))v2 prePhaseEnvironmentPopulationBlock:(void (^ /* unknown block signature */)(void))v3 postPhaseEnvironmentPopulationBlock:(void (^ /* unknown block signature */)(void))v4 buildParameters:(id)v5 schemeActionResultOperation:(id)v6 error:(id *)v7;
//- (id)buildableForPlaceholderPathRunnable;
//- (id)_sanitizerSchemeActionForSchemeCommand:(id)v1;
//- (char)addressSanitizerEnabledForSchemeCommand:(id)v1;
//- (char)addressSanitizerEnabledWithOverride;
//- (char)threadSanitizerEnabledForSchemeCommand:(id)v1 runDestination:(id)v2;
//- (char)threadSanitizerEnabledWithOverride;
//- (char)UBSanitizerEnabledForSchemeCommand:(id)v1 runDestination:(id)v2;
//- (char)UBSanitizerEnabledWithOverride;
//- (char)mainThreadCheckerEnabledForSchemeCommand:(id)v1 runDestination:(id)v2;
//- (char)_isTSanSupportedArch:(id)v1;
//- (char)threadSanitizerAllowedForRunDestination:(id)v1;
//- (char)UBSanitizerAllowedForRunnable;
//- (char)mallocStackLightAllowedForRunDestination:(id)v1;
//- (id)adjustedBuildParametersForMacroExpansionBuildableWithBaselineParamters:(id)v1;
//- (id)stringListForBuildSettings:(id)v1 forSchemeCommand:(id)v2 buildable:(id)v3;
//- (id)stringListForBuildSettings:(id)v1 forSchemeCommand:(id)v2;
//- (id)expandMacrosInString:(id)v1 forSchemeCommand:(id)v2;
//- (id)expandMacrosInString:(id)v1 forSchemeCommand:(id)v2 buildParameters:(id)v3;
//- (id)absolutePathOfBuildSetting:(id)v1 forSchemeCommand:(id)v2;
//- (id)bundleIdentifierWithRunnablePath:(id)v1;
//- (void)primitiveInvalidate;
//- (void)insertObject:(id)v1 inPrePhaseExecutionActionsAtIndex:(unsigned long long)v2;
//- (void)removeObjectFromPrePhaseExecutionActionsAtIndex:(unsigned long long)v1;
//- (void)insertPrePhaseExecutionActions:(id)v1 atIndexes:(id)v2;
//- (void)removePrePhaseExecutionActionsAtIndexes:(id)v1;
//- (void)replaceObjectInPrePhaseExecutionActionsAtIndex:(unsigned long long)v1 withObject:(id)v2;
//- (void)replacePrePhaseExecutionActionsAtIndexes:(id)v1 withObjects:(id)v2;
//- (void)insertObject:(id)v1 inPostPhaseExecutionActionsAtIndex:(unsigned long long)v2;
//- (void)removeObjectFromPostPhaseExecutionActionsAtIndex:(unsigned long long)v1;
//- (void)insertPostPhaseExecutionActions:(id)v1 atIndexes:(id)v2;
//- (void)removePostPhaseExecutionActionsAtIndexes:(id)v1;
//- (void)replaceObjectInPostPhaseExecutionActionsAtIndex:(unsigned long long)v1 withObject:(id)v2;
//- (void)replacePostPhaseExecutionActionsAtIndexes:(id)v1 withPostPhaseExecutionActions:(id)v2;
//- (void)schemeObjectGraphSetupComplete;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setNotificationPayloadFileFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addPreActions:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addPostActions:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addRemoteRunnable:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addPathRunnable:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildableProductRunnable:(id)v1 fromXMLUnarchiver:(id)v2;
//- (char)isDeprecatedOption:(id)v1;
//- (id)_resolvedRunnableBuildableForToolchainDetection;
//- (id)_buildProductToolchainIdentifiersForSchemeCommand:(id)v1;
//- (char)_useInternalDebuggerToolchainSelectionLogic;
//- (id)_buildProductToolchainForSchemeCommand:(id)v1;
//- (id)bestLLDBToolchainForSchemeCommand:(id)v1 preferBuildProductToolchain:(char)v2;
//- (id)llvmProfdataToolchainForSchemeCommand:(id)v1;
//- (id)swiftVersionOfRunnableForSchemeCommand:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInstallLocalMacService : IDERunDeviceService
//+ (id)capability;
//- (id)operationWorkerWithLaunchSession:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInstallLocalMacWorker : IDERunOperationWorker {
//    NSObject<OS_dispatch_queue> * _installQueue;
//}
//- (id)initWithExtensionIdentifier:(id)v1 launchSession:(id)v2;
//- (void)performWorkerAction;
//- (char)_runnableIsAnApp;
//- (void)performWorkerAction_stage2;
//- (void)_doPostInstallWork;
//- (void)_finishOnMainQueueWithError:(id)v1;
//- (void)terminate;
//- (void)_updateTestingEnvironmentVariables:(id)v1 forTestHostAtPath:(id)v2 testConfiguration:(id)v3;
//- (char)_prepareLaunchSessionForTesting:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAssetPackManifestIndexingStep : IDEDistributionItemProcessingStep
//+ (void)addAssetPackBundleKey:(id)v1 toDistributionItem:(id)v2 inContext:(id)v3;
//+ (bool)processDistributionItem:(id)v1 context:(id)v2 error:(id *)v3;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCollectionLogging : NSObject
//+ (void)initialize;
//+ (id)testLogDirectory;
//+ (id)describeIndexCollection:(id)v1;
//+ (void)dump:(id)v1 toFile:(id)v2 ofContent:(id)v3;
//+ (void)logIndexCollection:(id)v1 toFile:(id)v2;
//+ (void)logTestStructure:(id)v1 toFile:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceUserSettings : IDEWorkspaceSettings
//@property int derivedDataLocationStyle;
//@property (retain) NSString * derivedDataCustomLocation;
//@property int buildLocationStyle;
//@property int customBuildLocationType;
//@property (retain) NSString * sharedBuildFolderName;
//@property (retain) NSString * customBuildProductsPath;
//@property (retain) NSString * customBuildIntermediatesPath;
//@property int snapshotLocationStyle;
//@property (retain) NSString * snapshotCustomLocation;
//@property char takeSnapshotsBeforeSignificantChanges;
//@property char hasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
//@property char liveSourceIssuesEnabled;
//@property char showSharedSchemesAutomatically;
//@property int issueFilterStyle;
//+ (void)setShouldUseLegacyBuildSystemOverride:(id)v1;
//+ (id)shouldUseLegacyBuildSystemOverride;
//+ (char)automaticallyNotifiesObserversForDerivedDataLocationStyle;
//+ (char)automaticallyNotifiesObserversForDerivedDataCustomLocation;
//+ (char)automaticallyNotifiesObserversForBuildLocationStyle;
//+ (char)automaticallyNotifiesObserversForCustomBuildLocationType;
//+ (char)automaticallyNotifiesObserversForSharedBuildFolderName;
//+ (char)automaticallyNotifiesObserversForCustomBuildProductsPath;
//+ (char)automaticallyNotifiesObserversForCustomBuildIntermediatesPath;
//+ (char)automaticallyNotifiesObserversForSnapshotLocationStyle;
//+ (char)automaticallyNotifiesObserversForSnapshotCustomLocation;
//+ (char)automaticallyNotifiesObserversForTakeSnapshotsBeforeSignificantChanges;
//+ (char)automaticallyNotifiesObserversForHasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
//+ (char)automaticallyNotifiesObserversForLiveSourceIssuesEnabled;
//+ (char)automaticallyNotifiesObserversForShowSharedSchemesAutomatically;
//+ (char)automaticallyNotifiesObserversForIssueFilterStyle;
//+ (char)automaticallyNotifiesObserversForShouldUseLegacyBuildSystem;
//- (id)settingsOwnership;
//- (void)saveSettings;
//- (void)loadSettings;
//- (char)shouldUseLegacyBuildSystem;
//- (char)usesPerTargetBuildLocations;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationStringsFileElement : NSObject<NSCopying> {
//    NSString * _key;
//    NSString * _value;
//    NSString * _comment;
//}
//@property (readonly,copy,nonatomic) NSString * key;
//@property (readonly,copy,nonatomic) NSString * value;
//@property (readonly,copy,nonatomic) NSString * comment;
//- (id)initWithKey:(id)v1 value:(id)v2 comment:(id)v3;
//- (id)init;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (char)isEqualToLocalizationStringsFileElement:(id)v1;
//- (long long)compare:(id)v1;
//- (id)stringsFileRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExecutionActionType : NSObject {
//    NSString * _identifier;
//}
//@property (readonly) NSString * identifier;
//+ (id)actionTypePoint;
//+ (char)point:(id)v1 isSubpointOfPoint:(id)v2;
//+ (id)actionTypeWithIdentifier:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionAppIdentifierPrefixedEntitlements : IDEDistributionOptionEntitlementProcessor
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)makeNewProcessorWithDistributionMethod:(id)v1 item:(id)v2 itemEntitlements:(id)v3 team:(id)v4;
//- (id)matchingProcessorFromProcessors:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEGaugeDataQuery : NSObject<DVTInvalidation> {
//    NSString * _requiredAttribute;
//    char _isSuspended;
//    char _useProxiedDevice;
//    IDEGaugeDataQueryCoordinator * _queryCoordinator;
//    IDEGaugeDataProviderService * _service;
//    NSSet * _observedAttributes;
//    void (^ /* unknown block signature */)(void) _resultDictHandler;
//}
//@property (retain,nonatomic) IDEGaugeDataQueryCoordinator * queryCoordinator;
//@property (retain) IDEGaugeDataProviderService * service;
//@property (copy,nonatomic) NSSet * observedAttributes;
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) resultDictHandler;
//@property (nonatomic) char isSuspended;
//@property (readonly,nonatomic) char useProxiedDevice;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initForProcessWithPID:(id)v1 onDevice:(id)v2 useProxiedDevice:(char)v3;
//- (void)primitiveInvalidate;
//- (void)setObservedAttributes:(id)v1 requiredAttribute:(id)v2;
//- (void)handleResultDict:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileLocator : NSObject {
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSSet * _profiles;
//    NSString * _bundleID;
//    long long _style;
//    DVTPlatform * _platform;
//    NSObject<IDEProvisioningErrorProvider> * _errorProvider;
//    IDEProfileSpecifier * _profileSpecifier;
//    NSSet * _signingCertificates;
//    long long _automaticLocationStyle;
//    DVTPortalProfileType * _profileType;
//}
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) NSSet * profiles;
//@property (readonly,nonatomic) NSString * bundleID;
//@property (readonly,nonatomic) long long style;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,nonatomic) NSObject<IDEProvisioningErrorProvider> * errorProvider;
//@property (retain,nonatomic) IDEProfileSpecifier * profileSpecifier;
//@property (retain,nonatomic) NSSet * signingCertificates;
//@property (nonatomic) long long automaticLocationStyle;
//@property (retain,nonatomic) DVTPortalProfileType * profileType;
//- (id)initWithProfiles:(id)v1 team:(id)v2 bundleID:(id)v3 style:(long long)v4 platform:(id)v5;
//- (id)initWithProfiles:(id)v1 team:(id)v2 bundleID:(id)v3 style:(long long)v4 platform:(id)v5 errorProvider:(id)v6;
//- (id)profileWithError:(id *)v1;
//- (id)profilesForManualProvisioning;
//- (id)_logAspect;
//- (id)_xcodeManagedProvisioningProfileWithError:(id *)v1;
//- (id)_qualifiedProfilesForXcodeManaged;
//- (id)_manualProvisioningProfileWithError:(id *)v1;
//- (id)_profileMatchingSpecifier:(id)v1;
//- (id)_profileMatchingName:(id)v1 teamID:(id)v2;
//- (id)_errorForNoTeam;
//- (id)_errorForXcodeManagedWithManualSpecifier;
//- (id)_errorForManualWithNoProfileSpecifier:(id)v1;
//- (id)_errorForManualWithNoMatchingProfile:(id)v1;
//- (id)_errorForXcodeManagedNoMatchingProfiles;
//- (id)_errorForManualWithAllowsAutomaticSelectionOfAllProfiles;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildSchemeAction : IDESchemeAction<IDECodeCoverageBuildableResolving> {
//    NSMutableArray * _legacyBuildableReferences;
//    char _parallelizeBuildables;
//    char _buildImplicitDependencies;
//    char _enableAddressSanitizer;
//    NSString * _legacyBuildConfiguration;
//    NSMutableArray * _buildActionEntries;
//    IDEBuildActionEntry * _launchRunnableEntry;
//    IDEBuildActionEntry * _profileRunnableEntry;
//    char _buildablesDidChangeNotificationEnabled;
//    char _isBuildablesDidChangeNotificationPending;
//    DVTObservingToken * _launchActionRunnableObservingToken;
//    DVTObservingToken * _profileActionRunnableObservingToken;
//    DVTObservingToken * _testPlanReferencesObservingToken;
//    DVTObservingToken * _testBuildableReferencesObservingToken;
//    DVTObservingToken * _testHostBuildableReferencesObservingToken;
//    char _collectBuildTimelineMetrics;
//    char _runPostActionsOnFailure;
//    NSMapTable * _overridingBuildPropertiesForBuildable;
//}
//@property (readonly) NSMutableArray * mutableBuildActionEntries;
//@property (nonatomic,getter=isBuildablesDidChangeNotificationEnabled) char buildablesDidChangeNotificationEnabled;
//@property (readonly) NSArray * buildActionEntries;
//@property char parallelizeBuildables;
//@property char buildImplicitDependencies;
//@property char collectBuildTimelineMetrics;
//@property char runPostActionsOnFailure;
//@property (readonly) NSArray * availableBuildConfigurations;
//@property (readonly) NSMapTable * overridingBuildPropertiesForBuildable;
//@property (readonly) char needsNewSchemeVersionForExplicitTestPlanEntries;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (id)keyPathsForValuesAffectingAvailableBuildConfigurations;
//+ (id)buildablesForTestingSpecifiers:(id)v1 includingDependencies:(char)v2;
//+ (id)_uniquedBuildablesForBuildables:(id)v1 includingDependencies:(char)v2 includingPackages:(char)v3;
//+ (id)resolveDependenciesForBuildables:(id)v1 buildParameters:(id)v2 executionEnvironment:(id)v3 includeImplicitDependencies:(char)v4;
//- (void)_commonInit;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)primitiveInvalidate;
//- (void)setRunContext:(id)v1;
//- (id)buildFolderPathForPGO;
//- (id)buildFolderPathForCodeCoverage;
//- (id)name;
//- (id)subtitle;
//- (char)doesNonActionWork;
//- (void)_setupImplicitBuildActionEntries;
//- (void)forceOffBuildForRunningForBuildActionEntry:(id)v1;
//- (void)forceOffBuildForTestingForBuildActionEntry:(id)v1;
//- (void)forceOffBuildForProfilingForBuildActionEntry:(id)v1;
//- (void)forceOffBuildForPreviewingForBuildActionEntry:(id)v1;
//- (void)removeBuildActionEntryAtIndex:(unsigned long long)v1;
//- (void)removeBuildActionEntries:(id)v1;
//- (id)addBuildActionEntryForBuildableReference:(id)v1;
//- (void)moveBuildActionEntriesAtIndexes:(id)v1 toIndex:(unsigned long long)v2;
//- (id)buildDirectoryPathsForBuildParameters:(id)v1 schemeCommand:(id)v2 buildableProductFilter:(void (^ /* unknown block signature */)(void))v3;
//- (id)buildDirectoryPathsForBuildParameters:(id)v1 schemeCommand:(id)v2;
//- (id)buildableReferenceForBuildable:(id)v1;
//- (id)_buildablesIncludingDependencies:(char)v1 includingPackages:(char)v2 restrictToSchemeCommand:(id)v3 operationParameters:(id)v4;
//- (id)resolveImplicitDependenciesIfEnabledForBuildables:(id)v1;
//- (id)buildablesForShowingIssues;
//- (id)buildablesForAllSchemeCommandsIncludingDependencies:(char)v1 includingPackages:(char)v2;
//- (id)buildablesForAllSchemeCommandsIncludingDependencies:(char)v1;
//- (id)buildablesForSchemeCommand:(id)v1 includingDependencies:(char)v2 includingPackages:(char)v3;
//- (id)buildablesForSchemeCommand:(id)v1 includingDependencies:(char)v2;
//- (id)buildablesForSchemeCommand:(id)v1 operationParameters:(id)v2 includingDependencies:(char)v3 includingPackages:(char)v4;
//- (id)buildablesForSchemeCommand:(id)v1 operationParameters:(id)v2 includingDependencies:(char)v3;
//- (id)extensionTypesOfBuildablesForSchemeCommand:(id)v1 includingDependencies:(char)v2;
//- (id)buildableReferences;
//- (id)buildableReferencesForSchemeCommand:(id)v1;
//- (id)buildablesByConfiguration;
//- (void (^ /* unknown block signature */)(void))_matcherBlockForCommand:(id)v1 operationParameters:(id)v2;
//- (void)postBuildablesDidChangeNotification;
//- (void)setOverridingBuildProperties:(id)v1 forBuildable:(id)v2;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setParallelizeBuildablesFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setRunPostActionsOnFailureFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setCollectBuildTimelineMetricsFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildImplicitDependenciesFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildableProductReferences:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildActionEntries:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildRoles:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildConfigurationFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildActionEntry : NSObject<DVTXMLUnarchiving> {
//    char _isExplicitEntry;
//    char _shouldBuildForRunning;
//    char _mustBuildForRunning;
//    char _shouldBuildForTesting;
//    char _mustBuildForTesting;
//    char _shouldBuildForProfiling;
//    char _mustBuildForProfiling;
//    char _shouldBuildForPreviewing;
//    char _mustBuildForPreviewing;
//    char _shouldBuildForArchiving;
//    char _shouldBuildForAnalyzing;
//    char _shouldHideIssues;
//    IDESchemeBuildableReference * _primaryBuildableReference;
//    _TtC13IDEFoundation26IDESchemeTestPlanReference * _testPlanReference;
//    IDEBuildSchemeAction * _buildAction;
//}
//@property (nonatomic) char mustBuildForRunning;
//@property (nonatomic) char mustBuildForTesting;
//@property (nonatomic) char mustBuildForProfiling;
//@property (nonatomic) char mustBuildForPreviewing;
//@property (retain) IDEBuildSchemeAction * buildAction;
//@property (readonly) char canRemoveEntry;
//@property (readonly) char isExplicitEntry;
//@property (readonly) NSArray * buildableReferences;
//@property (readonly) IDESchemeBuildableReference * primaryBuildableReference;
//@property (readonly) IDESchemeBuildableReference * buildableReference;
//@property (readonly) _TtC13IDEFoundation26IDESchemeTestPlanReference * testPlanReference;
//@property (readonly) NSString * name;
//@property char shouldBuildForRunning;
//@property char shouldBuildForTesting;
//@property char shouldBuildForProfiling;
//@property char shouldBuildForPreviewing;
//@property char shouldBuildForArchiving;
//@property char shouldBuildForAnalyzing;
//@property char shouldHideIssues;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)keyPathsForValuesAffectingShouldBuildForRunning;
//+ (id)keyPathsForValuesAffectingShouldBuildForTesting;
//+ (id)keyPathsForValuesAffectingShouldBuildForProfiling;
//+ (id)keyPathsForValuesAffectingShouldBuildForPreviewing;
//+ (id)keyPathsForValuesAffectingCanRemoveEntry;
//- (id)initWithPrimaryBuildableReference:(id)v1 testPlanReference:(id)v2 buildAction:(id)v3 explicityManaged:(char)v4;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (char)containsBuildableReferenceMatchingReference:(id)v1;
//- (void)_makeExplicit;
//- (void)disableBuildEntry;
//- (void)enableBuildEntry;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setBuildForRunningFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildForTestingFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildForProfilingFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildForPreviewingFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildForArchivingFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBuildForAnalyzingFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setHideIssuesFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildableReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addTestPlanReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDeveloperPaths : DVTDeveloperPaths {
//    DVTFilePath * _distributionArchivesLocation;
//    id _distributionArchivesLocationNotificatonToken;
//    id _distributionArchivesSourceTreesNotificationToken;
//    DVTFilePath * _snapshotsDirectory;
//    id _snapshotsDirectoryNotificatonToken;
//    id _snapshotsDirectorySourceTreesNotificationToken;
//}
//- (id)corePlugInSearchPathForPlatform:(id)v1;
//- (id)snapshotsDirectory;
//- (id)defaultSnapshotsDirectory;
//- (id)distributionArchivesLocation;
//- (id)defaultDistributionArchivesLocation;
//- (id)defaultWorkspaceDerivedDataLocation;
//- (id)defaultXcodeServerDataLocation;
//- (id)templateSearchPath;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildStatisticsSection : NSObject<IDEBuildStatisticsData> {
//    NSMutableDictionary * _statisticsSectionList;
//    NSMutableArray * _statisticsDataList;
//    unsigned long long _ordinalGenerator;
//    double _elapsedUserTime;
//    double _elapsedSystemTime;
//    long long _numberOfVMPageins;
//    long long _numberOfVMPageouts;
//    DVTDispatchLock * _dispatchLock;
//    NSString * _title;
//    DVTSystemStatisticsMeasurement * _startSystemStats;
//    DVTSystemStatisticsMeasurement * _endSystemStats;
//    unsigned long long _ordinal;
//    void (^ /* unknown block signature */)(void) _contentsEmissionBlock;
//}
//@property (copy) NSString * title;
//@property unsigned long long ordinal;
//@property (retain) DVTSystemStatisticsMeasurement * startSystemStats;
//@property (retain) DVTSystemStatisticsMeasurement * endSystemStats;
//@property (copy) void (^ /* unknown block signature */)(void) contentsEmissionBlock;
//@property (readonly) double elapsedUserTime;
//@property (readonly) double elapsedSystemTime;
//@property (readonly) long long numberOfVMPageins;
//@property (readonly) long long numberOfVMPageouts;
//@property (readonly) double startWallClockTime;
//@property (readonly) double endWallClockTime;
//@property (readonly) double elapsedWallClockTime;
//- (id)initWithTitle:(id)v1 ordinal:(unsigned long long)v2;
//- (id)initWithTitle:(id)v1;
//- (unsigned long long)_newOrdinal;
//- (id)buildStatisticsSectionWithTitle:(id)v1;
//- (id)buildStatisticsSectionWithTitleFormat:(id)v1;
//- (void)addNewBuildStatisticsDataWithTitle:(id)v1 commandString:(id)v2 startSystemStatisticsMeasurement:(id)v3 endSystemStatisticsMeasurement:(id)v4 elapsedUserTime:(double)v5 elapsedSystemTime:(double)v6;
//- (void)addBuildStatisticsSection:(id)v1;
//- (void)addBuildStatisticsData:(id)v1;
//- (id)subsections;
//- (id)dataObjects;
//- (id)children;
//- (void)recordStartSystemStats;
//- (void)recordEndSystemStats;
//- (id)defaultEmissionStringWithIndentLevel:(unsigned long long)v1;
//- (void)emitContentsForAspect:(id)v1 logLevel:(unsigned long long)v2 indentLevel:(unsigned long long)v3 withBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDENetworkExtensionsItemModel : IDEProjectItemModel {
//    NSSet * _networkExtensionCapabilities;
//}
//@property (retain,nonatomic) NSSet * networkExtensionCapabilities;
//@property (nonatomic) char appProxyProvider;
//@property (nonatomic) char contentFilterProvider;
//@property (nonatomic) char packetTunnelProvider;
//@property (nonatomic) char dnsProxy;
//@property (nonatomic) char dnsSettings;
//+ (id)keyPathsForValuesAffectingAppProxyProvider;
//+ (id)keyPathsForValuesAffectingContentFilterProvider;
//+ (id)keyPathsForValuesAffectingPacketTunnelProvider;
//+ (id)keyPathsForValuesAffectingDnsProxy;
//+ (id)keyPathsForValuesAffectingDnsSettings;
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (void)readValuesFromEntitlements;
//- (void)targetCoordinatorsChanged:(id)v1;
//- (char)isEnabledNetworkExtensionCapability:(id)v1;
//- (void)addEnabledNetworkExtensionCapability:(id)v1;
//- (void)removeEnabledNetworkExtensionCapability:(id)v1;
//- (void)_setAppProxyProvider:(char)v1;
//- (void)_setContentFilterProvider:(char)v1;
//- (void)_setPacketTunnelProvider:(char)v1;
//- (void)_setDnsProxy:(char)v1;
//- (void)_setDnsSettings:(char)v1;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEITunesConnect : NSObject<DVTInvalidation> {
//    NSXPCConnection * _connection;
//    NSObject<IDEITunesSoftwareServiceProtocol> * _localService;
//    IDEITunesSoftwareServiceDelegate * _serviceDelegate;
//}
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)init;
//- (id)initLocal;
//- (id)initRemote;
//- (id)serviceWithErrorHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void)primitiveInvalidate;
//- (id)swinfoFilePathStringWithError:(id *)v1;
//- (void)setLogFileURL:(id)v1;
//- (id)configurationResponseForSession:(id)v1 error:(id *)v2;
//- (id)configurationResponseForSession:(id)v1 bundleID:(id)v2 error:(id *)v3;
//- (id)validateApplicationAtPath:(id)v1 platform:(id)v2 session:(id)v3 error:(id *)v4;
//- (id)uploadApplicationArchiveAtPath:(id)v1 platform:(id)v2 session:(id)v3 willBeginCallback:(void (^ /* unknown block signature */)(void))v4 updatePercentageCallback:(void (^ /* unknown block signature */)(void))v5 updateMessageCallback:(void (^ /* unknown block signature */)(void))v6 didCompleteCallback:(void (^ /* unknown block signature */)(void))v7 error:(id *)v8;
//- (char)cancelUpload:(id *)v1;
//- (id)applicationsWithContentHostedInAppPurchasesForSession:(id)v1 error:(id *)v2;
//- (id)uploadInAppPurchaseContentArchiveAtPath:(id)v1 productID:(id)v2 application:(id)v3 session:(id)v4 willBeginCallback:(void (^ /* unknown block signature */)(void))v5 updatePercentageCallback:(void (^ /* unknown block signature */)(void))v6 updateMessageCallback:(void (^ /* unknown block signature */)(void))v7 didCompleteCallback:(void (^ /* unknown block signature */)(void))v8 error:(id *)v9;
//- (id)uploadDeveloperIDAppAtPath:(id)v1 bundleID:(id)v2 teamID:(id)v3 deviceToken:(id)v4 session:(id)v5 willBeginCallback:(void (^ /* unknown block signature */)(void))v6 updatePercentageCallback:(void (^ /* unknown block signature */)(void))v7 updateMessageCallback:(void (^ /* unknown block signature */)(void))v8 didCompleteCallback:(void (^ /* unknown block signature */)(void))v9 error:(id *)v10;
//- (id)developerIDStatusResponseForUploadIdentifier:(id)v1 session:(id)v2 error:(id *)v3;
//- (id)testDeveloperIDNotificationWithDeviceToken:(id)v1 session:(id)v2 error:(id *)v3;
//- (id)applicationDescriptionWithBundleIdentifier:(id)v1 platform:(id)v2 session:(id)v3 error:(id *)v4;
//- (id)dSYMURLForAdamID:(id)v1 bundleIdentifier:(id)v2 version:(id)v3 buildNumber:(id)v4 platform:(id)v5 session:(id)v6 error:(id *)v7;
//- (id)applicationDescriptionsWithSession:(id)v1 error:(id *)v2;
//- (id)applicationVersionsForApplicationDecription:(id)v1 session:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEConstraintErrorBreakpoint : IDEBreakpoint
//- (id)init;
//- (id)displayName;
//- (id)symbolNames;
//- (char)shouldBeModifiedAfterCreation;
//- (id)accessibilityDescription;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestingPlatformSupport : NSObject
//+ (id)sharedTouchBarManager;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionResultOperation : DVTOperation {
//    char _isObservingIsExecuting;
//    char _isFinished;
//    char _isExecuting;
//    DVTOperation * _trackingOperation;
//    IDESchemeActionRecord * _schemeActionRecord;
//    void (^ /* unknown block signature */)(void) _actionCallbackBlock;
//    void (^ /* unknown block signature */)(void) _schemeActionResultComputationBlock;
//}
//@property (retain) DVTOperation * trackingOperation;
//@property (retain) IDESchemeActionRecord * schemeActionRecord;
//@property (copy) void (^ /* unknown block signature */)(void) actionCallbackBlock;
//@property (copy) void (^ /* unknown block signature */)(void) schemeActionResultComputationBlock;
//@property char isObservingIsExecuting;
//@property (nonatomic) char isFinished;
//@property (nonatomic) char isExecuting;
//+ (id)schemeActionResultOperationWithSchemeActionRecord:(id)v1 trackingExecutionOfOperation:(id)v2 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v3 schemeActionResultComputationBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)dealloc;
//- (void)observeValueForKeyPath:(id)v1 ofObject:(id)v2 change:(id)v3 context:(void *)v4;
//- (char)isConcurrent;
//- (void)start;
//- (void)main;
//- (void)_doCancellationCleanup;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEXBSBuildParameters : NSObject<NSCopying> {
//    NSString * _projectName;
//    NSString * _updateName;
//    NSString * _sourceVersion;
//    NSNumber * _buildNumber;
//    NSString * _buildRecordPath;
//    unsigned long long _hash;
//}
//@property (readonly,copy) NSString * projectName;
//@property (readonly,copy) NSString * updateName;
//@property (readonly,copy) NSString * sourceVersion;
//@property (readonly,copy) NSNumber * buildNumber;
//@property (readonly,copy) NSString * buildRecordPath;
//- (id)initForProject:(id)v1 fromUpdate:(id)v2 sourceVersion:(id)v3 buildNumber:(id)v4 buildRecordPath:(id)v5;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (id)dvt_detailedDebugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAccountIssue : NSObject {
//    char _isLoginIssue;
//    NSError * _underlyingError;
//    DVTDeveloperAccount * _account;
//    NSString * _issue;
//}
//@property (retain,nonatomic) DVTDeveloperAccount * account;
//@property (retain,nonatomic) NSString * issue;
//@property (nonatomic) char isLoginIssue;
//@property (copy) NSError * underlyingError;
//+ (id)roleIssueForAccount:(id)v1 issue:(id)v2;
//+ (id)loginIssueForAccount:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentIndexQuickRejectionFilterProbe : NSObject {
//    long long _numberOfHashValues;
//    unsigned long long * _hashes;
//}
//- (id)initWithTerms:(id)v1;
//- (id)initWithTerm:(id)v1;
//- (void)dealloc;
//- (void)withHashValues:(void (^ /* unknown block signature */)(void))v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentIndexQuickRejectionFilter : NSObject<NSSecureCoding> {
//    struct anonymous_type_18 * _bits;
//}
//+ (char)supportsSecureCoding;
//- (id)initWithContent:(id)v1;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (void)dealloc;
//- (long long)containmentResultForProbe:(id)v1;
//- (unsigned long long)size;
//@end
//
//
///*****************************************************************/
//
//@interface _IDELocalizationIssueLocation : DVTComparisonDocumentLocation
//@property (readonly,copy) DVTDocumentLocation * oldLocation;
//@property (readonly,copy) DVTDocumentLocation * newLocation;
//- (long long)compare:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationComparisonIssue : NSObject {
//    unsigned long long _category;
//    DVTComparisonDocumentLocation * _location;
//    NSString * _message;
//}
//@property (readonly) unsigned long long category;
//@property (readonly,copy) DVTComparisonDocumentLocation * location;
//@property (readonly,copy) NSString * message;
//+ (id)issueWithLocalizationFrameworkIssue:(id)v1 projectComparisonFileURL:(id)v2 importComparisonFileURL:(id)v3;
//- (id)initWithCategory:(unsigned long long)v1 oldLocation:(id)v2 newLocation:(id)v3 message:(id)v4;
//- (id)description;
//- (long long)compare:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationComparisonFile : NSObject {
//    char _foundInProject;
//    NSString * _original;
//    NSString * _targetLanguage;
//    DVTComparisonDocumentLocation * _location;
//    NSArray * _issues;
//}
//@property (readonly,copy) NSString * original;
//@property (readonly,copy) NSString * targetLanguage;
//@property (readonly,copy) DVTComparisonDocumentLocation * location;
//@property (readonly,copy) NSArray * issues;
//@property (readonly) char foundInProject;
//+ (id)fileWithLocalizationFrameworkDetail:(id)v1 original:(id)v2 projectDirectory:(id)v3 localizedContentsDirectory:(id)v4 sourceLocale:(id)v5;
//- (id)initWithOriginal:(id)v1 targetLanguage:(id)v2 oldLocation:(id)v3 newLocation:(id)v4 issues:(id)v5 foundInProject:(char)v6;
//- (id)description;
//- (long long)compare:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationComparison : NSObject {
//    NSArray * _filesWithChanges;
//}
//@property (readonly,copy) NSArray * filesWithChanges;
//+ (id)comparisonWithLocalizationFrameworkComparison:(id)v1 projectDirectory:(id)v2 localizedContentsDirectory:(id)v3 sourceLocale:(id)v4;
//+ (void)initialize;
//- (id)initWithFilesWithChanges:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitUIDSet : NSObject {
//    struct UIDContainer _UID;
//    struct unordered_map<_sourcekit_uid_s *, DVTSourceCodeSymbolKind *, std::__1::hash<_sourcekit_uid_s *>, std::__1::equal_to<_sourcekit_uid_s *>, std::__1::allocator<std::__1::pair<_sourcekit_uid_s *const, DVTSourceCodeSymbolKind *> > > _symbolKinds;
//    IDESourceKitLowLevelConnection * _conn;
//}
//- (id)initWithConnection:(id)v1;
//- (id)init;
//- (struct IDESourceKitUIDKeys *)key;
//- (struct IDESourceKitUIDRequests *)request;
//- (struct IDESourceKitUIDValues *)value;
//- (id)symbolKindForUID:(struct _sourcekit_uid_s *)v1;
//- (void)_initSymbolKindMap;
//- (void).cxx_destruct;
//- (id).cxx_construct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELogDocumentLocation : DVTDocumentLocation {
//    NSIndexPath * _indexPath;
//    char _expandTranscript;
//    struct _NSRange _characterRange;
//}
//@property (readonly) NSIndexPath * indexPath;
//@property (readonly) char expandTranscript;
//@property (readonly) struct _NSRange characterRange;
//- (id)_initWithDocumentURL:(id)v1 timestamp:(id)v2 indexPath:(id)v3 expandTranscript:(char)v4 characterRange:(struct _NSRange)v5;
//- (id)initWithDocumentURL:(id)v1 timestamp:(id)v2 indexPath:(id)v3 characterRange:(struct _NSRange)v4;
//- (id)initWithDocumentURL:(id)v1 timestamp:(id)v2 indexPath:(id)v3 expandTranscript:(char)v4;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (long long)compare:(id)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileQualification : NSObject {
//    NSSet * _passed;
//    NSSet * _failed;
//    NSArray * _qualifiers;
//    NSSet * _signingCertificates;
//    NSError * _signingCertificatesCodesignResolverError;
//    DVTPortalAppIDFeatures * _features;
//    NSDictionary * _entitlements;
//    NSArray * _devices;
//    DVTPortalProfileType * _profileType;
//    DVTSigningCertificateManager * _signingCertificateManager;
//    DVTProvisioningProfile * _profile;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSString * _bundleID;
//    DVTPlatform * _platform;
//    IDEQualifiableProfileQualification * _baseQualification;
//}
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) NSString * bundleID;
//@property (copy,nonatomic) NSSet * passed;
//@property (copy,nonatomic) NSSet * failed;
//@property (copy,nonatomic) NSArray * qualifiers;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (retain,nonatomic) IDEQualifiableProfileQualification * baseQualification;
//@property (readonly,nonatomic) NSArray * qualificationErrors;
//@property (retain,nonatomic) NSSet * signingCertificates;
//@property (retain,nonatomic) NSError * signingCertificatesCodesignResolverError;
//@property (copy,nonatomic) DVTPortalAppIDFeatures * features;
//@property (copy,nonatomic) NSDictionary * entitlements;
//@property (copy,nonatomic) NSArray * devices;
//@property (retain,nonatomic) DVTPortalProfileType * profileType;
//@property (retain,nonatomic) DVTSigningCertificateManager * signingCertificateManager;
//@property (nonatomic) char allowTeamProfiles;
//@property (nonatomic) char verboseErrors;
//@property (readonly,nonatomic) DVTProvisioningProfile * profile;
//+ (id)keyPathsForValuesAffectingAllowTeamProfiles;
//- (id)initWithProfile:(id)v1 team:(id)v2 bundleID:(id)v3 platform:(id)v4;
//- (char)qualify;
//- (char)qualifyForXcodeManaged;
//- (char)qualifyForUseLocalAssets;
//- (char)qualifyForManuallyManaged;
//- (char)_qualifyWithQualifiers:(id)v1;
//- (char)isQualified;
//- (id)_qualifiers;
//- (id)_xcodeManagedQualifiers:(char)v1;
//- (id)_manualQualifiers;
//- (id)signingCertificatesCodesignResolverErrorQualifierSubtitle;
//- (id)_signingCertificateInclusionQualifier:(char)v1;
//- (id)_featuresQualifier;
//- (id)_containerQualifierWithType:(id)v1;
//- (id)_entitlementsQualifier;
//- (id)_devicesQualifier;
//- (id)_xcodeManagedQualifier;
//- (id)_profileTypeQualifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningInstallProfileRepairStep : IDEProvisioningRepairStep {
//    DVTProvisioningProfile * _profile;
//}
//@property (readonly) DVTProvisioningProfile * profile;
//+ (id)stepWithProfile:(id)v1;
//- (id)initWithProfile:(id)v1;
//- (id)stepDescription;
//- (id)activityDescription;
//- (char)preflightWithContext:(id)v1 error:(id *)v2;
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractFileByFileTextualQuery : IDEBatchFindAbstractFileByFileQuery {
//    IDETextFragmentIndexQuickRejectionFilterProbe * _filterProbe;
//    NSRegularExpression * _regularExpression;
//    NSString * _queryText;
//    NSLocale * _locale;
//}
//- (id)initWithSpecification:(id)v1 priority:(long long)v2 initialNumberOfLinesCalculator:(void (^ /* unknown block signature */)(void))v3 initialLineWrappingParameters:(id)v4 workspace:(id)v5 error:(id *)v6;
//- (char)treatsTextAsRegularExpression;
//- (char)requiresEditorDocumentsToSaveBeforeSearching;
//- (void)generateFileMatchIfNeeded:(id *)v1 populatingResults:(id *)v2 forFilePath:(id)v3 fromIndex:(long long)v4 snapshot:(id)v5 resultOrder:(long long)v6 statusAggregator:(id)v7;
//- (void)processFilePath:(id)v1 explicitFileDataType:(id)v2 fromIndex:(long long)v3 of:(id)v4 queryStartTime:(id)v5 statusAggregator:(id)v6 resultOrder:(long long)v7 completionHandler:(void (^ /* unknown block signature */)(void))v8;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationHandler : NSObject<DVTInvalidation> {
//    char _didCalculateItsRulesPath;
//    DVTFilePath * _itsRulesPath;
//    DVTFilePath * _projectDirectoryFilePath;
//    IDEWorkspace * _workspace;
//    IDEBuildParameters * _buildParameters;
//    IDEContainer<IDELocalizedContainer> * _container;
//    NSDictionary * _options;
//    DVTLocale * _sourceLocale;
//    NSArray * _testActivities;
//    NSUUID * _sessionID;
//    NSString * _temporaryDirectory;
//    LOCHandler * _underlyingHandler;
//    NSArray * _contentToLocalize;
//    NSArray * _nonLocalizedContentForReference;
//    NSDictionary * _infoPlistFilesByBlueprint;
//    NSDictionary * _blueprintNamesByBlueprint;
//    NSDictionary * _blueprintIsUnitTestsByBlueprint;
//    NSDictionary * _localizedStringMacroNamesByBlueprint;
//    NSDictionary * _localizedStringSwiftUISupportByBlueprint;
//    NSDictionary * _sourceCodeFilesByBlueprint;
//    NSDictionary * _sourceCodeStringsFilesByBlueprint;
//    NSDictionary * _localizableResourceFilesByBlueprint;
//    NSDictionary * _blueprintsByLocalizableResourceFile;
//    NSDictionary * _nonLocalizableResourceFilesByBlueprint;
//    NSDictionary * _blueprintsByNonLocalizableResourceFile;
//    NSDictionary * _supportedPlatformsByBlueprint;
//}
//@property (retain) IDEWorkspace * workspace;
//@property (copy) IDEBuildParameters * buildParameters;
//@property (retain) IDEContainer<IDELocalizedContainer> * container;
//@property (copy) DVTLocale * sourceLocale;
//@property char didCalculateItsRulesPath;
//@property (copy) NSDictionary * blueprintNamesByBlueprint;
//@property (copy) NSDictionary * blueprintIsUnitTestsByBlueprint;
//@property (copy) NSDictionary * infoPlistFilesByBlueprint;
//@property (copy) NSDictionary * localizedStringMacroNamesByBlueprint;
//@property (copy) NSDictionary * localizedStringSwiftUISupportByBlueprint;
//@property (copy) NSDictionary * sourceCodeFilesByBlueprint;
//@property (copy) NSDictionary * sourceCodeStringsFilesByBlueprint;
//@property (copy) NSDictionary * localizableResourceFilesByBlueprint;
//@property (copy) NSDictionary * blueprintsByLocalizableResourceFile;
//@property (copy) NSDictionary * nonLocalizableResourceFilesByBlueprint;
//@property (copy) NSDictionary * blueprintsByNonLocalizableResourceFile;
//@property (copy) NSDictionary * supportedPlatformsByBlueprint;
//@property (readonly,copy) NSDictionary * options;
//@property (readonly,copy) NSArray * testActivities;
//@property (readonly,copy) DVTFilePath * itsRulesPath;
//@property (readonly,copy) NSUUID * sessionID;
//@property (readonly,copy) NSString * temporaryDirectory;
//@property (readonly) LOCHandler * underlyingHandler;
//@property (copy) NSArray * contentToLocalize;
//@property (copy) NSArray * nonLocalizedContentForReference;
//@property (readonly,copy) NSSet * blueprintProvidersForWorkspace;
//@property (readonly,copy) DVTFilePath * projectDirectoryFilePath;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (char)shouldPreserveTemporaryFiles;
//- (id)initWithWorkspace:(id)v1 buildParameters:(id)v2 container:(id)v3 options:(id)v4 testActivities:(id)v5 sourceLocale:(id)v6;
//- (void)primitiveInvalidate;
//- (void)prepareForUseWithContentFileType:(id)v1;
//- (void)accumulateContentToLocalize;
//- (void)accumulateNonLocalizedContent;
//- (id)accumulateNonLocalizedContentForLocale:(id)v1;
//- (void)processSourceFiles;
//- (id)expectedPathForGeneratedStringsFileName:(id)v1 inBlueprintWithIdentifier:(id)v2;
//- (char)isLocalizablePath:(id)v1 forBaseOrLproj:(id)v2;
//- (char)isAssetCatalogWithPath:(id)v1 localizableAssetsPath:(id *)v2;
//- (char)isSettingsBundle:(id)v1 withLocalizableFilePaths:(id *)v2 forLocalization:(id)v3;
//- (void)locateLocalizableSourceAndResourceFiles;
//- (void)cleanUpTemporaryFiles;
//- (char)hasWorkspaceSupport;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningLedgerLogger : DVTLogger
//- (void)logMessage:(id)v1 forAspect:(id)v2 logLevel:(unsigned long long)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceUpgradeTasksController : NSObject {
//    IDEWorkspace * _workspace;
//}
//@property (readonly) IDEWorkspace * workspace;
//- (id)initWithWorkspace:(id)v1;
//- (void)processUpgradeTasks;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionUploadBitcodeState : NSObject {
//    char _uploadBitcode;
//    char _bitcodeBalanced;
//    unsigned long long _bitcodeLevel;
//    NSSet * _platformsWantingAsk;
//}
//@property char uploadBitcode;
//@property unsigned long long bitcodeLevel;
//@property char bitcodeBalanced;
//@property (retain) NSSet * platformsWantingAsk;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionUploadBitcode : IDEDistributionOption
//+ (id)availableOptionsForPropertyList;
//+ (id)_isAllAppleProvidedContentWithFlattenedDistributionItems:(id)v1 archive:(id)v2 error:(id *)v3;
//+ (id)_platformsWantingBitcodeAskWithAppStoreSubmissionConfiguration:(id)v1 flattenedDistributionItems:(id)v2 archive:(id)v3 error:(id *)v4;
//+ (id)_distributionItemsWithoutBitcodeForPlatforms:(id)v1 flattenedDistributionItems:(id)v2 archive:(id)v3 withError:(id *)v4;
//+ (id)_platformsRequiringBitcodeWithAppStoreSubmissionConfiguration:(id)v1 flattenedDistributionItems:(id)v2 error:(id *)v3;
//+ (id)propertyListForContext:(id)v1;
//- (id)bitcodeStateWithError:(id *)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (char)requiresBitcode;
//- (id)isAllAppleProvidedContentWithError:(id *)v1;
//- (id)platformsWantingBitcodeAskWithError:(id *)v1;
//- (id)distributionItemsWithoutBitcodeForPlatforms:(id)v1 withError:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionItemRemovalStep : IDEDistributionItemProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningCreateCertificateRepairStep : IDEProvisioningRepairStep {
//    DVTPortalCertificateType * _type;
//}
//@property (readonly,nonatomic) DVTPortalCertificateType * type;
//+ (id)createCertificateRepairStepWithCertificateType:(id)v1;
//- (id)initWithType:(id)v1;
//- (id)stepDescription;
//- (id)activityDescription;
//- (char)preflightWithContext:(id)v1 error:(id *)v2;
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEProvisioningCreateCertificateRepairStep : IDEProvisioningCreateCertificateRepairStep
//- (char)preflightWithContext:(id)v1 error:(id *)v2;
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEProvisioningCreateManagedCertificateRepairStep : IDEProvisioningCreateCertificateRepairStep
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppleSignInItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _entitlementFlightCheck;
//    NSSet * _appleSignInEntitlementValues;
//}
//@property (retain,nonatomic) NSSet * appleSignInEntitlementValues;
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (void)readValuesFromEntitlements;
//- (void)targetCoordinatorsChanged:(id)v1;
//- (char)hasDisclosableContent;
//- (void)primitiveInvalidate;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlBranch : NSObject {
//    NSString * _name;
//    char _isMainBranch;
//    NSString * _repositoryURLString;
//}
//@property (readonly) NSString * name;
//@property (readonly) char isMainBranch;
//@property (readonly) NSString * repositoryURLString;
//- (id)initWithName:(id)v1 isMainBranch:(char)v2;
//- (id)ideModelObjectTypeIdentifier;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerItemCore : NSObject<IDEContainerItemCore> {
//    NSObject<IDEGroupCore> * _parentGroup;
//    NSString * _path;
//}
//@property (retain) NSObject<IDEGroupCore> * parentGroup;
//@property (copy) NSString * path;
//@property (readonly) NSObject<IDEContainerCore> * parentContainer;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplate : NSObject<IDETemplateOptionParent> {
//    char _supportsSwiftPackage;
//    char _chooserOnly;
//    char _hiddenFromLibrary;
//    char _hiddenFromChooser;
//    char _isDebug;
//    NSString * _defaultCompletionName;
//    NSString * _mainTemplateFile;
//    NSArray * _allowedTypes;
//    NSString * _templateIdentifier;
//    NSDictionary * _templateInfo;
//    DVTFilePath * _filePath;
//    IDETemplateKind * _templateKind;
//    NSString * _templateName;
//    NSString * _templateSummary;
//    NSString * _templateDescription;
//    NSString * _templateCategory;
//    NSArray * _templatePlatforms;
//    NSArray * _templateOptions;
//    NSString * _buildableType;
//    long long _sortOrder;
//    NSString * _nameOfInitialFileForEditor;
//    IDEWorkspace * _workspace;
//    IDETemplateOption * _optionWithMainTemplateFiles;
//    IDETemplateOption * _optionWithAllowedTypes;
//}
//@property (retain) IDETemplateOption * optionWithMainTemplateFiles;
//@property (retain) IDETemplateOption * optionWithAllowedTypes;
//@property (copy) NSString * templateDescription;
//@property (retain) IDETemplateKind * templateKind;
//@property char isDebug;
//@property (readonly,copy) NSDictionary * templateInfo;
//@property (readonly) DVTFilePath * filePath;
//@property (readonly,copy) NSString * templateName;
//@property (readonly,copy) NSString * templateSummary;
//@property (readonly,copy) NSString * templateCategory;
//@property (readonly) NSArray * templatePlatforms;
//@property (readonly,copy) NSArray * templateOptions;
//@property (readonly) char supportsSwiftPackage;
//@property (readonly) char chooserOnly;
//@property (readonly) char hiddenFromLibrary;
//@property (readonly) char hiddenFromChooser;
//@property (readonly,copy) NSString * buildableType;
//@property long long sortOrder;
//@property (readonly,copy) NSString * mainTemplateFile;
//@property (readonly,copy) NSString * nameOfInitialFileForEditor;
//@property (readonly,copy) NSArray * allowedTypes;
//@property (readonly,copy) NSString * defaultCompletionName;
//@property (retain,nonatomic) IDEWorkspace * workspace;
//@property (readonly) NSString * currentOptionsIdentifierValue;
//@property (readonly) NSString * currentCompletionName;
//@property (readonly) IDETemplateOption * productNameOption;
//@property (readonly,copy) NSString * identifier /* backed by _templateIdentifier */;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)_templateInfoForTemplateAtURL:(id)v1 error:(id *)v2;
//+ (void)initialize;
//+ (void)_processChildrenOfFilePath:(id)v1 enumerator:(void (^ /* unknown block signature */)(void))v2;
//+ (id)additionalAvailableTemplatesOfTemplateKind:(id)v1;
//+ (id)_templateFolderPathsInDefault:(id)v1;
//+ (id)_templateSearchFilePaths;
//+ (id)availableTemplatesOfTemplateKind:(id)v1;
//+ (id)_availableTemplatesOfTemplateKind:(id)v1 templateSearchFilePaths:(id)v2;
//+ (id)_findAllTemplateBearingDirectoriesToHotSwap;
//+ (id)_allTemplateBearingDirectoriesToHotSwap;
//+ (void)_injectHotSwapedTemplatesOfTemplateKind:(id)v1 availableTemplates:(id)v2;
//- (id)initWithTemplateInfo:(id)v1 filePath:(id)v2;
//- (Class)templateOptionClass;
//- (char)isEqual:(id)v1;
//- (long long)templateCompare:(id)v1;
//- (void)valueDidChangeForOption:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogUnitTestSectionRecorder : IDEActivityLogSectionRecorder {
//    char _canFinish;
//}
//@property (readonly) IDEActivityLogUnitTestSection * section;
//@property char canFinish;
//- (void)stopRecording;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpointActionArchivingProxy : NSObject {
//    NSString * _actionExtensionID;
//    char _wasSuccessfullyUnarchived;
//    IDEBreakpointAction * _proxiedAction;
//}
//@property (readonly) IDEBreakpointAction * proxiedAction;
//@property (readonly) char wasSuccessfullyUnarchived;
//+ (id)actionProxyForAction:(id)v1;
//+ (id)_extensionIDForAction:(id)v1;
//+ (id)_breakpointActionExtensions;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setActionExtensionIDFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addActionContent:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProjectItemModel : NSObject<DVTInvalidation,IDECoalescableCapabilityEditingItem,IDESigningEditorCapsuleViewStateRestorationRecordProvider> {
//    NSArray * _flightChecks;
//    NSDictionary * _coalescableWriteableKeyPathToDataSource;
//    NSSet * _dataSources;
//    NSSet * _coalescableWriteableKeyPaths;
//    char _isEnabled;
//    char _needsPublishState;
//    char _isPublisherObservationsTornDown;
//    char _willSetErrorShouldPreventPublish;
//    NSObject<IDECoalescableCapabilityEditingItemDelegate> * _delegate;
//    NSObject<IDEProjectItemModelErrorDelegate> * _errorDelegate;
//    NSObject<IDEFlightChecking> * _appIDFeatureFlightCheck;
//    IDECapabilitiesContext * _targetCapabilitiesContext;
//    NSObject<IDEProjectItem> * _item;
//    NSObject<SigningEditorCapabilityEditingItemParent> * _parentCapabilityEditingItem;
//    NSObject<IDEFlightCheckingContext> * _flightCheckContext;
//    DVTDelayedInvocation * _delayedUpdateInvocation;
//    NSError * _willSetReceivedError;
//}
//@property (retain,nonatomic) NSArray * flightChecks;
//@property (retain,nonatomic) NSObject<IDEFlightCheckingContext> * flightCheckContext;
//@property (retain,nonatomic) DVTDelayedInvocation * delayedUpdateInvocation;
//@property (nonatomic) char needsPublishState;
//@property (nonatomic) char isPublisherObservationsTornDown;
//@property (nonatomic) char willSetErrorShouldPreventPublish;
//@property (retain,nonatomic) NSError * willSetReceivedError;
//@property (nonatomic) NSObject<IDEProjectItemModelErrorDelegate> * errorDelegate;
//@property (readonly,nonatomic) NSObject<IDEFlightChecking> * appIDFeatureFlightCheck;
//@property (readonly) IDECapabilitiesContext * targetCapabilitiesContext;
//@property (readonly) NSObject<IDEProjectItem> * item;
//@property (nonatomic) NSObject<SigningEditorCapabilityEditingItemParent> * parentCapabilityEditingItem;
//@property (readonly) NSString * title;
//@property (readonly) NSObject<IDEEntitlementsCoordination> * entitlementsCoordinator;
//@property (readonly) NSObject<IDEInfoPlistCoordination> * infoPlistCoordinator;
//@property (readonly) NSObject<IDEBuildSettingsCoordination> * buildSettingsCoordinator;
//@property (readonly) NSObject<IDEAppIDFeatureCoordination> * appIDFeatureCoordinator;
//@property (readonly) NSObject<IDELinkedFrameworksCoordination> * linkedFrameworksCoordinator;
//@property (nonatomic) char isEnabled;
//@property (readonly) char isEnabledUsingEducatedGuess;
//@property (readonly) char requiresAccountAndTeamSelection;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (nonatomic) NSObject<IDECoalescableCapabilityEditingItemDelegate> * delegate;
//@property (readonly) NSDictionary * coalescableWriteableKeyPathToDataSource;
//@property (readonly,nonatomic) _TtC13IDEFoundation46SigningEditorCapsuleViewStateRestorationRecord * restorationRecord;
//@property (nonatomic) NSObject<IDESigningEditorCapsuleViewStateRestorationRecordProviderDelegate> * restorationRecordProviderDelegate;
//+ (void)initialize;
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)init;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (void)targetCoordinatorsChanged:(id)v1;
//- (void)executeWithoutPublishingState:(void (^ /* unknown block signature */)(void))v1;
//- (void)publishState;
//- (void)updateWithContext:(id)v1;
//- (void)publishStateWithContext:(id)v1;
//- (void)invalidateCachedIsEnabled;
//- (void)runFlightChecks;
//- (char)entitlementsContainsEntitlementKey;
//- (char)entitlementsContainsEntitlementKey:(id)v1;
//- (char)hasDisclosableContent;
//- (char)allowsRemoval;
//- (char)enableWithError:(id *)v1;
//- (void)setUpPublisherObservations;
//- (void)tearDownPublisherObservations;
//- (void)observeValueForKeyPath:(id)v1 ofObject:(id)v2 change:(id)v3 context:(void *)v4;
//- (id)dataSources;
//- (id)coalescableWriteableKeyPaths;
//- (void)primitiveInvalidate;
//- (void)wantsUpdateKeyPath:(id)v1 value:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAddressBreakpoint : IDESymbolicBreakpoint {
//    NSString * _hexAddress;
//}
//@property (copy) NSString * hexAddress;
//+ (id)_createSymbolNameFromAddress:(id)v1;
//- (id)initWithAddress:(id)v1;
//- (id)displayName;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestLogProvider : IDELogProvider
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (id)initWithDomainItem:(id)v1;
//- (id)workspace;
//- (id)logRecords;
//- (id)ideModelObjectTypeIdentifier;
//- (id)domainIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface IDERenameableXcode3ProjectItem : NSObject {
//    id _associatedObject;
//    NSString * _nameContext;
//}
//@property (retain) id associatedObject;
//@property (copy) NSString * nameContext;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMemoryData : IDERecordedThreadCollection {
//    char _shouldAutoUpdate;
//    char _memoryFaulted;
//    char _showsAsMemoryFaulted;
//    unsigned long long _startingAddress;
//    NSString * _expression;
//    unsigned long long _numberOfBytes;
//    NSData * _rawMemoryData;
//    NSData * _shadowMemoryData;
//    NSString * _uuid;
//    NSURL * _url;
//}
//@property (copy) NSData * rawMemoryData;
//@property (copy) NSData * shadowMemoryData;
//@property (readonly) NSString * uuid;
//@property (retain) NSURL * url;
//@property unsigned long long startingAddress;
//@property (copy) NSString * expression;
//@property unsigned long long numberOfBytes;
//@property char shouldAutoUpdate;
//@property (nonatomic,getter=isMemoryFaulted) char memoryFaulted;
//@property char showsAsMemoryFaulted;
//- (id)generateNewURL;
//- (id)initWithExpression:(id)v1 numberOfBytes:(unsigned long long)v2 process:(id)v3;
//- (void)autoUpdate;
//- (void)update;
//- (void)updateUsingExpression:(id)v1;
//- (void)updateNumberOfBytes:(unsigned long long)v1;
//- (void)_updateUsingExpression:(id)v1 numberOfBytes:(unsigned long long)v2;
//- (void)primitiveInvalidate;
//- (void)gatherAdditionalInformationForAddress:(unsigned long long)v1 numberOfBytes:(unsigned long long)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEMemoryDataURLParts : NSObject {
//    int _processID;
//    NSString * _memoryDataUUID;
//}
//@property (readonly) int processID;
//@property (readonly) NSString * memoryDataUUID;
//+ (char)isMemoryDataURL:(id)v1;
//+ (id)urlParts:(id)v1;
//- (id)_initWithProcessID:(int)v1 memoryDataUUID:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpoint : NSObject<DVTXMLUnarchiving,NSCopying,DVTInvalidation> {
//    NSMutableArray * _actions;
//    NSMutableArray * _locations;
//    NSMapTable * _actionsToSetsOfObservers;
//    DVTObservingToken * _actionsExpressionsObserverToken;
//    char _modified;
//    char _shouldBeEnabled;
//    char _continueAfterRunningActions;
//    char _textInFilterableTextFieldModified;
//    char _shouldBeModifiedAfterCreation;
//    char _debuggerIdentifierChanged;
//    char _isRuntimeIssue;
//    int _breakpointStackSelectionBehavior;
//    NSString * _uuid;
//    NSString * _displayName;
//    IDEBreakpointBucket * _bucket;
//    IDEBreakpointBucket * _groupingBucket;
//    NSObject<IDEBreakpointDelegate> * _delegate;
//    NSString * _nameForDebugger;
//    NSString * _condition;
//    unsigned long long _ignoreCount;
//    unsigned long long _hitCount;
//    NSString * _customStopReasonString;
//    NSSet * _actionClassesToIgnoreAsModified;
//}
//@property (readonly) NSMutableArray * mutableLocations;
//@property (nonatomic) char modified;
//@property (readonly,copy,nonatomic) NSString * uuid;
//@property (copy) NSString * displayName;
//@property (retain) IDEBreakpointBucket * bucket;
//@property (retain) IDEBreakpointBucket * groupingBucket;
//@property NSObject<IDEBreakpointDelegate> * delegate;
//@property (nonatomic) char shouldBeEnabled;
//@property (copy,nonatomic) NSString * nameForDebugger;
//@property (copy,nonatomic) NSString * condition;
//@property (nonatomic) unsigned long long ignoreCount;
//@property unsigned long long hitCount;
//@property (nonatomic) char continueAfterRunningActions;
//@property (copy) NSArray * actions;
//@property (readonly) NSMutableArray * mutableActions;
//@property (readonly) NSArray * locations;
//@property (readonly) char locationsProvideAdditionalInformation;
//@property char textInFilterableTextFieldModified;
//@property (readonly,nonatomic) NSString * modifiedDescription;
//@property (nonatomic) char shouldBeModifiedAfterCreation;
//@property (readonly,nonatomic) NSString * accessibilityDescription;
//@property int breakpointStackSelectionBehavior;
//@property char debuggerIdentifierChanged;
//@property (copy) NSString * customStopReasonString;
//@property (readonly) NSSet * actionClassesToIgnoreAsModified;
//@property (readonly) char isRuntimeIssue;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)breakpointForUUID:(id)v1;
//+ (char)supportsInvalidationPrevention;
//+ (id)propertiesAffectingPersistenceState;
//+ (id)keyPathsForValuesAffectingModified;
//+ (id)keyPathsForValuesAffectingModifiedDescription;
//- (void)_dvt_commonInit;
//- (id)init;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)primitiveSetBucket:(id)v1;
//- (void)_notifyPersistencyStateChanged;
//- (void)_updateModified;
//- (void)setInitialResolvedLocations:(id)v1;
//- (id)locationWasResolved:(id)v1;
//- (unsigned long long)_indexOfSimilarBreakpointLocationMatching:(id)v1 inLocations:(id)v2 hintIndex:(unsigned long long)v3;
//- (void)_updateLocation:(id)v1 fromLocation:(id)v2;
//- (void)locationWasRemoved:(id)v1;
//- (char)_shouldBeModified;
//- (void)toggleShouldBeEnabled;
//- (void)setShouldBeEnabled:(char)v1 withKVO:(char)v2;
//- (void)resetActionExpressionResults;
//- (void)_handleActionsChanged:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (char)_booleanValueFromUTF8String:(char *)v1;
//- (void)setShouldBeEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setNameForDebuggerFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setConditionFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setContinueAfterRunningActionsFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setBreakpointStackSelectionBehaviorFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)_actionArchivingProxiesArray;
//- (void)addActions:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addLocations:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAppStoreInformationStep : IDEDistributionProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (id)firstTopLevelExecutableDistributionItem;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCategorySymbol : IDESourceKitContainerSymbol<IDEIndexCategorySymbol>
//@property (readonly) NSString * name;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly) NSString * resolution;
//@property (readonly) DVTSymbol * identifier;
//@property (readonly) NSString * moduleName;
//@property (readonly) char isVirtual;
//@property (readonly) char isSystem;
//@property (readonly) char hasOccurrence;
//@property (readonly) char navigationPrefersDefinition;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)classMethods;
//- (id)instanceMethods;
//- (id)instanceVariables;
//- (id)properties;
//- (id)relatedClass;
//- (char)isKindOfClass:(Class)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentProviderLookupEntry : NSObject {
//    Class _textProviderClass;
//    NSArray * _fileDataTypes;
//}
//@property (readonly) Class textProviderClass;
//@property (readonly) NSArray * fileDataTypes;
//- (id)initWithTextProviderClass:(Class)v1 fileDataTypes:(id)v2;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDENullTextFragmentProvider : IDETextFragmentProvider
//+ (void)generateTextFragmentProviderSeedForFilePath:(id)v1 completionHandler:(void (^ /* unknown block signature */)(void))v2;
//- (void)enumerateTextFragments:(void (^ /* unknown block signature */)(void))v1;
//- (id)documentLocationForToken:(long long)v1 documentURL:(id)v2 timestamp:(id)v3 range:(struct _NSRange)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentProvider : NSObject {
//    NSObject<IDETextFragmentProviderSeed> * _seed;
//}
//@property (readonly) NSObject<IDETextFragmentProviderSeed> * seed;
//+ (id)textFragmentProviderLookupEntriesInPriorityOrder;
//+ (void)faultProviderClasses;
//+ (Class)textProviderClassForFilePath:(id)v1 explicitFileDataType:(id)v2;
//+ (void)generateTextFragmentProviderSeedForFilePath:(id)v1 completionHandler:(void (^ /* unknown block signature */)(void))v2;
//+ (char)retainsSeed;
//+ (id)allTextFragmentsForSeed:(id)v1 fromFilePath:(id)v2;
//+ (id)emptyTextProvider;
//- (id)init;
//- (id)initWithSeed:(id)v1;
//- (void)enumerateTextFragments:(void (^ /* unknown block signature */)(void))v1;
//- (id)documentLocationForToken:(long long)v1 documentURL:(id)v2 timestamp:(id)v3 range:(struct _NSRange)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionFileLogger : DVTFileLogger {
//    unsigned long long _exclusiveLogLevel;
//}
//@property (readonly) unsigned long long exclusiveLogLevel;
//- (id)initWithURL:(id)v1 append:(char)v2 exclusiveLogLevel:(unsigned long long)v3;
//- (void)logMessage:(id)v1 forAspect:(id)v2 logLevel:(unsigned long long)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestSchemeBaselineRecord : NSObject {
//    NSMutableDictionary * _infoDict;
//    NSMutableDictionary * _bundleBaselinesByTestBundleUUIDDict;
//}
//+ (id)_bundleBaselineRecordFilePathInSchemeBaselineWithFilePath:(id)v1 withTestBundleName:(id)v2 error:(id *)v3;
//- (id)init;
//- (id)initWithFilePath:(id)v1 error:(id *)v2;
//- (char)writeToFilePath:(id)v1 workspace:(id)v2 error:(id *)v3;
//- (id)testBundleNames;
//- (id)bundleBaselineRecordForTestBundleName:(id)v1;
//- (void)setBundleBaselineRecord:(id)v1 forTestBundleName:(id)v2;
//- (void)unionWithSchemeBaselineRecord:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebuggerExpression : NSObject<NSCopying> {
//    NSString * _expressionString;
//    NSString * _result;
//}
//@property (copy) NSString * expressionString;
//@property (copy) NSString * result;
//- (id)initWithExpressionString:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)hasBeenEvaluated;
//- (void)resetResult;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestApplicationDependencyMapper : NSObject
//+ (id)bundleIdentifierMapWithDependentProductPaths:(id)v1 searchDirectories:(id)v2 error:(id *)v3;
//+ (id)_applicationsInDirectories:(id)v1 error:(id *)v2;
//+ (id)_bundleIdentifierMapForApplicationsAtURLs:(id)v1 areAllApplicationsRequired:(char)v2 error:(id *)v3;
//+ (id)bundleIdentifierForApplicationAtURL:(id)v1 error:(id *)v2;
//+ (id)_deduceInfoDictionaryReadFailureForApplicationAtURL:(id)v1;
//+ (id)_bundleIDReadErrorForURL:(id)v1 domain:(id)v2 code:(long long)v3 reason:(id)v4;
//+ (id)_dependencySearchErrorFromFileManagerError:(id)v1 forDirectory:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairExecutionContext : NSObject {
//    IDEProvisioningRepairContext * _repairContext;
//    IDEProvisioningLedgerEntry * _repairLedgerEntry;
//}
//@property (readonly,nonatomic) NSObject<IDERepairable> * repairable;
//@property (readonly,nonatomic) DVTPortalTeam * team;
//@property (readonly,nonatomic) DVTSigningCertificateManager * signingCertificateManager;
//@property (readonly,nonatomic) DVTProvisioningProfileManager * provisioningProfileManager;
//@property (readonly,nonatomic) IDEProvisioningPortal * portal;
//@property (readonly,nonatomic) IDEProvisioningLedgerEntry * repairLedgerEntry;
//@property (readonly,nonatomic) unsigned long long successiveRepairCount;
//@property (readonly,nonatomic) DVTProvisioningContext * provisioningContext;
//- (id)initWithRepairContext:(id)v1 repairLedgerEntry:(id)v2;
//- (id)sessionWithLedgerEntry:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationDesignedForiPhoneiPadExtension : NSObject<IDERunDestinationExtension>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)runDestinationsForDevice:(id)v1 runDestinationManager:(id)v2;
//- (id)runDestinationsForScheme:(id)v1 executionEnvironment:(id)v2 runDestinationManager:(id)v3 deviceManager:(id)v4;
//- (id)adjustDisplayName:(id)v1 runDestination:(id)v2;
//- (char)isValidForRunDestination:(id)v1 scheme:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationManager : NSObject {
//    NSMapTable * _runDestinationsByDeviceCache;
//    NSMutableSet * _availableRunDestinations;
//    DVTDeviceManager * _deviceManager;
//    DVTDevice * _fallbackDevice;
//    DVTObservingToken * _deviceManagerObservation;
//    IDERunDestination * _fallbackRunDestination;
//}
//@property (copy) NSSet * availableRunDestinations;
//@property (readonly,copy) NSMutableSet * mutableAvailableRunDestinations;
//@property (readonly) IDERunDestination * fallbackRunDestination;
//+ (void)initialize;
//+ (id)sharedRunDestinationManager;
//+ (void)iteratePrimaryBuildablesSupportingRunDestination:(id)v1 scheme:(id)v2 block:(void (^ /* unknown block signature */)(void))v3;
//- (id)_fallbackDevice;
//- (id)_fallbackSDK;
//- (void)_setUpFallbackRunDestination;
//- (void)_addRunDestinationsForDevice:(id)v1;
//- (void)_removeRunDestinationsForDevice:(id)v1;
//- (void)_adjustKnownRunDestinationsForChangeKind:(unsigned long long)v1 addedObjects:(id)v2 removedObjects:(id)v3;
//- (id)_deviceManager;
//- (void)_startWatchingDeviceManager;
//- (id)initWithDeviceManager:(id)v1 fallbackDevice:(id)v2;
//- (id)init;
//- (void)_cacheRunDestination:(id)v1;
//- (id)_cachedRunDestinationForDevice:(id)v1 architecture:(id)v2 SDK:(id)v3 SDKVariant:(id)v4;
//- (void)_uncacheRunDestinationsForDevice:(id)v1;
//- (id)runDestinationWithTargetDevice:(id)v1 architecture:(id)v2 SDK:(id)v3;
//- (id)runDestinationWithTargetDevice:(id)v1 architecture:(id)v2 SDK:(id)v3 SDKVariant:(id)v4;
//- (id)runDestinationWithIneligibleTargetDevice:(id)v1 architecture:(id)v2 SDK:(id)v3 SDKVariant:(id)v4 deviceIneligibilityError:(id)v5;
//- (id)defaultRunDestinationForScheme:(id)v1 schemeCommand:(id)v2 fromRunDestinations:(id)v3 preferGenericDestination:(char)v4 supportingSDK:(id)v5 preferArchitectures:(id)v6;
//- (id)_validRunDestinationsForScheme:(id)v1 executionEnvironment:(id)v2 forPresentation:(char)v3;
//- (id)_runDestinationSortDescriptors;
//- (id)_validRunDestinationsForScheme:(id)v1 schemeCommands:(id)v2 executionEnvironment:(id)v3 forPresentation:(char)v4;
//- (id)_validRunDestinationsForScheme:(id)v1 schemeCommands:(id)v2 executionEnvironment:(id)v3 forPresentation:(char)v4 onlyGeneric:(char)v5 considerAllBuildables:(char)v6;
//- (id)visibleRunDestinationsForScheme:(id)v1 executionEnvironment:(id)v2;
//- (id)visibleRunDestinationsForScheme:(id)v1 schemeCommands:(id)v2 executionEnvironment:(id)v3 onlyGeneric:(char)v4 considerAllBuildables:(char)v5;
//- (id)visibleRunDestinationsForScheme:(id)v1 schemeCommands:(id)v2 executionEnvironment:(id)v3;
//- (id)validRunDestinationsForScheme:(id)v1 executionEnvironment:(id)v2;
//- (id)validRunDestinationsForScheme:(id)v1 schemeCommands:(id)v2 executionEnvironment:(id)v3;
//- (id)validRunDestinationsForBuildables:(id)v1 executionEnvironment:(id)v2;
//- (id)genericDeploymentRunDestinationForRunDestination:(id)v1 scheme:(id)v2 schemeCommands:(id)v3 executionEnvironment:(id)v4;
//- (id)_resolvedDestinationForPlatformDestinations:(id)v1 forceGeneric:(char)v2 scheme:(id)v3 schemeCommands:(id)v4 executionEnvironment:(id)v5 allowNoRunDestinationMatches:(char)v6 error:(id *)v7;
//- (id)resolvedBuildDestinationsForRunDestinations:(id)v1 scheme:(id)v2 schemeCommands:(id)v3 executionEnvironment:(id)v4 allowNoRunDestinationMatches:(char)v5 error:(id *)v6;
//- (id)genericRunDestinationForRunDestination:(id)v1 scheme:(id)v2 schemeCommands:(id)v3 executionEnvironment:(id)v4 requiresSupportsArchiving:(char)v5 requiresDeploymentPlatformMatches:(char)v6 allowMultipleRunDestinationMatches:(char)v7 allowNoRunDestinationMatches:(char)v8 error:(id *)v9;
//- (id)genericDeploymentRunDestinationForRunDestination:(id)v1 scheme:(id)v2 schemeCommands:(id)v3 executionEnvironment:(id)v4 allowNonConcreteDevices:(char)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEReadOnlyItemsManager : NSObject
//+ (void)registerDerivedDataPath:(id)v1;
//+ (void)deregisterDerivedDataPath:(id)v1;
//+ (int)readOnlyStatusOfFilePath:(id)v1;
//+ (char)_addUserWritePermissionToFilePath:(id)v1 error:(id *)v2;
//+ (char)tryToMakeFilePathWritable:(id)v1 error:(id *)v2;
//+ (char)shouldShowLockedIndicatorForStatus:(int)v1;
//+ (id)localizedDescriptionForReadOnlyStatus:(int)v1 itemName:(id)v2 pluralized:(char)v3;
//+ (id)localizedRecoveryMessageForFailedUnlockingAttemptWithStatus:(int)v1;
//+ (id)readOnlyItemsManagerAspect;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestingSystemActivityManager : NSObject {
//    unsigned int _systemSleepAssertion;
//    unsigned int _displaySleepAssertion;
//    unsigned int _systemSleepAssertionCount;
//    unsigned int _displaySleepAssertionCount;
//    unsigned int _screenSaverAssertionCount;
//}
//+ (void)initialize;
//+ (id)sharedManager;
//+ (unsigned int)_acquireSystemSleepAssertionWithDescription:(id)v1 error:(id *)v2;
//+ (unsigned int)_acquireDisplaySleepAssertionWithDescription:(id)v1 error:(id *)v2;
//+ (char)_setScreenSaverSuppressed:(char)v1 error:(id *)v2;
//- (id)init;
//- (id)disallowSystemSleepWithDescription:(id)v1 error:(id *)v2;
//- (void)_allowSystemSleep;
//- (id)disallowDisplaySleepWithDescription:(id)v1 error:(id *)v2;
//- (void)_allowDisplaySleep;
//- (id)disallowScreenSaver:(id *)v1;
//- (void)_allowScreenSaver;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairContext : NSObject {
//    IDEProvisioningRepairStepGenerator * _repairStepGenerator;
//    DVTLogAspect * _logAspect;
//    NSObject<IDERepairable> * _repairable;
//    DVTPortalTeam * _team;
//    DVTSigningCertificateManager * _signingCertificateManager;
//    DVTProvisioningProfileManager * _provisioningProfileManager;
//    IDEProvisioningLedger * _provisioningLedger;
//    NSObject<IDEProvisioningTeamAccountPairProvider> * _teamAccountPairProvider;
//    unsigned long long _successiveRepairCount;
//    _TtC13DVTFoundation22DVTProvisioningContext * _provisioningContext;
//}
//@property (retain,nonatomic) DVTPortalTeam * team;
//@property (nonatomic) unsigned long long successiveRepairCount;
//@property (readonly,nonatomic) NSObject<IDERepairable> * repairable;
//@property (readonly,nonatomic) IDEProvisioningRepairStepGenerator * repairStepGenerator;
//@property (readonly,nonatomic) DVTSigningCertificateManager * signingCertificateManager;
//@property (readonly,nonatomic) DVTProvisioningProfileManager * provisioningProfileManager;
//@property (readonly,nonatomic) IDEProvisioningPortal * portal;
//@property (readonly,nonatomic) IDEProvisioningLedger * provisioningLedger;
//@property (readonly,nonatomic) NSObject<IDEProvisioningTeamAccountPairProvider> * teamAccountPairProvider;
//@property (readonly,nonatomic) DVTLogAspect * logAspect;
//@property (readonly,nonatomic) _TtC13DVTFoundation22DVTProvisioningContext * provisioningContext;
//- (id)initWithRepairable:(id)v1 signingCertificateManager:(id)v2 provisioningProfileManager:(id)v3 provisioningLedger:(id)v4 teamAccountPairProvider:(id)v5 provisioningContext:(id)v6;
//- (id)sessionWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerReferenceResolutionStrategy : DVTReferenceResolutionStrategy
//+ (id)absoluteContainerResolutionStrategy;
//+ (id)groupRelativeContainerResolutionStrategy;
//+ (id)containerRelativeContainerResolutionStrategy;
//+ (id)containerItselfContainerResolutionStrategy;
//+ (id)pathRelativeContainerResolutionStrategy;
//+ (id)buildProductsRelativeContainerResolutionStrategy;
//+ (id)developerDirectoryRelativeContainerResolutionStrategy;
//+ (id)currentSDKRelativeContainerResolutionStrategy;
//- (char)canResolveInputInBackground;
//- (id)resolveInput:(id)v1 inContext:(id)v2 usingSnapshot:(id)v3 error:(id *)v4;
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerAbsolutePathReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerGroupRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerContainerRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//- (id)displayNameInContext:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerContainerItselfReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerPathRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerBuildProductsRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerDeveloperDirectoryRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerCurrentSDKRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
//- (id)resolveInput:(id)v1 forContainer:(id)v2 group:(id)v3 inContext:(id)v4 usingSnapshot:(id)v5 error:(id *)v6;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductVersionIdentifier : NSObject<NSCopying> {
//    IDEProductIdentifier * _productIdentifier;
//    NSString * _version;
//    NSString * _buildNumber;
//}
//@property (readonly) IDEProductIdentifier * productIdentifier;
//@property (readonly) NSString * version;
//@property (readonly) NSString * buildNumber;
//+ (id)productVersionIdentifierForArchive:(id)v1;
//- (id)initWithProductIdentifier:(id)v1 version:(id)v2 buildNumber:(id)v3;
//- (long long)compare:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchDaemonLauncher : IDERunOperationWorker
//- (void)performWorkerAction;
//- (void)terminate;
//@end
//
//
///*****************************************************************/
//
@interface IDELaunchDaemonService : IDERunDeviceService
+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)v1 error:(id *)v2;
@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionItemSummaryNode : NSObject {
//    IDEDistributionContext * _context;
//    NSArray * _childNodes;
//    NSDictionary * _summary;
//    IDEDistributionItem * _item;
//    NSObject<IDEDistributableInAppContent> * _inAppContent;
//    DVTProvisioningProfile * _profile;
//}
//@property (readonly) IDEDistributionContext * context;
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSArray * childNodes;
//@property (readonly,nonatomic) NSDictionary * summary;
//@property (readonly,nonatomic) IDEDistributionItem * item;
//@property (readonly,nonatomic) NSObject<IDEDistributableInAppContent> * inAppContent;
//@property (readonly,nonatomic) char appStoreBound;
//@property (readonly,nonatomic) DVTProvisioningProfile * profile;
//+ (id)nodeWithItem:(id)v1 context:(id)v2 logAspect:(id)v3;
//+ (id)nodeWithInAppContent:(id)v1 context:(id)v2 logAspect:(id)v3;
//+ (id)rootNodeWithTopLevelItems:(id)v1 context:(id)v2 logAspect:(id)v3;
//+ (id)childNodesForItems:(id)v1 context:(id)v2 logAspect:(id)v3;
//+ (id)summaryForNode:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRevokeCertificateRepairStep : IDEProvisioningRepairStep {
//    NSObject<DVTPortalCertificateProtocol> * _certificate;
//}
//@property (readonly,nonatomic) NSObject<DVTPortalCertificateProtocol> * certificate;
//+ (id)revokeCertificateRepairStepWithCertificate:(id)v1;
//- (id)initWithCertificate:(id)v1;
//- (id)stepDescription;
//- (id)activityDescription;
//- (char)preflightWithContext:(id)v1 error:(id *)v2;
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileQualifierResult : NSObject {
//    char _success;
//    NSError * _error;
//    NSAttributedString * _title;
//    NSAttributedString * _subtitle;
//}
//@property (readonly,nonatomic) char success;
//@property (readonly,nonatomic) NSError * error;
//@property (readonly,nonatomic) NSAttributedString * title;
//@property (readonly,nonatomic) NSAttributedString * subtitle;
//+ (id)successfulResultWithTitle:(id)v1 subtitle:(id)v2;
//+ (id)failingResultWithTitle:(id)v1 subtitle:(id)v2 error:(id)v3;
//- (id)initWithSuccess:(char)v1 title:(id)v2 subtitle:(id)v3 error:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDETestOperationValidator : NSObject {
//    int _type;
//    NSString * _identifier;
//}
//@property int type;
//@property (retain) NSString * identifier;
//+ (id)validatorWithType:(int)v1 andIdentifier:(id)v2;
//+ (id)errorDescriptionForEvent:(int)v1;
//- (char)validateEvent:(int)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestOperationCoordinatorTargetAppLaunchInfo : NSObject<DVTInvalidation> {
//    XCTProcessLaunchParameters * _processLaunchParameters;
//    DVTOperation * _launchOperation;
//    IDEExecutionTracker * _executionTracker;
//    _TtC13IDEFoundation23IDETestingLaunchSession * _testingLaunchSession;
//    NSError * _launchError;
//}
//@property (readonly,nonatomic) XCTProcessLaunchParameters * processLaunchParameters;
//@property (retain,nonatomic) DVTOperation * launchOperation;
//@property (retain,nonatomic) IDEExecutionTracker * executionTracker;
//@property (retain,nonatomic) _TtC13IDEFoundation23IDETestingLaunchSession * testingLaunchSession;
//@property (retain,nonatomic) NSError * launchError;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithProcessLaunchParameters:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestOperationCoordinator : NSObject<IDETestingDiagnosticLogWriter,IDETestOperationEventSourceEvents,_TtP13IDEFoundation31IDETestDaemonControllerObserver_,XCTDebugLogDelegate,XCTTestWorker,DVTInvalidation,XCTTestRunnerSessionDelegate,IDELaunchSessionEventSourceEvents,IDETestOperationStateMachineDelegate> {
//    DVTOperation * _testRunnerSessionStartupOperation;
//    char _finished;
//    char _hasFailed;
//    char _hasStartedTests;
//    char _targetIsiOSSimulator;
//    char _testingIsFinished;
//    char _testRunnerHasBecomeReady;
//    char _initializedForUserInteraction;
//    int _testRunnerPID;
//    IDERunOperation * _operation;
//    NSString * _diagnosticLogPath;
//    NSObject<IDETestOperationCoordinatorEvents> * _delegate;
//    DVTDevice * _targetDevice;
//    IDETestRunSpecification * _testRunSpecification;
//    NSString * _runnerArtifactsDirectory;
//    NSObject<IDETestDaemonController> * _daemonController;
//    NSMutableArray * _validatorsStack;
//    NSUUID * _sessionIdentifier;
//    NSObject<XCTTestRunnerSession> * _testRunnerSession;
//    IDELaunchSessionEventSource * _launchSessionEventSource;
//    IDETestOperationEventSource * _testOperationEventSource;
//    id _iPhoneConnectLogHandlerToken;
//    id _remoteDeviceConnectionLogHandlerToken;
//    id _deviceKitLogHandlerToken;
//    id _iPhoneSimulatorLogHandlerToken;
//    DVTDisallowFinishToken * _disallowFinishToken;
//    IDETestOutputProcessor * _outputProcessor;
//    NSMutableArray * _consoleChunkQueue;
//    NSMutableArray * _delegateBlockQueue;
//    NSObject<IDETestingLaunchSession> * _testRunnerLaunchSession;
//    NSObject<IDETestingOutputStream> * _testRunnerOutputStream;
//    NSOutputStream * _statusStream;
//    NSObject<OS_dispatch_queue> * _statusStreamQueue;
//    IDETestingDiagnosticLogArbiter * _logArbiter;
//    NSDateFormatter * _loggingDateFormatter;
//    NSTimer * _delegateBlockQueueTimeoutTimer;
//    NSTimer * _heartbeatNotificationTimer;
//    IDETestOperationStateMachine * _stateMachine;
//    DVTObservingToken * _debuggerPausedObserverToken;
//    NSObject<IDETestingActivityGenerating> * _activityReporter;
//    IDETestingActivity * _finalizingActivity;
//    _TtC13IDEFoundation42IDETestRunnerBootstrappingDiagnosticReport * _testRunnerBootstrappingDiagnostic;
//    IDETestIdentifier * _currentTestIdentifier;
//    _TtC13IDEFoundation29IDETestingInstallationTracker * _testingInstallationTracker;
//    NSMutableDictionary * _testTokensToTargetAppLaunchInfo;
//    NSMutableSet * _executionTrackerObservationTokens;
//    NSMutableSet * _displayNamesOfLaunchedProcesses;
//}
//@property (retain) NSObject<IDETestOperationCoordinatorEvents> * delegate;
//@property (retain) DVTDevice * targetDevice;
//@property (retain) IDETestRunSpecification * testRunSpecification;
//@property (copy) NSString * runnerArtifactsDirectory;
//@property (retain) NSObject<IDETestDaemonController> * daemonController;
//@property (retain) NSMutableArray * validatorsStack;
//@property char finished;
//@property (retain) NSUUID * sessionIdentifier;
//@property (retain) NSObject<XCTTestRunnerSession> * testRunnerSession;
//@property (retain) IDELaunchSessionEventSource * launchSessionEventSource;
//@property (retain) IDETestOperationEventSource * testOperationEventSource;
//@property (retain) id iPhoneConnectLogHandlerToken;
//@property (retain) id remoteDeviceConnectionLogHandlerToken;
//@property (retain) id deviceKitLogHandlerToken;
//@property (retain) id iPhoneSimulatorLogHandlerToken;
//@property char hasFailed;
//@property char hasStartedTests;
//@property (retain) DVTDisallowFinishToken * disallowFinishToken;
//@property int testRunnerPID;
//@property (retain) IDETestOutputProcessor * outputProcessor;
//@property (retain) NSMutableArray * consoleChunkQueue;
//@property (retain) NSMutableArray * delegateBlockQueue;
//@property (retain) NSObject<IDETestingLaunchSession> * testRunnerLaunchSession;
//@property (readonly) char testRunnerLaunchSessionHasFinishedReceivingData;
//@property (retain) NSObject<IDETestingOutputStream> * testRunnerOutputStream;
//@property (retain) NSOutputStream * statusStream;
//@property (retain) NSObject<OS_dispatch_queue> * statusStreamQueue;
//@property (retain) NSString * diagnosticLogPath;
//@property (retain) IDETestingDiagnosticLogArbiter * logArbiter;
//@property (retain) NSDateFormatter * loggingDateFormatter;
//@property char targetIsiOSSimulator;
//@property (retain,nonatomic) NSTimer * delegateBlockQueueTimeoutTimer;
//@property (retain,nonatomic) NSTimer * heartbeatNotificationTimer;
//@property char testingIsFinished;
//@property (retain) IDETestOperationStateMachine * stateMachine;
//@property (retain) DVTObservingToken * debuggerPausedObserverToken;
//@property char testRunnerHasBecomeReady;
//@property (readonly) NSObject<IDETestingActivityGenerating> * activityReporter;
//@property (retain) IDETestingActivity * finalizingActivity;
//@property (retain) _TtC13IDEFoundation42IDETestRunnerBootstrappingDiagnosticReport * testRunnerBootstrappingDiagnostic;
//@property (retain) IDETestIdentifier * currentTestIdentifier;
//@property (retain) _TtC13IDEFoundation29IDETestingInstallationTracker * testingInstallationTracker;
//@property (retain) NSMutableDictionary * testTokensToTargetAppLaunchInfo;
//@property (retain) NSMutableSet * executionTrackerObservationTokens;
//@property (retain) NSMutableSet * displayNamesOfLaunchedProcesses;
//@property (getter=isInitializedForUserInteraction) char initializedForUserInteraction;
//@property (readonly) IDERunOperation * operation;
//@property (readonly) DVTOperation * testRunnerSessionStartupOperation;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (void)logDebugMessage:(id)v1;
//+ (char)supportsInvalidationPrevention;
//+ (id)_resultBundlePathFromDiagnosticLogPath:(id)v1;
//+ (id)_messageForErrorWithDiagnosticLogPath:(id)v1;
//+ (id)nextLaunchSessionToken;
//- (void)initializeValidatorsStack;
//- (char)validateEvent:(int)v1 error:(id *)v2;
//- (void)primitiveInvalidate;
//- (id)initWithTestRunOperation:(id)v1 testRunSpecification:(id)v2 testingInstallationTracker:(id)v3 runnerArtifactsDirectory:(id)v4 daemonController:(id)v5 activityReporter:(id)v6 delegate:(id)v7;
//- (id)initWithTestRunOperation:(id)v1 testRunnerSessionProvider:(void (^ /* unknown block signature */)(void))v2 stateMachineProvider:(void (^ /* unknown block signature */)(void))v3 testRunSpecification:(id)v4 testingInstallationTracker:(id)v5 runnerArtifactsDirectory:(id)v6 daemonController:(id)v7 activityReporter:(id)v8 delegate:(id)v9;
//- (char)isTestRunnerSessionAvailable;
//- (void)fetchDiscoveredTestClasses:(void (^ /* unknown block signature */)(void))v1;
//- (void)executeTestIdentifiers:(id)v1 skippingTestIdentifiers:(id)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3 completionQueue:(id)v4;
//- (void)shutdown;
//- (id)_validatedPathForFilenameWithPrefix:(id)v1;
//- (void)_prepareDiagnosticLoggingStream;
//- (char)isLog:(id)v1 specificToDevice:(id)v2;
//- (void)_registerHandlersForOtherLogAspects;
//- (void)_notifyTestProcessThatDebugSessionPaused:(id)v1;
//- (void)disableTestTimeoutsInTestProcessUsingDebugSession:(id)v1;
//- (void)_handleDebugSessionStateChange:(id)v1;
//- (void)_observeDebuggerPauseForLaunchSession:(id)v1;
//- (void)testOperationCancelledWithError:(id)v1;
//- (void)testOperationEncounteredError:(id)v1;
//- (void)launchSessionStarted;
//- (void)launchSessionEncounteredAlertError:(id)v1;
//- (void)launchSessionExpired;
//- (void)launchSessionGotPID:(int)v1;
//- (void)testRunnerHungAfterAcquiringPID;
//- (void)launchSessionWillFinalize;
//- (void)launchSessionDidFinalizeWithDescription:(id)v1;
//- (void)_whitelistTestRunnerPID:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)_setXcodeUITestingAgentAsResponsibleProcessForPID:(int)v1;
//- (void)_handleUITestingPermissionsResponseForPID:(int)v1 isPermitted:(char)v2 error:(id)v3;
//- (void)_checkUITestingPermissionsForPID:(int)v1;
//- (void)_checkUITestingPermissionsInBackgroundForPID:(int)v1;
//- (void)initiateTestRunnerSessionAndUpdateCrashObserverWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (void)_updateCrashObserverWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (void)_requestCrashReportCollection;
//- (double)_defaultTimeoutInterval;
//- (void)_reportStartupFailure:(id)v1 errorCode:(long long)v2 underlyingError:(id)v3;
//- (void)writeLogData:(id)v1;
//- (void)writeLogStatus:(id)v1;
//- (char)_logMessageWantsWriteToStdout;
//- (id)_logMessagePrefix;
//- (void)_logMessage:(id)v1 needsPrefix:(char)v2;
//- (void)_logAtLevel:(unsigned long long)v1 message:(id)v2;
//- (char)_shouldSyncDeviceCrashLogs;
//- (void)_finishWithError:(id)v1;
//- (void)_tearDownLoggingAndReportFinishToRunnerWithError:(id)v1;
//- (void)_tearDownLoggingWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (id)_finalErrorFromError:(id)v1;
//- (void)_reportFinishToRunnerWithError:(id)v1;
//- (void)_queueHeartbeatNotification;
//- (void)heartbeatNotificationTimerDidFire:(id)v1;
//- (void)_considerFlushingDelegateBlockQueue;
//- (void)_delegateBlockQueueTimeoutTimerFired;
//- (void)_flushDelegateBlockQueue;
//- (void)_enqueueConsoleChunk:(id)v1;
//- (void)_considerDispatchingDelegateBlock;
//- (void)_executeDelegateBlockWithNextConsoleChunk:(void (^ /* unknown block signature */)(void))v1;
//- (void)_enqueueDelegateBlock:(void (^ /* unknown block signature */)(void))v1;
//- (char)validateEvent:(int)v1;
//- (void)testDaemonControllerDidDisconnect:(id)v1;
//- (void)testDaemonController:(id)v1 willReceiveCrashReportForPID:(int)v2 isFatal:(char)v3;
//- (void)testDaemonController:(id)v1 receivedCrashReport:(id)v2 isFatal:(char)v3 crashingSymbol:(id)v4;
//- (void)processDiagnosticReport:(id)v1 isFatal:(char)v2 crashingSymbol:(id)v3;
//- (void)logDebugMessage:(id)v1;
//- (void)testRunnerSessionDidAcquireConnection:(id)v1;
//- (void)_considerWhitelistingTestRunner;
//- (void)testRunnerSessionDidBecomeReady:(id)v1;
//- (void)testRunnerSession:(id)v1 didFailInitializationWithError:(id)v2;
//- (void)testRunnerSession:(id)v1 didFailToBootstrapWithError:(id)v2;
//- (void)attachSpindumpToCurrentTestWithIssueMessage:(id)v1 sourceLocation:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)testRunnerSession:(id)v1 testWithIdentifier:(id)v2 didExceedExecutionTimeAllowance:(double)v3;
//- (void)testRunnerSessionDidDisconnect:(id)v1;
//- (void)testRunnerSessionDidStartExecutingTests:(id)v1;
//- (void)testRunnerSessionDidFinishExecutingTests:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (void)_considerFinishing;
//- (void)testRunnerSessionDidStartInitializingForUITesting:(id)v1;
//- (void)testRunnerSession:(id)v1 initializationForUITestingDidFailWithError:(id)v2;
//- (void)testRunnerSession:(id)v1 testSuite:(id)v2 didStartAt:(id)v3;
//- (void)testRunnerSession:(id)v1 testSuiteWithIdentifier:(id)v2 didRecordIssue:(id)v3;
//- (void)testRunnerSession:(id)v1 testSuite:(id)v2 didFinishAt:(id)v3 runCount:(unsigned long long)v4 skipCount:(unsigned long long)v5 failureCount:(unsigned long long)v6 unexpectedFailureCount:(unsigned long long)v7 testDuration:(double)v8 totalDuration:(double)v9;
//- (void)testRunnerSession:(id)v1 testCaseDidStartForTestClass:(id)v2 method:(id)v3;
//- (void)testRunnerSession:(id)v1 testCaseWasSkippedForTestClass:(id)v2 method:(id)v3 message:(id)v4 sourceLocation:(id)v5;
//- (void)testRunnerSession:(id)v1 testCaseWithIdentifier:(id)v2 didRecordIssue:(id)v3;
//- (void)testRunnerSession:(id)v1 testCaseDidFinishForTestClass:(id)v2 method:(id)v3 status:(id)v4 duration:(double)v5;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 didStallOnMainThreadAtSourceLocation:(id)v4;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 willStartActivity:(id)v4;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 didFinishActivity:(id)v4;
//- (void)testRunnerSession:(id)v1 testCase:(id)v2 method:(id)v3 didMeasureMetric:(id)v4 sourceLocation:(id)v5;
//- (void)testRunnerSession:(id)v1 launchProcessWithParameters:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)testRunnerSession:(id)v1 terminateProcessWithToken:(id)v2 error:(id *)v3;
//- (id)testRunnerSession:(id)v1 progressForLaunchWithToken:(id)v2 error:(id *)v3;
//- (void)testRunnerSession:(id)v1 didReceiveDebugLogMessage:(id)v2;
//- (void)testRunnerSession:(id)v1 didReportSelfDiagnosisIssue:(id)v2 description:(id)v3;
//- (id)_addTargetBootstrapInjectionToEnvironmentVariables:(id)v1;
//- (id)_addMainThreadCheckerToEnvironmentVariables:(id)v1;
//- (id)_launchParametersForProcessWithPath:(id)v1 bundleID:(id)v2 arguments:(id)v3 environmentVariables:(id)v4;
//- (void)_observeCompletionOfTracker:(id)v1 withToken:(id)v2 path:(id)v3 bundleID:(id)v4;
//- (char)checkErrorRecursivelyForReinstallationError:(id)v1;
//- (char)recursivelyCheckError:(id)v1 forDomain:(id)v2 code:(long long)v3;
//- (void)_observeExitOfLaunchSession:(id)v1 withToken:(id)v2;
//- (id)_testingLaunchSessionForLaunchSession:(id)v1 bundleID:(id)v2 path:(id)v3;
//- (void)_executeOperation:(id)v1 withPath:(id)v2 bundleID:(id)v3 token:(id)v4 completion:(void (^ /* unknown block signature */)(void))v5;
//- (void)launchProcessWithParameters:(id)v1 token:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)progressForLaunchWithToken:(id)v1 error:(id *)v2;
//- (char)terminateProcessWithToken:(id)v1 error:(id *)v2;
//- (void)cancelExecutionTrackersWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionDriver : NSObject {
//    NSString * _successMessage;
//    IDEDistributionContext * _initialContext;
//    IDEDistributionExportOptions * _exportOptions;
//}
//@property (retain) IDEDistributionContext * initialContext;
//@property (readonly,copy) IDEDistributionExportOptions * exportOptions;
//@property (copy) NSString * successMessage;
//+ (id)distributionDriverWithDistributable:(id)v1 exportOptions:(id)v2;
//- (char)runWithDestinationPath:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionZipODRItemStep : IDEDistributionItemProcessingStep
//+ (char)archiveSourcePath:(id)v1 destinationPath:(id)v2 error:(id *)v3;
//+ (char)extractSourcePath:(id)v1 destinationPath:(id)v2 error:(id *)v3;
//+ (bool)runsPerThinningVariant;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEObjCModernizationContext : IDEMigrationContext
//+ (Class)migrationTargetSublass;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyResultGenerator : NSObject {
//    char _hasStartedStarting;
//    char _finishedStarting;
//    NSObject<IDEOpenQuicklyResultConsumer> * _weakConsumer;
//    NSObject<OS_dispatch_queue> * _queue;
//    long long _completedGeneration;
//    NSArray * _completedResults;
//    long long _requestedGeneration;
//    IDEOpenQuicklyQueryUserInput * _requestedUserInput;
//    DVTLogAspect * _logAspect;
//    IDEOpenQuicklyQueryContext * _queryContext;
//}
//@property (readonly) NSObject<OS_dispatch_queue> * queue;
//@property (readonly) long long completedGeneration;
//@property (readonly) NSArray * completedResults;
//@property (readonly) long long requestedGeneration;
//@property (readonly) IDEOpenQuicklyQueryUserInput * requestedUserInput;
//@property (readonly) DVTLogAspect * logAspect;
//@property (readonly) IDEOpenQuicklyQueryContext * queryContext;
//- (id)initWithQueryContext:(id)v1 consumer:(id)v2;
//- (void)asyncInitiateStartup;
//- (void)start;
//- (void)finishedStarting;
//- (char)hasStartedStarting;
//- (char)hasFinishedStarting;
//- (void)asyncAccessConsumerOnConsumerQueueIfNotNil:(void (^ /* unknown block signature */)(void))v1;
//- (void)updateUserInput:(id)v1 generation:(long long)v2;
//- (void)pushResults:(id)v1 generation:(long long)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableEntitlements : NSObject<NSCopying> {
//    NSDictionary * _signedEntitlements;
//    NSDictionary * _simulatedEntitlements;
//}
//@property (readonly,nonatomic) NSDictionary * signedEntitlements;
//@property (readonly,nonatomic) NSDictionary * simulatedEntitlements;
//- (id)init;
//- (id)initWithSignedEntitlements:(id)v1;
//- (id)initWithSignedEntitlements:(id)v1 simulatedEntitlements:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindCallHierarchyResult : IDEBatchFindAbstractResult {
//    char _recursive;
//    NSObject<IDEIndexSymbol> * _symbol;
//}
//@property (readonly) NSObject<IDEIndexSymbol> * symbol;
//@property (readonly,getter=isRecursive) char recursive;
//- (char)recursivelyReferences:(id)v1;
//- (id)initWithDocumentLocation:(id)v1 parent:(id)v2 symbol:(id)v3 queryIdentifier:(long long)v4 resultIdentifier:(long long)v5;
//- (char)contributesToFileResultCount;
//- (char)contributesToResultCount;
//- (char)allowsSummarization;
//- (char)canHaveChildren;
//- (id)textRepresentationForPasteboard;
//- (char)textRepresentationForPasteboardIsFileName;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindCallHierarchyQuery : IDEBatchFindAbstractQuery {
//    NSObject<OS_dispatch_queue> * _queue;
//    _TtC13IDEFoundation33IDEBatchFindQueryStatusAggregator * _statusAggregator;
//    NSMapTable * _faultedChildrenByParent;
//}
//+ (char)supportsAnchorning;
//+ (char)supportsCaseMatching;
//+ (id)displayName;
//+ (id)queryTermPlaceholderText;
//+ (char)isCumbersomeToInitiateManually;
//- (id)initWithSpecification:(id)v1 priority:(long long)v2 initialNumberOfLinesCalculator:(void (^ /* unknown block signature */)(void))v3 initialLineWrappingParameters:(id)v4 workspace:(id)v5 error:(id *)v6;
//- (id)makeRootResult;
//- (char)lazilyFaultsChildren;
//- (void)faultChildrenForResult:(id)v1 prefetchDepth:(long long)v2;
//- (void)userIsAttemptingToViewFaultedChildrenOfItem:(id)v1;
//- (id)emptyResultSetPlaceholderResultKind;
//- (char)requiresEditorDocumentsToSaveBeforeSearching;
//- (id)customContextMenuID;
//- (void)cancel;
//- (void)execute;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningTeamAccountPairManager : NSObject<DVTInvalidation,IDEProvisioningTeamAccountPairProvider> {
//    DVTDispatchLock * _lock;
//    NSObject<DVTInvalidation> * _accountsToken;
//    NSMutableDictionary * _teamIDToPairMap;
//    DVTDeveloperAccountManager * _accountManager;
//    IDEProvisioningSessionManager * _sessionManager;
//    IDEProvisioningPortal * _portal;
//}
//@property (readonly,nonatomic) DVTDeveloperAccountManager * accountManager;
//@property (retain,nonatomic) IDEProvisioningSessionManager * sessionManager;
//@property (retain,nonatomic) IDEProvisioningPortal * portal;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)sharedManager;
//+ (void)initialize;
//- (id)initWithAccountManager:(id)v1;
//- (void)primitiveInvalidate;
//- (id)sessionProviders;
//- (void)invalidateCachedPairMap;
//- (id)pairForTeam:(id)v1 error:(id *)v2;
//- (id)_pairForTeam:(id)v1 error:(id *)v2;
//- (id)_teamIDToPairMapForTesting;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestFileChangeBroker : NSObject<IDETestsInTestableObserver,DVTInvalidation> {
//    IDETestManager * _testManager;
//    NSURL * _url;
//    NSMutableSet * _fileObservers;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//- (id)initWithURL:(id)v1 testManager:(id)v2;
//- (void)primitiveInvalidate;
//- (char)hasObservers;
//- (void)addTestFileObserver:(id)v1;
//- (void)removeTestFileObserver:(id)v1;
//- (void)updateObservation;
//- (void)testsChanged:(id)v1;
//- (void)testablesChanged:(id)v1;
//- (void)allTestablesChanged;
//- (void)_notifyObserversTestsInFileUpdated;
//- (void)notifyAllTestablesChanged;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningPortal : NSObject {
//    DVTSigningCertificateManager * _signingCertificateManager;
//    DVTProvisioningProfileManager * _provisioningProfileManager;
//}
//@property (retain) DVTSigningCertificateManager * signingCertificateManager;
//@property (retain) DVTProvisioningProfileManager * provisioningProfileManager;
//+ (id)defaultPortal;
//+ (id)portalWithSigningCertificateManager:(id)v1 provisioningProfileManager:(id)v2;
//+ (id)concurrentQueue;
//+ (id)_errorForNoMatchingTeam:(id)v1;
//+ (id)_errorForNoCertificateTypeWithOID:(id)v1;
//+ (id)_errorForLackOfMatchingCertificateWithSerialNumber:(id)v1;
//+ (id)_errorForUnknownFeatureWithPortalKey:(id)v1;
//+ (id)_errorForNoContainerTypeWithPortalKey:(id)v1;
//- (id)init;
//- (id)initWithSigningCertificateManager:(id)v1 provisioningProfileManager:(id)v2;
//- (id)createAndInstallCertificateWithSession:(id)v1 team:(id)v2 type:(id)v3 error:(id *)v4;
//- (char)_installIdentity:(id)v1 error:(id *)v2;
//- (id)portalCertificatesWithSession:(id)v1 team:(id)v2 type:(id)v3 memberSpecificCertificates:(id *)v4 error:(id *)v5;
//- (id)portalProfilesWithSession:(id)v1 team:(id)v2 platform:(id)v3 sdkVariant:(id)v4 nameOrUUID:(id)v5 error:(id *)v6;
//- (id)portalProfilesWithSession:(id)v1 team:(id)v2 nameOrUUID:(id)v3 error:(id *)v4;
//- (id)portalProfilesMatchingNameOrUUID:(id)v1 profiles:(id)v2;
//- (id)inMemoryProfileForPortalProfile:(id)v1 session:(id)v2 error:(id *)v3;
//- (id)profilesWithSession:(id)v1 team:(id)v2 platform:(id)v3 sdkVariant:(id)v4 error:(id *)v5;
//- (id)profilesWithSession:(id)v1 team:(id)v2 error:(id *)v3;
//- (id)devicesWithSession:(id)v1 team:(id)v2 error:(id *)v3;
//- (id)portalTeamForTeam:(id)v1 session:(id)v2 error:(id *)v3;
//- (id)listTeamsAndRolesWithAccount:(id)v1 error:(id *)v2;
//- (id)errorForMissingProfileData;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECommandLineBuildLog : IDEActivityLogSection {
//    NSFileHandle * _standardOutput;
//    NSFileHandle * _standardError;
//    NSMutableArray * _failedSections;
//    long long _verbosity;
//    char _targetSectionsAreTransparent;
//    NSMutableArray * _sectionsWithAnalyzerIssues;
//}
//@property (retain) NSFileHandle * standardOutput;
//@property (retain) NSFileHandle * standardError;
//@property (retain) NSMutableArray * failedSections;
//@property (retain) NSMutableArray * sectionsWithAnalyzerIssues;
//@property long long verbosity;
//@property char targetSectionsAreTransparent;
//+ (Class)logRecorderClass;
//- (id)initLogWithTitle:(id)v1;
//- (id)initLogWithTitle:(id)v1 standardOutput:(id)v2 standardError:(id)v3 verbosity:(long long)v4 targetSectionsAreTransparent:(char)v5 logStreamWriter:(id)v6;
//- (id)initLogWithTitle:(id)v1 standardOutput:(id)v2 standardError:(id)v3 verbosity:(long long)v4 logStreamWriter:(id)v5;
//- (id)initLogWithTitle:(id)v1 standardOutput:(id)v2 standardError:(id)v3 verbosity:(long long)v4;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivedApplication : IDEArchivedContent<IDEDistributableApplication>
//@property (readonly) DVTFilePath * applicationPath;
//@property (readonly) NSString * signingIdentity;
//@property (readonly) NSString * teamID;
//@property (readonly) DVTPlatform * platform;
//@property (readonly) NSArray * architectures;
//@property (readonly) DVTFilePath * path;
//@property (readonly) NSString * bundleIdentifier;
//@property (readonly) NSString * bundleName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)soleArchivedContentRelativePathInDirectory:(id)v1;
//+ (char)fillInfoDictionary:(id)v1 forContentAtPath:(id)v2;
//+ (id)archivedContentPropertiesPlistKey;
//+ (id)archivedContentPathPlistKey;
//+ (id)keyPathsForValuesAffectingApplicationPath;
//+ (id)keyPathsForValuesAffectingIconPath;
//- (id)platformName;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestOutputProcessorResult : NSObject {
//    NSString * _finalOutput;
//    NSArray * _consoleChunks;
//}
//@property (retain) NSString * finalOutput;
//@property (retain) NSArray * consoleChunks;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestOutputProcessor : NSObject {
//    NSString * _barrierString;
//    NSCharacterSet * _barrierStringCharacterSet;
//    NSCharacterSet * _safeCharacterSet;
//    NSObject<OS_dispatch_queue> * _consoleProcessingQueue;
//    NSString * _partialConsoleChunkFromLastOutput;
//    NSString * _unconsumedOutputPossiblyTerminatedByToken;
//    NSMutableString * _unconsumedOutputNotTerminatedByToken;
//    NSString * _unprintedConsoleOutput;
//    NSOutputStream * _rawOutputStream;
//}
//@property (retain) NSString * barrierString;
//@property (retain) NSCharacterSet * barrierStringCharacterSet;
//@property (retain) NSCharacterSet * safeCharacterSet;
//@property (retain) NSObject<OS_dispatch_queue> * consoleProcessingQueue;
//@property (retain) NSString * partialConsoleChunkFromLastOutput;
//@property (retain) NSString * unconsumedOutputPossiblyTerminatedByToken;
//@property (retain) NSMutableString * unconsumedOutputNotTerminatedByToken;
//@property (retain) NSString * unprintedConsoleOutput;
//@property (retain) NSOutputStream * rawOutputStream;
//- (id)initWithBarrierString:(id)v1;
//- (void)dealloc;
//- (void)logRawOutputToFileAtPath:(id)v1;
//- (id)remainingUnprocessedOutput;
//- (id)outputResultForRawOutput:(id)v1;
//- (char)_isStringPossiblyTerminatedByBarrier:(id)v1;
//- (id)_subStringToLastCharacterInSet:(id)v1 ofString:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableOnDemandEvaluator : NSObject<IDEProvisioningManagerRepairObserver,DVTInvalidation> {
//    char _shouldRepair;
//    IDEProvisionableStatusEvalutorInputs * _evaluationInputs;
//    NSString * _configuration;
//    IDEProvisioningManager * _provisioningManager;
//    IDEProvisionableStatusEvaluator * _statusEvaluator;
//    DVTSemaphore * _semaphore;
//    IDEProvisionableStatusEvaluation * _evaluation;
//    NSError * _repairError;
//    IDEProvisioningUserAction * _repairUserAction;
//}
//@property (retain) IDEProvisionableStatusEvalutorInputs * evaluationInputs;
//@property (retain) NSString * configuration;
//@property char shouldRepair;
//@property (retain) IDEProvisioningManager * provisioningManager;
//@property (retain) IDEProvisionableStatusEvaluator * statusEvaluator;
//@property (retain) DVTSemaphore * semaphore;
//@property (retain) IDEProvisionableStatusEvaluation * evaluation;
//@property (retain) NSError * repairError;
//@property (retain) IDEProvisioningUserAction * repairUserAction;
//@property (readonly) char requiresImmediateUserActionResolution;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)evaluatorWithEvaluationInputs:(id)v1 configuration:(id)v2 shouldRepair:(char)v3 provisioningManager:(id)v4;
//- (void)primitiveInvalidate;
//- (id)evaluate;
//- (void)_waitForEvaluationWithForcedAssetRefresh:(char)v1;
//- (char)_actuallyShouldRepair;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDataProvider_Energy : IDEDataProvider
//+ (id)sharedDataProvider;
//+ (id)categoryTitles;
//- (id)supportedAttributes;
//- (char)captureAttributes:(id)v1 toDictionary:(id)v2 forPID:(id)v3;
//- (id)captureAttributes:(id)v1 forPIDs:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCodeSlimmingStep : IDEDistributionItemProcessingStep
//+ (char)stripMachOAtPath:(id)v1 strippingOptions:(unsigned long long)v2 logAspect:(id)v3 error:(id *)v4;
//+ (id)wantsBitcodeAskForItem:(id)v1 platformsWithOptionalBitcode:(id)v2 archive:(id)v3 error:(id *)v4;
//+ (id)requiresBitcodeAppStoreSubmission:(id)v1 platformsWithRequiredBitcode:(id)v2 error:(id *)v3;
//+ (id)machODestinationFilePathForDistributionItem:(id)v1 distributionItemDestinationParent:(id)v2;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)strippingOptionsWithContext:(id)v1 andError:(id *)v2;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestableReference : NSObject<DVTXMLUnarchiving> {
//    DVTObservingToken * _testableObservingToken;
//    IDESchemeBuildableReference * _buildableReference;
//    NSMutableSet * _mutableSelectedTests;
//    NSMutableSet * _mutableSkippedTests;
//    _TtC13IDEFoundation25IDEDeviceAppDataReference * _deviceAppDataReference;
//    _TtC13IDEFoundation28IDELocationScenarioReference * _locationScenarioReference;
//    char _skipped;
//    char _parallelizable;
//    char _associatedWithSchemeAction;
//    char _shouldEncodeTestSelectionModeAttribute;
//    NSObject<IDETestable> * _testable;
//    long long _testSelectionMode;
//    long long _testExecutionOrdering;
//}
//@property (nonatomic,readonly) char isEnabled;
//@property char shouldEncodeTestSelectionModeAttribute;
//@property (readonly) NSObject<IDETestable> * testable;
//@property (readonly) IDESchemeBuildableReference * buildableReference;
//@property (retain) IDEScheme * scheme;
//@property char skipped;
//@property char parallelizable;
//@property long long testSelectionMode;
//@property (readonly,copy) NSSet * skippedTests;
//@property (readonly,copy) NSSet * selectedTests;
//@property (getter=isAssociatedWithSchemeAction) char associatedWithSchemeAction;
//@property (retain) _TtC13IDEFoundation25IDEDeviceAppDataReference * deviceAppDataReference;
//@property (retain) _TtC13IDEFoundation28IDELocationScenarioReference * locationScenarioReference;
//@property long long testExecutionOrdering;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)_testableForBuildableReference:(id)v1;
//+ (id)keyPathsForValuesAffectingScheme;
//+ (id)_sortedTestIdentifierWrappersForTestIdentifiers:(id)v1;
//- (void)commonInit;
//- (id)initWithTestable:(id)v1 scheme:(id)v2;
//- (id)initWithBuildableReference:(id)v1 skippedTests:(id)v2 selectedTests:(id)v3 testSelectionMode:(long long)v4;
//- (id)initForTestingWithTestable:(id)v1;
//- (void)dealloc;
//- (id)copyWithNewName:(id)v1;
//- (id)testableName;
//- (void)resolveBuildableFromImport;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)addSkippedTests:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addSelectedTests:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildableReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addDeviceAppData:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addLocationScenarioReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)setSkippedFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setParallelizableFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setTestExecutionOrderingFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setUseTestSelectionWhitelistFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)_enableIndividualTest:(id)v1;
//- (void)_disableIndividualTest:(id)v1;
//- (char)isTestEnabled:(id)v1;
//- (void)enableTest:(id)v1;
//- (void)disableTest:(id)v1;
//- (char)isTestEnabledInHierarchy:(id)v1;
//- (char)_isTestOrAnyDescendantEnabled:(id)v1;
//- (void)convertWhitelistToBlacklist;
//- (char)testContainer:(id)v1 shouldBeInBlacklistCollectingBlacklistForSubtree:(id)v2;
//- (void)convertBlacklistToWhitelist;
//- (void)gatherEnabledTestsInTreeOfTest:(id)v1 intoWhitelist:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDETestableReferenceTestIdentifier : NSObject<DVTXMLUnarchiving> {
//    NSString * _identifier;
//}
//@property (readonly,copy) NSString * identifier;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithIdentifier:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentIndexRecordStorage : NSObject {
//    NSObject<OS_dispatch_queue> * _locks[32];
//    NSMutableDictionary * _entriesByFilePath[32];
//}
//- (id)init;
//- (void)withAcessToStorageForFilePath:(id)v1 storage:(void (^ /* unknown block signature */)(void))v2;
//- (id)entryForFilePath:(id)v1;
//- (void)addEntry:(id)v1;
//- (void)removeEntryForFilePath:(id)v1;
//- (void)withAllLocksBeginingAt:(long long)v1 invoke:(void (^ /* unknown block signature */)(void))v2;
//- (void)withAllLocks:(void (^ /* unknown block signature */)(void))v1;
//- (void)removeAllEntriesWithAllLocksAlreadyHeld;
//- (void)removeAllEntries;
//- (void)resetToEntries:(id)v1;
//- (id)snapshotOfEntries;
//- (void)trimToEntriesForFilePaths:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEStackFrame : NSObject<IDEDebugNavigableModel,DVTInvalidation> {
//    DVTObservingToken * _debugSessionStateObserver;
//    char _hasSymbols;
//    char _recorded;
//    char _swiftThunk;
//    char _blameFrame;
//    char _returnValueIsValid;
//    char _settingDisassembly;
//    NSString * _associatedProcessUUID;
//    NSString * _displayName;
//    NSString * _filePath;
//    NSObject<DVTInvalidation><IDEDataValue> * _returnValue;
//    IDEThread * _parentThread;
//    NSString * _name;
//    NSNumber * _frameNumber;
//    NSNumber * _framePointer;
//    NSURL * _fileURL;
//    NSNumber * _lineNumber;
//    NSNumber * _columnNumber;
//    IDECodeModule * _module;
//    NSNumber * _percentageOfTotalSample;
//    NSString * _instructionPointerAddressString;
//    NSArray * _locals;
//    NSArray * _arguments;
//    NSArray * _fileStatics;
//    NSArray * _globals;
//    NSArray * _registers;
//    NSString * _disassemblyString;
//}
//@property (retain) NSObject<DVTAnalyticsLogStackFrameProtocol> * representativeAnalyticsLogStackFrame;
//@property (retain,nonatomic) IDEThread * parentThread;
//@property (copy,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSString * displayName;
//@property (copy,nonatomic) NSNumber * frameNumber;
//@property (readonly,nonatomic) NSNumber * framePointer;
//@property (nonatomic) char hasSymbols;
//@property (copy,nonatomic) NSURL * fileURL;
//@property (readonly,nonatomic) NSString * filePath;
//@property (copy,nonatomic) NSNumber * lineNumber;
//@property (copy,nonatomic) NSNumber * columnNumber;
//@property (retain,nonatomic) IDECodeModule * module;
//@property (nonatomic,getter=isRecorded) char recorded;
//@property (readonly,nonatomic,getter=isSwiftThunk) char swiftThunk;
//@property (nonatomic,getter=isBlameFrame) char blameFrame;
//@property (copy,nonatomic) NSNumber * percentageOfTotalSample;
//@property (copy,nonatomic) NSString * instructionPointerAddressString;
//@property (readonly,nonatomic) NSArray * locals;
//@property (readonly,nonatomic) NSArray * arguments;
//@property (readonly,nonatomic) NSArray * fileStatics;
//@property (readonly,nonatomic) NSArray * globals;
//@property (readonly,nonatomic) NSArray * registers;
//@property (retain,nonatomic) NSObject<DVTInvalidation><IDEDataValue> * returnValue;
//@property (nonatomic) char returnValueIsValid;
//@property (readonly) NSString * descriptionForPasteboard;
//@property (copy,nonatomic) NSString * disassemblyString;
//@property char settingDisassembly;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (id)stackFrameWithThread:(id)v1 analyticsLogStackFrame:(id)v2 frameNumber:(long long)v3 usingContext:(id)v4;
//+ (void)initialize;
//+ (id)compressedStackFrames:(id)v1 usingCompressionValue:(long long)v2;
//+ (id)disassemblyURLForStackFrame:(id)v1 inDebugSession:(id)v2;
//+ (id)stackFrameForDisassemblyURL:(id)v1;
//+ (id)keyPathsForValuesAffectingDisplayName;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//- (id)initWithParentThread:(id)v1 frameNumber:(id)v2 framePointer:(id)v3 name:(id)v4;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (char)hasSameDisassemblyURL:(id)v1;
//- (id)projectName;
//- (id)projectPath;
//- (void)requestDataValueForSymbol:(id)v1 symbolKind:(id)v2 atLocation:(id)v3 onQueue:(id)v4 withResultBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)evaluateExpression:(id)v1 withResultBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)evaluateExpression:(id)v1 options:(id)v2 withResultBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)expressionWithSubstitutedTypesForExpression:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebugExpressionOptions : NSObject {
//    char _unwindOnError;
//    char _autoHandleExceptions;
//    NSObject<OS_dispatch_queue> * _callbackQueue;
//    unsigned long long _timeoutInMicroSeconds;
//    long long _language;
//    NSString * _dataValueName;
//}
//@property (retain) NSObject<OS_dispatch_queue> * callbackQueue;
//@property unsigned long long timeoutInMicroSeconds;
//@property char unwindOnError;
//@property char autoHandleExceptions;
//@property long long language;
//@property (copy) NSString * dataValueName;
//- (id)init;
//- (id)initWithCallbackQueue:(id)v1;
//- (id)initWithTimeout:(unsigned long long)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEVersionedFileManager : NSObject
//+ (void)initialize;
//+ (void)setDelegate:(id)v1 withDispatchQueue:(id)v2;
//+ (void)_delegatePerformBlock:(void (^ /* unknown block signature */)(void))v1;
//+ (void)_callCompletionBlockWithResult:(char)v1 error:(id)v2 queue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//+ (id)_errorDescriptionForType:(int)v1;
//+ (id)_errorWithUnderlyingErrors:(id)v1 type:(int)v2;
//- (void)startBatchEdits;
//- (void)endBatchEdits;
//- (void)createDirectoryAtFilePath:(id)v1 withIntermediateDirectories:(char)v2 attributes:(id)v3 completionBlockDispatchQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)removeItemsAtFilePaths:(id)v1 moveToTrash:(char)v2 completionBlockDispatchQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)_addPathStrings:(id)v1 toWorkingCopy:(id)v2;
//- (void)_addItemsAtFilePaths:(id)v1 workspace:(id)v2 force:(char)v3;
//- (void)addItemsAtFilePaths:(id)v1 workspace:(id)v2 force:(char)v3 completionBlockDispatchQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)copyItemsAtFilePaths:(id)v1 toFilePaths:(id)v2 completionBlockDispatchQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)moveItemsAtFilePaths:(id)v1 toFilePaths:(id)v2 inContext:(id)v3 completionBlockDispatchQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningCompoundProfile : NSObject<NSCopying> {
//    char _wantsInstallCancelled;
//    NSString * _name;
//    long long _state;
//    NSError * _error;
//    IDEProvisioningCompoundProfileIdentifier * _identifier;
//    NSObject<DVTPortalProfileProtocol> * _portalProfile;
//    DVTProvisioningProfile * _provisioningProfile;
//    DVTProvisioningProfile * _outDatedProfile;
//    DVTProvisioningProfile * _previewProfile;
//}
//@property (retain,nonatomic) IDEProvisioningCompoundProfileIdentifier * identifier;
//@property (retain,nonatomic) NSObject<DVTPortalProfileProtocol> * portalProfile;
//@property (retain,nonatomic) DVTProvisioningProfile * provisioningProfile;
//@property (retain,nonatomic) DVTProvisioningProfile * outDatedProfile;
//@property (retain,nonatomic) DVTProvisioningProfile * previewProfile;
//@property (readonly) char allowDownloadingPreview;
//@property (nonatomic) long long state;
//@property (nonatomic) char wantsInstallCancelled;
//@property (readonly) NSString * name;
//@property (readonly) DVTProvisioningProfile * profile;
//@property (retain,nonatomic) NSError * error;
//@property (readonly) char hasProfileInstalled;
//@property (readonly) char isLocalProfileOutDated;
//+ (id)keyPathsForValuesAffectingProfile;
//+ (id)keyPathsForValuesAffectingHasProfileInstalled;
//+ (id)keyPathsForValuesAffectingIsLocalProfileOutDated;
//+ (id)keyPathsForValuesAffectingAllowDownloadingPreview;
//- (id)initWithPortalProfile:(id)v1;
//- (void)verifyIdentifierOfProfile:(id)v1;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildOperationDescription : NSObject {
//    NSString * _objectToBuildName;
//    NSString * _actionName;
//    NSString * _actionInProgress;
//}
//@property (readonly,copy) NSString * objectToBuildName;
//@property (readonly,copy) NSString * actionName;
//@property (readonly,copy) NSString * actionInProgress;
//- (id)initWithObjectToBuildName:(id)v1 actionName:(id)v2 actionInProgress:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDELegacyUserDefaultsImporter : NSObject<IDEInitialization>
//+ (char)ide_initializeWithOptions:(unsigned long long)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCodeCompletionOperation : NSObject {
//    NSString * _strategyName;
//    NSString * _workspaceName;
//    NSString * _filename;
//    unsigned long long _line;
//    unsigned long long _column;
//    unsigned long long _numResults;
//    double _duration;
//}
//@property (readonly) NSString * strategyName;
//@property (readonly) NSString * workspaceName;
//@property (readonly) NSString * filename;
//@property (readonly) unsigned long long line;
//@property (readonly) unsigned long long column;
//@property (readonly) unsigned long long numResults;
//@property (readonly) double duration;
//- (id)initWithStrategyName:(id)v1 workspaceName:(id)v2 location:(id)v3;
//- (void)start;
//- (void)completedWithNumResults:(unsigned long long)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionCompileBitcode : IDEDistributionOption
//@property (readonly,nonatomic) char wantsCompileBitcodeAsk;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)initWithIdentifier:(id)v1 context:(id)v2;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindWorkspaceLocationPredicate : IDEBatchFindFilePathPredicate {
//    NSArray * _pathComponents;
//    long long _root;
//}
//@property (readonly) NSArray * pathComponents;
//@property (readonly) long long root;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//+ (id)propertyListIdentifier;
//- (id)initWithPathComponents:(id)v1 root:(long long)v2;
//- (id)initWithPathComponents:(id)v1;
//- (unsigned long long)hash;
//- (char)isEqualToFilePathPredicateWithIdenticalClass:(id)v1;
//- (id)rootGroupGivenWorkspace:(id)v1;
//- (id)containerItemGivenWorkspace:(id)v1;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isWorkspaceSpecific;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPosixSpawnLauncher : IDERunOperationPathWorker {
//    void * _file_actions;
//    char _startSuspended;
//    char _terminateCalled;
//    char _targetReallyDead;
//    char _responsibleForTermination;
//    int _childPID;
//    DVTDispatchLock * _lifeCycleLock;
//    DVTDispatchLock * _deathMutex;
//}
//@property char startSuspended;
//- (id)initWithExtensionIdentifier:(id)v1 launchSession:(id)v2;
//- (void)dealloc;
//- (void *)_setupPosixSpawnAttributesAndPTY:(id *)v1;
//- (void)_waitForChildExit:(int)v1;
//- (char)_convertCmdArgs:(id)v1 intoPtrArray:(char * * *)v2 andEnvVars:(id)v3 intoPtrArray:(char * * *)v4 andReturnStandardizedPath:(char * *)v5 error:(id *)v6;
//- (void)_forceQuit:(id)v1;
//- (void)_setPIDOnMainThread:(int)v1;
//- (char)_willUseExistingProcess:(id)v1;
//- (void)start;
//- (void)terminate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERemoteRunnable : IDERunnable<DVTXMLUnarchiving> {
//    DVTFilePath * _remotePath;
//    IDESchemeBuildableReference * _buildableReference;
//}
//@property (retain) IDESchemeBuildableReference * buildableReference;
//@property (readonly) NSObject<IDEBuildableProduct> * buildableProduct;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)remoteRunnableWithBundleIdentifier:(id)v1 filePath:(id)v2 mode:(int)v3 buildableReference:(id)v4;
//+ (id)keyPathsForValuesAffectingBuildableProduct;
//- (id)initWithRemotePath:(id)v1 bundleIdentifier:(id)v2;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (char)hasRunnablePath;
//- (id)runnableUTIType:(id *)v1;
//- (id)displayName;
//- (id)toolTip;
//- (id)pathToRunnableForBuildParameters:(id)v1;
//- (int)runnableType;
//- (void)setScheme:(id)v1;
//- (void)setRemotePathFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)addBuildableReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (id)remotePath;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceCore : IDEXMLPackageContainerCore<IDEContainerCore>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateInstantiationContext : NSObject<NSCopying> {
//    char _showsCrossPlatformSection;
//    char _showsOtherSection;
//    char _alwaysReplaceFiles;
//    char _reuseFileReferences;
//    IDEWorkspace * _workspace;
//    IDETemplate * _documentTemplate;
//    DVTFilePath * _documentFilePath;
//    NSArray * _instantiatedItems;
//    IDEContainerItem * _primaryInstantiatedItem;
//    IDEGroup * _destinationGroup;
//    void (^ /* unknown block signature */)(void) _templateFilter;
//    unsigned long long _destinationIndex;
//    NSArray * _destinationBuildables;
//    IDEWorkspace * _createdWorkspace;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSString * _nameOfInitialFileForEditor;
//}
//@property (retain,nonatomic) IDEWorkspace * workspace;
//@property (retain,nonatomic) IDETemplate * documentTemplate;
//@property (retain) DVTFilePath * documentFilePath;
//@property (copy) NSArray * instantiatedItems;
//@property (retain) IDEContainerItem * primaryInstantiatedItem;
//@property (retain) IDEGroup * destinationGroup;
//@property (copy) void (^ /* unknown block signature */)(void) templateFilter;
//@property unsigned long long destinationIndex;
//@property (copy) NSArray * destinationBuildables;
//@property char showsCrossPlatformSection;
//@property char showsOtherSection;
//@property (retain) IDEWorkspace * createdWorkspace;
//@property char alwaysReplaceFiles;
//@property char reuseFileReferences;
//@property (retain) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly) NSArray * customDataStoresForTemplateMacros;
//@property (readonly) NSDictionary * additionalMacroExpansions;
//@property (copy) NSString * nameOfInitialFileForEditor;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (id)standardSectionNames;
//- (id)arrayBySortingSections:(id)v1;
//- (id)sectionsForAvailableTemplatesOfKind:(id)v1;
//- (id)destinationBlueprintProvider;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppIDFeatureCoordinator : NSObject<IDEAppIDFeatureCoordination> {
//    NSString * _configuration;
//    char _allowAllFeatures;
//    IDEWorkspace * _workspace;
//    NSObject<IDEProvisionable> * _provisionable;
//    IDEProvisionableManager * _provisionableManager;
//    NSObject<IDEProvisioningAssetSelectionDataSource> * _dataSource;
//    DVTDelayedInvocation * _delayedNotification;
//    DVTPortalAppIDFeatures * _appIDFeatures;
//    long long _provisioningStyle;
//    DVTObservingToken * _provisioningProfileObserver;
//}
//@property (retain,nonatomic) IDEWorkspace * workspace;
//@property (retain,nonatomic) NSObject<IDEProvisionable> * provisionable;
//@property (retain,nonatomic) IDEProvisionableManager * provisionableManager;
//@property (retain,nonatomic) NSObject<IDEProvisioningAssetSelectionDataSource> * dataSource;
//@property (retain,nonatomic) DVTDelayedInvocation * delayedNotification;
//@property (retain,nonatomic) DVTPortalAppIDFeatures * appIDFeatures;
//@property (nonatomic) char allowAllFeatures;
//@property (nonatomic) long long provisioningStyle;
//@property (retain,nonatomic) DVTObservingToken * provisioningProfileObserver;
//@property (readonly,nonatomic,getter=isCommunicatingWithPortal) char communicatingWithPortal;
//@property (readonly,nonatomic) NSArray * errors;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingCommunicatingWithPortal;
//+ (id)keyPathsForValuesAffectingErrors;
//+ (id)keyPathsForValuesAffectingTeam;
//- (void)primitiveInvalidate;
//- (id)initWithProvisionable:(id)v1 configuration:(id)v2 workspace:(id)v3;
//- (void)_setUpObservations;
//- (void)_updateDataSource;
//- (void)_profileChanged:(id)v1;
//- (id)_provisioningProfileForBasicProfile:(id)v1;
//- (void)noteAppIDFeaturesChanged;
//- (char)allowsFeatures:(id)v1 missingFeatures:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEScheme : NSObject<IDERunDestinationScheme,DVTInvalidation> {
//    NSString * _lastUpgradeVersion;
//    NSString * _cachedLastUpgradeVersion;
//    char _hasRunUpgradeCheck;
//    char _wasUpgraded;
//    IDERunnable * _oldFormatArchivedRunnable;
//    IDERunContextManager * _runContextManager;
//    IDEContainer<IDECustomDataStoring> * _customDataStoreContainer;
//    DVTCustomDataSpecifier * _customDataSpecifier;
//    IDERunDestination * _lastChosenRunDestination;
//    NSArray * _availableRunDestinations;
//    char _didResortToFallbackRunDestination;
//    char _isShown;
//    unsigned long long _orderHint;
//    char _dataStoreClosed;
//    char _deferredSaveScheduled;
//    char _registeredForIsBuildableNotifications;
//    NSNumber * _isArchivable;
//    id _isArchivableNotificationToken;
//    NSNumber * _isInstallable;
//    id _isInstallableNotificationToken;
//    id _buildablesToken;
//    char _hasUnsupportedArchiveData;
//    DVTDelayedInvocation * _runDestinationInvalidationScheduler;
//    char _transient;
//    char _persisted;
//    char _wasCreatedForAppExtension;
//    char _schemeRunnableRunsDirectlyOnPairedProxyDevice;
//    char _runDestinationInvalidationSuspended;
//    char _runDestinationInvalidationPending;
//    IDEBuildSchemeAction * _buildSchemeAction;
//    IDELaunchSchemeAction * _launchSchemeAction;
//    IDETestSchemeAction * _testSchemeAction;
//    IDEProfileSchemeAction * _profileSchemeAction;
//    IDEPreviewSchemeAction * _previewSchemeAction;
//    IDEAnalyzeSchemeAction * _analyzeSchemeAction;
//    IDEArchiveSchemeAction * _archiveSchemeAction;
//    IDEIntegrateSchemeAction * _integrateSchemeAction;
//    IDEInstallSchemeAction * _installSchemeAction;
//    IDEEntityIdentifier * _schemeIdentifier;
//    NSError * _loadError;
//    DVTObservingToken * _workspaceReferenceContainersObservingToken;
//    IDESchemeOrderedWorkspaceNotificationManager * _orderedWorkspaceNotificationManager;
//}
//@property (readonly) NSString * name;
//@property (readonly) NSString * disambiguatedName;
//@property (readonly) char isTransient;
//@property (readonly) char schemeRunnableRequiresPairedProxyDevice;
//@property (nonatomic,readonly) NSObject<_TtP13IDEFoundation32IDESchemeFileReference_Workspace_> * workspace;
//@property (nonatomic,readonly) id _customDataStoreContainer;
//@property (retain) IDERunContextManager * runContextManager;
//@property (retain) NSError * loadError;
//@property (retain) IDEBuildSchemeAction * buildSchemeAction;
//@property (retain) IDELaunchSchemeAction * launchSchemeAction;
//@property (retain) IDETestSchemeAction * testSchemeAction;
//@property (retain) IDEProfileSchemeAction * profileSchemeAction;
//@property (retain) IDEPreviewSchemeAction * previewSchemeAction;
//@property (retain) IDEAnalyzeSchemeAction * analyzeSchemeAction;
//@property (retain) IDEArchiveSchemeAction * archiveSchemeAction;
//@property (retain) IDEIntegrateSchemeAction * integrateSchemeAction;
//@property (retain) IDEInstallSchemeAction * installSchemeAction;
//@property (copy,nonatomic) IDEEntityIdentifier * schemeIdentifier;
//@property (retain) DVTObservingToken * workspaceReferenceContainersObservingToken;
//@property (nonatomic,getter=isRunDestinationInvalidationSuspended) char runDestinationInvalidationSuspended;
//@property (getter=isRunDestinationInvalidationPending) char runDestinationInvalidationPending;
//@property (getter=isTransient) char transient;
//@property (nonatomic,getter=isPersisted) char persisted;
//@property (retain) IDESchemeOrderedWorkspaceNotificationManager * orderedWorkspaceNotificationManager;
//@property (retain) IDERunDestination * lastChosenRunDestination;
//@property (retain) NSArray * availableRunDestinations;
//@property (retain,nonatomic) IDEContainer<IDECustomDataStoring> * customDataStoreContainer;
//@property (readonly) DVTCustomDataSpecifier * customDataSpecifier;
//@property (copy) NSString * name;
//@property (readonly) NSString * disambiguatedName;
//@property char isShared;
//@property char isShown;
//@property (copy) NSString * lastUpgradeVersion;
//@property (copy) NSString * cachedLastUpgradeVersion;
//@property char hasRunUpgradeCheck;
//@property char wasUpgraded;
//@property (readonly) char isClosed;
//@property char wasCreatedForAppExtension;
//@property (readonly) char schemeRunnableRequiresPairedProxyDevice;
//@property (readonly) char schemeRunnableRunsDirectlyOnPairedProxyDevice;
//@property unsigned long long orderHint;
//@property (readonly,getter=isBuildable) char buildable;
//@property (readonly,getter=isRunnable) char runnable;
//@property (readonly,getter=isTestable) char testable;
//@property (readonly,getter=isProfilable) char profilable;
//@property (readonly,getter=isPreviewable) char previewable;
//@property (readonly,getter=isAnalyzable) char analyzable;
//@property (readonly,getter=isArchivable) char archivable;
//@property (readonly,getter=isInstallable) char installable;
//@property (readonly,getter=isIntegratable) char integratable;
//@property (readonly) NSArray * nonFaultingAvailableRunDestinations;
//@property (readonly) char didResortToFallbackRunDestination;
//@property (readonly) NSData * xmlData;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (id)schemeWithRunContextManager:(id)v1 customDataStoreContainer:(id)v2 customDataSpecifier:(id)v3;
//+ (id)schemeFromXMLData:(id)v1 withRunContextManager:(id)v2 customDataStoreContainer:(id)v3 customDataSpecifier:(id)v4 isShown:(char)v5 orderHint:(unsigned long long)v6 error:(id *)v7;
//+ (id)keyPathsForValuesAffectingRunnable;
//+ (id)keyPathsForValuesAffectingTestable;
//+ (id)keyPathsForValuesAffectingProfilable;
//+ (id)keyPathsForValuesAffectingPreviewable;
//+ (id)keyPathsForValuesAffectingAnalyzable;
//+ (id)keyPathsForValuesAffectingIntegratable;
//+ (id)mainThreadCheckerPathForRunDestination:(id)v1;
//+ (char)automaticallyNotifiesObserversOfCustomDataStoreContainer;
//+ (id)keyPathsForValuesAffectingDisambiguatedName;
//+ (char)automaticallyNotifiesObserversOfIsShown;
//+ (char)automaticallyNotifiesObserversOfOrderHint;
//+ (id)_buildParametersForPurpose:(long long)v1 schemeCommand:(id)v2 configurationName:(id)v3 workspaceArena:(id)v4 overridingProperties:(id)v5 activeRunDestination:(id)v6 activeArchitecture:(id)v7 collectBuildTimeStatistics:(char)v8 collectTimelineMetrics:(char)v9;
//- (char)ideIndex_containsBlueprint:(id)v1;
//- (id)runnableForSchemeCommand:(id)v1;
//- (void)_createDefaultSchemeActions;
//- (id)initFromUnarchiver:(char)v1 runContextManager:(id)v2 customDataStoreContainer:(id)v3 customDataSpecifier:(id)v4 isShown:(char)v5 orderHint:(unsigned long long)v6;
//- (void)resolveBuildablesFromImport;
//- (void)markSchemeDirtyFromUserChange;
//- (void)markSchemeDirtyFromAutomaticChange;
//- (void)performDelayedSave:(id)v1;
//- (void)customDataStoreContainerClosing:(id)v1;
//- (void)primitiveInvalidate;
//- (char)_isActionableForGoodRunnablePathInSchemeAction:(id)v1;
//- (char)hasRunnableForBuildableProduct:(id)v1;
//- (id)schemeActionForSchemeCommand:(id)v1;
//- (id)_runnableSchemeActionForSchemeCommand:(id)v1;
//- (id)runnablePathForSchemeCommand:(id)v1 destination:(id)v2;
//- (id)primaryBuildablesForSchemeCommand:(id)v1;
//- (id)buildablesForSchemeCommand:(id)v1;
//- (id)buildablesIncludingDependenciesForSchemeCommand:(id)v1;
//- (id)buildablesForSchemeCommand:(id)v1 testingSpecifiers:(id)v2 includingDependencies:(char)v3;
//- (id)buildConfigurationForSchemeCommand:(id)v1;
//- (id)buildParametersForLaunchSchemeCommandAndBuildable:(id)v1;
//- (id)buildParametersForSchemeCommand:(id)v1;
//- (id)buildParametersForSchemeCommand:(id)v1 buildable:(id)v2;
//- (id)buildParametersForSchemeCommand:(id)v1 buildable:(id)v2 runDestination:(id)v3;
//- (id)buildParametersForSchemeCommand:(id)v1 destination:(id)v2;
//- (void)buildConfigurationDidChange:(id)v1;
//- (char)schemeRunnableRunsOnPairedProxyDevice;
//- (void)immediatelyInvalidateAvailableRunDestinations;
//- (void)_invalidateAvailableRunDestinations;
//- (void)_actuallyInvalidateAvailableRunDestinations;
//- (void)_updateCustomDataStoreContainer:(id)v1 andSpecifier:(id)v2;
//- (void)_primitiveSetCustomDataStoreContainer:(id)v1;
//- (void)_updateIsShown:(char)v1;
//- (void)_updateOrderHint:(unsigned long long)v1;
//- (id)_addActionRecordToInvocationRecord:(id)v1 shouldBuild:(char)v2 onlyBuild:(char)v3 schemeCommand:(id)v4 schemeCommandName:(id)v5 runDestination:(id)v6 title:(id)v7;
//- (void)_reportExecutionOperationForParameters:(id)v1 shouldBuild:(char)v2 onlyBuild:(char)v3;
//- (id)_cleanOperationWithExecutionContext:(id)v1 destination:(id)v2 overridingProperties:(id)v3 schemeCommand:(id)v4 invocationRecord:(id)v5 error:(id *)v6;
//- (id)computeNameForCommand:(id)v1 task:(long long)v2;
//- (char)_setOutError:(id *)v1 schemeOperationParameters:(id)v2;
//- (id)schemeOperationForSchemeOperationParameters:(id)v1 buildLog:(id)v2 overridingProperties:(id)v3 overridingBuildConfiguration:(id)v4 dontActuallyRunCommands:(char)v5 restorePersistedBuildResults:(char)v6 deviceAvailableChecker:(void (^ /* unknown block signature */)(void))v7 error:(id *)v8 completionBlock:(void (^ /* unknown block signature */)(void))v9;
//- (id)schemeOperationForSchemeOperationParameters:(id)v1 buildLog:(id)v2 overridingProperties:(id)v3 overridingBuildConfiguration:(id)v4 dontActuallyRunCommands:(char)v5 restorePersistedBuildResults:(char)v6 error:(id *)v7 completionBlock:(void (^ /* unknown block signature */)(void))v8;
//- (id)startedOperationForSchemeOperationParameters:(id)v1 deviceAvailableChecker:(void (^ /* unknown block signature */)(void))v2 error:(id *)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)overridingBuildSettingsForSchemeCommand:(id)v1 runDestination:(id)v2;
//- (id)overridingBuildSettingsForSchemeCommand:(id)v1 runDestination:(id)v2 codeCoverageEnabled:(char)v3 sanitizerOptions:(unsigned long long)v4;
//- (id)buildParametersForTask:(long long)v1 executionEnvironment:(id)v2 buildPurpose:(long long)v3 schemeCommand:(id)v4 destination:(id)v5 overridingProperties:(id)v6 overridingBuildConfiguration:(id)v7 overridingTestingSpecifiers:(id)v8 collectBuildTimeStatistics:(char)v9 collectTimelineMetrics:(char)v10;
//- (id)_variantBuildParametersFromBuildParameters:(id)v1 directoryName:(id)v2 overridingBuildSettings:(id)v3;
//- (id)_variantSpecifiersForTestingWithSchemeOperationParameters:(id)v1 schemeCommand:(id)v2 runDestination:(id)v3 buildParameters:(id)v4;
//- (id)_executionOperationForSchemeOperationParameters:(id)v1 build:(char)v2 onlyBuild:(char)v3 buildParameters:(id)v4 title:(id)v5 buildLog:(id)v6 dontActuallyRunCommands:(char)v7 restorePersistedBuildResults:(char)v8 deviceAvailableChecker:(void (^ /* unknown block signature */)(void))v9 error:(id *)v10 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v11;
//- (char)_shouldRunPostBuildActionsForBuildResult:(long long)v1;
//- (void (^ /* unknown block signature */)(void))postActionEnvironmentPopulatorForBuildOperation:(id)v1;
//- (id)_cleanOperationGroupForExecutionEnvironment:(id)v1 orderedBuildables:(id)v2 buildConfiguration:(id)v3 buildLog:(id)v4 overridingProperties:(id)v5 activeRunDestination:(id)v6 schemeActionRecord:(id)v7 error:(id *)v8;
//- (id)_defaultTopLevelBuildLogForSchemeOperationParameters:(id)v1 buildParameters:(id)v2;
//- (id)_defaultVariantBuildLogForSchemeOperationParameters:(id)v1 buildParameters:(id)v2 subtitle:(id)v3;
//- (id)_buildOperationGroupForSchemeOperationParameters:(id)v1 primaryBuildParameters:(id)v2 variantSpecifiers:(id)v3 buildLog:(id)v4 dontActuallyRunCommands:(char)v5 restorePersistedBuildResults:(char)v6 schemeActionRecord:(id)v7 error:(id *)v8;
//- (id)_groupAndImposeDependenciesForOrderedOperations:(id)v1;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (char)_executionActionsNeedCurrentArchiveVersion;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setLastUpgradeVersionFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setWasCreatedForAppExtensionFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addLaunchAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addTestAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addProfileAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addPreviewAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addAnalyzeAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addArchiveAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addIntegrateAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addInstallAction:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildPhase:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addTestPhase:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addLaunchPhase:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addPathRunnable:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addBuildableProductRunnable:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeOrderedWorkspaceNotificationManager : NSObject<DVTInvalidation> {
//    IDEWorkspace * _workspace;
//}
//@property (readonly) NSSet * referencedContainersNotifyingSchemeBuildableReferences;
//@property (readonly) NSSet * referencedContainersNotifyingSchemes;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)orderedWorkspaceNotificationManagerForWorkspace:(id)v1;
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageBuilder : NSObject {
//    struct LLVMOpaqueCoverageMapping * _coverageMapping;
//    NSSet * _coveredSourceFiles;
//    NSArray * _binaryPaths;
//    NSArray * _binaryArchitectures;
//    NSString * _profilePath;
//}
//@property (readonly,nonatomic) NSArray * binaryPaths;
//@property (readonly,nonatomic) NSArray * binaryArchitectures;
//@property (readonly,nonatomic) NSString * profilePath;
//@property (readonly,nonatomic) NSSet * coveredSourceFiles;
//+ (id)getSubrangesForLineSegments:(id)v1 wrappedSegment:(struct LLVMOpaqueCoverageSegment *)v2;
//+ (void)getStartLine:(unsigned int *)v1 endLine:(unsigned int *)v2 executableLines:(unsigned int *)v3 coveredLines:(unsigned int *)v4 fillingLines:(id)v5 forCoverageData:(struct LLVMOpaqueCoverageData *)v6;
//+ (id)functionCoverageForInstantiationGroup:(struct LLVMOpaqueCoverageInstantiationGroup *)v1 inFile:(id)v2 coverageMapping:(struct LLVMOpaqueCoverageMapping *)v3 outNeedsDemangling:(char *)v4;
//- (id)initWithBinaryPaths:(id)v1 binaryArchitectures:(id)v2 profile:(id)v3 error:(id *)v4;
//- (void)dealloc;
//- (id)linesForFile:(id)v1;
//- (id)functionsForFile:(id)v1 demangler:(void (^ /* unknown block signature */)(void))v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexQualifiedNameParser : NSObject {
//    char _success;
//    NSString * _containerName;
//    NSString * _symbolName;
//    IDEIndexCollection * _kinds;
//}
//@property (readonly,nonatomic) NSString * containerName;
//@property (readonly,nonatomic) NSString * symbolName;
//@property (readonly,nonatomic) IDEIndexCollection * kinds;
//@property (readonly) char success;
//- (id)initWithString:(id)v1;
//- (void)skipWhitespace:(id)v1;
//- (id)parseString:(id)v1 withCharSet:(id)v2;
//- (id)parseIdentifier:(id)v1;
//- (id)parseSelector:(id)v1;
//- (void)parseObjCMethod:(id)v1;
//- (void)parse:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyQueryUserInput : NSObject {
//    DVTFuzzyMatchPattern * _pattern;
//    NSNumber * _explicitLineNumber;
//}
//@property (readonly) DVTFuzzyMatchPattern * pattern;
//@property (readonly) NSNumber * explicitLineNumber;
//+ (void)extractPatternText:(id *)v1 andExplicitLineNumber:(id *)v2 fromString:(id)v3;
//- (id)initWithText:(id)v1;
//- (id)initWithPattern:(id)v1 explicitLineNumber:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlTreeItem : DVTModelTreeNode {
//    unsigned long long _sourceControlLocalStatus;
//    unsigned long long _sourceControlServerStatus;
//    unsigned long long _conflictStateForUpdateOrMerge;
//    IDESourceControlRevision * _currentRevision;
//    NSMutableDictionary * _revisions;
//    NSString * _name;
//    NSString * _pathString;
//    unsigned long long _state;
//}
//@property (copy) NSString * name;
//@property (readonly) NSString * pathString;
//@property (readonly) IDESourceControlTree * sourceTree;
//@property (readonly) IDESourceControlTreeGroup * parentGroup;
//@property (readonly) IDESourceControlRevision * currentRevision;
//@property (readonly) NSArray * revisions;
//@property unsigned long long state;
//@property unsigned long long sourceControlLocalStatus;
//@property unsigned long long sourceControlServerStatus;
//@property unsigned long long conflictStateForUpdateOrMerge;
//@property (readonly) NSString * repositoryURLString;
//+ (void)initialize;
//+ (id)_revisionLock;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (char)automaticallyNotifiesObserversOfCurrentRevision;
//- (id)initWithPathString:(id)v1;
//- (void)primitiveInvalidate;
//- (void)updateFileReferences:(id)v1 withFilePaths:(id)v2;
//- (void)_setPathString:(id)v1;
//- (void)repositoryURLStringAtBranch:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)ideModelObjectTypeIdentifier;
//- (id)description;
//- (unsigned long long)aggregateSourceControlLocalStatus;
//- (unsigned long long)aggregateSourceControlServerStatus;
//- (void)setCurrentRevision:(id)v1;
//- (id)currentRevisionWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)clearCurrentRevision;
//- (void)addRevision:(id)v1;
//- (id)revisionsDictionary;
//- (id)revisionsWithStartingRevision:(id)v1 limit:(unsigned long long)v2 branch:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)revisionsWithStartingRevision:(id)v1 limit:(unsigned long long)v2 branch:(id)v3 includeHEAD:(char)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)clearAllRevisions;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlTreeGroup : IDESourceControlTreeItem {
//    char _areChildrenLoaded;
//}
//@property (copy) NSArray * children;
//@property (readonly) NSMutableArray * mutableChildren;
//@property char areChildrenLoaded;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingSparseChildren;
//- (id)ideModelObjectTypeIdentifier;
//- (id)sparseChildren;
//- (void)reload;
//- (void)clearAllRevisions;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlWorkingTreeItem : IDESourceControlTreeItem {
//    DVTFilePath * _filePath;
//    char _edited;
//}
//@property (readonly) DVTFilePath * filePath;
//@property char edited;
//+ (char)automaticallyNotifiesObserversOfSourceControlLocalStatus;
//+ (char)automaticallyNotifiesObserversOfSourceControlServerStatus;
//+ (char)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
//- (id)initWithFilePath:(id)v1;
//- (void)primitiveInvalidate;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (id)repositoryURLString;
//- (id)ideModelObjectTypeIdentifier;
//- (void)setSourceControlLocalStatus:(unsigned long long)v1;
//- (void)setSourceControlServerStatus:(unsigned long long)v1;
//- (void)setConflictStateForUpdateOrMerge:(unsigned long long)v1;
//- (id)currentRevisionWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlWorkingTreeGroup : IDESourceControlTreeGroup {
//    DVTFilePath * _filePath;
//    char _edited;
//}
//@property (readonly) DVTFilePath * filePath;
//@property char edited;
//+ (char)automaticallyNotifiesObserversOfSourceControlLocalStatus;
//+ (char)automaticallyNotifiesObserversOfSourceControlServerStatus;
//+ (char)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
//- (id)initWithFilePath:(id)v1;
//- (void)primitiveInvalidate;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (id)repositoryURLString;
//- (void)repositoryURLStringAtBranch:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)ideModelObjectTypeIdentifier;
//- (id)currentRevisionWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)setSourceControlLocalStatus:(unsigned long long)v1;
//- (void)setSourceControlServerStatus:(unsigned long long)v1;
//- (void)setConflictStateForUpdateOrMerge:(unsigned long long)v1;
//- (unsigned long long)aggregateSourceControlLocalStatus;
//- (unsigned long long)aggregateSourceControlServerStatus;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlWorkingTreeHolder : NSObject {
//    NSMutableArray * _workingTrees;
//}
//@property (readonly) NSMutableArray * workingTrees;
//- (void)addWorkingTree:(id)v1;
//- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)v1 inRelationshipKeyPath:(id)v2;
//- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)v1 inRelationshipKeyPath:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlWorkingTreeItemHolder : NSObject {
//    NSMutableArray * _workingTreeItems;
//}
//@property (readonly) NSMutableArray * workingTreeItems;
//- (void)addWorkingTreeItem:(id)v1;
//- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)v1 inRelationshipKeyPath:(id)v2;
//- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)v1 inRelationshipKeyPath:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlDummyItem : NSObject {
//    NSString * _name;
//}
//@property (retain) NSString * name;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDiagnosticActivityLogMessage : IDEActivityLogMessage {
//    long long _diagnosticSeverity;
//    DVTDispatchLock * _diagnosticFixItItemsLock;
//    NSMutableArray * _diagnosticFixItItems;
//    DVTWeakInterposer * _delegate_dvtWeakInterposer;
//    DVTWeakInterposer * _representedObject_dvtWeakInterposer;
//}
//@property (readonly) long long diagnosticSeverity;
//@property (readonly) NSString * severityString;
//@property (copy,nonatomic) NSArray * diagnosticFixItItems;
//@property (readonly) NSMutableArray * mutableDiagnosticFixItItems;
//@property (readonly,copy) NSArray * diagnosticFixItItemsSnapshot;
//@property (readonly) NSArray * fixableDiagnosticItems;
//@property NSObject<IDEDiagnosticItemDelegate> * delegate;
//@property id representedObject;
//+ (id)diagnosticMessageType;
//+ (id)keyPathsForValuesAffectingFixableDiagnosticItems;
//- (id)initWithSeverity:(long long)v1 title:(id)v2 location:(id)v3;
//- (id)initWithSeverity:(long long)v1 title:(id)v2 location:(id)v3 fixItItems:(id)v4;
//- (id)init;
//- (char)_array:(id)v1 isEqualToArray:(id)v2;
//- (char)_isEqualToDiagnosticItem:(id)v1 disregardingTimestamp:(char)v2;
//- (char)isEqualDisregardingTimestampToDiagnosticItem:(id)v1;
//- (char)isEqualToDiagnosticItem:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (void)insertObject:(id)v1 inDiagnosticFixItItemsAtIndex:(unsigned long long)v2;
//- (void)removeObjectFromDiagnosticFixItItemsAtIndex:(unsigned long long)v1;
//- (void)updateFixItInfoWithLocationEncodingConverter:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDiagnosticFixItItem : NSObject {
//    IDEDiagnosticActivityLogMessage * _diagnosticItem;
//    NSString * _fixItString;
//    DVTTextDocumentLocation * _replacementLocation;
//}
//@property (nonatomic) IDEDiagnosticActivityLogMessage * diagnosticItem;
//@property (retain) DVTTextDocumentLocation * replacementLocation;
//@property (readonly) NSString * fixItString;
//- (id)initWithFixItString:(id)v1 replacementLocation:(id)v2;
//- (id)init;
//- (char)isEqualToDiagnosticFixItItem:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)description;
//- (void)updateFixItInfoWithLocationEncodingConverter:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionSummaryStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceWrapping : NSObject
//+ (id)workspaceWrappingExtensions;
//+ (id)wrappingExtensionConformedByFileDataType:(id)v1;
//+ (char)isWorkspaceWrappingFileType:(id)v1 ignoreWrappingFolders:(char)v2;
//+ (char)isWorkspaceWrappingFileType:(id)v1;
//+ (id)wrappedWorkspacePathForContainerPath:(id)v1;
//+ (id)resolveContainerPath:(id)v1 isPotentiallyPackage:(char *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyWorkspaceContentRefreshPredicate : IDEBatchFindFilePathPredicate {
//    NSSet * _filePaths;
//}
//+ (id)propertyListIdentifier;
//- (id)initWithFilePaths:(id)v1;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyMasterResultGenerator : IDEOpenQuicklyAbstractWorkspaceResultProvider {
//    char _matchesExhaustively;
//}
//+ (char)sendsIncompleteResults;
//- (void)generateGeneratorsWithCompletionGroup:(id)v1 forWorkspace:(id)v2;
//- (id)exhaustivelyScoreResults:(id)v1;
//- (id)transformAggregateResults:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionEntitlementProcessor : IDEDistributionOption
//+ (id)propertyListForContext:(id)v1;
//- (Class)entitlementsPrcoessorClass;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)createProcessors;
//- (id)makeNewProcessorWithDistributionMethod:(id)v1 item:(id)v2 itemEntitlements:(id)v3 team:(id)v4;
//- (id)matchingProcessorFromProcessors:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourcePackageProductReference : NSObject {
//    IDESourcePackageReference * _packageReference;
//    NSString * _productName;
//}
//@property (readonly) IDESourcePackageReference * packageReference;
//@property (readonly) NSString * productName;
//- (id)initWithPackageReference:(id)v1 productName:(id)v2;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEManageCertificatesPortalQueue : NSObject {
//    DVTSemaphore * _semaphore;
//    NSObject<OS_dispatch_queue> * _queue;
//}
//- (id)initWithLabel:(id)v1 width:(unsigned long long)v2;
//- (void)group:(id)v1 asyncPerformBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEManageCertificatesContext : NSObject {
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    DVTPortalTeam * _portalTeam;
//    NSSet * _certificateTypes;
//    DVTSigningCertificateManager * _certificateManager;
//    IDEProvisioningPortal * _portal;
//    NSObject<IDEProvisioningTeamAccountPairProvider> * _teamAccountPairProvider;
//    IDEProvisioningTeamManager * _teamManager;
//    DVTDeveloperAccountManager * _developerAccountManager;
//    DVTDeveloperAccount * _developerAccount;
//}
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) DVTPortalTeam * portalTeam;
//@property (retain,nonatomic) NSSet * certificateTypes;
//@property (retain,nonatomic) DVTSigningCertificateManager * certificateManager;
//@property (retain,nonatomic) IDEProvisioningPortal * portal;
//@property (retain,nonatomic) NSObject<IDEProvisioningTeamAccountPairProvider> * teamAccountPairProvider;
//@property (retain,nonatomic) IDEProvisioningTeamManager * teamManager;
//@property (retain,nonatomic) DVTDeveloperAccountManager * developerAccountManager;
//@property (retain,nonatomic) DVTDeveloperAccount * developerAccount;
//- (id)initWithTeam:(id)v1;
//- (id)sessionProviderWithError:(id *)v1;
//- (id)sessionWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEManageCertificatesItemSource : NSObject<DVTInvalidation> {
//    unsigned int _currentGeneration;
//    NSObject<OS_dispatch_queue> * _reloadQueue;
//    NSObject<DVTInvalidation> * _certManagerToken;
//    NSObject<DVTInvalidation> * _accountsToken;
//    char _finishedInitialScan;
//    char _refreshing;
//    char _ignoreUpdates;
//    NSError * _currentError;
//    DVTDelayedInvocation * _delayedUpdate;
//    IDEManageCertificatesContext * _context;
//    IDEManageCertificatesItemCollection * _itemCollection;
//    NSObject<DVTPortalCertificateProtocol> * _newlyCreatedCertificate;
//}
//@property (nonatomic) char refreshing;
//@property (retain,nonatomic) DVTDelayedInvocation * delayedUpdate;
//@property (retain,nonatomic) IDEManageCertificatesContext * context;
//@property (readonly,nonatomic) IDEManageCertificatesItemCollection * itemCollection;
//@property (retain,nonatomic) NSError * currentError;
//@property (nonatomic) char finishedInitialScan;
//@property (retain,nonatomic) NSObject<DVTPortalCertificateProtocol> * newlyCreatedCertificate;
//@property (nonatomic) char ignoreUpdates;
//@property (readonly,nonatomic) NSSet * items;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (void)_portalCertificatesWithSession:(id)v1 context:(id)v2 outPortalCertificates:(id *)v3 outPortalErrors:(id *)v4;
//- (id)initWithContext:(id)v1;
//- (void)primitiveInvalidate;
//- (void)_setUpObservations;
//- (char)deleteItemFromKeychain:(id)v1 error:(id *)v2;
//- (id)_reloadQueue;
//- (void)requestCertificateType:(id)v1 callback:(void (^ /* unknown block signature */)(void))v2;
//- (void)_reloadDataWithNewCertificateOrNil:(id)v1;
//- (void)_updateItemsOnMainThreadWithSerialNumbers:(id)v1 portalCertificates:(id)v2 localCertificates:(id)v3 error:(id)v4 quickLocalOnlyUpdate:(char)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogUnitTestSection : IDEActivityLogSection {
//    char _wasSkipped;
//    NSString * _durationString;
//    NSString * _testsPassedString;
//    NSString * _summaryString;
//    NSString * _suiteName;
//    NSString * _testName;
//    NSString * _performanceTestOutputString;
//    unsigned long long _testsPassedCount;
//    unsigned long long _testsCount;
//    unsigned long long _testsSkippedCount;
//    unsigned long long _unexpectedFailuresCount;
//    double _duration;
//    NSString * _runnablePath;
//    NSString * _runnableUTI;
//}
//@property (copy) NSString * runnablePath;
//@property (copy) NSString * runnableUTI;
//@property (copy) NSString * testsPassedString;
//@property (copy) NSString * summaryString;
//@property (copy) NSString * suiteName;
//@property (copy) NSString * testName;
//@property (copy) NSString * performanceTestOutputString;
//@property unsigned long long testsPassedCount;
//@property unsigned long long testsCount;
//@property unsigned long long testsSkippedCount;
//@property unsigned long long unexpectedFailuresCount;
//@property (nonatomic) double duration;
//@property char wasSkipped;
//@property (readonly) IDETestIdentifier * testIdentifier;
//@property (readonly,copy) NSString * durationString;
//+ (id)newWithDomainType:(id)v1 title:(id)v2;
//+ (id)defaultLogSectionDomainType;
//+ (Class)logRecorderClass;
//+ (id)workerGroupDomainType;
//+ (id)configurationGroupDomainType;
//- (id)addAbnormalFinishMessageWithReason:(id)v1 error:(id)v2;
//- (void)buildStrings;
//- (id)initUnitTestWithTitle:(id)v1 location:(id)v2;
//- (id)initUnitTestWorkerGroupWithTitle:(id)v1 subtitle:(id)v2 runnablePath:(id)v3 runnableUTI:(id)v4;
//- (id)initWithTestsPassedString:(id)v1 wasSkipped:(char)v2 duration:(double)v3 summaryString:(id)v4 suiteName:(id)v5 testName:(id)v6 performanceTestOutputString:(id)v7 runnablePath:(id)v8 runnableUTI:(id)v9 sectionType:(long long)v10 domainType:(id)v11 title:(id)v12 subtitle:(id)v13 location:(id)v14 signature:(id)v15 timeStartedRecording:(double)v16 timeStoppedRecording:(double)v17 subsections:(id)v18 text:(id)v19 messages:(id)v20 wasCancelled:(char)v21 wasFetchedFromCache:(char)v22 commandDetailDescription:(id)v23 resultCode:(long long)v24 uniqueIdentifier:(id)v25 localizedResultString:(id)v26 xcbuildSignature:(id)v27;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExtension : NSObject {
//    NSXPCConnection * _serviceConnection;
//    NSTimer * _checkInTimer;
//    NSExtension * _extension;
//    NSString * _name;
//    NSString * _identifier;
//    DVTToolsVersion * _builtAgainstXcodeVersion;
//    void (^ /* unknown block signature */)(void) _interruptionHandler;
//    void (^ /* unknown block signature */)(void) _invalidationHandler;
//    id _service;
//    NSObject<OS_dispatch_queue> * _serviceQueue;
//}
//@property (readonly) NSExtension * extension;
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * identifier;
//@property (readonly,copy) DVTToolsVersion * builtAgainstXcodeVersion;
//@property (copy) void (^ /* unknown block signature */)(void) interruptionHandler;
//@property (copy) void (^ /* unknown block signature */)(void) invalidationHandler;
//@property (readonly) id service;
//@property (readonly) NSObject<OS_dispatch_queue> * serviceQueue;
//@property (readonly,copy) NSString * extensionBootstrapClassName;
//@property (readonly) NSXPCInterface * extensionServiceInterface;
//+ (void)initialize;
//+ (void)observeExtensionsDidChangeForIdentifier:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//+ (id)extensionObservers;
//+ (void)reportExtensionTimeOut:(id)v1 timeout:(double)v2;
//+ (void)extensionDiscovered:(id)v1 extension:(id)v2;
//+ (void)extensionRemoved:(id)v1 extensionIdentifier:(id)v2;
//+ (id)timedOutExtensions;
//+ (id)extensions;
//+ (id)startLocatingExtensionsOfExtensionPoint:(id)v1 didStartExtensions:(void (^ /* unknown block signature */)(void))v2 didStopExtensions:(void (^ /* unknown block signature */)(void))v3;
//- (id)initWithExtension:(id)v1;
//- (id)description;
//- (void)_safelyAbortCheckInWithHostContext:(id)v1 reason:(id)v2;
//- (char)_safelyAwaitCheckInWithHostContext:(id)v1;
//- (id)_safelyAwaitServiceEndpointWithHostContext:(id)v1;
//- (void)_verifyBuiltInExtensionsContinueAfterCheckIn;
//- (void)start:(void (^ /* unknown block signature */)(void))v1;
//- (void)stop:(void (^ /* unknown block signature */)(void))v1;
//- (void)restart:(void (^ /* unknown block signature */)(void))v1;
//- (void)connectionInterrupted;
//- (void)connectionInvalidated;
//- (char)finishStart:(void (^ /* unknown block signature */)(void))v1;
//- (char)finishStop:(void (^ /* unknown block signature */)(void))v1;
//- (char)finishRestart:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCopyBCSymbolMapsStep : IDEDistributionItemProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
@interface IDERunDestination : NSObject<NSCopying> {
    DVTObservingToken * _targetDeviceNameObservingToken;
    char _isTargetDeviceEligible;
    DVTDevice * _targetDevice;
    NSString * _targetArchitecture;
    DVTSDK * _targetSDK;
    //DVTSDKVariant * _targetSDKVariant;
    NSString * _targetIdentifier;
    NSError * _deviceIneligibilityError;
}
@property (readonly) NSError * deviceIneligibilityError;
@property (readonly) NSString * displayOrder;
@property (readonly) NSString * targetDeviceForSorting;
@property (readonly) NSString * targetSDKForSorting;
@property (readonly) NSString * targetSDKVariantForSorting;
@property (readonly) unsigned long long targetArchitectureForSorting;
@property (readonly,copy) NSString * displayName;
@property (readonly,copy) NSString * fullDisplayName;
@property (readonly) DVTDevice * targetDevice;
@property (readonly,copy) NSString * targetArchitecture;
@property (readonly) DVTSDK * targetSDK;
//@property (readonly) DVTSDKVariant * targetSDKVariant;
@property (readonly) NSString * targetIdentifier;
@property (readonly) char isTargetDeviceEligible;
@property (readonly) NSString * displayableIneligibilityMessage;
@property (readonly) NSString * displayableIneligibilityLongDescription;
@property (readonly) char isMacDesignedForiPad;
@property (readonly) char isMacCatalyst;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingFullDisplayName;
+ (id)fallbackActiveArchitectureForBuildArchitectures:(id)v1;
- (id)initWithTargetDevice:(id)v1 architecture:(id)v2 SDK:(id)v3;
- (id)initWithTargetDevice:(id)v1 architecture:(id)v2 SDK:(id)v3 SDKVariant:(id)v4;
- (id)initWithIneligibleTargetDevice:(id)v1 architecture:(id)v2 SDK:(id)v3 SDKVariant:(id)v4 deviceIneligibilityError:(id)v5;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)v1;
- (id)displayNameAdditionsWithScheme:(id)v1;
- (id)fullDisplayNameWithScheme:(id)v1;
- (id)description;
- (char)_isValidRunDestinationForScheme:(id)v1 schemeTask:(long long)v2 schemeCommand:(id)v3 executionEnvironment:(id)v4 overridingTestingSpecifiers:(id)v5 runDestinationManager:(id)v6 forPresentation:(char)v7 error:(id *)v8;
- (char)isValidRunDestinationForScheme:(id)v1 schemeTask:(long long)v2 schemeCommand:(id)v3 executionEnvironment:(id)v4 overridingTestingSpecifiers:(id)v5 runDestinationManager:(id)v6 error:(id *)v7;
- (char)isValidRunDestinationForScheme:(id)v1 schemeTask:(long long)v2 schemeCommand:(id)v3 executionEnvironment:(id)v4 overridingTestingSpecifiers:(id)v5 error:(id *)v6;
- (id)runWorkerForLaunchSession:(id)v1 error:(id *)v2;
- (IDERunOperation*)runOperationForLaunchSession:(id)v1 error:(id *)v2;
- (id)activeArchitectureForBuildArchitectures:(id)v1;
- (char)canRunMultipleInstancesPerApp;
- (id)dvt_detailedDebugDescription;
@end
//
//
///*****************************************************************/
//
//@interface IDEARCConversionContext : IDEMigrationContext
//+ (Class)migrationTargetSublass;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCopyInAppPurchaseContentStep : IDEDistributionProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextSubstitutionTemplateInstantiationContext : IDETemplateInstantiationContext
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateTextSubstitutionFactory : IDETemplateFactory {
//    NSFileManager * _fileManager;
//    IDEVersionedFileManager * _versionedFileManager;
//    DVTObservingToken * _operationObservingToken;
//    NSOperationQueue * _queue;
//}
//@property (readonly) NSOperationQueue * queue;
//- (id)init;
//- (void)dealloc;
//- (id)additionalMacrosForContext:(id)v1;
//- (char)shouldAddCreatedDocumentsToVersionControl:(id)v1;
//- (id)standardMacrosForContext:(id)v1;
//- (id)macroEngineForContext:(id)v1;
//- (id)mainFileNameForContext:(id)v1;
//- (id)_operationToInstantiateTemplateForContext:(id)v1 options:(id)v2 processor:(void (^ /* unknown block signature */)(void))v3 finalProcessor:(void (^ /* unknown block signature */)(void))v4;
//- (id)proposedFilePathsForContext:(id)v1 options:(id)v2 error:(id *)v3;
//- (id)operationForContext:(id)v1 options:(id)v2;
//- (void)instantiateTemplateForContext:(id)v1 options:(id)v2 whenDone:(void (^ /* unknown block signature */)(void))v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPIFObjectInfo : NSObject {
//    NSString * _signature;
//    void (^ /* unknown block signature */)(void) _generatePIF;
//}
//@property (readonly) NSString * signature;
//@property (readonly) void (^ /* unknown block signature */)(void) generatePIF;
//- (id)initWithSignature:(id)v1 generator:(void (^ /* unknown block signature */)(void))v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileQualificationErrors : NSObject
//+ (id)errorWithTitle:(id)v1 code:(long long)v2 profile:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionClassKitEnvironment : IDEDistributionOptionEntitlementProcessor
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)makeNewProcessorWithDistributionMethod:(id)v1 item:(id)v2 itemEntitlements:(id)v3 team:(id)v4;
//- (id)matchingProcessorFromProcessors:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionSymbols : IDEDistributionOption
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)initWithIdentifier:(id)v1 context:(id)v2;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDECapabilityItem : NSObject<IDEProjectItem,IDESigningEditorCapabilityItemLibraryAssetContextProtocol> {
//    char _isMacCatalystException;
//    NSSet * _entitlementsWithoutPortalFeature;
//    Class _viewControllerClass;
//    Class _modelClass;
//    NSString * _name;
//    NSString * _imageName;
//    NSString * _capabilityDescription;
//    DVTExtension * _itemExtension;
//    DVTPlatform * _platform;
//    IDEProductType * _productType;
//    NSString * _appExtensionPointIdentifier;
//}
//@property (readonly) DVTExtension * itemExtension;
//@property (retain,nonatomic) DVTPlatform * platform;
//@property (retain,nonatomic) IDEProductType * productType;
//@property (retain,nonatomic) NSString * appExtensionPointIdentifier;
//@property (retain,nonatomic) NSSet * entitlementsWithoutPortalFeature;
//@property (nonatomic) char isMacCatalystException;
//@property (readonly,nonatomic) Class viewControllerClass;
//@property (readonly,nonatomic) Class modelClass;
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSString * imageName;
//@property (readonly,nonatomic) NSString * capabilityDescription;
//@property (readonly,nonatomic) NSString * identifier;
//@property (readonly,nonatomic) DVTPortalProfileFeature * feature;
//@property (readonly,nonatomic) DVTPortalContainerType * containerType;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic) char isAvailableWithFreeProvisioningTeam;
//@property (readonly,nonatomic) NSURL * imageURL;
//- (id)initWithExtension:(id)v1 platform:(id)v2 productType:(id)v3 appExtensionPointIdentifier:(id)v4 isMacCatalystException:(char)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDeviceDiagnostics : NSObject
//+ (id)failedToLaunchErrorForRunDestination:(id)v1 internalLaunchError:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAlertEventProxy : NSObject {
//    IDEAlertEvent * _alertEvent;
//    char _triedToLoadClass;
//    DVTExtension * _extension;
//}
//@property (retain) DVTExtension * extension;
//@property (readonly) IDEAlertEvent * alertEvent;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAlertEvent : NSObject {
//    NSMutableDictionary * _alerts;
//    NSMutableDictionary * _observationTokensByAlert;
//    NSString * _group;
//    NSString * _groupSortKey;
//    NSString * _iconName;
//    NSString * _identifier;
//    NSString * _title;
//    NSString * _titleSortKey;
//    char _showInPreferences;
//}
//@property char showInPreferences;
//@property (readonly) NSString * identifier;
//@property (retain) NSString * title;
//@property (retain,nonatomic) NSString * titleSortKey;
//@property (retain) NSString * group;
//@property (retain,nonatomic) NSString * groupSortKey;
//@property (retain) NSString * iconName;
//@property (readonly) NSDictionary * alerts;
//+ (void)_registerAlertEventExtension:(id)v1;
//+ (void)_cacheAlertEvents;
//+ (id)alertEventForIdentifier:(id)v1;
//+ (id)alertEvents;
//+ (id)alertEventGroups;
//+ (id)alertEventsForGroup:(id)v1;
//+ (id)alertLogAspect;
//- (void)ide_initializeAlertsFromDefaults:(id)v1;
//- (id)init;
//- (id)initWithIdentifier:(id)v1 title:(id)v2 group:(id)v3;
//- (id)description;
//- (void)addAlert:(id)v1;
//- (void)removeAlert:(id)v1;
//- (char)hasEnabledAlerts;
//- (id)ide_initializeAlertContext:(id)v1 forWorkspace:(id)v2;
//- (void)runInWorkspace:(id)v1 context:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)runInWorkspace:(id)v1 context:(id)v2;
//- (void)observeValueForKeyPath:(id)v1 ofObject:(id)v2 change:(id)v3 context:(void *)v4;
//- (id)alertDefaultsKey;
//- (id)alertDefaults;
//- (id)_defaultsForOnDiskPlistOfBehaviors;
//- (id)propertyListForVersion:(int)v1;
//- (id)propertyList;
//- (void)saveToUserDefaults;
//- (void)ide_setIdentifier:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEVersionCommandLineVerb : IDECommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEShellXPCDebugSession : IDEDebugSession {
//    NSObject<IDEDebugTopNavigableModel> * _topNavigableModel;
//}
//- (id)init;
//- (id)initWithName:(id)v1;
//- (void)primitiveInvalidate;
//- (id)topNavigableModel;
//- (void)setTopNavigableModel:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEShellXPCProcess : NSObject<IDEDebugTopNavigableModel> {
//    NSString * _associatedProcessUUID;
//    IDELaunchSession * launchSession;
//    NSString * _name;
//}
//@property (copy,nonatomic) NSString * name;
//@property (readonly,nonatomic) IDEDebugSession * parentDebugSession;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//- (id)init;
//- (id)initWithDebugSession:(id)v1 name:(id)v2;
//- (id)contentDelegateUIExtensionIdentifier;
//- (char)isDoingAsyncAttach;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEGaugeDataProviderService : DVTDeviceService {
//    DVTMutableOrderedDictionary * _coordinatorsByPID;
//    NSSet * _startedPids;
//    NSObject<OS_dispatch_queue> * _serialQueue;
//    NSObject<OS_dispatch_source> * _timer;
//    bool _suspended;
//    char _useProxiedDevice;
//}
//@property char useProxiedDevice;
//+ (id)capability;
//+ (id)observableAttributes;
//- (id)initForDevice:(id)v1 extension:(id)v2 capability:(id)v3;
//- (void)dealloc;
//- (void)performServiceQueueBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)addAssociatedQueryCoordinator:(id)v1;
//- (void)removeAssociatedQueryCoordinator:(id)v1;
//- (void)startTimerAtTime:(double)v1 withInterval:(double)v2;
//- (void)pauseTimer;
//- (void)resumeTimer;
//- (void)stopTimer;
//- (void)willStartSamplingAtTime:(double)v1 withInterval:(double)v2;
//- (void)didPauseSampling;
//- (void)willResumeSampling;
//- (void)didStopSampling;
//- (void)startSamplingAtTime:(double)v1 withInterval:(double)v2;
//- (void)pauseSampling;
//- (void)resumeSampling;
//- (void)stopSampling;
//- (id)startSamplingForPIDs:(id)v1;
//- (id)sampleAttributes:(id)v1 forPIDs:(id)v2;
//- (id)stopSamplingForPIDs:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogActionMessage : IDEActivityLogMessage {
//    NSString * _actionIdentifier;
//}
//@property (copy) NSString * actionIdentifier;
//- (id)initWithAction:(id)v1 severity:(unsigned long long)v2 title:(id)v3 location:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExecutionEnvironment : NSObject<DVTInvalidation> {
//    NSMutableArray * _executionTrackers;
//    NSMutableArray * _executionTrackersForDisplay;
//    NSMutableOrderedSet * _executedActionInvocationRecords;
//    NSMutableArray * _queuedBuildOperationInfos;
//    NSCountedSet * _activeBuildLogs;
//    IDEBuildOperation * _currentBuildOperation;
//    long long _buildState;
//    long long _lastBuildResult;
//    unsigned long long _disableSubmissionOfBuildOperationsCount;
//    NSString * _disableBuildSubmissionsReason;
//    unsigned long long _queueBuildOperationsCount;
//    NSMutableArray * _launchSessions;
//    NSMapTable * _launchSessionStateObservationTokens;
//    NSMapTable * _launchSessionRunnablePIDObservationTokens;
//    IDELogStore * _logStore;
//    IDEInMemoryLogStore * _interfaceBuilderLogStore;
//    NSMapTable * _ibLogsByBuildable;
//    char _handlingLaunchSessionStateChange;
//    char _settingLaunchSession;
//    char _settingLaunchSessionForTabChange;
//    NSMutableArray * _debugSessions;
//    DVTObservingToken * _currentDebugSessionObserverToken;
//    DVTObservingToken * _currentTraceInferiorSessionObserverToken;
//    IDEWorkspace * _workspace;
//    IDEExecutionTracker * _currentExecutionTracker;
//    IDEWorkspaceArena * _workspaceArena;
//    NSObject<IDEClientTracking> * _clientTracker;
//    IDELaunchSession * _selectedLaunchSession;
//    IDELaunchSession * _currentLaunchSession;
//    NSMapTable * _productNamesToBuildableProductsMapping;
//    NSMapTable * _productNameStemsToBuildableProductsMapping;
//    NSMapTable * _productModuleNamesToBuildableProductsMapping;
//    NSObject<IDEPreBuildSavingDelegate> * _preBuildSavingDelegate;
//    NSMapTable * _operationGroupSuboperationObserversByExecutionTracker;
//    NSOperationQueue * _operationQueue;
//}
//@property (readonly,copy) NSMutableArray * mutableDebugSessions;
//@property (readonly,copy) NSMutableArray * mutableExecutionTrackers;
//@property (readonly,copy) NSMutableArray * mutableExecutionTrackersForDisplay;
//@property (readonly,copy) NSMutableOrderedSet * mutableExecutedActionInvocationRecords;
//@property (retain) IDEExecutionTracker * currentExecutionTracker;
//@property (retain) NSMapTable * operationGroupSuboperationObserversByExecutionTracker;
//@property (retain) NSOperationQueue * operationQueue;
//@property (readonly) NSArray * queuedBuildOperationInfos;
//@property (retain) IDEBuildOperation * currentBuildOperation;
//@property (retain) IDEWorkspaceArena * workspaceArena;
//@property (readonly,copy) NSMutableArray * mutableLaunchSessions;
//@property (retain,nonatomic) IDELaunchSession * currentLaunchSession;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly,copy) NSArray * executionTrackers;
//@property (readonly,copy) NSArray * executionTrackersForDisplay;
//@property (readonly) NSArray * executionTrackersOfOperationsWithBuilds;
//@property (readonly,copy) NSSet * executedActionInvocationRecords;
//@property (retain) NSObject<IDEClientTracking> * clientTracker;
//@property (readonly) NSSet * queuedBuildOperations;
//@property (readonly) char hasQueuedBuildOperations;
//@property (readonly) char hasUserInitiatedBuildOperations;
//@property (readonly) long long buildState;
//@property (readonly) int currentBuildOperationServiceTier;
//@property (readonly) char canSubmitBuildOperations;
//@property (readonly) long long lastBuildResult;
//@property (readonly) IDEActivityLogSection * latestBuildLog;
//@property (readonly) IDEActivityLogSection * latestCompleteBuildLog;
//@property (readonly,copy) NSArray * logRecords;
//@property (readonly) NSArray * interfaceBuilderLogs;
//@property (readonly,copy) NSArray * launchSessions;
//@property (readonly,copy) NSArray * debugSessions;
//@property (retain,nonatomic) IDELaunchSession * selectedLaunchSession;
//@property (readonly) IDEBreakpointManager * breakpointManager;
//@property (copy) NSMapTable * productNamesToBuildableProductsMapping;
//@property (copy) NSMapTable * productNameStemsToBuildableProductsMapping;
//@property (copy) NSMapTable * productModuleNamesToBuildableProductsMapping;
//@property (retain) NSObject<IDEPreBuildSavingDelegate> * preBuildSavingDelegate;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (char)automaticallyNotifiesObserversForCurrentExecutionTracker;
//+ (id)keyPathsForValuesAffectingBreakpointManager;
//+ (id)keyPathsForValuesAffectingLogRecords;
//+ (id)keyPathsForValuesAffectingLatestBuildLog;
//+ (char)automaticallyNotifiesObserversOfCurrentLaunchSession;
//- (id)initWithWorkspaceArena:(id)v1;
//- (void)_setupDebugSessionsObservation;
//- (void)primitiveInvalidate;
//- (void)disableSubmissionOfBuildOperationsWithReason:(id)v1;
//- (void)enableSubmissionOfBuildOperationsWithReason:(id)v1;
//- (void)startQueuingBuildOperations;
//- (void)stopQueuingBuildOperations;
//- (void)_observeLaunchSessionForRunOperation:(id)v1;
//- (void)_startOperationForTracker:(id)v1 commandName:(id)v2 operationIncludesBuild:(char)v3;
//- (void)_addSuboperationObservationToken:(id)v1 forExecutionTracker:(id)v2;
//- (void)_startNextQueuedBuildOperationIfNecessary;
//- (id)executeOperation:(id)v1 withCommandName:(id)v2 serviceTier:(int)v3 invocationRecord:(id)v4 error:(id *)v5;
//- (id)executeOperation:(id)v1 withCommandName:(id)v2 serviceTier:(int)v3 invocationRecord:(id)v4 terminationSignpost:(void (^ /* unknown block signature */)(void))v5 error:(id *)v6;
//- (void)_storeLogForOperation:(id)v1;
//- (void)promoteXPCExecutionTrackerForDisplay:(id)v1;
//- (void)_setSelectedLaunchSessionForTabChange:(id)v1;
//- (void)_noteLaunchSessionTargetOutputStateChanged:(id)v1;
//- (void)_setStatusDisplayNamesForExecutionTracker;
//- (void)_setStatusDisplayNameForLaunchSession:(id)v1;
//- (void)_removeSameLaunchSessionsFor:(id)v1;
//- (void)_handleLaunchSessionStarted:(id)v1;
//- (void)_handleLaunchSessionExpired:(id)v1;
//- (void)_handleLaunchSession:(id)v1 stateChange:(id)v2;
//- (void)_addMissingErrorForFailedBuildToRecorder:(id)v1 buildLog:(id)v2;
//- (void)_completeBuildOperation:(id)v1 andPostLastBuildCompleted:(char)v2 andPostLastUserInitiatedBuildCompleted:(char)v3;
//- (void)observeValueForKeyPath:(id)v1 ofObject:(id)v2 change:(id)v3 context:(void *)v4;
//- (void)_setLocalizedResultStringForBuildLog:(id)v1 usingBuildOperationProvider:(id)v2 buildAction:(id)v3;
//- (void)serializeMetrics:(id)v1;
//- (id)queuedBuildOperationsDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEQueuedOperationInfo : NSObject {
//    NSMutableArray * _buildOperations;
//    char _isRunning;
//    NSString * _commandName;
//    IDEExecutionOperationTracker * _tracker;
//}
//@property (copy) NSString * commandName;
//@property (retain) IDEExecutionOperationTracker * tracker;
//@property (readonly) DVTOperation * topLevelOperation;
//@property (readonly,copy) NSArray * buildOperations;
//@property char isRunning;
//- (id)initWithCommandName:(id)v1 tracker:(id)v2 buildOperations:(id)v3;
//- (id)initWithCommandName:(id)v1 tracker:(id)v2;
//- (char)containsBuildOperation:(id)v1;
//- (void)removeBuildOperation:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAlert : NSObject {
//    NSSet * _cachedProperties;
//    char _enabled;
//    NSString * _identifier;
//    double _executionPriority;
//}
//@property (readonly) NSString * identifier;
//@property (getter=isEnabled) char enabled;
//@property double executionPriority;
//+ (void)initialize;
//+ (id)_identifierForAlertExtension:(id)v1;
//+ (void)_registerAlert:(id)v1;
//+ (void)_cacheAlerts;
//+ (id)alertExtensions;
//+ (id)alertIdentifiers;
//+ (id)alertGroups;
//+ (id)alertIdentifiersForGroup:(id)v1;
//+ (id)alertExtensionForAlertIdentifier:(id)v1;
//+ (char)canAlertWithIdentifierRunOnCurrentOS:(id)v1;
//+ (id)createAlertForAlertIdentifier:(id)v1;
//+ (id)createAlertForAlertIdentifier:(id)v1 propertyList:(id)v2;
//- (id)group;
//- (id)title;
//- (char)canRunOnCurrentOS;
//- (id)properties;
//- (void)_permuteAlert:(id)v1 byVaryingProperty:(id)v2 in:(id)v3 values:(id)v4 withBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)enumeratePropertyPermutationsWithBlock:(void (^ /* unknown block signature */)(void))v1;
//- (char)validatePropertyValues:(id)v1;
//- (id)valuesForProperty:(id)v1;
//- (void)prepareToRunForEvent:(id)v1 inWorkspace:(id)v2 context:(id)v3;
//- (void)runForEvent:(id)v1 inWorkspace:(id)v2 context:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)description;
//- (long long)compare:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)propertyList;
//- (id)initWithPropertyList:(id)v1;
//- (int)alertPropertyListVersion;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlTreeNode : NSObject {
//    NSMutableArray * _children;
//    DVTFilePath * _filePath;
//    unsigned long long _sourceControlLocalStatus;
//    unsigned long long _sourceControlServerStatus;
//    DVTFilePath * _basePath;
//    IDESourceControlTreeNode * _parentGroup;
//    NSString * _navigableItem_sourceControlLocalStatus;
//    NSString * _navigableItem_sourceControlServerStatus;
//}
//@property (readonly,nonatomic) DVTFilePath * filePath;
//@property (readonly,nonatomic) NSString * relativeFilePath;
//@property (nonatomic) unsigned long long sourceControlLocalStatus;
//@property (nonatomic) unsigned long long sourceControlServerStatus;
//@property (retain,nonatomic) DVTFilePath * basePath;
//@property (readonly,nonatomic) char isLeaf;
//@property (retain) IDESourceControlTreeNode * parentGroup;
//@property (readonly) NSString * navigableItem_sourceControlLocalStatus;
//@property (readonly) NSString * navigableItem_sourceControlServerStatus;
//@property (copy) NSArray * children;
//@property (readonly) NSMutableArray * mutableChildren;
//- (id)init;
//- (id)initWithFilePath:(id)v1 basePath:(id)v2 sourceControlLocalStatus:(unsigned long long)v3 sourceControlServerStatus:(unsigned long long)v4;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlTreeConflictNode : IDESourceControlTreeNode {
//    unsigned long long _conflictStateForUpdateOrMerge;
//}
//@property (nonatomic) unsigned long long conflictStateForUpdateOrMerge;
//- (id)initWithFilePath:(id)v1 basePath:(id)v2 sourceControlLocalStatus:(unsigned long long)v3 sourceControlServerStatus:(unsigned long long)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindCompoundPredicate : IDEBatchFindFilePathPredicate {
//    NSArray * _predicates;
//}
//@property (readonly) NSArray * predicates;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)initWithPredicates:(id)v1;
//- (unsigned long long)hash;
//- (char)isEqualToFilePathPredicateWithIdenticalClass:(id)v1;
//- (id)propertyListRepresentation;
//- (id)filtersBoundToWorkspace:(id)v1;
//- (char)isWorkspaceSpecific;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAllPredicate : IDEBatchFindCompoundPredicate
//+ (id)propertyListIdentifier;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAnyPredicate : IDEBatchFindCompoundPredicate
//+ (id)propertyListIdentifier;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindNonePredicate : IDEBatchFindCompoundPredicate
//+ (id)propertyListIdentifier;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEEntitlementsMerger : NSObject
//+ (id)sharedMerger;
//+ (id)keysToAlwaysCopyFromProfile;
//+ (id)genericallyDefinedAppKeysToCopyFromProfile;
//- (id)entitlementsByMergingProfileEntitlements:(id)v1 appEntitlements:(id)v2 bundleIdentifier:(id)v3 appName:(id)v4 profileName:(id)v5 warnings:(id *)v6 error:(id *)v7;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionEmbedProfileStep : IDEDistributionItemProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDELogStore : NSObject<IDEBuildNoticeLogStore,DVTInvalidation> {
//    NSMutableArray * _logRecords;
//}
//@property (readonly) NSArray * logRecords;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) NSMutableArray * mutableLogRecords;
//@property (readonly) NSArray * logRecords;
//@property char preserveOldLogs;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)onDiskOrInMemoryLogStoreInWorkspaceArena:(id)v1 prefix:(id)v2;
//- (void)addBuildNoticeBlueprintLog:(id)v1 from:(id)v2 rootSignature:(id)v3;
//- (void)primitiveInvalidate;
//- (id)init;
//- (id)addLog:(id)v1 entityIdentifier:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)addLog:(id)v1 parameters:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)removeLogRecord:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)purgeUntrackedItems;
//- (id)logRecordWithURL:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELogStoreManageableParameters : NSObject {
//    char _collectsCodeCoverage;
//    char _collectsTimelineMetrics;
//    char _isImported;
//    char _disablesSourceIntegration;
//    IDEEntityIdentifier * _entityIdentifier;
//}
//@property (retain) IDEEntityIdentifier * entityIdentifier;
//@property char collectsCodeCoverage;
//@property char collectsTimelineMetrics;
//@property char isImported;
//@property char disablesSourceIntegration;
//+ (id)parametersWithEntityIdentifier:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogRecord : NSObject<IDEBuildNoticeLogRecord> {
//    char _isImported;
//    char _disablesSourceIntegration;
//    char _hasTests;
//    NSString * _auxiliaryLogUniqueIdentifier;
//    IDEEntityIdentifier * _entityIdentifier;
//    DVTFilePath * _buildMetricsReportFilePath;
//}
//@property char isImported;
//@property (readonly) NSObject<IDELogStoreManageable> * logStoreManageable;
//@property (readonly) NSString * uniqueIdentifier;
//@property (readonly) NSString * auxiliaryLogUniqueIdentifier;
//@property (readonly) NSURL * logURL;
//@property (readonly) char disablesSourceIntegration;
//@property (readonly) IDETypeIdentifier * domainType;
//@property (readonly) NSString * title;
//@property (readonly) double timeStartedRecording;
//@property (readonly,nonatomic) double timeStoppedRecording;
//@property (readonly) DVTFileDataType * documentType;
//@property (readonly) NSString * signature;
//@property (readonly) IDEEntityIdentifier * entityIdentifier;
//@property (readonly) char isRecording;
//@property (readonly) NSString * onDiskPath;
//@property (readonly) char hasPrimaryLog;
//@property (readonly) char hasAuxiliaryLog;
//@property (readonly) char hasTests;
//@property (readonly) char hasCoverageData;
//@property (readonly) char hasTimelineData;
//@property (readonly) DVTFilePromise * coverageReportFilePromise;
//@property (readonly) DVTFilePromise * coverageArchiveFilePromise;
//@property (readonly) DVTFilePath * coverageArchiveFilePath;
//@property (readonly) DVTFilePath * buildMetricsReportFilePath;
//@property (readonly) IDEActivityLogObservableRecord * primaryObservable;
//@property (readonly) IDEActivityLogObservableRecord * auxiliaryObservable;
//+ (id)cachedLogRecordWithURL:(id)v1;
//+ (void)cacheLogRecord:(id)v1;
//+ (void)uncacheLogRecord:(id)v1;
//+ (id)cacheLog:(id)v1;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//- (id)fullLogWithError:(id *)v1;
//- (id)auxiliaryLogWithError:(id *)v1;
//- (id)primaryLogItems;
//- (id)auxiliaryLogItems;
//- (id)logSectionForItem:(id)v1 error:(id *)v2;
//- (id)fullLogStoreManageableWithError:(id *)v1;
//- (id)fullLogIfInMemory;
//- (long long)compareUsingTimeStartedRecording:(id)v1;
//- (id)initWithEntityIdentifier:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogObservableRecord : NSObject {
//    NSObject<IDELogStoreObservable> * _observable;
//    NSString * _highLevelStatus;
//    DVTObservingToken * _recorderLogObservingToken;
//}
//@property (retain) DVTObservingToken * recorderLogObservingToken;
//@property (retain) NSString * highLevelStatus;
//@property (readonly) NSObject<IDELogStoreObservable> * observable;
//@property (readonly) char isRecording;
//+ (id)highLevelStatusForLogStoreObservable:(id)v1;
//+ (id)keyPathsForValuesAffectingIsRecording;
//- (id)initWithObservable:(id)v1;
//- (void)tearDown;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELogStoreManageableLogItem : NSObject {
//    char _isPrimary;
//    NSString * _title;
//    NSString * _key;
//}
//@property (readonly,copy) NSString * title;
//@property (readonly,copy) NSString * key;
//@property (readonly) char isPrimary;
//+ (id)itemWithTitle:(id)v1 key:(id)v2 isPrimary:(char)v3;
//- (id)initWithTitle:(id)v1 key:(id)v2 isPrimary:(char)v3;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppExtensionConfiguration : NSObject
//+ (void)initialize;
//+ (int)modeForExtensionIdentifier:(id)v1 platformFamily:(id)v2;
//+ (id)applicationBundleIdentifiersForExtension:(id)v1 platformFamily:(id)v2;
//+ (int)actionForExtensionIdentifier:(id)v1 bundleIdentifier:(id)v2 platformFamily:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEFolderContents : NSObject {
//    IDEFolder * _folder;
//    DVTFilePath * _filePath;
//    NSArray * _fileNames;
//}
//@property (retain) DVTFilePath * filePath;
//@property (retain) NSArray * fileNames;
//+ (void)initialize;
//- (id)initWithFilePath:(id)v1 folder:(id)v2;
//- (void)_teardown;
//- (void)_updateContentsFromFileSystem;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFolder : IDEContainer {
//    _IDEFolderContents * _contents;
//    char _readingFromFilesystem;
//    int _superclassActivity;
//    char _didSetSuperclassActivity;
//}
//+ (void)initialize;
//+ (char)foldersShouldSortFirst;
//+ (id)containerFileDataType;
//+ (id)containerTypeDisplayName;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (char)_THREAD_shouldAddFileWithName:(id)v1;
//+ (char)_observeContainerDataFilePathsForChanges;
//+ (char)supportsMultipleInstancesPerFilePath;
//- (char)openQuickly_shouldIncludeAsResult;
//- (id)initWithFilePath:(id)v1 extension:(id)v2 workspace:(id)v3 options:(id)v4 error:(id *)v5;
//- (void)primitiveInvalidate;
//- (id)newFileReferenceForChildFilePath:(id)v1;
//- (id)createRootGroup;
//- (id)_itemBaseFilePathForFilePath:(id)v1;
//- (id)_itemWithFileName:(id)v1;
//- (id)_addFileReferenceNamed:(id)v1;
//- (void)_updateSubitemsWithFileNames:(id)v1;
//- (void)_addSubcontainer:(id)v1;
//- (void)_filePathDidChange:(id)v1;
//- (void)_updateSubitemsFromContent;
//- (void)_respondToFileChangeOnDiskWithFilePath:(id)v1;
//- (void)_sortSubitems;
//- (id)sortedSubitemsForSubitems:(id)v1;
//- (void)setActivity:(int)v1;
//- (void)_beginReadingActivity;
//- (void)_endReadingActivity;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlError : NSError
//+ (id)detachedWorkingCopy:(id)v1 operationName:(id)v2;
//+ (id)uncommittedWorkingCopy:(id)v1;
//+ (id)midOperationWorkingCopy:(id)v1 operationName:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestOperationEventSource : NSObject<DVTInvalidation> {
//    DVTObservingToken * _runOperationCancellationObservationToken;
//    DVTObservingToken * _runOperationErrorObservationToken;
//    NSObject<IDETestOperationEventSourceEvents> * _delegate;
//}
//@property (retain) DVTObservingToken * runOperationCancellationObservationToken;
//@property (retain) DVTObservingToken * runOperationErrorObservationToken;
//@property (retain) NSObject<IDETestOperationEventSourceEvents> * delegate;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithDelegate:(id)v1 testOperation:(id)v2;
//- (void)primitiveInvalidate;
//- (void)_observeCancellationForTestOperation:(id)v1;
//- (void)_observeErrorForTestOperation:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETypeIdentifier : NSObject {
//    NSString * _stringRepresentation;
//    NSArray * _subTypes;
//    IDETypeIdentifier * _parentType;
//}
//@property (copy) NSString * stringRepresentation;
//@property (retain) NSArray * subTypes;
//@property (retain) IDETypeIdentifier * parentType;
//+ (void)_registerBasicTypeIdentifiers;
//+ (id)_rootType;
//+ (id)_registerTypeIdentifierWithStringRepresentation:(id)v1 basedOn:(id)v2;
//+ (id)registerTypeIdentifierWithStringRepresentation:(id)v1 basedOn:(id)v2;
//+ (id)typeIdentifierForStringRepresentation:(id)v1;
//- (id)initWithStringRepresentation:(id)v1;
//- (id)description;
//- (void)addSubType:(id)v1;
//- (char)isKindOfType:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)typeIdentifierLineage;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionDestinationStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDataProvider : NSObject {
//    NSMutableDictionary * _initialQueryTimeForPidDictionary;
//}
//+ (id)sharedDataProvider;
//- (id)supportedAttributes;
//- (id)startSamplingForPIDs:(id)v1;
//- (id)captureAttributes:(id)v1 forPIDs:(id)v2;
//- (id)stopSamplingForPIDs:(id)v1;
//- (id)initialQueryTimeForPidDictionary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAnalyticsPoint : NSObject<IDEDebugTopNavigableModel> {
//    NSString * _associatedProcessUUID;
//    NSString * name;
//    NSArray * _threads;
//    NSArray * _queues;
//    IDEAnalyticsLog * _analyticsLog;
//    AnalyticsReportType * _reportType;
//    NSString * _appName;
//    IDEDebugSession * _parentDebugSession;
//}
//@property (copy,nonatomic) NSArray * threads;
//@property (copy,nonatomic) NSArray * queues;
//@property (copy,nonatomic) IDEAnalyticsLog * analyticsLog;
//@property (retain,nonatomic) AnalyticsReportType * reportType;
//@property (copy,nonatomic) NSString * appName;
//@property (readonly) NSString * subtitle;
//@property (retain,nonatomic) IDEDebugSession * parentDebugSession;
//@property (copy,nonatomic) NSString * name;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingSubtitle;
//- (void)setCurrentFrame:(id)v1;
//- (id)init;
//- (id)contentDelegateUIExtensionIdentifier;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAnalyticsLog : IDEDebugProcess {
//    IDEAnalyticsPoint * _analyticsPoint;
//    IDEStackFrame * _blameStackFrame;
//}
//@property (retain,nonatomic) IDEStackFrame * blameStackFrame;
//- (id)initWithDebugSession:(id)v1;
//- (id)init;
//- (id)initWithAnalyticsPoint:(id)v1;
//- (id)associatedProcessUUID;
//- (id)parentDebugSession;
//- (char)isPaused;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogMessageFactory : NSObject
//+ (id)shared;
//- (id)creatorExtensions;
//- (Class)creatorForFilePath:(id)v1;
//- (id)activityLogMessageFromClass:(Class)v1 withType:(id)v2 severity:(unsigned long long)v3 title:(id)v4 shortTitle:(id)v5 categoryIdentifier:(id)v6 filePath:(id)v7 locationIdentifier:(id)v8;
//- (id)activityLogMessageWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 shortTitle:(id)v4 categoryIdentifier:(id)v5 filePath:(id)v6 locationIdentifier:(id)v7;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyPrototypeBasedResultBlockGenerator : IDEOpenQuicklyResultBlockGenerator {
//    NSArray * _prototypes;
//}
//@property (readonly) NSArray * prototypes;
//- (id)initWithPrototypes:(id)v1 candidates:(id)v2 queryContext:(id)v3 consumer:(id)v4;
//- (id)resultForPrototype:(id)v1 candidate:(struct DVTFuzzyMatchCandidate *)v2 query:(id)v3 fromIndex:(long long)v4;
//- (id)resultForCandidate:(struct DVTFuzzyMatchCandidate *)v1 query:(id)v2 fromIndex:(long long)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETextFragmentIndex : NSObject {
//    IDETextFragmentIndexRecordStorage * _storage;
//    unsigned int _currentSaveGeneration;
//    void (^ /* unknown block signature */)(void) _storagePathResolver;
//    char _completedPrescan;
//}
//@property char completedPrescan;
//+ (void)runProvider:(Class)v1 forFilePath:(id)v2 explicitFileDataType:(id)v3 initialTimestamp:(id)v4 priority:(long long)v5 completionHandler:(void (^ /* unknown block signature */)(void))v6;
//+ (void)deriveEntryForFilePath:(id)v1 explicitFileDataType:(id)v2 initialTimestamp:(id)v3 priority:(long long)v4 completionHandler:(void (^ /* unknown block signature */)(void))v5;
//+ (id)indexPathForWorkspace:(id)v1;
//- (id)init;
//- (id)initWithStoragePathLocationResolver:(void (^ /* unknown block signature */)(void))v1;
//- (void)fragmentProviderForFilePath:(id)v1 explicitFileDataType:(id)v2 priority:(long long)v3 indexEntryFilter:(void (^ /* unknown block signature */)(void))v4 completionHandler:(void (^ /* unknown block signature */)(void))v5;
//- (void)fragmentProviderForFilePath:(id)v1 explicitFileDataType:(id)v2 priority:(long long)v3 thatMightMatchQueryTextFragmentProbe:(id)v4 completionHandler:(void (^ /* unknown block signature */)(void))v5;
//- (void)fragmentProviderForFilePath:(id)v1 explicitFileDataType:(id)v2 priority:(long long)v3 completionHandler:(void (^ /* unknown block signature */)(void))v4;
//- (void)ensureEntryForFilePathIsUpToDate:(id)v1 explicitFileDataType:(id)v2 priority:(long long)v3 completionHandler:(void (^ /* unknown block signature */)(void))v4;
//- (void)dropIndex;
//- (void)scheduleSaveAndOptionallyTrimToFilePaths:(id)v1;
//- (void)loadContentWithCompletionHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionReformatArchiveStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (char)reformatArchiveWithError:(id *)v1 warnings:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDECodeModule : NSObject {
//    NSString * _frameworkNameIncludingExtension;
//    char _isInBuiltProductDirectories;
//    int _debugSymbolsLoadState;
//    NSNumber * _timestamp;
//    DVTFilePath * _filePath;
//    NSString * _identifier;
//    unsigned long long _address;
//}
//@property (copy,nonatomic) DVTFilePath * filePath;
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSString * frameworkNameIncludingExtension;
//@property (copy,nonatomic) NSString * identifier;
//@property (nonatomic) unsigned long long address;
//@property (readonly,nonatomic) NSString * displayAddress;
//@property (readonly,nonatomic) NSString * path;
//@property (readonly,nonatomic) NSNumber * timestamp;
//@property (nonatomic) char isInBuiltProductDirectories;
//@property (nonatomic) int debugSymbolsLoadState;
//+ (id)logAspect;
//+ (id)frameworkNameIncludingExtensionFromPath:(id)v1;
//+ (id)keyPathsForValuesAffectingName;
//+ (id)keyPathsForValuesAffectingTimestamp;
//+ (id)keyPathsForValuesAffectingPath;
//- (id)init;
//- (id)initWithIdentifier:(id)v1 pathString:(id)v2;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAnalyzeCommandLineVerb : IDESchemeBasedCommandLineVerb
//+ (int)performWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDeviceInstallWorkspaceMonitor : NSObject<DVTInvalidation> {
//    NSString * _appName;
//    IDELogStore * _logStore;
//    IDEActivityLogSectionRecorder * _logRecorder;
//    IDEActivityLogSectionRecorder * _logSectionRecorder;
//    NSString * _resultError;
//}
//@property (retain) NSString * appName;
//@property (retain) IDELogStore * logStore;
//@property (retain) IDEActivityLogSectionRecorder * logRecorder;
//@property (retain) IDEActivityLogSectionRecorder * logSectionRecorder;
//@property (retain) NSString * resultError;
//@property (readonly) NSArray * logRecords;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (void)primitiveInvalidate;
//- (void)loadDeviceInstallLogsForWorkspace:(id)v1;
//- (void)startActivityLogForAppNamed:(id)v1 deviceNamed:(id)v2;
//- (void)stopActivityLog;
//- (void)addOperationToActivityLog:(id)v1 details:(id)v2;
//- (void)setResultErrorString:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEGaugeDataQueryCoordinator : NSObject {
//    char _useProxiedDevice;
//    DVTDevice * _device;
//    NSNumber * _pid;
//    NSMutableOrderedSet * _queries;
//    NSMutableOrderedSet * _services;
//    NSCountedSet * _attributes;
//}
//@property (retain,nonatomic) DVTDevice * device;
//@property (retain,nonatomic) NSNumber * pid;
//@property (retain,nonatomic) NSMutableOrderedSet * queries;
//@property (retain,nonatomic) NSMutableOrderedSet * services;
//@property (retain,nonatomic) NSCountedSet * attributes;
//@property (readonly) char useProxiedDevice;
//+ (id)sharedQueryCoordinatorWithPID:(id)v1 onDevice:(id)v2 useProxiedDevice:(char)v3;
//- (id)initForProcessWithPID:(id)v1 onDevice:(id)v2 useProxiedDevice:(char)v3;
//- (id)_noteAttributesDidChange:(id)v1;
//- (void)addQuery:(id)v1;
//- (void)removeQuery:(id)v1;
//- (void)query:(id)v1 didAddObservedAttributes:(id)v2 andRemoveObservedAttributes:(id)v3;
//- (void)handleResultDict:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEClassKitEntitlementsProcessor : IDEEntitlementsProcessor
//+ (id)propertyListForContext:(id)v1;
//+ (id)availableOptionsForPropertyList;
//- (char)needsInteraction;
//- (char)runWithError:(id *)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogMajorGroupSectionRecorder : IDEActivityLogSectionRecorder
//@property (readonly) IDEActivityLogMajorGroupSection * section;
//- (void)stopRecording;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourcePackageReference : NSObject {
//    NSString * _packageURL;
//    IDESourcePackageRequirement * _requirement;
//}
//@property (readonly) NSString * packageURL;
//@property (readonly) IDESourcePackageRequirement * requirement;
//+ (id)computePackageIdentityOfURL:(id)v1;
//- (id)initWithURL:(id)v1 requirement:(id)v2;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEConsoleAdaptor : NSObject<OSActivityStreamDelegate> {
//    int _readMode;
//    OSActivityStream * _stream;
//    NSDateFormatter * _dateFormatter;
//    int _pid;
//    unsigned long long _type;
//    NSObject<OS_dispatch_queue> * _writeSerialQueue;
//    NSTimer * _endOfStandardOutputReadTimer;
//    NSTimer * _endOfStandardErrorReadTimer;
//    char _finishedReceivingData;
//    char _ignoreFutureOutput;
//    NSFileHandle * _standardInput;
//    NSFileHandle * _standardOutput;
//    NSFileHandle * _standardError;
//    NSMutableData * _currentOutputOverflow;
//    NSMutableString * _currentOutputLineOverflow;
//    NSMutableData * _currentErrorOverflow;
//    NSMutableString * _currentErrorLineOverflow;
//    NSTimer * _targetOutputOverflowTimer;
//    NSTimer * _targetOutputNewlineTimer;
//    NSObject<IDEConsoleAdaptorDelegateProtocol> * _delegate;
//    char _delegateRespondsToParseConsoleOutputFromOriginalOutput;
//    char _delegateRespondsToParseConsoleInputFromOriginalInput;
//    unsigned long long _currNumStoredChars;
//    struct __CFDictionary * _completeContent;
//    struct __CFArray * _completeContentSequences;
//    struct __CFArray * _standardInputSequences;
//    struct __CFArray * _standardOutputSequences;
//    struct __CFArray * _standardErrorSequences;
//    NSMutableArray * _fileReadTokenArray;
//}
//@property char finishedReceivingData;
//@property (readonly) struct __CFDictionary * completeContent;
//@property (readonly) struct __CFArray * completeContentSequences;
//@property (readonly) struct __CFArray * standardInputSequences;
//@property (readonly) struct __CFArray * standardOutputSequences;
//@property (readonly) struct __CFArray * standardErrorSequences;
//@property (readonly) unsigned long long type;
//@property char ignoreFutureOutput;
//@property (retain) NSObject<IDEConsoleAdaptorDelegateProtocol> * delegate;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (unsigned long long)_nextContentSequence;
//+ (id)_itemsForAdaptors:(id)v1 sequencesSelector:(SEL)v2;
//+ (id)allConsoleItemsForAdaptors:(id)v1;
//+ (id)standardInputItemsForAdaptors:(id)v1;
//+ (id)standardOutputItemsForAdaptors:(id)v1;
//+ (id)standardErrorItemsForAdaptors:(id)v1;
//- (id)initWithType:(unsigned long long)v1 standardInput:(id)v2 standardOutput:(id)v3 standardError:(id)v4;
//- (void)dealloc;
//- (char)_removeSequence:(unsigned long long)v1 fromSupportingSequences:(struct __CFArray *)v2;
//- (void)_addToCompleteContent:(id)v1 andSupportingSequences:(struct __CFArray *)v2;
//- (void)_makeExpired;
//- (void)makeExpired;
//- (void)inputFromConsole:(id)v1 echo:(char)v2;
//- (void)inputForStandardInput:(id)v1;
//- (void)_postOnMainThreadForNotification:(id)v1 consoleItem:(id)v2;
//- (void)outputForStandardOutput:(id)v1 isPrompt:(char)v2 isOutputRequestedByUser:(char)v3;
//- (void)outputForStandardOutput:(id)v1;
//- (void)outputForStandardError:(id)v1;
//- (void)outputForStandardError:(id)v1 kind:(int)v2;
//- (void)_setStandardInput:(id)v1;
//- (id)_delegateProcessedOutput:(id)v1;
//- (void)_timerFiredForTargetOutputWaitingForNewline:(id)v1;
//- (void)_outputForStandardOutputThroughDelegate:(id)v1;
//- (void)_outputForStandardErrorThroughDelegate:(id)v1;
//- (void)_timerFiredForTargetOutputOverflow:(id)v1;
//- (id)_getDataFromNotification:(id)v1 overflowBuffer:(id *)v2 stringBuffer:(id *)v3;
//- (id)_getDataFromFileHandle:(id)v1 overflowBuffer:(id *)v2 stringBuffer:(id *)v3;
//- (id)_getData:(id)v1 fileHandle:(id)v2 overflowBuffer:(id *)v3 stringBuffer:(id *)v4;
//- (void)_fileHandleCompletedRead:(id)v1;
//- (void)_timerFiredToCheckEndOfRead:(id)v1;
//- (void)_getOutputFromNotification:(id)v1;
//- (void)_getOutputFromFileHandle:(id)v1;
//- (void)_getOutput:(id)v1;
//- (void)_getErrorFromNotification:(id)v1;
//- (void)_getErrorFromFileHandle:(id)v1;
//- (void)_getError:(id)v1;
//- (void)_addObserverToReadCompletion:(id)v1 selector:(SEL)v2;
//- (void)_setStandardOutput:(id)v1;
//- (void)_setStandardError:(id)v1;
//- (id)_itemsForSequences:(struct __CFArray *)v1;
//- (id)allConsoleItems;
//- (id)standardInputItems;
//- (id)standardOutputItems;
//- (id)standardErrorItems;
//- (void)setupLoggingStreamForPid:(int)v1 withDevice:(id)v2;
//- (char)activityStream:(id)v1 results:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningCompoundProfileStore : NSObject {
//    NSDictionary * _compoundProfiles;
//    DVTLogAspect * _logAspect;
//    NSMutableDictionary * _mutableCompoundProfiles;
//    NSMutableDictionary * _teamToIdentifiers;
//}
//@property (retain,nonatomic) DVTLogAspect * logAspect;
//@property (retain,nonatomic) NSMutableDictionary * mutableCompoundProfiles;
//@property (retain,nonatomic) NSMutableDictionary * teamToIdentifiers;
//@property (copy,nonatomic) NSDictionary * compoundProfiles;
//- (id)initWithLogAspect:(id)v1;
//- (void)updateTeamsToIdentifierWithIdentifier:(id)v1;
//- (void)updateWithPortalProfiles:(id)v1;
//- (void)removeProvisioningProfiles:(id)v1;
//- (void)updateWithProvisioningProfiles:(id)v1;
//- (id)profilesForTeam:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningProfileDownloaderPortalRefreshTeamResult : NSObject {
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSArray * _profiles;
//    NSError * _error;
//}
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) NSArray * profiles;
//@property (readonly,nonatomic) NSError * error;
//- (id)initWithTeam:(id)v1 error:(id)v2;
//- (id)initWithTeam:(id)v1 profiles:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningProfileDownloader : NSObject<DVTInvalidation> {
//    char _installingProfile;
//    NSArray * _accountNamesFailed;
//    NSArray * _teams;
//    IDEProvisioningProfileDownloaderContext * _context;
//    DVTLogAspect * _logAspect;
//    NSObject<IDEProvisioningProfileDownloaderDelegate> * _delegate;
//    NSObject<DVTInvalidation> * _accountsObserver;
//    DVTObservingToken * _teamsObserver;
//    NSObject<DVTInvalidation> * _profilesObserver;
//    DVTDelayedInvocation * _delayedRefreshLocalProfilesInvocation;
//    NSOperationQueue * _previewProfileQueue;
//    NSOperationQueue * _refreshQueue;
//    NSOperationQueue * _profilesForTeamQueue;
//    DVTSemaphore * _waitForAreTeamsLoadedSemaphore;
//    DVTSemaphore * _waitForAreProfilesLoadedSemaphore;
//    DVTPerformanceMetric * _performanceMetric;
//    NSMutableArray * _completionQueue;
//    NSOperationQueue * _refreshSerialQueue;
//    NSOperationQueue * _installProfileSerialQueue;
//    DVTDelayedInvocation * _delayedRefreshPortalProfilesInvocation;
//    NSArray * _accountErrors;
//    NSArray * _portalProfiles;
//    NSSet * _provisioningProfiles;
//    NSDictionary * _teamToError;
//    IDEProvisioningCompoundProfileStore * _compoundProfileStore;
//}
//@property (retain,nonatomic) IDEProvisioningProfileDownloaderContext * context;
//@property (retain,nonatomic) NSObject<IDEProvisioningProfileDownloaderDelegate> * delegate;
//@property (retain,nonatomic) NSObject<DVTInvalidation> * accountsObserver;
//@property (retain,nonatomic) DVTObservingToken * teamsObserver;
//@property (retain,nonatomic) NSObject<DVTInvalidation> * profilesObserver;
//@property (retain,nonatomic) DVTDelayedInvocation * delayedRefreshLocalProfilesInvocation;
//@property (retain,nonatomic) NSOperationQueue * previewProfileQueue;
//@property (retain,nonatomic) NSOperationQueue * refreshQueue;
//@property (retain,nonatomic) NSOperationQueue * profilesForTeamQueue;
//@property (retain,nonatomic) DVTSemaphore * waitForAreTeamsLoadedSemaphore;
//@property (retain,nonatomic) DVTSemaphore * waitForAreProfilesLoadedSemaphore;
//@property (retain,nonatomic) DVTPerformanceMetric * performanceMetric;
//@property (retain,nonatomic) DVTLogAspect * logAspect;
//@property (retain,nonatomic) NSArray * teams;
//@property (retain,nonatomic) NSMutableArray * completionQueue;
//@property (retain,nonatomic) NSOperationQueue * refreshSerialQueue;
//@property (retain,nonatomic) NSOperationQueue * installProfileSerialQueue;
//@property (retain,nonatomic) DVTDelayedInvocation * delayedRefreshPortalProfilesInvocation;
//@property (retain,nonatomic) NSArray * accountErrors;
//@property (retain,nonatomic) NSArray * accountNamesFailed;
//@property (retain,nonatomic) NSArray * portalProfiles;
//@property (retain,nonatomic) NSSet * provisioningProfiles;
//@property (retain,nonatomic) NSDictionary * teamToError;
//@property (retain,nonatomic) IDEProvisioningCompoundProfileStore * compoundProfileStore;
//@property (readonly) NSError * noResultsError;
//@property (nonatomic,getter=isInstallingProfile) char installingProfile;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//- (id)initWithContext:(id)v1 delegate:(id)v2;
//- (void)setupObservations;
//- (id)manuallyQualifiedProfiles:(id)v1 team:(id)v2;
//- (id)portalProfilesForTeam:(id)v1 error:(id *)v2;
//- (id)manuallyQualifiedProfilesForTeam:(id)v1 error:(id *)v2;
//- (void)waitForAreTeamsLoaded;
//- (void)waitForAreProfilesLoaded;
//- (id)sessionErrorsForAccounts:(id)v1 accountNamesFailed:(id *)v2;
//- (id)fetchErrorsForAccountsWithAccountNamesFailed:(id *)v1;
//- (id)fetchPortalProfiles;
//- (id)fetchProvisioningProfiles;
//- (void)updateDownloaderWithTeamResults:(id)v1;
//- (void)refreshLocalProfiles:(char)v1 portalProfiles:(char)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (void)refreshWithCompletion:(void (^ /* unknown block signature */)(void))v1;
//- (id)profilesForTeam:(id)v1 error:(id *)v2;
//- (id)retryInMemoryProfileForPortalProfile:(id)v1 session:(id)v2 error:(id *)v3;
//- (void)updatePreviewProfile:(id)v1;
//- (void)waitForInMemoryDownloadOfProfile:(id)v1;
//- (void)installProfile:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)cancelInstall:(id)v1;
//- (id)noConnectionError;
//- (id)noAccountsError;
//- (id)allAccountsFailedError;
//- (id)noTeamsError;
//- (id)noProfilesError;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningDisambiguatableBasicTeam : IDEProvisioningBasicTeam {
//    NSString * _teamType;
//    NSString * _username;
//    NSString * _disambiguatedName;
//}
//@property (retain,nonatomic) NSString * teamType;
//@property (retain,nonatomic) NSString * username;
//@property (retain,nonatomic) NSString * disambiguatedName;
//@property (readonly,nonatomic) NSString * originalName;
//- (id)description;
//- (id)initWithTeamID:(id)v1 teamName:(id)v2;
//- (id)teamName;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningTeamManager : NSObject<DVTInvalidation> {
//    char _areTeamsLoaded;
//    char _busy;
//    DVTLogAspect * _logAspect;
//    NSOrderedSet * _disambiguatedTeams;
//    NSOrderedSet * _disambiguatedTeamsIncludingLocallyDerived;
//    DVTDeveloperAccountManager * _accountManager;
//    DVTProvisioningProfileManager * _profileManager;
//    DVTSigningCertificateManager * _certificateManager;
//    IDEProvisioningTeamAccountPairManager * _teamAccountPairManager;
//    NSString * _teamCacheKey;
//    DVTDispatchLock * _teamsLock;
//    DVTDelayedInvocation * _delayedUpdateInvocation;
//    DVTDelayedInvocation * _delayedLocalUpdateInvocation;
//    NSSet * _developerAccountCredentialObservers;
//    NSObject<DVTInvalidation> * _accountsToken;
//    NSObject<DVTInvalidation> * _profilesToken;
//    NSObject<DVTInvalidation> * _certificatesToken;
//}
//@property (retain) DVTDeveloperAccountManager * accountManager;
//@property (retain) DVTProvisioningProfileManager * profileManager;
//@property (retain) DVTSigningCertificateManager * certificateManager;
//@property (retain) IDEProvisioningTeamAccountPairManager * teamAccountPairManager;
//@property (retain) NSString * teamCacheKey;
//@property (retain) DVTDispatchLock * teamsLock;
//@property (retain) DVTDelayedInvocation * delayedUpdateInvocation;
//@property (retain) DVTDelayedInvocation * delayedLocalUpdateInvocation;
//@property (retain) NSSet * developerAccountCredentialObservers;
//@property char areTeamsLoaded;
//@property (getter=isBusy) char busy;
//@property (retain,nonatomic) NSOrderedSet * disambiguatedTeams;
//@property (retain,nonatomic) NSOrderedSet * disambiguatedTeamsIncludingLocallyDerived;
//@property (readonly) DVTLogAspect * logAspect;
//@property (retain) NSObject<DVTInvalidation> * accountsToken;
//@property (retain) NSObject<DVTInvalidation> * profilesToken;
//@property (retain) NSObject<DVTInvalidation> * certificatesToken;
//@property (readonly,nonatomic) NSOrderedSet * teams;
//@property (readonly,nonatomic) NSOrderedSet * teamsIncludingLocallyDerivedTeams;
//@property (retain) NSObject<IDEProvisioningBasicTeam> * lastSelectedTeam;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)defaultTeamManager;
//+ (id)keyPathsForValuesAffectingTeams;
//+ (id)keyPathsForValuesAffectingTeamsIncludingLocallyDerivedTeams;
//+ (char)supportsInvalidationPrevention;
//- (id)initWithDeveloperAccountManager:(id)v1 provisioningProfileManager:(id)v2 signingCertificateManager:(id)v3 teamAccountPairManager:(id)v4 teamCacheUserDefaultsKey:(id)v5 wantsFullFunctionality:(char)v6;
//- (id)init;
//- (void)primitiveInvalidate;
//- (void)_forceReloadInternalWithCacheLoadedCallback:(void (^ /* unknown block signature */)(void))v1;
//- (void)forceReloadTeams;
//- (void)_commonInitWithFullFunctionality:(char)v1;
//- (void)_setUpObservations;
//- (void)_updateTeamsWithCacheLoadedCallback:(void (^ /* unknown block signature */)(void))v1 completionCallback:(void (^ /* unknown block signature */)(void))v2;
//- (void)_updateTeamsImpl:(void (^ /* unknown block signature */)(void))v1 completionCallback:(void (^ /* unknown block signature */)(void))v2;
//- (void)_updateLocallyDerivedTeams;
//- (id)_teamsForAccount:(id)v1 error:(id *)v2;
//- (id)_cachedTeamsByUsername;
//- (void)_cacheTeams:(id)v1 forUsername:(id)v2;
//- (void)_purgeErstwhileUsernamesFromCache:(id)v1;
//- (id)teamWithID:(id)v1;
//- (id)sessionProviderForTeam:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDEProvisioningTeamDisambiguationProperty : NSObject {
//    NSString * _key;
//    NSString * _emptyValue;
//}
//@property (readonly) NSString * key;
//@property (readonly) NSString * emptyValue;
//+ (id)disambiguationPropertyWithKey:(id)v1 emptyValue:(id)v2;
//- (id)valueForTeam:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningTeamDisambiguator : NSObject
//+ (id)disambiguateTeams:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDERefactoringBuildSettings : NSObject {
//    int _status;
//    NSDictionary * _headerMappings;
//}
//@property int status;
//@property (readonly) NSArray * preincludeFiles;
//@property (readonly) NSSet * plistFilePaths;
//@property (readonly) NSArray * frameworkSearchPaths;
//@property (readonly) NSArray * systemIncludePaths;
//@property (readonly) NSArray * userIncludePaths;
//@property (readonly) NSDictionary * headerMappings;
//@property (readonly) NSArray * predefinedMacroNamesAndDefs;
//@property (readonly) NSArray * undefinedMacroNames;
//@property (readonly) NSString * languageDialect;
//@property (readonly) NSNumber * arcMode;
//@property (readonly) char alwaysSearchUserPaths;
//+ (id)noBuildSettingsFound;
//+ (id)fileInNoIndexables;
//+ (id)nibFileSettings;
//+ (id)dataModelFileSettings;
//+ (id)plistFileSettings;
//- (id)init;
//- (id)pathForFileName:(id)v1 includedByFiles:(id)v2 usingQuotes:(char)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionsStep : IDEDistributionStep {
//    NSArray * _options;
//}
//@property (readonly,nonatomic) NSArray * options;
//+ (id)distributionOptionExtensions;
//+ (id)distributionOptionClasses;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)initWithContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyFileReferenceResult : IDEOpenQuicklyResult {
//    char _representsDynamicContent;
//    DVTFilePath * _filePath;
//}
//@property (readonly) DVTFilePath * filePath;
//@property (readonly) char representsDynamicContent;
//+ (id)resultWithCandidate:(struct DVTFuzzyMatchCandidate *)v1 precision:(long long)v2 filePath:(id)v3 representsDynamicContent:(char)v4 query:(id)v5;
//- (id)updatedResultForQuery:(id)v1 precision:(long long)v2;
//- (unsigned long long)hashOfResultIdentity;
//- (char)representsSameResultAsFileReferenceProviderResult:(id)v1;
//- (char)representsSameResult:(id)v1;
//- (id)location;
//- (id)sourceSDKFilePath;
//- (char)isSymbolic;
//- (char)isFromPoject;
//- (unsigned long long)hashForAlternateIdentity;
//- (id)valueStandingInForForAlternateIdentity;
//- (id)alternateTitleGivenParentResult:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestIdentifier : NSObject<NSCopying> {
//    NSString * _identifierString;
//    NSString * _suiteName;
//    NSString * _methodName;
//}
//@property (readonly,copy) NSString * identifierString;
//@property (readonly,copy) NSString * languageAgnosticIdentifierString;
//@property (readonly,copy) NSString * suiteName;
//@property (readonly,copy) NSString * methodName;
//@property (readonly,copy) NSString * displayName;
//- (id)initWithSuiteName:(id)v1;
//- (id)initWithClassName:(id)v1 methodName:(id)v2;
//- (id)initWithIdentifierString:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairStep : NSObject {
//    NSString * _identifier;
//}
//@property (readonly,nonatomic) NSString * identifier;
//- (id)stepDescription;
//- (id)activityDescription;
//- (char)preflight;
//- (char)preflightWithContext:(id)v1 error:(id *)v2;
//- (char)handleExecutionWithContext:(id)v1 ledgerEntry:(id)v2 error:(id *)v3;
//- (char)executeWithContext:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRegisterDevicesUserAction : IDEProvisioningUserAction {
//    NSArray * _devices;
//}
//@property (readonly,nonatomic) NSArray * devices;
//+ (id)registerDevicesUserActionWithDevices:(id)v1 context:(id)v2;
//- (id)initWithContext:(id)v1 devices:(id)v2;
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//- (id)executionMessage;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestBlueprintHostSettings : NSObject {
//    char _hasBundleLoader;
//    NSString * _hostBlueprintIdentifier;
//}
//@property (readonly) NSString * hostBlueprintIdentifier;
//@property (readonly) char hasBundleLoader;
//- (id)initWithHostBlueprintIdentifier:(id)v1 hasBundleLoader:(char)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESwiftMigrationContext : IDEMigrationContext {
//    NSMapTable * _convertedFilePathForOriginalFilePathMapTable;
//}
//+ (Class)migrationTargetSublass;
//- (void)selectDefaultTargets;
//- (void (^ /* unknown block signature */)(void))setupBuild:(char *)v1 forScheme:(id)v2 migrationBuildOptions:(id)v3 withCompletionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)_convertRemapFiles:(id)v1;
//- (void)_collectRemapFilesFromDir:(id)v1 remapFiles:(id)v2;
//- (id)_convertedFilePathForOriginalFilePathMapTable;
//- (unsigned long long)numberOfConvertedFilePaths;
//- (id)convertedFilePathForOriginalFilePath:(id)v1;
//- (id)migrationBuildFolderForScheme:(id)v1;
//- (id)migrateFolderForMigrationTarget:(id)v1 andScheme:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySymbolIntermediateResult : IDEOpenQuicklyResult
//+ (id)resultWithCandidate:(struct DVTFuzzyMatchCandidate *)v1 precision:(long long)v2 query:(id)v3;
//- (id)updatedResultForQuery:(id)v1 precision:(long long)v2;
//- (unsigned long long)hashOfResultIdentity;
//- (char)representsSameResultAsSymbolIntermediateResult:(id)v1;
//- (char)representsSameResult:(id)v1;
//- (id)location;
//- (id)sourceSDKFilePath;
//- (char)isFromPoject;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAppleProvidedContentSwiftSupport : NSObject<IDEDistributionAppleProvidedContent>
//@property (readonly) NSString * archiveOperationDestinationBuildSettingName;
//@property (readonly) NSString * archivePath;
//@property (readonly) NSString * packagePath;
//@property (readonly) NSString * mainAppStubCopySubpath;
//+ (char)isSwiftSupport:(id)v1;
//- (char)shouldCodeSignDistributionItem:(id)v1;
//- (id)isAppleProvidedContent:(id)v1 archive:(id)v2 error:(id *)v3;
//- (char)shouldRemoveForAppStoreDistributionDistributionItem:(id)v1 shouldRemoveParentDirectory:(char *)v2;
//- (char)shouldCopySidecarContentFromArchive:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueTypeGroup : NSObject {
//    NSMutableArray * _issues;
//    NSMutableArray * _subgroups;
//    unsigned long long _testFailureCount;
//    unsigned long long _errorCount;
//    unsigned long long _warningCount;
//    unsigned long long _noticeCount;
//    unsigned long long _analyzerResultCount;
//    unsigned long long _runtimeCount;
//    NSMutableDictionary * _displayNameForRuntimeIssueTypeIdentifierTable;
//    IDEIssueProvider * _issueProvider;
//    id _issueTypeIdentifier;
//    unsigned long long _issueType;
//}
//@property (readonly) IDEIssueProvider * issueProvider;
//@property (readonly) id issueTypeIdentifier;
//@property (copy,nonatomic) NSMutableArray * subgroups;
//@property (readonly) NSMutableDictionary * displayNameForRuntimeIssueTypeIdentifierTable;
//@property (readonly) NSArray * issues;
//@property unsigned long long issueType;
//- (id)init;
//- (id)_initWithIssueProvider:(id)v1 issueTypeIdentifier:(id)v2;
//- (void)_updateIssueType;
//- (void)_addIssues:(id)v1;
//- (void)_removeIssues:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitCallableSymbol : IDESourceKitSymbol<IDEIndexCallableSymbol>
//@property (readonly,nonatomic) IDEIndexCollection * overriddenSymbols;
//@property (readonly,nonatomic) NSObject<IDEIndexPropertySymbol> * property;
//@property (readonly) NSString * name;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly) NSString * resolution;
//@property (readonly) DVTSymbol * identifier;
//@property (readonly) NSString * moduleName;
//@property (readonly) char isVirtual;
//@property (readonly) char isSystem;
//@property (readonly) char hasOccurrence;
//@property (readonly) char navigationPrefersDefinition;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (char)isKindOfClass:(Class)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateOption : NSObject {
//    NSDictionary * _requiredOptions;
//    NSString * _emptyReplacement;
//    NSString * _fallbackHeader;
//    char _required;
//    char _notPersisted;
//    NSMutableDictionary * _subclassCache;
//    char _indented;
//    char _enabled;
//    char _disabledByConstraints;
//    NSString * _displayValue;
//    NSObject<IDETemplateOptionParent> * _parent;
//    NSString * _identifier;
//    NSString * _name;
//    NSString * _optionDescription;
//    NSString * _type;
//    NSString * _placeholder;
//    NSString * _defaultValue;
//    NSString * _overrideValue;
//    NSString * _value;
//    NSString * _prefix;
//    NSString * _suffix;
//    NSArray * _values;
//    NSDictionary * _requiredOptionsForDisplayValues;
//    NSDictionary * _suffixes;
//    NSDictionary * _mainTemplateFiles;
//    NSDictionary * _allowedTypes;
//    NSDictionary * _variables;
//    long long _sortOrder;
//}
//@property (copy) NSDictionary * requiredOptions;
//@property (copy) NSString * identifier;
//@property (copy) NSString * name;
//@property (copy) NSString * optionDescription;
//@property (copy) NSString * type;
//@property (copy) NSString * defaultValue;
//@property (copy) NSString * overrideValue;
//@property (copy) NSString * placeholder;
//@property NSObject<IDETemplateOptionParent> * parent;
//@property (copy,nonatomic) NSString * value;
//@property (copy,nonatomic) NSString * displayValue;
//@property (copy,nonatomic) NSString * prefix;
//@property (copy,nonatomic) NSString * suffix;
//@property char booleanValue;
//@property (copy) NSArray * values;
//@property (readonly) char hasExplicitValues;
//@property (readonly) NSArray * displayValues;
//@property (readonly) NSDictionary * requiredOptionsForDisplayValues;
//@property (readonly) NSDictionary * suffixes;
//@property (readonly) NSDictionary * mainTemplateFiles;
//@property (readonly) NSDictionary * allowedTypes;
//@property (readonly) NSDictionary * variables;
//@property long long sortOrder;
//@property (nonatomic) char indented;
//@property (nonatomic) char enabled;
//@property (nonatomic) char disabledByConstraints;
//@property (readonly) char hasValidValue;
//@property (readonly) char shouldPersistValue;
//@property (readonly) NSString * identifierValue;
//+ (id)allowedTemplateOptionTypes;
//+ (id)keyPathsForValuesAffectingDisplayValue;
//+ (id)keyPathsForValuesAffectingHasValidValue;
//+ (id)keyPathsForValuesAffectingDisplayValues;
//+ (id)keyPathsForValuesAffectingBooleanValue;
//- (id)initWithOptionInfo:(id)v1 filePath:(id)v2;
//- (id)init;
//- (id)description;
//- (char)isUsableWithOptions:(id)v1;
//- (char)isValue:(id)v1 usableWithOptions:(id)v2;
//- (char)validateValue:(id *)v1 forKey:(id)v2 error:(id *)v3;
//- (void)setConstrainedDisplayValue:(id)v1;
//- (id)staticValueWithOptions:(id)v1;
//- (void)updateEnabledWithOptions:(id)v1;
//- (void)updateValueWithOptions:(id)v1;
//- (void)updateValueWithBuildables:(id)v1;
//- (void)updateFilteredDisplayValuesWithOptions:(id)v1;
//- (id)uniqueIdentifier;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void)addMacroToEngine:(id)v1;
//- (id)_importStringFromWorkspaceVisibilityForFilePath:(id)v1;
//- (void)addImportMacroToEngine:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildOperationConfiguration : NSObject {
//    char _parallelizeBuildables;
//    char _dontActuallyRunCommands;
//    char _buildImplicitDependencies;
//    char _restorePersistedBuildResults;
//    long long _buildCommand;
//    IDEBuildParameters * _buildParameters;
//    IDEExecutionEnvironment * _executionEnvironment;
//    DVTFilePath * _singleFileToBuild;
//    IDEActivityLogSection * _buildLog;
//    NSArray * _buildables;
//    IDEScheme * _scheme;
//    NSObject<IDEBuildOperationClientInfo> * _clientInfo;
//}
//@property (nonatomic) long long buildCommand;
//@property (retain,nonatomic) IDEBuildParameters * buildParameters;
//@property (retain,nonatomic) IDEExecutionEnvironment * executionEnvironment;
//@property (retain,nonatomic) DVTFilePath * singleFileToBuild;
//@property (retain,nonatomic) IDEActivityLogSection * buildLog;
//@property (nonatomic) char parallelizeBuildables;
//@property (nonatomic) char dontActuallyRunCommands;
//@property (nonatomic) char buildImplicitDependencies;
//@property (nonatomic) char restorePersistedBuildResults;
//@property (retain,nonatomic) NSArray * buildables;
//@property (retain,nonatomic) IDEScheme * scheme;
//@property (retain) NSObject<IDEBuildOperationClientInfo> * clientInfo;
//- (id)initWithBuildCommand:(long long)v1 buildParameters:(id)v2 executionEnvironment:(id)v3 singleFileToBuild:(id)v4 buildLog:(id)v5 parallelizeBuildables:(char)v6 dontActuallyRunCommands:(char)v7 buildImplicitDependencies:(char)v8 restorePersistedBuildResults:(char)v9;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildOperationVariantSpecifier : NSObject {
//    IDEBuildParameters * _buildParameters;
//    unsigned long long _sanitizerOptions;
//    NSString * _buildLogSubtitle;
//}
//@property (readonly,copy,nonatomic) IDEBuildParameters * buildParameters;
//@property (readonly) unsigned long long sanitizerOptions;
//@property (readonly,copy,nonatomic) NSString * buildLogSubtitle;
//- (id)initWithBuildParameters:(id)v1 sanitizerOptions:(unsigned long long)v2 buildLogSubtitle:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildOperation : DVTOperation<IDEExecutingOperationTrackable,IDEBuilderCallbacks,IDEBuildOperationProviding> {
//    IDEBuildOperationDescription * _buildOperationDescription;
//    long long _purpose;
//    long long _buildCommand;
//    NSArray<IDEBuildable> * _buildables;
//    IDEBuildParameters * _buildParameters;
//    NSMapTable * _buildParametersForBuildable;
//    char _parallelizeBuildables;
//    char _buildImplicitDependencies;
//    char _restorePersistedBuildResults;
//    char _dontActuallyRunCommands;
//    DVTFilePath * _moduleBuildSessionFilePath;
//    DVTFilePath * _singleFileToBuild;
//    IDEActivityLogSection * _buildLog;
//    char _isFinished;
//    NSOperationQueue * _builderQueue;
//    IDEBuildOperationQueueSet * _buildTaskQueueSet;
//    NSMapTable * _buildersToSerializationKeys;
//    NSMapTable * _buildablesToBuilders;
//    NSMapTable * _buildableOperationManagers;
//    unsigned long long _buildersBuilt;
//    NSObject<DVTCancellationBlockCompletion> * _cancellationToken;
//    NSMutableSet * _generatedFileInfo;
//    NSMutableDictionary * _copiedFilePathsMap;
//    NSMutableArray * _buildSetupErrorStrings;
//    NSMutableArray * _buildSetupWarningStrings;
//    NSMutableArray * _buildSetupNoticeStrings;
//    IDEExecutionOperationTracker * _mainExecutionTracker;
//    IDEBuildStatisticsSection * _topLevelStatisticsSection;
//    char _userReportedSlowerThanExpected;
//    float _percentComplete;
//    unsigned int _assertionID;
//    long long _result;
//    IDEBuildOperationConfiguration * _config;
//    IDEExecutionEnvironment * _executionEnvironment;
//    IDEEntityIdentifier * _schemeIdentifier;
//    IDESchemeActionRecord * _schemeActionRecord;
//    long long _state;
//    IDEBuildOperationStatus * _buildStatus;
//    NSDate * _startTime;
//    NSDate * _stopTime;
//    IDEBuildStatisticsSection * _buildStatisticsSection;
//    IDEProvisioningBuildOperationInfo * _provisioningInfo;
//    DVTDynamicLogController * _builderTimingDataLogController;
//    NSData * _buildMetricsData;
//}
//@property (readonly) char buildImplicitDependencies;
//@property (readonly) NSOperationQueue * builderQueue;
//@property (readonly) NSMapTable * buildablesToBuilders;
//@property unsigned int assertionID;
//@property (retain) DVTDynamicLogController * builderTimingDataLogController;
//@property long long state;
//@property long long result;
//@property float percentComplete;
//@property (retain) IDEBuildOperationStatus * buildStatus;
//@property (copy) NSDate * startTime;
//@property (copy) NSDate * stopTime;
//@property (readonly) IDEBuildOperationQueueSet * buildTaskQueueSet;
//@property (copy,nonatomic) NSData * buildMetricsData;
//@property (readonly,nonatomic) char shouldCreateModuleBuildSessionFile;
//@property (readonly,nonatomic) char hasHarvestedInfo;
//@property (readonly) IDEBuildOperationConfiguration * config;
//@property (readonly) IDEBuildOperationDescription * buildOperationDescription;
//@property (readonly) long long buildCommand;
//@property (readonly) IDEBuildParameters * buildParameters;
//@property (readonly) char parallelizeBuildables;
//@property (readonly) char dontActuallyRunCommands;
//@property (readonly) char restorePersistedBuildResults;
//@property (readonly) IDEActivityLogSection * buildLog;
//@property (readonly) IDEExecutionEnvironment * executionEnvironment;
//@property (readonly,copy) IDEEntityIdentifier * schemeIdentifier;
//@property (retain) IDESchemeActionRecord * schemeActionRecord;
//@property (readonly) IDESchemeActionResult * schemeActionResult;
//@property char userReportedSlowerThanExpected;
//@property (readonly,nonatomic) long long purpose;
//@property (retain) IDEBuildStatisticsSection * topLevelStatisticsSection;
//@property (retain) IDEBuildStatisticsSection * buildStatisticsSection;
//@property (readonly) IDEProvisioningBuildOperationInfo * provisioningInfo;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) NSArray * buildables;
//+ (void)initialize;
//+ (void)setDefaultBuildStatisticsSectionParent:(id)v1;
//+ (long long)defaultQualityOfServiceClass;
//+ (id)keyPathsForValuesAffectingIsExecuting;
//+ (void (^ /* unknown block signature */)(void))buildStatisticsEmissionSummaryBlock;
//+ (void)outputBuildStatistics:(id)v1 toSummary:(id)v2;
//- (id)initWithConfiguration:(id)v1;
//- (void)dealloc;
//- (id)harvestedInfoForBuildable:(id)v1;
//- (void)setBuildParameters:(id)v1 forBuildable:(id)v2;
//- (id)overridingBuildParametersForBuildable:(id)v1;
//- (id)_buildParametersForBuildable:(id)v1;
//- (double)duration;
//- (void)addGeneratedFileInfo:(id)v1;
//- (void)addBuildSetupErrorString:(id)v1;
//- (void)addBuildSetupWarningString:(id)v1;
//- (void)addBuildSetupNoticeString:(id)v1;
//- (void)addCopiedFilePathsFromDictionary:(id)v1;
//- (id)copiedFilePathsMap;
//- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)v1;
//- (char)isConcurrent;
//- (char)isExecuting;
//- (char)isFinished;
//- (void)_takeMemorySnapshotsWithLog:(id)v1;
//- (void)setupCallbackBlocksOnNewBuilder:(id)v1;
//- (id)finalBuildParametersForBuildable:(id)v1;
//- (void)_configureBuilder:(id)v1;
//- (id)_addOperationForBuildableIfNeeded:(id)v1 recursionDetectionArray:(id)v2;
//- (id)_addOperationForBuildableIfNeeded:(id)v1;
//- (id)_preparationLogRecorder;
//- (void)addOperationsToQueue:(id)v1;
//- (void)_addOperationsForAllBuildables;
//- (id)_buildableForSingleFileToBuildStartingWithBuildable:(id)v1 recursionDetectionSet:(id)v2;
//- (id)buildableToUseForSingleFileBuild;
//- (void)_addOperationsForSingleFileBuild;
//- (void)builder:(id)v1 activityLogSectionDidChange:(id)v2;
//- (void)builder:(id)v1 resultDidChange:(long long)v2;
//- (void)builderDidStartExecuting:(id)v1;
//- (void)builderDidFinishExecuting:(id)v1;
//- (void)builder:(id)v1 didUpdateBuildStatusWithStateDescription:(id)v2 fileProgressString:(id)v3 builderProgress:(double)v4;
//- (void)start;
//- (void)cancel;
//- (void)_cancelAllBuilders;
//- (void)lastBuilderDidFinish;
//- (void)stopWithResultCode:(long long)v1;
//- (void)_postDistributedProgressNotification;
//- (void)registerTracker:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildOperationGroup : DVTOperationGroup<IDEBuildOperationProviding> {
//    DVTOperationGroup * _buildOperations;
//    IDEActivityLogSection * _buildLog;
//}
//@property (readonly) IDEBuildOperation * buildOperation;
//@property (readonly) DVTOperationGroup * buildOperations;
//@property (readonly) IDEActivityLogSection * buildLog;
//@property (readonly) long long result;
//@property (readonly,copy) NSDate * startTime;
//@property (readonly) NSArray * buildables;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithBuildOperations:(id)v1 buildLog:(id)v2;
//- (id)initWithBuildOperations:(id)v1 otherOperations:(id)v2;
//- (id)initWithBuildOperations:(id)v1 otherOperations:(id)v2 buildLog:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildOperationStatus : NSObject {
//    NSString * _stateDescription;
//    NSString * _fileProgressString;
//}
//@property (readonly,copy) NSString * stateDescription;
//@property (readonly,copy) NSString * fileProgressString;
//- (id)initWithStateDescription:(id)v1 fileProgressString:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildLogCustomData : NSObject<IDEActivityLogSectionCustomData> {
//    NSString * _threadSanitizerMessage;
//}
//@property (copy) NSString * threadSanitizerMessage;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodAppStore : IDEDistributionMethodAppleSigning
//- (id)appStoreName;
//- (char)requiresAppStoreConfigurationForDestination:(long long)v1;
//- (id)commandLineName;
//- (char)isAppStoreBound;
//- (id)distributionOptionIdentifiers;
//- (id)title;
//- (id)subtitle;
//- (id)shortTitle;
//- (id)provisioningProfilePurpose;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildFolder : NSObject {
//    NSString * _path;
//    IDEBuilder * _currentBuilder;
//}
//@property (retain) IDEBuilder * currentBuilder;
//@property (readonly) NSString * path;
//+ (id)sharedBuildFolderWithPath:(id)v1 error:(id *)v2;
//- (id)initWithPath:(id)v1 error:(id *)v2;
//- (id)init;
//- (void)dealloc;
//- (void)registerCurrentBuilder:(id)v1;
//- (void)unregisterCurrentBuilder:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindSDKFileSource : IDEBatchFindFileSource {
//    NSString * _SDKIdentifier;
//}
//@property (readonly) NSString * SDKIdentifier;
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)initWithSDKIdentifier:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isEqualToFileSourceWithIdenticalClass:(id)v1;
//- (unsigned long long)hash;
//- (void)accumulateContributingSources:(id)v1;
//- (void)accessContentWithWorkspace:(id)v1 priority:(long long)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestsActivityLogBuilderWorkerState : NSObject {
//    NSMutableArray * _recorderStack;
//    DVTObservingToken * _runnablePIDObservationToken;
//}
//@property (readonly) NSMutableArray * recorderStack;
//@property (readonly) DVTObservingToken * runnablePIDObservationToken;
//- (id)initWithWorker:(id)v1 forTestTargetRunner:(id)v2 diagnosticLogPath:(id)v3;
//- (void)dealloc;
//- (void)addDiagnosticLogInfoMessageToRecorder:(id)v1 logPath:(id)v2;
//- (void)appendAndPropagateUpText:(id)v1 startingWithRecorder:(id)v2;
//- (void)finishSubSectionRecordersWithReason:(id)v1 error:(id)v2;
//- (void)popRecorder;
//- (void)popRecorderWithAbnormalFinishMessageForReason:(id)v1 error:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestsActivityLogBuilder : NSObject<IDETestRunSessionEvents> {
//    char _aBundleDidNotFinishSuccessfully;
//    char _testsFinishedSuccessfully;
//    IDEActivityLogSection * _activityLogSection;
//    NSObject<IDETestsActivityLogBuilderDelegate> * _delegate;
//    NSMapTable * _stateForWorker;
//    IDEActivityLogUnitTestSectionRecorder * _currentTestableRecorder;
//    NSObject<IDETestTargetRunner> * _currentTargetRunner;
//    _TtC13IDEFoundation28IDETestRunSpecificationGroup * _currentTestRunSpecificationGroup;
//    IDEActivityLogSectionRecorder * _currentTestRunSpecificationGroupRecorder;
//    NSString * _testPlanName;
//}
//@property char testsFinishedSuccessfully;
//@property (retain) IDEActivityLogSection * activityLogSection;
//@property NSObject<IDETestsActivityLogBuilderDelegate> * delegate;
//@property (retain) NSMapTable * stateForWorker;
//@property (retain) IDEActivityLogUnitTestSectionRecorder * currentTestableRecorder;
//@property (retain) NSObject<IDETestTargetRunner> * currentTargetRunner;
//@property (retain) _TtC13IDEFoundation28IDETestRunSpecificationGroup * currentTestRunSpecificationGroup;
//@property (retain) IDEActivityLogSectionRecorder * currentTestRunSpecificationGroupRecorder;
//@property (copy) NSString * testPlanName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithActivityLogSection:(id)v1 testPlanName:(id)v2 delegate:(id)v3;
//- (void)testTargetRunnerDidStart:(id)v1;
//- (void)testTargetRunner:(id)v1 didEndWithError:(id)v2 wasCanceled:(char)v3;
//- (void)addSectionIfNecessaryForWorker:(id)v1 diagnosticLogPath:(id)v2;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didLaunchWithDiagnosticLogPath:(id)v3;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 willFinishWithSuccess:(char)v3 withError:(id)v4;
//- (void)testRunSessionDidFinish:(id)v1 withCancellation:(char)v2;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 didStartAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuite:(id)v3 willFinishAt:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testSuiteDidFinishWithRunCount:(unsigned long long)v3 skipCount:(unsigned long long)v4 failureCount:(unsigned long long)v5 unexpectedFailureCount:(unsigned long long)v6 testDuration:(double)v7 totalDuration:(double)v8 rawOutput:(id)v9;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didStartTestWithIdentifier:(id)v3 withRawOutput:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didMeasurePerformanceMetric:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 willStartActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testWithIdentifier:(id)v3 didFinishActivity:(id)v4;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 testCaseWithIdentifier:(id)v3 didRecordIssue:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didSkipTestWithIdentifier:(id)v3 withTestResultMessage:(id)v4 rawOutput:(id)v5;
//- (void)worker:(id)v1 testTargetRunner:(id)v2 didFinishTestWithIdentifier:(id)v3 withTestResult:(id)v4 rawOutput:(id)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractSymbolicQuery : IDEBatchFindAbstractQuery
//+ (char)supportsAnchorning;
//+ (char)supportsCaseMatching;
//+ (id)queryTermPlaceholderText;
//- (id)makeRootResult;
//- (id)occurenceCollectionsForSymbol:(id)v1;
//- (char)requiresEditorDocumentsToSaveBeforeSearching;
//- (void)execute;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindSymbolicReferenceQuery : IDEBatchFindAbstractSymbolicQuery
//+ (id)displayName;
//- (id)emptyResultSetPlaceholderResultKind;
//- (id)occurenceCollectionsForSymbol:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindSymbolicDefinitionQuery : IDEBatchFindAbstractSymbolicQuery
//+ (id)displayName;
//- (id)emptyResultSetPlaceholderResultKind;
//- (id)occurenceCollectionsForSymbol:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionStep : NSObject {
//    IDEDistributionContext * _context;
//}
//@property (readonly) NSSet * requiredInputContextPropertyNames;
//@property (readonly) NSSet * providedOutputContextPropertyNames;
//@property (readonly) IDEDistributionContext * context;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)init;
//- (id)initWithContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESymbolResolver : NSObject
//+ (void)initialize;
//+ (id)resolutionForName:(id)v1 kind:(id)v2;
//+ (id)resolutionForParent:(id)v1 childName:(id)v2 kind:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface _IDESourceKitWeakWorkspaceDelegate : NSObject {
//    NSObject<IDESourceKitWorkspaceDelegate> * weakDelegate;
//}
//- (id)initWithDelegate:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDESourceKitWeakRefactoringActionDelegate : NSObject {
//    NSObject<IDESourceKitRefactoringActionDelegate> * weakDelegate;
//}
//- (id)initWithDelegate:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDESourceKitWeakConnectionDelegate : NSObject {
//    NSObject<IDESourceKitConnectionDelegate> * weakDelegate;
//}
//- (id)initWithDelegate:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDESourceKitLogOutputHandler : NSObject<IDESourceKitConnectionDelegate> {
//    void (^ /* unknown block signature */)(void) _handler;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithLogOutputHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void)onLogOutput:(id)v1;
//- (void)onToolchainCompilerCrashed:(id)v1;
//- (void)onIndexCompileDidFinish:(id)v1;
//- (void)onIndexCompileWillStart:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitConnection : NSObject {
//    IDESourceKitLowLevelConnection * _conn;
//    IDESourceKitUIDSet * _UID;
//    NSObject<OS_dispatch_queue> * _toolchainUpdateQueue;
//    NSObject<OS_dispatch_queue> * _notificationQueue;
//    NSMutableArray * _workspaceDelegates;
//    NSMutableArray * _refactoringDelegates;
//    NSMutableArray * _connectionDelegates;
//    NSMutableArray * _logOutputHandlers;
//    unsigned long long _logLevel;
//    unsigned long long _originalLogLevel;
//    char _enabledLogOutput;
//    void (^ /* unknown block signature */)(void) _extraNotificationReceiver;
//    id _connectionToken;
//    DVTObservingToken * _availableToolchainsObservingToken;
//    NSObject<OS_dispatch_semaphore> * _toolchainsRegisteredSema;
//}
//@property unsigned long long logLevel;
//+ (id)sharedInstance;
//- (id)testMe:(id)v1 failedText:(id)v2 crash:(id)v3 notRecommended:(id)v4 error:(id *)v5;
//- (id)testMe:(id)v1 failedText:(id)v2 crash:(id)v3 notRecommended:(id)v4 queue:(id)v5 completion:(void (^ /* unknown block signature */)(void))v6;
//- (char)testingInvalidateFilePath:(id)v1 error:(id *)v2;
//- (id)testingInvalidateFilePath:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)setLoggingSettings:(char)v1 logLevel:(long long)v2 error:(id *)v3;
//- (id)setLoggingSettings:(char)v1 logLevel:(long long)v2 queue:(id)v3 completion:(void (^ /* unknown block signature */)(void))v4;
//- (char)setEnableCompileNotifications:(char)v1 error:(id *)v2;
//- (id)setEnableCompileNotifications:(char)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)registerToolchains:(id)v1 error:(id *)v2;
//- (id)registerToolchains:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (char)unregisterToolchains:(id)v1 error:(id *)v2;
//- (id)unregisterToolchains:(id)v1 queue:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (id)openIndex:(id)v1 workspaceFile:(id)v2 indexFolder:(id)v3 datastoreFolder:(id)v4 databaseFolder:(id)v5 pchHeaderFolder:(id)v6 buildConfig:(id)v7 destinationTargetIdentifier:(id)v8 platformIdentifier:(id)v9 indexDatabasePath:(id)v10 toolchainInvocationLoggingPath:(id)v11 disableBackgroundIndexer:(id)v12 enableExplicitOutputUnits:(id)v13 enableFullStoreVisibility:(id)v14 enablePCHCreation:(id)v15 dumpIndexables:(id)v16 initialDBSize:(id)v17 error:(id *)v18;
//- (id)openIndex:(id)v1 workspaceFile:(id)v2 indexFolder:(id)v3 datastoreFolder:(id)v4 databaseFolder:(id)v5 pchHeaderFolder:(id)v6 buildConfig:(id)v7 destinationTargetIdentifier:(id)v8 platformIdentifier:(id)v9 indexDatabasePath:(id)v10 toolchainInvocationLoggingPath:(id)v11 disableBackgroundIndexer:(id)v12 enableExplicitOutputUnits:(id)v13 enableFullStoreVisibility:(id)v14 enablePCHCreation:(id)v15 dumpIndexables:(id)v16 initialDBSize:(id)v17 queue:(id)v18 completion:(void (^ /* unknown block signature */)(void))v19;
//- (id)makeToolchainInfo:(id)v1 name:(id)v2 filePath:(id)v3 isDefault:(char)v4 disableClientResponseHandling:(id)v5;
//- (id)makeIndexable:(id)v1 fileURLs:(id)v2 supportedPlatforms:(id)v3 linkedIndexableIds:(id)v4 indexableIsUnitTest:(id)v5;
//- (id)makePreferredTargetInfo:(id)v1 isBuiltForRun:(char)v2 isImplicitDependency:(char)v3;
//- (id)makeDocumentLocation:(id)v1 startLine:(long long)v2 startCol:(long long)v3 endLine:(long long)v4 endCol:(long long)v5 rangeLoc:(long long)v6 rangeCount:(long long)v7 timeStamp:(id)v8 encoding:(long long)v9;
//- (id)makeSymbol:(id)v1 symbolKind:(id)v2 language:(id)v3 resolution:(id)v4;
//- (id)init;
//- (void)_initOrRestoreState;
//- (id)UIDSet;
//- (id)internalConnection;
//- (struct _sourcekit_connection_s *)sourceKitConnectionObject;
//- (void)_observeToolchains;
//- (void)_sendUpdatedToolchainInfo:(id)v1;
//- (void)setExtraNotificationReceiver:(void (^ /* unknown block signature */)(void))v1;
//- (void)addWorkspaceDelegate:(id)v1;
//- (void)removeWorkspaceDelegate:(id)v1;
//- (void)addRefactoringDelegate:(id)v1;
//- (void)removeRefactoringDelegate:(id)v1;
//- (void)addConnectionDelegate:(id)v1;
//- (void)removeConnectionDelegate:(id)v1;
//- (void)_handleNotification:(id)v1;
//- (void)_handleCallbackWithInfo:(id)v1 reply:(id)v2;
//- (void)_handleServiceCrash;
//- (void)_pingForServiceRestoration;
//- (void)postNotificationName:(id)v1 userInfo:(id)v2;
//- (void)postNotificationName:(id)v1;
//- (void)collectModuleGroups:(id)v1 args:(id)v2 toolchains:(id)v3 queue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)demangleSwiftMangledNames:(id)v1 toolchains:(id)v2 queue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)demangleSwiftMangledName:(id)v1 toolchains:(id)v2;
//- (void)mangleSwiftSimpleClasses:(id)v1 toolchains:(id)v2 queue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)sendYAMLRequest:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (char)waitForToolchainRegistrationWithTimeout:(double)v1;
//- (void)addServiceLogOutputHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void)removeServiceLogOutputHandler:(void (^ /* unknown block signature */)(void))v1;
//- (void)enableServiceLogOutput:(char)v1;
//- (unsigned long long)_sendEnableLogOutputRequest:(char)v1 logLevel:(unsigned long long)v2;
//- (void)_debugCrashService;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCreateZIPStep : IDEDistributionProcessingPackagingStep {
//    NSString * _name;
//}
//@property (copy) NSString * name;
//+ (id)packagePathExtension;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProcessingStep : IDEDistributionStep
//@property (readonly) NSString * name;
//+ (id)requiredInputContextPropertyNames;
//+ (id)providedOutputContextPropertyNames;
//+ (bool)supportsDryRun;
//+ (bool)runsPerDistributionItem;
//+ (bool)runsPerThinningVariant;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProcessingPackagingStep : IDEDistributionProcessingStep
//+ (char)wantsPayloadDir;
//+ (id)packagePathExtension;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionItemProcessingStep : IDEDistributionProcessingStep
//@property (readonly) IDEDistributionItem * distributionItem;
//+ (bool)runsPerDistributionItem;
//- (id)requiredInputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOnDiskLogStore : IDELogStore<IDEOnDiskActivityLogRecordManaging> {
//    char _preserveOldLogs;
//    NSString * _rootDirectoryPath;
//    DVTObservingToken * _logFolderPathObservingToken;
//    NSCache * _logStoreManageableCache;
//    NSMutableDictionary * _logStoreDictionary;
//    NSMutableDictionary * _logRecordDictionary;
//    NSOperationQueue * _asyncOperations;
//    NSObject<IDEOnDiskLogStoreFoundationServicesProviding> * _foundationServicesProvider;
//}
//@property (retain) DVTObservingToken * logFolderPathObservingToken;
//@property (readonly) NSCache * logStoreManageableCache;
//@property (readonly) NSMutableDictionary * logStoreDictionary;
//@property (readonly) NSMutableDictionary * logRecordDictionary;
//@property (readonly) NSOperationQueue * asyncOperations;
//@property (readonly) NSObject<IDEOnDiskLogStoreFoundationServicesProviding> * foundationServicesProvider;
//@property (readonly,copy) NSString * rootDirectoryPath;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)logStoreDictionaryWithContentsOfFile:(id)v1 foundationServicesProvider:(id)v2 error:(id *)v3;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (id)onDiskStoreWithRootDirectoryAtPath:(id)v1 error:(id *)v2;
//+ (id)onDiskStoreInWorkspaceArena:(id)v1 atSubPath:(id)v2 error:(id *)v3;
//- (id)initWithRootDirectoryAtPath:(id)v1 error:(id *)v2;
//- (id)initWithRootDirectoryAtPath:(id)v1 foundationServicesProvider:(id)v2 error:(id *)v3;
//- (void)primitiveInvalidate;
//- (id)_logStoreDictionaryPath;
//- (char)_saveLogStoreDictionary:(id *)v1;
//- (void)_saveLog:(id)v1 logRecord:(id)v2 toPath:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)addLog:(id)v1 parameters:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)_moveToRootDirectoryAtPath:(id)v1 errorBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)removeLogRecord:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)_pruneLogsToLogStoreSizeLimit;
//- (void)_removeAllButTheLatestLog;
//- (void)purgeUntrackedItems;
//- (id)pathForFileName:(id)v1;
//- (void)setPreserveOldLogs:(char)v1;
//- (id)cachedLogStoreManageableForLogRecord:(id)v1;
//- (void)cacheLogStoreManageable:(id)v1 forLogRecord:(id)v2;
//- (char)preserveOldLogs;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOnDiskLogStoreFoundationServicesProvider : NSObject<IDEOnDiskLogStoreFoundationServicesProviding> {
//    NSFileManager * _fileManager;
//}
//@property (readonly) NSFileManager * fileManager;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)init;
//- (char)removeItemAtPath:(id)v1 error:(id *)v2;
//- (char)fileExistsAtPath:(id)v1;
//- (id)contentsOfDirectoryAtPath:(id)v1 error:(id *)v2;
//- (char)createDirectoryAtPath:(id)v1 withIntermediateDirectories:(char)v2 attributes:(id)v3 error:(id *)v4;
//- (char)copyItemAtPath:(id)v1 toPath:(id)v2 error:(id *)v3;
//- (id)dataWithContentsOfFile:(id)v1 options:(unsigned long long)v2 error:(id *)v3;
//- (id)propertyListWithData:(id)v1 options:(unsigned long long)v2 format:(unsigned long long *)v3 error:(id *)v4;
//- (id)dataWithPropertyList:(id)v1 format:(unsigned long long)v2 options:(unsigned long long)v3 error:(id *)v4;
//- (char)writeData:(id)v1 toFile:(id)v2 options:(unsigned long long)v3 error:(id *)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionTeamStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerReadOnlyItem : NSObject<IDEReadOnlyItem> {
//    int _readOnlyStatus;
//    IDEContainer * _container;
//    DVTFilePath * _filePath;
//}
//@property int readOnlyStatus;
//@property (readonly) DVTFilePath * filePath;
//@property (readonly) IDEContainer * container;
//@property (readonly) NSURL * readOnlyItemURL;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithFilePath:(id)v1 container:(id)v2;
//- (void)updateReadOnlyStatus;
//- (char)makeWritableWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerReadOnlyListeningItem : IDEContainerReadOnlyItem<DVTInvalidation>
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithFilePath:(id)v1 container:(id)v2;
//- (void)primitiveInvalidate;
//- (void)filePathDidChange;
//- (void)parentFilePathDidChange;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlWorkspaceMonitor : NSObject<DVTInvalidation> {
//    IDEWorkspace * _workspace;
//    IDEContainerQuery * _query;
//    DVTTimeSlicedMainThreadWorkQueue * _fileReferenceProcessingQueue;
//    NSMutableDictionary * _workspaceSCMInfo;
//    NSMutableSet * _workspaceFolders;
//    NSObject<OS_dispatch_queue> * _scanningQueue;
//    char _resumedScanningQueue;
//    NSDate * _startDate;
//    NSMutableSet * _repositoriesWarnedAreNewer;
//    NSObject<OS_dispatch_queue> * _cachedBlueprintQueue;
//    NSMutableSet * _workingCopies;
//    NSMutableArray * _workingTrees;
//    DVTDispatchLock * _workingTreesLock;
//    DVTObservingToken * _containerQueryMatchesObserver;
//    NSOperationQueue * _scmFileEventQueue;
//    NSString * _developerFolderPathString;
//    unsigned long long _workingTreesCount;
//    DVTDispatchLock * _derivedDataLock;
//    DVTFilePath * _derivedDataFilePath;
//    DVTObservingToken * _deriviedDataObservationToken;
//    DVTFilePath * _intermediatesFilePath;
//    DVTObservingToken * _intermediatesObservationToken;
//    DVTFilePath * _productsFilePath;
//    DVTObservingToken * _productsObservationToken;
//    DVTFilePath * _clonedSourcePackagesFilePath;
//    DVTObservingToken * _clonedSourcePackagesObservationToken;
//    DVTNotificationToken * _sourceControlEnabledToken;
//    NSMutableDictionary * _workingCopiesLastModified;
//    long long _fetchFileStatusQueueLockCount;
//    NSOperationQueue * _fetchFileStatusQueue;
//    NSMutableDictionary * _workingCopyRemotesFetchingDisabled;
//    NSMutableDictionary * _workingCopyObservers;
//    NSMutableDictionary * _workingCopyMetadataObservers;
//    char _isPaused;
//    NSMutableSet * _workingTreesNeedingRefreshOnResume;
//    DVTDispatchLock * _workingTreesNeedingRefreshOnResumeLock;
//    char _localStatusCheckingEnabled;
//    char _remoteStatusCheckingEnabled;
//    id _rootItem;
//    DVTSourceControlWorkspace * _sourceControlWorkspace;
//    DVTSourceControlWorkspaceBlueprint * _cachedBlueprint;
//    double _serverStatusUpdateInterval;
//    unsigned long long _state;
//    IDESourceControlManager * _sourceControlManager;
//    NSTimer * _statusUpdateTimer;
//}
//@property (retain) IDESourceControlManager * sourceControlManager;
//@property (retain) NSTimer * statusUpdateTimer;
//@property unsigned long long state;
//@property (retain) DVTSourceControlWorkspace * sourceControlWorkspace;
//@property (retain) DVTSourceControlWorkspaceBlueprint * cachedBlueprint;
//@property (readonly) NSOperationQueue * fetchFileStatusQueue;
//@property (retain) id rootItem;
//@property (readonly) NSArray * workingTrees;
//@property (readonly) NSArray * unmanagedWorkingTrees;
//@property (readonly) NSArray * workingCopies;
//@property double serverStatusUpdateInterval;
//@property (nonatomic) char localStatusCheckingEnabled;
//@property (nonatomic) char remoteStatusCheckingEnabled;
//@property (readonly) char isPerformingInitialWorkspaceScan;
//@property (readonly) char didScanWorkspace;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void (^ /* unknown block signature */)(void))rootItemBlock;
//+ (void)setRootItemBlock:(void (^ /* unknown block signature */)(void))v1;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingIsPerformingInitialWorkspaceScan;
//+ (id)keyPathsForValuesAffectingDidScanWorkspace;
//- (id)init;
//- (id)initWithSCMManager:(id)v1;
//- (void)_disableSourceControlMonitor;
//- (void)primitiveInvalidate;
//- (id)workingTreeForWorkingCopy:(id)v1;
//- (void)_sortWorkingCopies;
//- (void)addWorkingTree:(id)v1;
//- (char)_filePathIsInDerivedDataFolder:(id)v1;
//- (void)_requestScanWorkspaceFolders;
//- (void)_scanWorkspaceFolders:(char)v1;
//- (void)addWorkspaceFilePathToCheck:(id)v1;
//- (void)scanForWorkingCopyInFilePath:(id)v1;
//- (void)_processFileReference:(id)v1;
//- (void)_startScanningWorkspace:(id)v1;
//- (void)setSuppressCommitAlert:(char)v1;
//- (void)warnToCommitBefore:(id)v1 warnedBy:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)startScanningWorkspace:(id)v1;
//- (void)_updateAllWorkingCopyMetadata;
//- (void)_updateWorkingCopyMetadata:(id)v1;
//- (void)forceUpdateWorkingCopyMetadata:(id)v1;
//- (void)beginObservingWorkingTrees;
//- (void)endObservingWorkingTrees;
//- (void)_updatePrimaryWorkingCopyInSourceControlWorkspace:(id)v1 forWorkspace:(id)v2;
//- (void)_scanBatchFinished;
//- (void)updateWorkingCopyLocations;
//- (void)addWorkingCopyObserver:(id)v1 forPath:(id)v2;
//- (void)removeWorkingCopyObserver:(id)v1;
//- (void)addWorkingCopyMetadataObserver:(id)v1 forWorkingCopy:(id)v2;
//- (void)removeWorkingCopyMetadataObserver:(id)v1;
//- (char)isBlacklistedPath:(id)v1;
//- (void)pauseRespondingToWorkingCopyChanges;
//- (void)resumeRespondingToWorkingCopyChanges;
//- (void)_processChangedFilePath:(id)v1 metadataFilePath:(id)v2 workingTree:(id)v3;
//- (void)beginObservingWorkingTree:(id)v1;
//- (void)endObservingWorkingTree:(id)v1;
//- (void)beginPeriodicServerStatusUpdates;
//- (void)endPeriodicServerStatusUpdates;
//- (void)fetchAndUpdateServerStatusForWorkingCopies;
//- (void)forceUpdateServerStatusForWorkingTreesWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)fetchAndUpdateServerStatusForWorkingTreesWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)disabledRemotesForWorkingCopy:(id)v1;
//- (void)setDisabledRemotes:(id)v1 forWorkingCopy:(id)v2;
//- (void)_disableRemote:(id)v1 fromWorkingCopy:(id)v2;
//- (void)_fetchFromWorkingCopiesWithForce:(char)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)_updateServerStatusForWorkingTreesWithForce:(char)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)updateLocalStatusForWorkingTrees;
//- (void)forceUpdateLocalStatusForWorkingTrees;
//- (void)forceUpdateLocalStatusForWorkingTreesWithCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)_updateLocalStatusForWorkingTreesWithForce:(char)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)blockFetchingFilesAndStatus;
//- (void)unblockFetchingFilesAndStatus;
//- (id)_SCMInfoFilePath;
//- (id)_loadWorkspaceSCMInfo;
//- (char)_saveWorkspaceSCMInfo;
//- (void)setSCMInfoObject:(id)v1 forSCMKey:(id)v2;
//- (id)getSCMInfoObjectforKey:(id)v1;
//- (void)saveSCMInfo;
//- (void)writeSCMInfoToWorkspace;
//- (id)rootDirectoryOfAllWorkingCopies;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitWorkspaceTextualSearchDelegate : NSObject<IDEBatchFindQueryDelegate> {
//    IDESourceKitWorkspace * _skWorkspace;
//    long long _token;
//    IDESourceKitWorkspaceTextualSearchDelegate * _strongSelf;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithSKWorkspace:(id)v1 token:(long long)v2;
//- (void)findNavigatorQueryDidComplete:(id)v1;
//- (void)findNavigatorQuery:(id)v1 didGenerateResults:(id)v2;
//- (void)findNavigatorQuery:(id)v1 progressUpdate:(long long)v2;
//- (void)findNavigatorQuery:(id)v1 isStalledOnFilePaths:(id)v2;
//- (void)findNavigatorQuery:(id)v1 didFinishGeneratingLazyChildrenOfResult:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDataProvider_SceneKit : IDEDataProvider {
//    NSObject<OS_dispatch_queue> * _capture_lock;
//    NSMutableDictionary * _collectionStartedForPidDictionary;
//}
//+ (id)sharedDataProvider;
//- (id)init;
//- (id)supportedAttributes;
//- (id)startSamplingForPIDs:(id)v1;
//- (char)captureAttributes:(id)v1 toDictionary:(id)v2 forPID:(id)v3;
//- (char)captureShadersToDictionary:(id)v1 forPID:(id)v2;
//- (id)stopSamplingForPIDs:(id)v1;
//- (id)captureAttributes:(id)v1 forPIDs:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyFileReferenceResultGenerator : IDEOpenQuicklyPrototypeBasedResultBlockGenerator {
//    DVTFuzzyMatchCandidateBlock * _workspaceRelativeStyleCandidates;
//    char _representsDynamicContent;
//}
//@property (readonly) char representsDynamicContent;
//- (id)initWithPrototypes:(id)v1 candidates:(id)v2 queryContext:(id)v3 representsDynamicContent:(char)v4 consumer:(id)v5;
//- (id)resultForPrototype:(id)v1 candidate:(struct DVTFuzzyMatchCandidate *)v2 query:(id)v3 fromIndex:(long long)v4;
//- (char)supportsLineNumberMatches;
//- (id)workspaceRelativeStyleCandidates;
//- (id)candidateBlockForQuery:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocationScenario : NSObject {
//    NSString * _identifier;
//    NSArray * _locations;
//    char _autorepeat;
//    DVTFilePath * _filePath;
//    char _hasLoadedContent;
//    char _isCurrentLocation;
//    char _isCurrentLocationScenario;
//    NSError * _gpxError;
//}
//@property (retain) NSError * gpxError;
//@property (readonly) NSString * identifier;
//@property (readonly) DVTFilePath * filePath;
//@property (readonly) NSString * name;
//@property (readonly) NSArray * locations;
//@property (readonly) char autorepeat;
//@property (readonly) char isCurrentLocationScenario;
//@property (readonly,getter=isDefaultScenario) char defaultScenario;
//+ (void)initialize;
//+ (id)currentLocationScenario;
//+ (id)defaultScenarios;
//+ (id)builtInScenarioWithIdentifier:(id)v1;
//- (id)initWithIdentifier:(id)v1 locations:(id)v2;
//- (id)initWithIdentifier:(id)v1 locations:(id)v2 autorepeat:(char)v3;
//- (id)initWithIdentifier:(id)v1 referencingFilePath:(id)v2;
//- (id)initWithWorkspace:(id)v1 referencingFilePath:(id)v2;
//- (id)_gpxFileErrorWithCode:(long long)v1 reason:(id)v2;
//- (id)_locationsFromReferencedGPXFileWithError:(id *)v1;
//- (id)_processedLocationsFromGPXLocations:(id)v1;
//- (void)_loadLocationsIfNeeded;
//- (char)isValidWithError:(id *)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationTestActivity : NSObject<IDELocalizationTestActivity> {
//    NSMutableArray * _languages;
//    char _included;
//    NSString * _scheme;
//    NSString * _device;
//    NSDate * _startTime;
//}
//@property (readonly,copy,nonatomic) NSArray * languages;
//@property (readonly,copy,nonatomic) NSString * scheme;
//@property (readonly,copy,nonatomic) NSString * device;
//@property (readonly,copy,nonatomic) NSDate * startTime;
//@property (readonly,copy,nonatomic) NSString * formattedLanguage;
//@property (readonly,nonatomic) long long screenshotCount;
//@property (readonly,nonatomic) long long screenshotCountSelected;
//@property (nonatomic,getter=isIncluded) char included;
//@property (readonly,nonatomic,getter=isIncludedEnabled) char includedEnabled;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)mergePlistWithAttachmentsFromAttachments:(id)v1;
//+ (id)allTestActivitiesForWorkspace:(id)v1 error:(id *)v2 destinationLanguages:(id)v3;
//+ (char)addTestActivitiesForResultBundle:(id)v1 inWorkspace:(id)v2 toArray:(id)v3 destinationLanguages:(id)v4 systemLanguage:(id)v5 systemRegion:(id)v6 error:(id *)v7;
//+ (id)activityRetrievalErrorWithUnderlyingError:(id)v1;
//- (id)initWithScheme:(id)v1 device:(id)v2 startTime:(id)v3;
//- (void)addLanguage:(id)v1 withFiles:(id)v2 isIncluded:(char)v3;
//- (id)testActivityForLanguages:(id)v1;
//- (id)referenceFilesForLocale:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationTestActivityLanguage : NSObject<IDELocalizationTestActivity> {
//    char _included;
//    long long _screenshotCountSelected;
//    IDELocalizationTestActivity * _activity;
//    NSString * _language;
//    NSArray * _files;
//}
//@property (nonatomic) IDELocalizationTestActivity * activity;
//@property (readonly,copy,nonatomic) NSString * language;
//@property (readonly,copy,nonatomic) NSArray * files;
//@property (readonly,copy,nonatomic) NSString * scheme;
//@property (readonly,copy,nonatomic) NSString * device;
//@property (readonly,copy,nonatomic) NSDate * startTime;
//@property (readonly,copy,nonatomic) NSString * formattedLanguage;
//@property (readonly,nonatomic) long long screenshotCount;
//@property (readonly,nonatomic) long long screenshotCountSelected;
//@property (nonatomic,getter=isIncluded) char included;
//@property (readonly,nonatomic,getter=isIncludedEnabled) char includedEnabled;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)filePathHasImageExtension:(id)v1;
//+ (id)keyPathsForValuesAffectingIncluded;
//- (id)initWithLanguage:(id)v1 files:(id)v2 forActivity:(id)v3 isIncluded:(char)v4;
//- (id)referenceFilesForLocale:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitLowLevelConnection : NSObject {
//    struct _sourcekit_connection_s * _obj;
//}
//@property (readonly) int processId;
//- (struct _sourcekit_connection_s *)sourceKitObject;
//- (id)init;
//- (void)dealloc;
//- (void)start;
//- (void)cancel;
//- (struct _sourcekit_uid_s *)getUIDFromString:(const  char *)v1;
//- (id)sendRequestSync:(id)v1;
//- (id)sendRequestSync:(id)v1 error:(id *)v2;
//- (id)sendRequest:(id)v1 queue:(id)v2 receiver:(void (^ /* unknown block signature */)(void))v3;
//- (void)setNotificationHandler:(id)v1 receiver:(void (^ /* unknown block signature */)(void))v2;
//- (void)setCallbackHandler:(id)v1 receiver:(void (^ /* unknown block signature */)(void))v2;
//- (void)sendCallbackReply:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestPerformanceMetricSummary : NSObject {
//    NSString * _identifier;
//    NSString * _displayName;
//    NSString * _unitOfMeasurement;
//    NSArray * _measurements;
//    NSString * _baselineName;
//    NSNumber * _baselineAverage;
//    NSNumber * _maxPercentRegression;
//    NSNumber * _maxPercentRelativeStandardDeviation;
//    NSNumber * _maxRegression;
//    NSNumber * _maxStandardDeviation;
//}
//@property (readonly,copy) NSString * identifier;
//@property (readonly,copy) NSString * displayName;
//@property (readonly,copy) NSString * unitOfMeasurement;
//@property (readonly,copy) NSArray * measurements;
//@property (readonly) double meanAverageOfMeasurements;
//@property (readonly) double relativeStandardDeviationOfMeasurements;
//@property (readonly) NSString * baselineName;
//@property (readonly) NSNumber * baselineAverage;
//@property (readonly) NSNumber * maxPercentRegression;
//@property (readonly) NSNumber * maxPercentRelativeStandardDeviation;
//@property (readonly) NSNumber * maxRegression;
//@property (readonly) NSNumber * maxStandardDeviation;
//+ (id)missingBaselineDescriptionForPerformanceMetricWithName:(id)v1;
//- (id)initWithPerformanceMetricName:(id)v1 unitOfMeasurement:(id)v2 measurements:(id)v3 identifier:(id)v4 baselineName:(id)v5 baselineAverage:(id)v6 maxPercentRegression:(id)v7 maxPercentRelativeStandardDeviation:(id)v8 maxRegression:(id)v9 maxStandardDeviation:(id)v10;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (id)dictionaryRepresentation;
//- (char)isEqualToTestPerformanceMetricSummary:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestNoticeSummary : NSObject {
//    NSString * _message;
//    NSString * _fileName;
//    long long _lineNumber;
//}
//@property (readonly,copy) NSString * message;
//@property (readonly,copy) NSString * fileName;
//@property (readonly) long long lineNumber;
//- (id)initWithMessage:(id)v1 fileName:(id)v2 lineNumber:(long long)v3;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (id)dictionaryRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionAbstractTestSummaryObject : NSObject {
//    NSString * _name;
//}
//@property (copy) NSString * name;
//@property (readonly) unsigned long long status;
//@property (readonly) NSArray * testActivitySummaries;
//@property (readonly,copy) NSArray * allAttachments;
//- (id)initWithName:(id)v1;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (void)loadAttachmentsFromDirectory:(id)v1;
//- (void)loadDiagnosticsFromFilePromise:(id)v1;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (id)description;
//- (id)_testActivitySummariesForSummaryObject:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestSummary : IDESchemeActionAbstractTestSummaryObject<IDESchemeActionTestIdentifiable> {
//    unsigned long long _status;
//    double _duration;
//    NSString * _identifier;
//    NSString * _testSummaryGUID;
//    NSArray * _failureSummaries;
//    IDESchemeActionTestNoticeSummary * _skipNoticeSummary;
//    NSArray * _performanceMetrics;
//    NSArray * _activitySummaries;
//    id __metadata;
//}
//@property double duration;
//@property (copy) NSString * identifier;
//@property unsigned long long status;
//@property (copy) NSString * testSummaryGUID;
//@property (copy) NSArray * failureSummaries;
//@property (copy) NSArray * performanceMetrics;
//@property (copy) NSArray * activitySummaries;
//@property (retain) id _metadata;
//@property (readonly) IDESchemeActionTestNoticeSummary * skipNoticeSummary;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithName:(id)v1 identifier:(id)v2 status:(unsigned long long)v3 duration:(double)v4 failureSummaries:(id)v5 skipNoticeSummary:(id)v6 performanceMetrics:(id)v7 activitySummaries:(id)v8;
//- (id)initWithName:(id)v1 identifier:(id)v2 status:(unsigned long long)v3 duration:(double)v4 activitySummaries:(id)v5;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (void)loadAttachmentsFromDirectory:(id)v1;
//- (void)loadDiagnosticsFromFilePromise:(id)v1;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (id)allAttachments;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestableSummary : IDESchemeActionAbstractTestSummaryObject<IDESchemeActionTestSummaryContainer,IDESchemeActionTestContainer> {
//    NSMutableArray * _tests;
//    char _successfullyBootstrapped;
//    char _isUITestBundle;
//    char _parallelized;
//    NSString * _blueprintProviderRelativePath;
//    NSString * _blueprintName;
//    NSArray * _diagnosticLogPaths;
//    NSString * _diagnosticsDirectory;
//    NSDate * _bootstrappedDate;
//    long long _testExecutionOrdering;
//    NSString * _testLanguage;
//    NSString * _testRegion;
//    NSString * _testKind;
//    NSMutableArray * _mutableFailureSummaries;
//}
//@property (copy) NSString * blueprintProviderRelativePath;
//@property (copy) NSString * blueprintName;
//@property (copy) NSArray * tests;
//@property (retain) NSMutableArray * mutableTests;
//@property (copy) NSArray * diagnosticLogPaths;
//@property (copy) NSString * diagnosticsDirectory;
//@property char successfullyBootstrapped;
//@property (retain) NSDate * bootstrappedDate;
//@property char isUITestBundle;
//@property long long testExecutionOrdering;
//@property char parallelized;
//@property (copy) NSString * testKind;
//@property (retain) NSMutableArray * mutableFailureSummaries;
//@property (readonly,copy) NSString * testLanguage;
//@property (readonly,copy) NSString * testRegion;
//@property (readonly,copy) NSArray * failureSummaries;
//@property (readonly) NSArray * containedTestSummaries;
//@property (readonly) NSMutableArray * mutableContainedTestSummaries;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (char)includeDummyTestSummaryInTestableSummary;
//+ (id)coalescedTestableSummaryForTestableSummariesForSameTestable:(id)v1;
//+ (void)_coalesceTestSummariesInContainers:(id)v1 intoAggregateContainer:(id)v2;
//+ (void)countOfSuccessfulTests:(unsigned long long *)v1 failingTests:(unsigned long long *)v2 mixedTests:(unsigned long long *)v3 inSummaries:(id)v4;
//+ (void)_countOfSuccessfulTests:(unsigned long long *)v1 failingTests:(unsigned long long *)v2 mixedTests:(unsigned long long *)v3 inSummaryContainer:(id)v4;
//+ (id)sparseTestableSummaries:(id)v1 testIdentifiers:(id)v2;
//- (id)initWithName:(id)v1 blueprintProviderRelativePath:(id)v2 blueprintName:(id)v3 diagnosticsDirectory:(id)v4 testKind:(id)v5 testLanguage:(id)v6 testRegion:(id)v7 tests:(id)v8 failureSummaries:(id)v9;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (void)loadAttachmentsFromDirectory:(id)v1;
//- (id)allAttachments;
//- (id)validDiagnosticTypes;
//- (void)loadDiagnosticsFromFilePromise:(id)v1;
//- (unsigned long long)status;
//- (void)addTestSummary:(id)v1;
//- (void)addFailureSummary:(id)v1;
//- (id)addNewTestSummaryGroupWithName:(id)v1 identifier:(id)v2;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (char)isSummaryForSameTestableAsSummary:(id)v1;
//- (void)enumerateTestsUsingBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)sparseTestableSummaryForTestIdentifiers:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestSummaryGroup : IDESchemeActionAbstractTestSummaryObject<IDESchemeActionTestSummaryContainer,IDESchemeActionTestContainer,IDESchemeActionTestIdentifiable> {
//    NSMutableArray * _subtests;
//    NSString * _identifier;
//    double _duration;
//    NSMutableArray * _mutableFailureSummaries;
//}
//@property (copy) NSString * identifier;
//@property (copy) NSArray * subtests;
//@property double duration;
//@property (retain) NSMutableArray * mutableSubtests;
//@property (retain) NSMutableArray * mutableFailureSummaries;
//@property (readonly,copy) NSArray * failureSummaries;
//@property (readonly) NSArray * containedTestSummaries;
//@property (readonly) NSMutableArray * mutableContainedTestSummaries;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithName:(id)v1 identifier:(id)v2;
//- (id)initWithName:(id)v1 identifier:(id)v2 subtests:(id)v3;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (void)loadAttachmentsFromDirectory:(id)v1;
//- (void)loadDiagnosticsFromFilePromise:(id)v1;
//- (unsigned long long)status;
//- (void)addTestSummary:(id)v1;
//- (void)addFailureSummary:(id)v1;
//- (id)addNewTestSummaryGroupWithName:(id)v1 identifier:(id)v2;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (void)enumerateTestsUsingBlock:(void (^ /* unknown block signature */)(void))v1 testableSummary:(id)v2;
//- (id)sparseSummaryGroupForTestIdentifiers:(id)v1 blueprintName:(id)v2;
//- (id)allAttachments;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionDummyTestSummary : IDESchemeActionAbstractTestSummaryObject {
//    NSString * _sentinelGUID;
//}
//- (id)init;
//- (id)identifier;
//- (unsigned long long)status;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (void)loadDiagnosticsFromFilePromise:(id)v1;
//- (void)loadAttachmentsFromDirectory:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCategorySymbol : IDEIndexContainerSymbol
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCallableSymbol : IDEIndexSymbol
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexClassSymbol : IDEIndexContainerSymbol
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCompletionItem : NSObject
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexContainerSymbol : IDEIndexSymbol
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexPropertySymbol : IDEIndexSymbol
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexProtocolSymbol : IDEIndexContainerSymbol
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexSymbol : IDEIndexSymbolOccurrence
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexSymbolOccurrence : NSObject
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionManifest : IDEDistributionOption
//+ (id)availableOptionsForPropertyList;
//+ (char)wantsAssetPackManifestURLForContext:(id)v1;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (char)wantsAssetPackManifestURL;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestMetadataRecord : NSObject<NSCopying> {
//    XCTTestIdentifier * _identifier;
//    NSNumber * _mostRecentNormalizedExecutionTime;
//}
//@property (readonly) XCTTestIdentifier * identifier;
//@property (retain) NSNumber * mostRecentNormalizedExecutionTime;
//+ (id)allFields;
//- (id)initWithIdentifier:(id)v1;
//- (id)initWithIdentifier:(id)v1 dictionaryRepresentation:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)dictRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestMetadataDatabase : NSObject<IDETestMetadataDatabase> {
//    NSObject<OS_dispatch_queue> * _queue;
//    DVTFuture * _ensureStoreLoaded;
//    NSMutableDictionary * _store;
//    NSURL * _databaseURL;
//    NSError * _loadError;
//}
//@property (readonly) NSObject<OS_dispatch_queue> * queue;
//@property (readonly) DVTFuture * ensureStoreLoaded;
//@property (retain) NSMutableDictionary * store;
//@property (readonly) NSURL * databaseURL;
//@property (retain) NSError * loadError;
//- (id)initWithURL:(id)v1;
//- (id)init;
//- (void)transformLeavesInStore:(id)v1 usingBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)copyStore:(id)v1 transformingLeavesUsingBlock:(void (^ /* unknown block signature */)(void))v2;
//- (char)validateDatabaseSchemaForStore:(id)v1;
//- (char)loadStoreFromPlistWithError:(id *)v1;
//- (char)loadStoreIfNecessary:(id *)v1;
//- (id)save;
//- (void)updateMetadataRecord:(id)v1;
//- (void)updateFields:(id)v1 forMetadataRecord:(id)v2;
//- (void)purgeMetadataRecordsPassingTest:(void (^ /* unknown block signature */)(void))v1;
//- (id)metadataRecordsForIdentifier:(id)v1;
//- (void)updateWithSchemeActionRecord:(id)v1;
//- (void (^ /* unknown block signature */)(void))classBasedLPTPrioritizerWithFallbackExecutionOrdering:(long long)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySDKFilePathProvider : IDEOpenQuicklyAbstractWorkspaceResultProvider
//+ (long long)aggregationCutoff;
//- (void)generateGeneratorsWithCompletionGroup:(id)v1 forWorkspace:(id)v2;
//- (id)transformAggregateResults:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchiveDistributionEvent : NSObject {
//    NSDate * _date;
//    NSString * _title;
//    NSString * _shortTitle;
//    NSArray * _errors;
//    NSArray * _warnings;
//    NSArray * _infoMessages;
//    long long _state;
//    NSString * _rawDate;
//    NSString * _originalStateString;
//}
//@property (readonly) NSString * rawDate;
//@property (readonly) NSString * originalStateString;
//@property (readonly) NSString * title;
//@property (readonly) NSString * shortTitle;
//@property (readonly) NSDate * date;
//@property (readonly) NSArray * errors;
//@property (readonly) NSArray * warnings;
//@property (readonly) NSArray * infoMessages;
//@property (readonly) long long state;
//+ (id)eventWithTitle:(id)v1 shortTitle:(id)v2 rawDate:(id)v3 errors:(id)v4 warnings:(id)v5 infoMessages:(id)v6 state:(long long)v7;
//+ (id)eventWithTitle:(id)v1 shortTitle:(id)v2 date:(id)v3 errors:(id)v4 warnings:(id)v5 infoMessages:(id)v6 state:(long long)v7;
//+ (id)eventWithITunesDeveloperIDStatusResponse:(id)v1 auditLog:(id)v2;
//+ (id)eventFromDictionaryRepresentation:(id)v1;
//- (id)_stateForSerialization;
//- (id)dictionaryRepresentation;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDataProvider_NetworkStatistics : IDEDataProvider {
//    NSObject<OS_dispatch_queue> * _capture_lock;
//    NSObject<OS_dispatch_queue> * _results_lock;
//    NSMutableDictionary * _lastResults;
//    struct __NStatManager * _netstatManager;
//    NSObject<OS_dispatch_queue> * _netstatQueue;
//    struct unordered_map<int, (anonymous namespace)::ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, (anonymous namespace)::ProcessInfo> > > _processInfoByPID;
//    struct unordered_map<__NStatSource *, (anonymous namespace)::SourceInfo, std::__1::hash<__NStatSource *>, std::__1::equal_to<__NStatSource *>, std::__1::allocator<std::__1::pair<__NStatSource *const, (anonymous namespace)::SourceInfo> > > _sourceInfosBySrcRef;
//}
//+ (id)sharedDataProvider;
//- (id)init;
//- (id)supportedAttributes;
//- (char)captureAttributes:(id)v1 toDictionary:(id)v2 forPID:(id)v3;
//- (void)dealloc;
//- (id)captureAttributes:(id)v1 forPIDs:(id)v2;
//- (void).cxx_destruct;
//- (id).cxx_construct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunOperationPathWorker : IDERunOperationWorker
//@property (readonly) DVTFilePath * filePath;
//@property (readonly) NSMutableDictionary * compositeEnvironmentVariables;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppIDItemIdentifiersItemModelSet : NSObject<DVTInvalidation,IDEAppIDContainerFlightCheckDelegate> {
//    NSObject<IDEFlightChecking> * _flightCheck;
//    NSOrderedSet * _unexpandedIdentifiers;
//    char _isRefreshing;
//    char _requiresPortalIdentifiers;
//    IDEProjectItemModel * _itemModel;
//    NSString * _teamItemsKeyPath;
//    DVTPortalContainerType * _containerType;
//    NSSet * _availableTeamIdentifiers;
//}
//@property (retain) NSSet * availableTeamIdentifiers;
//@property (nonatomic) char isRefreshing;
//@property (readonly) char requiresPortalIdentifiers;
//@property (readonly,nonatomic) IDEProjectItemModel * itemModel;
//@property (readonly) NSString * teamItemsKeyPath;
//@property (readonly) DVTPortalContainerType * containerType;
//@property (copy,nonatomic) NSOrderedSet * unexpandedIdentifiers;
//@property (readonly) NSObject<IDEFlightChecking> * flightCheck;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)expandedIdentifiers:(id)v1 targetCapabilitiesContext:(id)v2 buildConfiguration:(id)v3 expansion:(id)v4 error:(id *)v5;
//+ (id)containerIdentifiersJobCache;
//- (id)initWithItemModel:(id)v1 teamItemsKeyPath:(id)v2 containerType:(id)v3;
//- (id)initWithoutPortalWithItemModel:(id)v1;
//- (void)primitiveInvalidate;
//- (void)setUnexpandedIdentifiersWithoutPublishing:(id)v1;
//- (id)expandedIdentifier:(id)v1 error:(id *)v2;
//- (id)expandedIdentifiersWithError:(id *)v1;
//- (void)refreshAvailableTeamIdentifiersUseCachedResult:(char)v1 completionHandler:(void (^ /* unknown block signature */)(void))v2;
//- (id)containerIdentifiersForFlightCheck:(id)v1 error:(id *)v2;
//- (void)flightCheckWillUnresolve:(id)v1;
//- (void)flightCheckIsValidating:(id)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEConsoleItem : NSObject<DVTSimpleSerialization,NSSecureCoding> {
//    unsigned long long _adaptorType;
//    NSString * _content;
//    double _timestamp;
//    int _kind;
//}
//@property int kind;
//@property (readonly) unsigned long long adaptorType;
//@property (readonly) NSString * content;
//@property (readonly,getter=isInput) char input;
//@property (readonly,getter=isOutput) char output;
//@property (readonly,getter=isPrompt) char prompt;
//@property (readonly,getter=isOutputRequestedByUser) char outputRequestedByUser;
//@property (readonly,getter=isError) char error;
//@property (readonly) double timestamp;
//+ (id)keyPathsForValuesAffectingInput;
//+ (id)keyPathsForValuesAffectingOutput;
//+ (id)keyPathsForValuesAffectingPrompt;
//+ (id)keyPathsForValuesAffectingOutputRequestedByUser;
//+ (id)keyPathsForValuesAffectingError;
//+ (char)supportsSecureCoding;
//- (id)initWithAdaptorType:(unsigned long long)v1 content:(id)v2 kind:(int)v3;
//- (id)description;
//- (void)setInput:(char)v1;
//- (void)setOutput:(char)v1;
//- (void)setPrompt:(char)v1;
//- (void)setOutputRequestedByUser:(char)v1;
//- (void)setError:(char)v1;
//- (id)itemAsSubitems;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerCore : NSObject<IDEContainerCore> {
//    DVTFilePath * _filePath;
//    DVTExtension * _containerExtension;
//    int _currentActivity;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)containerExtensionForFileDataType:(id)v1;
//+ (id)retainedContainerCoreAtFilePath:(id)v1 ofType:(id)v2 error:(id *)v3;
//+ (id)retainedContainerCoreForFilePath:(id)v1;
//+ (char)isContainerCoreOpenForFilePath:(id)v1;
//+ (id)containerFileType;
//+ (char)supportsFilePersistence;
//+ (id)containerDataFilePathsForFilePath:(id)v1;
//+ (id)_openContainerCores;
//+ (unsigned long long)_countForContainerCore:(id)v1;
//+ (void)_incrementCountForContainerCore:(id)v1;
//+ (void)_decrementCountForContainerCore:(id)v1;
//+ (void)_removeReferencesToContainerCore:(id)v1;
//+ (char)_closeContainerCoreIfNeeded:(id)v1;
//+ (void)_retainContainerCore:(id)v1;
//+ (void)_releaseContainerCore:(id)v1;
//+ (void)_invalidateContainerCore:(id)v1;
//- (id)initWithFilePath:(id)v1 extension:(id)v2 error:(id *)v3;
//- (id)init;
//- (void)_saveContainerCoreIfNeeded;
//- (void)retainContainerCore;
//- (void)releaseContainerCore;
//- (void)primitiveInvalidate;
//- (int)currentActivity;
//- (id)rootGroup;
//- (id)containerExtension;
//- (id)filePath;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECommandLineEnvironment : NSObject {
//    NSArray * _arguments;
//    NSDictionary * _environment;
//    DVTFilePath * _workingDirectory;
//    NSDictionary * _commandLineOptions;
//    NSArray * _commandLineUnparsedArguments;
//    NSFileHandle * _standardInput;
//    NSFileHandle * _standardOutput;
//    NSFileHandle * _standardError;
//    IDEWorkspace * _workspace;
//    IDEContainer<IDEBlueprintProvider> * _primaryBlueprintProvider;
//    IDEScheme * _scheme;
//    NSSet * _blueprints;
//    IDEMutableOverridingBuildProperties * _buildProperties;
//    NSString * _buildConfiguration;
//    IDERunDestination * _runDestination;
//    IDESchemeActionsInvocationRecord * _schemeActionsInvocationRecord;
//}
//@property (copy,nonatomic) NSArray * arguments;
//@property (copy,nonatomic) NSDictionary * environment;
//@property (retain,nonatomic) DVTFilePath * workingDirectory;
//@property (copy,nonatomic) NSDictionary * commandLineOptions;
//@property (copy,nonatomic) NSArray * commandLineUnparsedArguments;
//@property (retain,nonatomic) NSFileHandle * standardInput;
//@property (retain,nonatomic) NSFileHandle * standardOutput;
//@property (retain,nonatomic) NSFileHandle * standardError;
//@property (retain,nonatomic) IDEWorkspace * workspace;
//@property (retain,nonatomic) IDEContainer<IDEBlueprintProvider> * primaryBlueprintProvider;
//@property (retain,nonatomic) IDEScheme * scheme;
//@property (copy,nonatomic) NSSet * blueprints;
//@property (retain,nonatomic) IDEMutableOverridingBuildProperties * buildProperties;
//@property (copy,nonatomic) NSString * buildConfiguration;
//@property (retain,nonatomic) IDERunDestination * runDestination;
//@property (retain,nonatomic) IDESchemeActionsInvocationRecord * schemeActionsInvocationRecord;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDENotifyingLocalizedGroup : NSObject<DVTInvalidation> {
//    IDEGroup<IDELocalizedGroup> * _group;
//    NSDictionary * _variantFileReferences;
//    DVTObservingToken * _subitemsObservationToken;
//    DVTObservingToken * _resolvedFilePathObservationToken;
//}
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingBaseFileReference;
//+ (id)keyPathsForValuesAffectingDevelopmentFileReference;
//+ (id)keyPathsForValuesAffectingAvailableLanguages;
//- (id)initWithLocalizedGroup:(id)v1;
//- (void)_update;
//- (void)primitiveInvalidate;
//- (id)group;
//- (id)baseFileReference;
//- (id)developmentFileReference;
//- (id)fileReferenceForLanguage:(id)v1;
//- (id)developmentLanguage;
//- (id)targetLanguages;
//- (id)availableLanguages;
//- (id)availableLanguagesForFileReferencesConformingToType:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceArena : NSObject<DVTInvalidation> {
//    IDEWorkspace * _workspace;
//    DVTFilePath * _cachedDerivedDataLocation;
//    DVTFilePath * _cachedBuildFolderPath;
//    DVTFilePath * _cachedBuildProductsFolderPath;
//    DVTFilePath * _cachedBuildIntermediatesFolderPath;
//    NSString * _cachedWorkspaceArenaFolderName;
//    char _hasWorkspaceRelativeDerivedDataLocation;
//    char didSetUpCachedWorkspaceArenaFolderNameObservations;
//    id _derivedDataFolderForWorkspaceObservingToken;
//    id _derivedDataNotificationToken;
//    id _derivedDataSourceTreesNotificationToken;
//    id _derivedDataOverrideNotificationToken;
//    IDEWorkspaceArenaSnapshot * _cachedSnapshot;
//    DVTFilePath * _indexDataStoreFolderOverride;
//    char _indexEnableDataStore;
//}
//@property char hasWorkspaceRelativeDerivedDataLocation;
//@property (readonly) double workspaceArenaInfoRefreshInterval;
//@property (readonly) IDEWorkspaceArenaSnapshot * currentSnapshot;
//@property (readonly) DVTFilePath * derivedDataLocation;
//@property (readonly) DVTFilePath * derivedDataFolderForWorkspace;
//@property (readonly) DVTFilePath * archivingBuildFolderPath;
//@property (readonly) DVTFilePath * installingBuildFolderPath;
//@property (readonly) DVTFilePath * pgoBuildFolderPath;
//@property (readonly) DVTFilePath * codeCoverageBuildFolderPath;
//@property (readonly) DVTFilePath * swiftMigrationBuildFolderPath;
//@property (readonly) DVTFilePath * IBLiveViewsBuildFolderPath;
//@property (readonly) DVTFilePath * clonedSourcePackagesFolderPath;
//@property (readonly) DVTFilePath * buildProductsFolderPath;
//@property (readonly) DVTFilePath * buildIntermediatesFolderPath;
//@property (readonly) DVTFilePath * precompiledHeadersFolderPath;
//@property (readonly) DVTFilePath * indexFolderPath;
//@property (readonly) DVTFilePath * indexDataStoreFolderPath;
//@property (readonly) char indexEnableDataStore;
//@property (readonly) DVTFilePath * textIndexFolderPath;
//@property (readonly) DVTFilePath * indexPrecompiledHeadersFolderPath;
//@property (readonly) DVTFilePath * logFolderPath;
//@property (readonly) DVTFilePath * testResultsFolderPath;
//@property (readonly) DVTFilePath * buildFolderPath;
//@property (readonly) IDEWorkspaceArenaInfo * workspaceArenaInfo;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)nameForWorkspaceArenaWithBaseName:(id)v1 gristInput:(id)v2;
//+ (id)keyPathsForValuesAffectingDerivedDataFolderForWorkspace;
//+ (id)keyPathsForValuesAffectingPath;
//+ (id)_resolvedBuildFolderSettingsGivenSettings:(id)v1;
//+ (char)_customBuildResultsPathForBuildResultsType:(int)v1 settings:(id)v2 workspaceArena:(id)v3 returningFilePath:(id *)v4 orReturningPathString:(id *)v5 withPlaceholder:(int *)v6;
//+ (void)_buildResultsPathForBuildResultsType:(int)v1 settings:(id)v2 workspaceArena:(id)v3 returningFilePath:(id *)v4 orReturningPathString:(id *)v5 withPlaceholder:(int *)v6;
//+ (id)keyPathsForValuesAffectingBuildProductsFolderPath;
//+ (id)keyPathsForValuesAffectingBuildIntermediatesFolderPath;
//+ (id)keyPathsForValuesAffectingArchivingBuildFolderPath;
//+ (id)keyPathsForValuesAffectingInstallingBuildFolderPath;
//+ (id)keyPathsForValuesAffectingPGOBuildFolderPath;
//+ (id)keyPathsForValuesAffectingCodeCoverageBuildFolderPath;
//+ (id)keyPathsForValuesAffectingSwiftMigrationBuildFolderPath;
//+ (id)keyPathsForValuesAffectingIBLiveViewsBuildFolderPath;
//+ (id)keyPathsForValuesAffectingPrecompiledHeadersFolderPath;
//+ (id)keyPathsForValuesAffectingClonedSourcePackagesFolderPath;
//+ (id)buildProductsFolderPathForSettings:(id)v1 usingPlaceholderOfType:(int *)v2;
//+ (id)buildIntermediatesFolderPathForSettings:(id)v1 usingPlaceholderOfType:(int *)v2;
//+ (id)keyPathsForValuesAffectingTextIndexFolderPath;
//+ (id)keyPathsForValuesAffectingIndexFolderPath;
//+ (id)keyPathsForValuesAffectingIndexDataStoreFolderPath;
//+ (id)keyPathsForValuesAffectingIndexPrecompiledHeadersFolderPath;
//+ (id)keyPathsForValuesAffectingLogFolderPath;
//+ (id)keyPathsForValuesAffectingTestResultsFolderPath;
//+ (id)keyPathsForValuesAffectingWorkspaceArenaInfo;
//+ (id)_standardDerivedDataLocationPathFragment;
//+ (id)standardWorkspaceDerivedDataLocationForWorkspace:(id)v1;
//+ (char)shouldUniqueWorkspaceFoldersInStandardDerivedDataLocation;
//+ (id)defaultWorkspaceRelativeDerivedDataDirLocation;
//+ (id)defaultBuildSubdirectoryName;
//- (void)primitiveInvalidate;
//- (id)workspaceArenaFolderName;
//- (char)_shouldUniqueWorkspaceInDerivedDataForDerivedDataLocationStyle:(int)v1 customDerivedDataLocation:(id)v2;
//- (id)path;
//- (id)_derivedDataFolderPathOverride;
//- (id)_clonedSourcePackagesFolderPathOverride;
//- (id)presumptiveBuildFolderPathWithName:(id)v1 baseBuildFolderLocation:(id)v2;
//- (void)buildFolderSettingsDidChange:(id)v1;
//- (id)_buildFolderPathForSettings:(id)v1;
//- (id)_buildResultsPathForBuildResultsType:(int)v1 settings:(id)v2;
//- (id)buildProductsFolderPathForSettings:(id)v1;
//- (id)buildIntermediatesFolderPathForSettings:(id)v1;
//- (id)initWithWorkspace:(id)v1;
//- (void)_setupIndexPreferences;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)mutableCopyWithZone:(struct _NSZone *)v1;
//- (char)createWorkspaceArenaFolderIfNecessaryWithError:(id *)v1;
//- (void)createWorkspaceArenaFolderIfNecessary;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildFolderSettings : NSObject {
//    int buildLocationStyle;
//    NSString * sharedBuildFolderName;
//    int customBuildLocationType;
//    NSString * customBuildProductsPath;
//    NSString * customBuildIntermediatesPath;
//}
//+ (id)buildFolderSettingsForWorkspaceSettings:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceArenaInfo : NSObject {
//    NSDictionary * _infoDict;
//    DVTFilePath * _workspacePath;
//    NSDate * _lastAccessedDate;
//}
//@property (readonly) NSDate * lastAccessedDate;
//@property (readonly) DVTFilePath * workspacePath;
//+ (id)workspaceArenaInfoWithWorkspacePath:(id)v1;
//+ (id)workspaceArenaInfoFromFileAtPath:(id)v1 error:(id *)v2;
//- (char)writeToFileAtPath:(id)v1 withRelativeWorkspacePath:(char)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceArenaSnapshot : NSObject {
//    DVTFilePath * _derivedDataFolderPath;
//    DVTFilePath * _buildProductsFolderPath;
//    DVTFilePath * _buildIntermediatesFolderPath;
//    DVTFilePath * _precompiledHeadersFolderPath;
//    DVTFilePath * _clonedSourcePackagesFolderPath;
//    DVTFilePath * _indexFolderPath;
//    DVTFilePath * _indexDataStoreFolderPath;
//    DVTFilePath * _indexPrecompiledHeadersFolderPath;
//    DVTFilePath * _logFolderPath;
//    DVTFilePath * _textIndexFolderPath;
//    char _indexEnableDataStore;
//    unsigned long long _hash;
//}
//@property (readonly) DVTFilePath * derivedDataFolderPath;
//@property (readonly) DVTFilePath * buildProductsFolderPath;
//@property (readonly) DVTFilePath * buildIntermediatesFolderPath;
//@property (readonly) DVTFilePath * precompiledHeadersFolderPath;
//@property (readonly) DVTFilePath * clonedSourcePackagesFolderPath;
//@property (readonly) DVTFilePath * indexFolderPath;
//@property (readonly) DVTFilePath * indexDataStoreFolderPath;
//@property (readonly) char indexEnableDataStore;
//@property (readonly) DVTFilePath * indexPrecompiledHeadersFolderPath;
//@property (readonly) DVTFilePath * logFolderPath;
//@property (readonly) DVTFilePath * textIndexFolderPath;
//+ (id)workspaceArenaSnapshotForWorkspaceArena:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)copy;
//- (id)dvt_detailedDebugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFileBasedCacheDeleteItem : DVTFileBasedCacheDeleteItem
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceArenaCacheDeleteItem : IDEFileBasedCacheDeleteItem {
//    IDEWorkspaceArenaInfo * _info;
//}
//@property (readonly) IDEWorkspaceArenaInfo * info;
//- (id)initWithWorkspaceArenaInfo:(id)v1 workspaceArenaPath:(id)v2;
//- (id)lastAccessedDate;
//- (char)isOrphaned;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEModuleCacheCacheDeleteItem : IDEFileBasedCacheDeleteItem
//- (id)lastAccessedDate;
//- (char)isOrphaned;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDerivedDataCacheDeleteExtension : DVTDefaultPolicyCacheDeleteExtension {
//    DVTFilePath * _derivedDataLocation;
//}
//- (id)initWithDerivedDataLocation:(id)v1;
//- (id)init;
//- (id)itemsWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductCategory : NSObject {
//    char _wantsRoundedIcons;
//    char _supportsAnalyticsMetricsData;
//    char _supportedByNotaryService;
//    char _supportsMacAppStoreDistribution;
//    NSString * _identifier;
//    NSString * _archiveDescription;
//    long long _sortOrder;
//    long long _deprecatedIdentifier;
//    NSString * _platformDisambiguationString;
//    NSString * _productVersionSupportedDeviceTypesKey;
//    NSString * _supportedOSVersionStringFormat;
//    NSSet * _overridingDeviceTypes;
//    NSString * _userDescriptionWhenNoPlatformExists;
//}
//@property (retain,nonatomic) NSString * userDescriptionWhenNoPlatformExists;
//@property (readonly) NSString * identifier;
//@property (readonly) NSString * userDescription;
//@property (readonly) NSString * userDescriptionPluralForm;
//@property (readonly) NSString * archiveDescription;
//@property (readonly) long long sortOrder;
//@property (readonly) long long deprecatedIdentifier;
//@property (readonly) char wantsRoundedIcons;
//@property (readonly) DVTPlatform * platform;
//@property (readonly) NSString * platformDisambiguationString;
//@property (readonly) NSString * productVersionSupportedDeviceTypesKey;
//@property (readonly) NSString * supportedOSVersionStringFormat;
//@property (readonly) NSSet * overridingDeviceTypes;
//@property (readonly) char supportsAnalyticsMetricsData;
//@property (readonly) char supportedByNotaryService;
//@property (readonly) char supportsMacAppStoreDistribution;
//+ (id)sortedProductCategories;
//+ (id)productCategories;
//+ (id)productCategoryForPlatformSDKIdentifier:(id)v1;
//+ (id)productCategoryForIdentifier:(id)v1;
//+ (id)productCategoryForUnknownIdentifier;
//+ (id)productCategoryForDeprecatedIdentifier:(id)v1;
//+ (id)productCategoryForIdentifier:(id)v1 fallingBackOnDeprecatedIdentifier:(id)v2 outError:(id *)v3;
//- (id)platformDisambiguationStringWithPrefixString:(id)v1;
//- (id)initWithIdentifier:(id)v1 userDescriptionWhenNoPlatformExists:(id)v2 archiveDescription:(id)v3 sortOrder:(long long)v4 deprecatedIdentifier:(long long)v5 wantsRoundedIcons:(char)v6 supportedOSVersionStringFormat:(id)v7 overridingDeviceTypes:(id)v8 platformDisambiguationString:(id)v9 productVersionSupportedDeviceTypesKey:(id)v10 supportsAnalyticsMetricsData:(char)v11 supportedByNotaryService:(char)v12 supportsMacAppStoreDistribution:(char)v13;
//- (id)platformForCategoryIdentifier:(id)v1;
//- (id)description;
//- (long long)compare:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyResult : NSObject {
//    double _textScore;
//    double _compositeScore;
//    DVTRangeArray * _matchedRanges;
//    struct DVTFuzzyMatchCandidate * _candidate;
//    IDEOpenQuicklyQuery * _query;
//}
//@property (readonly) NSString * text;
//@property (readonly) double textScore;
//@property (readonly) double compositeScore;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) NSURL * displayPathURL;
//@property (readonly) DVTRangeArray * matchedRanges;
//@property (readonly) struct DVTFuzzyMatchCandidate * candidate;
//@property (readonly) IDEOpenQuicklyQuery * query;
//@property (readonly) NSArray * childResults;
//@property (readonly) DVTFilePath * sourceSDKFilePath;
//@property (readonly) char isFromPoject;
//@property (readonly) char isSymbolic;
//@property (readonly) char isAlternateGroupRepresentingMultipleSDKs;
//+ (id)resultWithCandidate:(struct DVTFuzzyMatchCandidate *)v1 query:(id)v2 textScore:(double)v3 compositeScore:(double)v4 matchedRanges:(id)v5;
//+ (double)scoreCandidate:(struct DVTFuzzyMatchCandidate *)v1 precision:(long long)v2 isFileName:(char)v3 fromFilePathOrURL:(id)v4 isFromProject:(char)v5 sourceSDKFilePath:(id)v6 isFromInterestingFramework:(char)v7 isPrivateSDKContent:(char)v8 query:(id)v9 textScore:(double *)v10 matchedRanges:(id *)v11;
//+ (id)documentLocationForURL:(id)v1 lineNumber:(id)v2;
//+ (id)documentLocationForFilePath:(id)v1 lineNumber:(id)v2;
//- (id)flattenToPrimaryResult;
//- (id)updatedResultForQuery:(id)v1 precision:(long long)v2;
//- (id)description;
//- (id)valueStandingInForForAlternateIdentity;
//- (unsigned long long)hashForAlternateIdentity;
//- (char)representsAlternativeOfResult:(id)v1;
//- (id)alternateTitleGivenParentResult:(id)v1;
//- (unsigned long long)hashOfResultIdentity;
//- (char)representsSameResult:(id)v1;
//- (long long)compareCompositeScoreInDescendingOrder:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECleanCommandLineVerb : IDESchemeBasedCommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)cleanBuildFolderForWorkspace:(id)v1 inEnvironment:(id)v2;
//+ (int)performWithEnvironment:(id)v1;
//+ (char)requiresScheme;
//+ (id)_overridingValueForProperty:(id)v1 inOverridingProperties:(id)v2;
//+ (char)_cleanFolderAtPath:(id)v1 withDisplayName:(id)v2 environment:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAnalyticsPointTranslationContext : NSObject {
//    DVTAnalyticsPointAbstractClass * _analyticsPoint;
//    IDEWorkspace * _workspace;
//    NSSet * _binaryUUIDs;
//    NSMutableDictionary * _fileNameToFilePathMap;
//    NSMutableDictionary * _codeModulesByName;
//}
//@property IDEWorkspace * workspace;
//@property (retain) NSSet * binaryUUIDs;
//@property (retain) NSMutableDictionary * fileNameToFilePathMap;
//@property (retain) NSMutableDictionary * codeModulesByName;
//@property (readonly,nonatomic) DVTAnalyticsPointAbstractClass * analyticsPoint;
//- (id)initWithAnalyticsPoint:(id)v1 workspace:(id)v2;
//- (id)initWithAnalyticsPoint:(id)v1 workspace:(id)v2 binaryUUIDs:(id)v3;
//- (id)initWithAnalyticsPoint:(id)v1 workspace:(id)v2 productVersion:(id)v3;
//- (void)updateWithProductVersion:(id)v1;
//- (id)filePathForFileName:(id)v1;
//- (char)containsBinaryUUID:(id)v1;
//- (void)setCodeModule:(id)v1 forName:(id)v2 passesBuildProductDirFallback:(char)v3;
//- (void)updateWithLoadedBinaries:(id)v1 executablePath:(id)v2;
//- (id)codeModuleForName:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyAggregationEntry : NSObject {
//    char _finishedStarting;
//    IDEOpenQuicklyResultGenerator * _generator;
//    NSArray * _resultsOrderedByScore;
//    long long _receivedGeneration;
//}
//@property (readonly) IDEOpenQuicklyResultGenerator * generator;
//@property (readonly) NSArray * resultsOrderedByScore;
//@property (readonly) long long receivedGeneration;
//- (id)initWithGenerator:(id)v1;
//- (char)updateOrderedResults:(id)v1 generation:(long long)v2;
//- (void)noteDidFinishStarting;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyResultAggregator : IDEOpenQuicklyResultGenerator<IDEOpenQuicklyResultConsumer> {
//    NSMapTable * _indexedCoordinationEntries;
//    NSMutableArray * _allCoordinationEntries;
//    NSObject<OS_dispatch_group> * _startupGroup;
//    char _sendsIncompleteResults;
//    long long _cutoff;
//}
//@property (readonly) char sendsIncompleteResults;
//@property (readonly) long long cutoff;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithCutoff:(long long)v1 sendsIncompleteResults:(char)v2 queryContext:(id)v3 consumer:(id)v4;
//- (void)generateGeneratorsWithCompletionGroup:(id)v1;
//- (void)start;
//- (void)addGenerator:(id)v1;
//- (long long)minimumReceivedGeneration;
//- (id)entryForGenerator:(id)v1;
//- (id)transformAggregateResults:(id)v1;
//- (id)generateOutputResults;
//- (void)resultGenerator:(id)v1 didGenerateOrderedResults:(id)v2 generation:(long long)v3;
//- (void)resultGeneratorFinishedStarting:(id)v1;
//- (void)updateUserInput:(id)v1 generation:(long long)v2;
//- (id)resultConsumptionQueue;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeBasedCommandLineVerb : IDEWorkspaceBasedCommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//+ (char)requiresScheme;
//+ (void)finalizeSchemeActionsInvocationRecordWithEnvironment:(id)v1;
//+ (id)_schemeWithName:(id)v1 blueprints:(id)v2 inWorkspace:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssueFileGroup : NSObject {
//    NSMutableArray * _issues;
//    unsigned long long _testFailureCount;
//    unsigned long long _errorCount;
//    unsigned long long _warningCount;
//    unsigned long long _noticeCount;
//    unsigned long long _analyzerResultCount;
//    unsigned long long _runtimeCount;
//    IDEIssueProvider * _issueProvider;
//    NSURL * _documentURL;
//    unsigned long long _issueType;
//}
//@property (readonly) IDEIssueProvider * issueProvider;
//@property (readonly) NSURL * documentURL;
//@property (readonly) NSArray * issues;
//@property (readonly) unsigned long long issueType;
//- (id)init;
//- (id)_initWithIssueProvider:(id)v1 documentURL:(id)v2;
//- (void)_updateIssueType;
//- (void)_addIssues:(id)v1;
//- (void)_removeIssues:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERemoteNotificationRegistration : NSObject {
//    NSData * _token;
//    NSError * _error;
//}
//@property (retain) NSData * token;
//@property (retain) NSError * error;
//+ (id)registrationForDisabledState;
//- (id)initWithToken:(id)v1 tokenRegistrationError:(id)v2;
//- (id)remoteNotificationToken:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindTextQuery : IDEBatchFindAbstractFileByFileTextualQuery
//+ (char)supportsCaseMatching;
//+ (char)supportsAnchorning;
//+ (char)supportsPatterns;
//+ (id)displayName;
//+ (id)queryTermPlaceholderText;
//- (id)emptyResultSetPlaceholderResultKind;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAppleProvidedContent : NSObject
//+ (id)isAppleProvidedContent:(id)v1 distributionItem:(id)v2 archive:(id)v3 error:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceSettings : NSObject<DVTInvalidation> {
//    IDEWorkspace * _workspace;
//    NSMutableDictionary * _workspaceSettings;
//    char _loadedExistingSettings;
//}
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) char loadedExistingSettings;
//@property int buildSystemType;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (int)defaultBuildSystemType;
//+ (char)automaticallyNotifiesObserversForBuildSystemType;
//- (id)initWithWorkspace:(id)v1;
//- (id)objectForKey:(id)v1;
//- (void)setObject:(id)v1 forKey:(id)v2;
//- (void)removeObjectForKey:(id)v1;
//- (id)stringForKey:(id)v1;
//- (long long)integerForKey:(id)v1;
//- (char)boolForKey:(id)v1;
//- (void)setString:(id)v1 forKey:(id)v2;
//- (void)setInteger:(long long)v1 forKey:(id)v2;
//- (void)setBool:(char)v1 forKey:(id)v2;
//- (id)settingsOwnership;
//- (id)customDataSpecifier;
//- (void)saveSettings;
//- (void)loadSettings;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEITunesAccountStoreConfigurationResult : NSObject {
//    DVTDeveloperAccount * _account;
//    IDEITunesConnectConfigurationResponse * _configurationResponse;
//}
//@property (readonly) DVTDeveloperAccount * account;
//@property (readonly) IDEITunesConnectConfigurationResponse * configurationResponse;
//- (id)initWithDeveloperAccount:(id)v1 appStoreSubmissionConfiguration:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionUtilities : NSObject
//+ (id)iTunesConnectAccountForTeamID:(id)v1 teamName:(id)v2 iTunesConnectProxy:(id)v3;
//+ (char)iTunesQAAccount:(id *)v1 error:(id *)v2;
//+ (id)iTunesConnectAccountForTeamID:(id)v1 teamName:(id)v2 fromAccounts:(id)v3 iTunesConnectProxy:(id)v4 logAspect:(id)v5;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindNamedScope : NSObject<NSCopying,IDEBatchFindPlistCodable>
//@property (readonly) NSString * name;
//@property (readonly) IDEBatchFindFileSource * source;
//@property (readonly) IDEBatchFindFilePathPredicate * predicate;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//+ (id)titleForNamedScope:(id)v1 inWorkspace:(id)v2;
//+ (id)defaultScopeForWorkspace:(id)v1;
//+ (id)titleForNamedScope:(id)v1 inWorkspace:(id)v2 isDefaultTopLevelScope:(char *)v3;
//+ (id)propertyListIdentifier;
//+ (id)plistDecoder;
//- (unsigned long long)hash;
//- (char)isEqualToNamedScopeWithIdenticalClass:(id)v1;
//- (char)isEqualToNamedScope:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)isWorkspaceSpecific;
//- (id)propertyListRepresentation;
//- (id)description;
//@end
//
//
///*****************************************************************/
//
//@interface IDEEntitlementsDictionary : NSObject<NSCopying> {
//    bool _frozen;
//    id _storage;
//    IDEEntitlementsDictionary * _parent;
//}
//@property (readonly) unsigned long long count;
//@property (readonly,copy) NSSet * allKeys;
//@property (readonly,copy) NSSet * allValues;
//@property (readonly) IDEEntitlementsDictionary * parent;
//+ (id)whiteoutMarker;
//- (id)init;
//- (id)initWithDictionary:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)freeze;
//- (id)mutableChild;
//- (void)applyDelta:(id)v1;
//- (id)mutableChildByApplyingDelta:(id)v1;
//- (id)flatRepresentation;
//- (id)deltaRepresentation;
//- (id)keyEnumerator;
//- (id)objectEnumerator;
//- (id)objectForKey:(id)v1;
//- (void)setObject:(id)v1 forKey:(id)v2;
//- (void)setObject:(id)v1 forKeyedSubscript:(id)v2;
//- (id)objectForKeyedSubscript:(id)v1;
//- (void)removeObjectForKey:(id)v1;
//- (void)addEntriesFromDictionary:(id)v1;
//- (void)removeAllObjects;
//- (void)removeObjectsForKeys:(id)v1;
//- (void)setDictionary:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEEntitlementsWhiteOutMarker : NSObject
//+ (id)marker;
//@end
//
//
///*****************************************************************/
//
//@interface IDECodesignParameterSnapshot : NSObject {
//    DVTProvisioningProfile * _provisioningProfile;
//    DVTSigningCertificate * _signingCertificate;
//    NSString * _identityHash;
//    IDEProfileQualification * _profileQualification;
//}
//@property (retain) DVTProvisioningProfile * provisioningProfile;
//@property (retain) DVTSigningCertificate * signingCertificate;
//@property (retain,nonatomic) IDEProfileQualification * profileQualification;
//@property (copy) NSString * identityHash;
//@property (readonly) bool isAdHocIdentity;
//@property (readonly) bool willSign;
//+ (id)_snapshotWithIdentityHash:(id)v1;
//+ (id)_snapshotWithSigningCertificate:(id)v1;
//+ (id)_snapshotWithProvisioningProfile:(id)v1 andSigningCertificate:(id)v2 profileQualification:(id)v3;
//+ (id)_snapshotForNullSigning;
//+ (id)_snapshotForAdHocSigning;
//- (id)description;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECodesignResolver : NSObject {
//    DVTSigningCertificate * _signingCertificate;
//    long long _automaticLocationStyle;
//    IDEProvisioningInputs * _inputs;
//}
//@property (readonly,nonatomic) IDEProvisioningInputs * inputs;
//@property (retain,nonatomic) DVTSigningCertificate * signingCertificate;
//@property (nonatomic) long long automaticLocationStyle;
//+ (id)profileQualificationForProfile:(id)v1 team:(id)v2 bundleID:(id)v3 platform:(id)v4 signingCertificate:(id)v5 appIDFeatures:(id)v6 entitlements:(id)v7 devices:(id)v8 profileType:(id)v9 allowTeamProfiles:(char)v10 verboseErrors:(char)v11;
//+ (id)signingCertificateForIdentifier:(id)v1 platform:(id)v2 signingCertificates:(id)v3 team:(id)v4 errorProvider:(id)v5 error:(id *)v6;
//+ (id)_signingCertificateForManualSpecifier:(id)v1 signingCertificates:(id)v2 team:(id)v3 platform:(id)v4 errorProvider:(id)v5 error:(id *)v6;
//+ (id)automaticSigningCertificateFromCertificates:(id)v1 certificatePurpose:(id)v2 teamID:(id)v3 platform:(id)v4 limitToIdentities:(char)v5 outError:(id *)v6;
//+ (id)_certificateMatchingHash:(id)v1 signingCertificates:(id)v2;
//+ (id)_certificateMatchingExactName:(id)v1 signingCertificates:(id)v2 team:(id)v3;
//+ (id)_certificateMatchingPartialName:(id)v1 signingCertificates:(id)v2 team:(id)v3;
//+ (id)_manageCertificatesErrorWithCode:(long long)v1 message:(id)v2 recoverySuggestion:(id)v3 team:(id)v4 platform:(id)v5 specifier:(id)v6;
//+ (id)_errorForInvalidSigningCertificate:(id)v1 platform:(id)v2 errorProvider:(id)v3;
//+ (id)_errorForNoSigningCertificateMatchingAuto:(id)v1 teamID:(id)v2 platform:(id)v3;
//+ (id)_errorForNoCertificateMatchingManualSpecifier:(id)v1 team:(id)v2 platform:(id)v3 errorProvider:(id)v4;
//+ (id)_errorForManuallySpecifiedIdentityMissingPrivateKey:(id)v1;
//+ (id)parametersForNullSigning;
//+ (id)parametersForAdHocSigning;
//- (id)initWithInputs:(id)v1;
//- (id)parametersWithErrors:(id *)v1;
//- (char)_wantVerboseErrors;
//- (id)_snapshotIncludingProfileWithErrors:(id *)v1;
//- (id)_profileLocatorWithError:(id *)v1;
//- (id)_signingCertificateWithError:(id *)v1;
//- (id)_errorForProfile:(id)v1 qualification:(id)v2;
//- (id)_errorForSigningCertificateOverrideInManual;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexRingBuffer : NSObject {
//    NSMutableArray * _buffer;
//    long long _first;
//    long long _capacity;
//}
//@property (readonly) long long count;
//- (id)initWithCapacity:(long long)v1;
//- (id)init;
//- (void)addObject:(id)v1;
//- (id)removeAll;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionResultStep : IDEDistributionStep
//@property (readonly,nonatomic) NSString * message;
//@property (readonly,nonatomic) char distributionSucceeded;
//@property (readonly,nonatomic) NSArray * warningsAndErrors;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)_wrappedIssues;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractResult : NSObject {
//    id _cachedIcon;
//    DVTDocumentLocation * _location;
//    SEL _childOrderingSelector;
//    IDEBatchFindAbstractResult * _parent;
//    long long _depth;
//    long long _queryIdentifier;
//    long long _resultIdentifier;
//    NSString * _text;
//    NSNumber * _initialSuggestedNumberOfLines;
//    long long _suggestedOrder;
//    struct _NSRange _highlightedTextRange;
//}
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) SEL childOrderingSelector;
//@property (readonly) IDEBatchFindAbstractResult * parent;
//@property (readonly) long long depth;
//@property (readonly) long long queryIdentifier;
//@property (readonly) long long resultIdentifier;
//@property (readonly) char isRoot;
//@property (readonly) NSString * text;
//@property (readonly) NSString * contextualSuffix;
//@property (readonly) struct _NSRange highlightedTextRange;
//@property (readonly) NSNumber * initialSuggestedNumberOfLines;
//@property (readonly) long long suggestedOrder;
//- (id)initWithDocumentLocation:(id)v1 text:(id)v2 highlightedTextRange:(struct _NSRange)v3 initialNumberOfLinesCalculator:(void (^ /* unknown block signature */)(void))v4 parent:(id)v5 suggestedOrder:(long long)v6 childOrderingSelector:(SEL)v7 queryIdentifier:(long long)v8 resultIdentifier:(long long)v9;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (long long)compareFilePaths:(id)v1;
//- (long long)compareText:(id)v1;
//- (long long)compareDocumentLocations:(id)v1;
//- (char)contributesToFileResultCount;
//- (char)contributesToResultCount;
//- (char)emphasizesTitle;
//- (char)allowsSummarization;
//- (char)canHaveChildren;
//- (id)generateFindResult;
//- (id)textRepresentationForPasteboard;
//- (char)textRepresentationForPasteboardIsFileName;
//- (long long)compareSuggestedOrder:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindRootResult : IDEBatchFindAbstractResult
//- (id)initWithChildOrderingSelector:(SEL)v1 queryIdentifier:(long long)v2 resultIdentifier:(long long)v3;
//- (char)canHaveChildren;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindFileResult : IDEBatchFindAbstractResult {
//    NSString * _contextualSuffix;
//    DVTFilePath * _filePath;
//}
//@property (readonly) DVTFilePath * filePath;
//- (id)initWithFilePath:(id)v1 contextualSuffix:(id)v2 parent:(id)v3 suggestedOrder:(long long)v4 childOrderingSelector:(SEL)v5 queryIdentifier:(long long)v6 resultIdentifier:(long long)v7;
//- (char)contributesToFileResultCount;
//- (char)contributesToResultCount;
//- (char)emphasizesTitle;
//- (char)allowsSummarization;
//- (char)canHaveChildren;
//- (id)textRepresentationForPasteboard;
//- (char)textRepresentationForPasteboardIsFileName;
//- (id)contextualSuffix;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractMatchResult : IDEBatchFindAbstractResult {
//    NSString * _contextText;
//    struct _NSRange _contextTextMatchingRange;
//}
//@property (readonly) NSString * contextText;
//@property (readonly) struct _NSRange contextTextMatchingRange;
//- (id)initWithDocumentLocation:(id)v1 contextText:(id)v2 contextTextMatchingRange:(struct _NSRange)v3 initialNumberOfLinesCalculator:(void (^ /* unknown block signature */)(void))v4 parent:(id)v5 queryIdentifier:(long long)v6 resultIdentifier:(long long)v7;
//- (char)contributesToFileResultCount;
//- (char)contributesToResultCount;
//- (char)allowsSummarization;
//- (char)canHaveChildren;
//- (id)textRepresentationForPasteboard;
//- (char)textRepresentationForPasteboardIsFileName;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindTextResult : IDEBatchFindAbstractMatchResult
//- (id)generateFindResult;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindSymbolicResult : IDEBatchFindAbstractMatchResult {
//    NSObject<IDEIndexSymbol> * _symbol;
//}
//@property (readonly) NSObject<IDEIndexSymbol> * symbol;
//- (id)initWithDocumentLocation:(id)v1 contextText:(id)v2 contextTextMatchingRange:(struct _NSRange)v3 initialNumberOfLinesCalculator:(void (^ /* unknown block signature */)(void))v4 parent:(id)v5 symbol:(id)v6 queryIdentifier:(long long)v7 resultIdentifier:(long long)v8;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindRegularExpressionResult : IDEBatchFindAbstractMatchResult {
//    NSRegularExpression * _regularExpression;
//    NSTextCheckingResult * _textCheckingResult;
//    NSString * _searchedText;
//}
//@property (readonly) NSRegularExpression * regularExpression;
//@property (readonly) NSTextCheckingResult * textCheckingResult;
//@property (readonly) NSString * searchedText;
//- (id)initWithDocumentLocation:(id)v1 contextText:(id)v2 contextTextMatchingRange:(struct _NSRange)v3 regularExpression:(id)v4 searchedText:(id)v5 textCheckingResult:(id)v6 initialNumberOfLinesCalculator:(void (^ /* unknown block signature */)(void))v7 parent:(id)v8 queryIdentifier:(long long)v9 resultIdentifier:(long long)v10;
//- (id)generateFindResult;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestFailureBreakpoint : IDEBreakpoint
//- (id)init;
//- (id)displayName;
//- (id)symbolNames;
//- (char)shouldBeModifiedAfterCreation;
//- (id)accessibilityDescription;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageArchiver : NSObject {
//    char _finished;
//    char _initializedSuccessfully;
//    NSString * _path;
//    NSFileHandle * _dataFileHandle;
//    NSFileHandle * _indexFileHandle;
//    NSMutableDictionary * _index;
//    unsigned long long _offset;
//}
//@property (copy,nonatomic) NSString * path;
//@property (retain,nonatomic) NSFileHandle * dataFileHandle;
//@property (retain,nonatomic) NSFileHandle * indexFileHandle;
//@property (retain,nonatomic) NSMutableDictionary * index;
//@property (nonatomic) unsigned long long offset;
//@property (getter=isFinished) char finished;
//@property char initializedSuccessfully;
//+ (id)encodeLines:(id)v1;
//+ (id)encodeSubrangesForLines:(id)v1;
//- (id)initWithArchivePath:(id)v1 error:(id *)v2;
//- (char)archiveContainsKey:(id)v1;
//- (char)archiveCoverageLines:(id)v1 forKey:(id)v2 error:(id *)v3;
//- (char)archiveCoverageLines:(id)v1 error:(id *)v2;
//- (char)finish:(id *)v1;
//- (void)cancel;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECoverageUnarchiver : NSObject<IDECoverageUnarchiver> {
//    unsigned int _recordsCount;
//    int _formatVersion;
//    NSString * _path;
//    NSFileHandle * _dataFileHandle;
//    NSFileHandle * _indexFileHandle;
//}
//@property (copy,nonatomic) NSString * path;
//@property (retain,nonatomic) NSFileHandle * dataFileHandle;
//@property (retain,nonatomic) NSFileHandle * indexFileHandle;
//@property (nonatomic) unsigned int recordsCount;
//@property (nonatomic) int formatVersion;
//+ (id)decodeLines:(id)v1 withSubranges:(id)v2;
//+ (id)decodeSubranges:(id)v1;
//- (id)initWithArchivePath:(id)v1 error:(id *)v2;
//- (unsigned long long)offsetOfRecordAtIndex:(unsigned int)v1;
//- (char)indexRecord:(struct anonymous_type_79 *)v1 atIndex:(unsigned int)v2 error:(id *)v3;
//- (id)keyForIndexRecord:(struct anonymous_type_80 *)v1 error:(id *)v2;
//- (char)dataFileOffset:(unsigned long long *)v1 forKey:(id)v2 error:(id *)v3;
//- (id)getKeys:(id *)v1;
//- (char)_getTotalLineRangeRecordsCount:(unsigned long long *)v1 totalSubrangeRecordsCount:(unsigned long long *)v2 error:(id *)v3;
//- (id)unarchiveCoverageLinesForKey:(id)v1 error:(id *)v2;
//- (id)unarchiveAllCoverageLines:(id *)v1;
//- (id)debugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEResultBundleLogProvider : IDELogProvider {
//    IDEInMemoryLogStore * _logStore;
//}
//@property (retain) IDEInMemoryLogStore * logStore;
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (id)initWithDomainItem:(id)v1;
//- (void)primitiveInvalidate;
//- (id)importResultBundle:(id)v1 disablesSourceIntegration:(char)v2;
//- (id)_workspace;
//- (id)logRecords;
//- (id)ideModelObjectTypeIdentifier;
//- (id)domainIdentifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestSchemeAction : IDELaunchTestSchemeAction {
//    NSMutableArray * _testPlanReferences;
//    NSMutableArray * _loadingTestPlanReferences;
//    NSMutableArray * _legacyTestableReferences;
//    NSMutableArray * _loadingTestableReferences;
//    char _localizableStringsDataGatheringEnabled;
//    DVTObservingToken * _testablesObservingToken;
//    DVTObservingToken * _skippedTestsObservingToken;
//    DVTObservingToken * _workspaceRunnableProductsToken;
//    DVTObservingToken * _testPlanReferencesObservingToken;
//    NSArray * _hostBuildableReferences;
//    char _suppressSimulatorApplication;
//    _TtC13IDEFoundation26IDESchemeTestPlanReference * _activeTestPlanReference;
//    _TtC13IDEFoundation26IDESchemeTestPlanReference * _defaultTestPlanReference;
//}
//@property (retain) NSMutableArray * mutableLegacyTestableReferences;
//@property (readonly) _TtC13IDEFoundation11IDETestPlan * activeTestPlan;
//@property (retain,nonatomic) _TtC13IDEFoundation26IDESchemeTestPlanReference * activeTestPlanReference;
//@property (retain) _TtC13IDEFoundation26IDESchemeTestPlanReference * defaultTestPlanReference;
//@property (readonly) char usesTestPlans;
//@property (copy) NSArray * testPlanReferences;
//@property (readonly) NSMutableArray * mutableTestPlanReferences;
//@property (readonly) NSArray * testableReferences;
//@property (copy) NSArray * legacyTestableReferences;
//@property (readonly) NSArray * testBuildableReferences;
//@property (readonly) NSArray * hostBuildableReferences;
//@property (readonly,getter=isTestable) char testable;
//@property (readonly) char needsNewSchemeVersionForTestPlans;
//@property char localizableStringsDataGatheringEnabled;
//@property (nonatomic) char suppressSimulatorApplication;
//+ (void)initialize;
//+ (id)codeCoverageEnabledOverride;
//+ (void)setCodeCoverageEnabledOverride:(id)v1;
//+ (id)keyPathsForValuesAffectingDoesNonActionWork;
//+ (id)keyPathsForValuesAffectingTestableReferences;
//+ (id)keyPathsForValuesAffectingTestBuildableReferences;
//+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
//+ (id)keyPathsForValuesAffectingActiveTestPlanReference;
//- (id)init;
//- (void)dvt_commonInit;
//- (id)name;
//- (id)schemeCommand;
//- (char)doesNonActionWork;
//- (id)runnable;
//- (id)effectiveBlueprintForOptimizationProfileGenerationForSchemeCommand:(id)v1;
//- (id)workingDirectoryForBuildParameters:(id)v1;
//- (id)testOperationWithSchemeOperationParameters:(id)v1 testManager:(id)v2 buildOperation:(id)v3 buildParameters:(id)v4 schemeCommand:(id)v5 actionRecord:(id)v6 testRunSpecificationGroups:(id)v7 coverageBuildableInfos:(id)v8 deviceAvailableChecker:(void (^ /* unknown block signature */)(void))v9 outError:(id *)v10 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v11;
//- (id)_finalizeLogOperationWithRecorder:(id)v1;
//- (id)_removeLogIfNeededOperationWithLogStore:(id)v1 logRecord:(id)v2 buildOperation:(id)v3;
//- (void)testableDidChangeHost:(id)v1;
//- (id)derivedTestPlan;
//- (void)addTestableReference:(id)v1;
//- (void)removeTestableReference:(id)v1;
//- (void)setRunContext:(id)v1;
//- (id)additionalOptions;
//- (char)_shouldUseDebuggingSettingsFromLaunchAction;
//- (char)shouldDebugXPCServices;
//- (char)shouldDebugAppExtensions;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setLocalizableStringsDataGatheringEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)addTestPlans:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addTestables:(id)v1 fromXMLUnarchiver:(id)v2;
//- (char)needsNewSchemeVersionForAppDataPackages;
//- (char)needsNewSchemeVersionForLocationSimulation;
//- (void)addTestPlanReference:(id)v1;
//- (void)removeTestPlanReference:(id)v1;
//- (char)_isEnabledTest:(id)v1 testableReference:(id)v2;
//- (id)testableReferenceForTestable:(id)v1;
//- (char)isTestEnabled:(id)v1;
//- (char)isTestableEnabled:(id)v1;
//- (char)isTestOrTestableEnabled:(id)v1;
//- (void)_postEnabledStateNotification;
//- (void)_enableTestOrTestable:(id)v1;
//- (void)_disableTestOrTestable:(id)v1;
//- (void)disableTestsReferencedByTestableReference:(id)v1;
//- (void)setTestOrTestable:(id)v1 enabled:(char)v2;
//- (void)setTestContainers:(id)v1 enabled:(char)v2;
//- (int)internalDebuggerToolchainSelectionMode;
//- (id)selectedInternalDebuggerToolchainIdentifier;
//- (char)isCodeCoverageEnabled;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationExporter : IDELocalizationHandler<IDELocalizationWorkProgress> {
//    long long _completedFiles;
//    long long _totalFiles;
//    DVTNotificationToken * _localizationPhaseObserver;
//    DVTNotificationToken * _localizationDetectedFilesToProcessObserver;
//    DVTNotificationToken * _localizationProcessedFilesObserver;
//    DVTNotificationToken * _localizationExportFailedObserver;
//    DVTNotificationToken * _localizationNonFatalErrorObserver;
//    char _complete;
//    NSArray * _targetLanguages;
//    NSURL * _destinationUrl;
//    void (^ /* unknown block signature */)(void) _onErrorBlock;
//    void (^ /* unknown block signature */)(void) _onCompletedBlock;
//    long long _progress;
//    NSString * _phase;
//    NSString * _workTitle;
//}
//@property char complete;
//@property long long progress;
//@property (copy) NSString * phase;
//@property (copy) NSString * workTitle;
//@property (copy) NSArray * targetLanguages;
//@property (copy) NSURL * destinationUrl;
//@property (copy) void (^ /* unknown block signature */)(void) onErrorBlock;
//@property (copy) void (^ /* unknown block signature */)(void) onCompletedBlock;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (void)primitiveInvalidate;
//- (id)initWithWorkspace:(id)v1 buildParameters:(id)v2 container:(id)v3 options:(id)v4 sourceLocale:(id)v5 testActivities:(id)v6 targetLanguages:(id)v7 destinationURL:(id)v8;
//- (void)exportLocalizations;
//- (void)start;
//- (void)cancel;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionRecord : NSObject {
//    char _debuggerEnabled;
//    char _codeCoverageEnabled;
//    char _addressSanitizerEnabled;
//    char _threadSanitizerEnabled;
//    char _undefinedBehaviorSanitizerEnabled;
//    char _didSendFinishAction;
//    IDESchemeCommand * _schemeCommand;
//    NSString * _schemeCommandName;
//    long long _schemeTask;
//    NSString * _title;
//    NSString * _testPlanName;
//    NSDate * _startedTime;
//    NSDate * _endedTime;
//    NSDate * _corePhaseOperationStartedTime;
//    IDESchemeActionResult * _buildResult;
//    IDESchemeActionResult * _actionResult;
//    NSString * _contextString;
//    IDESchemeActionRunDestinationRecord * _runDestinationRecord;
//    DVTFilePath * _localRecordDirectoryFilePath;
//    DVTFilePath * _creatingWorkspaceFilePath;
//    long long _actionIndex;
//}
//@property (retain,nonatomic) IDESchemeActionResult * buildResult;
//@property (retain,nonatomic) IDESchemeActionResult * actionResult;
//@property (retain,nonatomic) IDESchemeCommand * schemeCommand;
//@property (retain,nonatomic) NSString * schemeCommandName;
//@property (copy,nonatomic) NSString * title;
//@property (copy,nonatomic) NSString * testPlanName;
//@property (copy,nonatomic) NSDate * startedTime;
//@property (copy,nonatomic) NSDate * endedTime;
//@property (copy,nonatomic) NSDate * corePhaseOperationStartedTime;
//@property (nonatomic) char debuggerEnabled;
//@property (nonatomic) char codeCoverageEnabled;
//@property (nonatomic) char addressSanitizerEnabled;
//@property (nonatomic) char threadSanitizerEnabled;
//@property (nonatomic) char undefinedBehaviorSanitizerEnabled;
//@property (retain,nonatomic) DVTFilePath * localRecordDirectoryFilePath;
//@property (retain,nonatomic) DVTFilePath * creatingWorkspaceFilePath;
//@property (retain,nonatomic) IDESchemeActionRunDestinationRecord * runDestinationRecord;
//@property (copy,nonatomic) NSString * contextString;
//@property (readonly,nonatomic) long long actionIndex;
//@property (nonatomic) char didSendFinishAction;
//@property (readonly,nonatomic) long long schemeTask;
//@property (readonly,nonatomic) long long status;
//@property (readonly,nonatomic) char isRecording;
//@property (readonly,nonatomic) unsigned long long warningCount;
//@property (readonly,nonatomic) unsigned long long errorCount;
//@property (readonly,nonatomic) unsigned long long analyzerWarningCount;
//@property (readonly,nonatomic) unsigned long long testsCount;
//@property (readonly,nonatomic) unsigned long long testsFailedCount;
//@property (readonly,nonatomic) unsigned long long testsSkippedCount;
//+ (char)getSchemeTask:(long long *)v1 fromDictionaryRepresentation:(id)v2;
//+ (id)keyPathsForValuesAffectingStatus;
//+ (id)keyPathsForValuesAffectingIsRecording;
//+ (id)keyPathsForValuesAffectingWarningCount;
//+ (id)keyPathsForValuesAffectingErrorCount;
//+ (id)keyPathsForValuesAffectingAnalyzerWarningCount;
//+ (id)keyPathsForValuesAffectingTestsCount;
//+ (id)keyPathsForValuesAffectingTestsFailedCount;
//+ (id)keyPathsForValuesAffectingTestsSkippedCount;
//+ (id)schemeCommandForString:(id)v1;
//+ (id)stringForSchemeTask:(long long)v1;
//+ (long long)schemeTaskForString:(id)v1;
//- (id)initWithLocalRecordDirectoryFilePath:(id)v1 creatingWorkspaceFilePath:(id)v2 schemeTask:(long long)v3;
//- (id)initWithLocalRecordDirectoryFilePath:(id)v1 creatingWorkspaceFilePath:(id)v2 schemeTask:(long long)v3 resultBundleWriter:(id)v4 testSummariesStream:(id)v5 resultStream:(id)v6;
//- (id)initWithTitle:(id)v1 startedTime:(id)v2 endedTime:(id)v3 buildResult:(id)v4 actionResult:(id)v5 schemeCommand:(id)v6 schemeCommandName:(id)v7 schemeTask:(long long)v8 runDestinationRecord:(id)v9;
//- (id)sparseActionRecordAtFilePath:(id)v1 testIdentifiers:(id)v2;
//- (void)recordRunDestination:(id)v1;
//- (char)copyResourcesFromSchemeActionRecord:(id)v1 error:(id *)v2;
//- (char)saveToContainer:(id)v1 returningError:(id *)v2;
//- (id)dictionaryRepresentationForSchemeActionsInvocationRecord:(id)v1;
//- (char)updateWithDictionaryRepresentation:(id)v1 forSchemeActionsInvocationRecord:(id)v2;
//- (void)close;
//- (void)updateWithActionIndex:(long long)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionDeviceRecord : NSObject {
//    char _concreteDevice;
//    char _isWireless;
//    NSString * _name;
//    NSString * _operatingSystemVersion;
//    NSString * _operatingSystemVersionWithBuildNumber;
//    NSString * _nativeArchitecture;
//    NSString * _modelName;
//    NSString * _modelCode;
//    NSString * _modelUTI;
//    NSString * _identifier;
//    NSString * _cpuKind;
//    unsigned long long _cpuCount;
//    unsigned long long _cpuSpeedInMHz;
//    unsigned long long _busSpeedInMHz;
//    unsigned long long _ramSizeInMegabytes;
//    unsigned long long _physicalCPUCoresPerPackage;
//    unsigned long long _logicalCPUCoresPerPackage;
//    IDESchemeActionPlatformRecord * _platformRecord;
//}
//@property (readonly,copy) NSString * name;
//@property (readonly,getter=isConcreteDevice) char concreteDevice;
//@property (readonly,copy) NSString * operatingSystemVersion;
//@property (readonly,copy,nonatomic) NSString * operatingSystemVersionWithBuildNumber;
//@property (readonly,copy) NSString * nativeArchitecture;
//@property (readonly,copy,nonatomic) NSString * modelName;
//@property (readonly,copy,nonatomic) NSString * modelCode;
//@property (readonly,copy,nonatomic) NSString * modelUTI;
//@property (readonly,copy) NSString * identifier;
//@property (readonly) char isWireless;
//@property (copy) NSString * cpuKind;
//@property unsigned long long cpuCount;
//@property unsigned long long cpuSpeedInMHz;
//@property unsigned long long busSpeedInMHz;
//@property unsigned long long ramSizeInMegabytes;
//@property unsigned long long physicalCPUCoresPerPackage;
//@property unsigned long long logicalCPUCoresPerPackage;
//@property (readonly,nonatomic) IDESchemeActionPlatformRecord * platformRecord;
//- (id)initWithDeviceName:(id)v1 isConcreteDevice:(char)v2 nativeArchitecture:(id)v3 operatingSystemVersion:(id)v4 operatingSystemVersionWithBuildNumber:(id)v5 modelName:(id)v6 modelCode:(id)v7 modelUTI:(id)v8 identifier:(id)v9 isWireless:(char)v10 cpuKind:(id)v11 cpuCount:(unsigned long long)v12 cpuSpeedInMHz:(unsigned long long)v13 busSpeedInMHz:(unsigned long long)v14 ramSizeInMegabytes:(unsigned long long)v15 physicalCPUCoresPerPackage:(unsigned long long)v16 logicalCPUCoresPerPackage:(unsigned long long)v17 platformRecord:(id)v18;
//- (id)initWithDevice:(id)v1;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (id)dictionaryRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionRunDestinationRecord : NSObject {
//    NSString * _displayName;
//    NSString * _targetArchitecture;
//    IDESchemeActionDeviceRecord * _targetDeviceRecord;
//    IDESchemeActionDeviceRecord * _localComputerRecord;
//    IDESchemeActionSDKRecord * _targetSDKRecord;
//}
//@property (readonly,copy) NSString * displayName;
//@property (readonly,copy) NSString * targetArchitecture;
//@property (readonly,nonatomic) IDESchemeActionDeviceRecord * targetDeviceRecord;
//@property (readonly,nonatomic) IDESchemeActionDeviceRecord * localComputerRecord;
//@property (readonly,nonatomic) IDESchemeActionSDKRecord * targetSDKRecord;
//+ (id)recordForRunDestination:(id)v1;
//- (id)initWithDisplayName:(id)v1 targetArchitecture:(id)v2 targetDevice:(id)v3 targetSDK:(id)v4 localComputer:(id)v5;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (id)dictionaryRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionPlatformRecord : NSObject {
//    NSString * _userDescription;
//    NSString * _identifier;
//}
//@property (readonly,copy) NSString * userDescription;
//@property (readonly,copy) NSString * identifier;
//- (id)initWithUserDescription:(id)v1 identifier:(id)v2;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (id)dictionaryRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionSDKRecord : NSObject {
//    char _internal;
//    NSString * _displayName;
//    NSString * _canonicalName;
//    NSString * _operatingSystemVersion;
//}
//@property (readonly,copy) NSString * displayName;
//@property (readonly,copy) NSString * canonicalName;
//@property (readonly,copy) NSString * operatingSystemVersion;
//@property (readonly,getter=isInternal) char internal;
//- (id)initWithDisplayName:(id)v1 canonicalName:(id)v2 operatingSystemVersion:(id)v3 isInternal:(char)v4;
//- (id)initWithSDK:(id)v1;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (id)dictionaryRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyQuery : NSObject {
//    IDEOpenQuicklyQueryUserInput * _userInput;
//    IDEOpenQuicklyQueryContext * _context;
//}
//@property (readonly) IDEOpenQuicklyQueryUserInput * userInput;
//@property (readonly) DVTFuzzyMatchPattern * pattern;
//@property (readonly) IDEOpenQuicklyQueryContext * context;
//- (id)initWithUserInput:(id)v1 context:(id)v2;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyAbstractWorkspaceResultProvider : IDEOpenQuicklyResultAggregator {
//    IDEWorkspace * _workspace;
//}
//+ (long long)aggregationCutoff;
//+ (char)isEnabled;
//+ (char)sendsIncompleteResults;
//- (id)initWithWorkspace:(id)v1 queryContext:(id)v2 consumer:(id)v3;
//- (void)generateGeneratorsWithCompletionGroup:(id)v1 forWorkspace:(id)v2;
//- (void)generateGeneratorsWithCompletionGroup:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlManager : NSObject {
//    NSMutableArray * _registeredWorkspaces;
//    NSObject<OS_dispatch_queue> * _registeredWorkspacesDispatchQueue;
//    NSMutableArray * _legacyWorkingTrees;
//    NSOperationQueue * _operationQueue;
//    long long _maxConcurrentOperationCount;
//    char _enableSourceControl;
//    char _localStatusCheckingEnabled;
//    char _remoteStatusCheckingEnabled;
//    char _showChangeBar;
//    char _showUpstreamChangesInChangeBar;
//    char _automaticallyAddNewFiles;
//    char _preselectCommitSheetFiles;
//    char _waitingForAuthentication;
//    char _showMergeCommits;
//    char _shouldLoadAccounts;
//    NSObject<OS_dispatch_queue> * _legacyWorkingTreesDispatchQueue;
//    _TtC13IDEFoundation30IDESourceControlAccountManager * _accountManager;
//    _TtC13IDEFoundation34IDESourceControlFingerprintManager * _fingerprintManager;
//    double _minimumLocalStatusRequestDelay;
//}
//@property char waitingForAuthentication;
//@property (readonly) char shouldLoadAccounts;
//@property (readonly) NSArray * legacyWorkingTrees;
//@property (readonly) _TtC13IDEFoundation30IDESourceControlAccountManager * accountManager;
//@property (readonly) _TtC13IDEFoundation34IDESourceControlFingerprintManager * fingerprintManager;
//@property char enableSourceControl;
//@property char showChangeBar;
//@property char showUpstreamChangesInChangeBar;
//@property char localStatusCheckingEnabled;
//@property char remoteStatusCheckingEnabled;
//@property char automaticallyAddNewFiles;
//@property char preselectCommitSheetFiles;
//@property char showMergeCommits;
//@property (readonly) NSString * initialBranchName;
//@property (readonly) NSArray * workingCopies;
//@property (readonly) double minimumLocalStatusRequestDelay;
//@property (readonly) char isPullRequestSupportEnabled;
//@property (readonly) char isSCMNetworkDebuggingEnabled;
//+ (id)sharedSourceControlManager;
//+ (id)sourceControlLogAspect;
//+ (id)sourceControlFileStatusLogAspect;
//+ (id)sourceControlReachabilityLogAspect;
//+ (id)sourceControlFileScanningLogAspect;
//+ (id)sourceControlAuthenticationLogAspect;
//+ (id)sourceControlProfilingLogAspect;
//+ (char)enableLoadingAccounts;
//+ (void)setEnableLoadingAccounts:(char)v1;
//+ (char)disableLoadingAccounts;
//+ (void)setDisableLoadingAccounts:(char)v1;
//+ (id)keyPathsForValuesAffectingRepositories;
//- (id)initWithSavedAccounts:(char)v1;
//- (id)initWithSavedAccounts:(char)v1 credentialsManager:(id)v2 userDefaults:(id)v3;
//- (id)_blacklistedDirectories;
//- (id)setInitialBranchName:(id)v1;
//- (void)addLegacyWorkingTree:(id)v1;
//- (void)asyncPerformBlockOnWorkingTreeQueue:(void (^ /* unknown block signature */)(void))v1;
//- (id)workingCopyForFilePath:(id)v1;
//- (void)registerWorkspace:(id)v1;
//- (void)unregisterWorkspace:(id)v1;
//- (id)workingTreeForFilePath:(id)v1;
//- (id)workingTreeAtFilePath:(id)v1;
//- (void)workingTreeForFilePath:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)_reportCommitOperation:(unsigned long long)v1;
//- (void)_reportMenuOperation:(unsigned long long)v1;
//- (void)_reportEditorOperation:(unsigned long long)v1;
//- (void)_reportCommitNavigatorOperation:(unsigned long long)v1;
//- (void)_reportConfigurationOperation:(unsigned long long)v1;
//- (void)_reportNewUIContextOperation:(unsigned long long)v1;
//- (void)_reportNewUIEditorOperation:(unsigned long long)v1;
//- (void)_reportNewUICloneOperation:(unsigned long long)v1;
//- (void)reportSourceControlOperation:(unsigned long long)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebuggerSpecifier : NSObject {
//    NSString * _correspondingLauncherIdentifier;
//    DVTExtension * _extension;
//}
//@property (readonly) NSString * displayName;
//@property (readonly) NSString * identifier;
//@property (readonly) DVTExtension * extension;
//@property (readonly) NSString * correspondingLauncherIdentifier;
//+ (id)specifierWithIdentifierInAllSpecifiers:(id)v1;
//+ (id)specifierWithIdentifierInAllDebuggerSpecifiersIncludingNone:(id)v1;
//+ (id)_specifierWithIdentifier:(id)v1 inArray:(id)v2;
//+ (id)allDebuggerSpecifiers;
//+ (id)allDebuggerSpecifiersIncludingNone;
//+ (id)_launcherPluginIdentifierForDebuggerPlugin:(id)v1;
//+ (id)defaultDebuggerSpecifierForWorkspace:(id)v1;
//+ (char)requiresDebuggerForDevice:(id)v1;
//+ (id)_launcherExtensions;
//+ (char)_isDefaultNonDebuggerLauncher:(id)v1;
//- (id)_initWithExtension:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivedInAppContent : IDEArchivedContent<IDEDistributableInAppContent>
//@property (readonly) DVTFilePath * inAppContentPath;
//@property (readonly) DVTFilePath * path;
//@property (readonly) NSString * bundleIdentifier;
//@property (readonly) NSString * bundleName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)soleArchivedContentRelativePathInDirectory:(id)v1;
//+ (char)fillInfoDictionary:(id)v1 forContentAtPath:(id)v2;
//+ (id)archivedContentPropertiesPlistKey;
//+ (id)archivedContentPathPlistKey;
//+ (id)keyPathsForValuesAffectingInAppContentPath;
//- (id)teamIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAnalyzeArchiveStep : IDEDistributionStep
//+ (id)archivedTeamForContext:(id)v1;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (char)populateTopLevelDistributionItemsIfNecessaryWithError:(id *)v1;
//- (char)populateTeamFromArchiveWithError:(id *)v1;
//- (void)populateSigningStateFromArchive;
//- (char)analyzeArchiveWithError:(id *)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestBundleBaselineRecord : NSObject {
//    NSMutableDictionary * _infoDict;
//    NSMutableDictionary * _baselinesByRunDestinationUUIDDict;
//}
//@property unsigned long long version;
//+ (void)initialize;
//+ (id)_baselineRecordFilePathInBundleBaselineWithFilePath:(id)v1 withRunDestinationRecord:(id)v2 createIfNecessary:(char)v3 workspace:(id)v4 versionedFileManager:(id)v5 error:(id *)v6;
//+ (id)baselineRecordForBlueprint:(id)v1 withRunDestinationRecord:(id)v2 createIfNecessary:(char)v3 versionedFileManager:(id)v4 filePath:(id *)v5 error:(id *)v6;
//+ (id)_baselineRecordForBlueprint:(id)v1 withRunDestinationRecord:(id)v2 createIfNecessary:(char)v3 versionedFileManager:(id)v4 filePath:(id *)v5 error:(id *)v6;
//+ (char)_validatePropertyList:(id)v1 errorString:(id *)v2;
//- (id)init;
//- (id)initWithFilePath:(id)v1 error:(id *)v2;
//- (char)writeToFilePath:(id)v1 workspace:(id)v2 versionedFileManager:(id)v3 error:(id *)v4;
//- (id)runDestinations;
//- (id)baselineRecordForRunDestination:(id)v1;
//- (void)setBaselineRecord:(id)v1 forRunDestination:(id)v2;
//- (void)unionWithBundleBaselineRecord:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningInputs : NSObject {
//    char _validateCrossConfigurationIssues;
//    DVTPortalProfilePurpose * _provisioningPurpose;
//    DVTPlatform * _platform;
//    _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * _destinationRequirement;
//    IDEProvisionableEntitlements * _entitlements;
//    NSSet * _signingCertificates;
//    NSSet * _provisioningProfiles;
//    NSObject<IDEProvisioningErrorProvider> * _errorProvider;
//    IDEProfileSpecifier * _profileSpecifier;
//    IDEProvisionableSnapshot * _provisionableSnapshot;
//    NSString * _configuration;
//}
//@property (retain,nonatomic) NSObject<IDEProvisioningErrorProvider> * errorProvider;
//@property (retain,nonatomic) IDEProvisionableSnapshot * provisionableSnapshot;
//@property (retain,nonatomic) NSString * configuration;
//@property (readonly,nonatomic) DVTPortalProfilePurpose * provisioningPurpose;
//@property (readonly,nonatomic) char validateCrossConfigurationIssues;
//@property (readonly,nonatomic) DVTPlatform * platform;
//@property (readonly,nonatomic) NSString * provisionableName;
//@property (readonly,nonatomic) NSString * bundleIdentifier;
//@property (readonly,nonatomic) _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * destinationRequirement;
//@property (readonly,nonatomic) IDEProvisionableEntitlements * entitlements;
//@property (readonly,nonatomic) DVTPortalAppIDFeatures * appIDFeatures;
//@property (readonly,nonatomic) long long provisioningStyle;
//@property (readonly,nonatomic) char needsProfile;
//@property (readonly,nonatomic) NSSet * signingCertificates;
//@property (readonly,nonatomic) NSSet * provisioningProfiles;
//@property (readonly,nonatomic) DVTPortalProfileType * profileType;
//@property (readonly,nonatomic) _TtC9DVTPortal27DVTPortalCertificatePurpose * certificatePurpose;
//@property (readonly,nonatomic) NSString * certificateIdentifier;
//@property (readonly,nonatomic) IDEProfileSpecifier * profileSpecifier;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//+ (id)inputsFromProvisionableSnapshot:(id)v1 configuration:(id)v2 destinationRequirement:(id)v3 signingCertificates:(id)v4 provisioningProfiles:(id)v5 entitlements:(id)v6 errorProvider:(id)v7 error:(id *)v8;
//+ (id)inputsFromProvisionableSnapshot:(id)v1 configuration:(id)v2 destinationRequirement:(id)v3 signingCertificates:(id)v4 provisioningProfiles:(id)v5 entitlements:(id)v6 errorProvider:(id)v7 validateAcrossConfigurations:(char)v8 error:(id *)v9;
//+ (id)_platformForProvisionableSnapshot:(id)v1 configuration:(id)v2;
//+ (id)_destinationRequirementFromDestinationRequirement:(id)v1 forProfileType:(id)v2 targetSDK:(id)v3;
//- (char)validateWithError:(id *)v1;
//- (char)_validateBasicSetupWithError:(id *)v1;
//- (char)_validateForAutomaticProvisioningWithError:(id *)v1;
//- (char)_validateForAutomaticCrossConfigIssues:(id *)v1;
//- (char)_validateForManualProvisioningWithError:(id *)v1;
//- (char)signingEnabled;
//- (char)supportsProfile;
//- (char)needsBundleIdentifier;
//- (id)profileTypeForProvisioningPurpose:(id)v1;
//- (id)_profileTypeForDeviceFiltering;
//- (id)certificatePurposeBasedOnAutomaticSelectors;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEScriptingElement : NSObject {
//    id _container;
//    id _accessor;
//}
//@property (retain) id container;
//@property (retain) id accessor;
//- (id)description;
//- (void)setName:(id)v1;
//- (void)setScriptingID:(id)v1;
//- (id)newScriptingObjectOfClass:(Class)v1 forValueForKey:(id)v2 withContentsValue:(id)v3 properties:(id)v4;
//- (id)objectSpecifierByID:(id)v1;
//- (id)objectSpecifierByName:(id)v1;
//- (id)objectSpecifierByIndex;
//- (id)objectSpecifierAsProperty;
//- (id)objectSpecifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEScriptingWrapper : IDEScriptingElement {
//    id _client;
//}
//@property (retain) id client;
//+ (id)wrapItem:(id)v1 inWrapper:(Class)v2 forContainer:(id)v3 andAccessor:(id)v4;
//+ (id)wrapItems:(id)v1 inWrapper:(Class)v2 forContainer:(id)v3 andAccessor:(id)v4;
//+ (id)wrapSingleton:(id)v1 inWrapper:(Class)v2 forContainer:(id)v3 andAccessor:(id)v4;
//- (id)description;
//- (id)name;
//- (id)scriptingID;
//- (char)isEqual:(id)v1;
//- (id)objectSpecifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEScriptingProxy : IDEScriptingElement {
//    id _key;
//    id _collection;
//}
//@property (retain) id key;
//@property (retain) id collection;
//+ (id)wrapItemOfDictionary:(id)v1 forKey:(id)v2 inProxy:(Class)v3 forContainer:(id)v4 andAccessor:(id)v5;
//+ (id)wrapDictionary:(id)v1 inProxy:(Class)v2 forContainer:(id)v3 andAccessor:(id)v4;
//- (id)description;
//- (id)name;
//- (id)scriptingID;
//- (id)value;
//- (void)setValue:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)objectSpecifier;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeWrapper : IDEScriptingWrapper
//- (id)scriptingID;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationWithNameAdditionWrapper : IDEScriptingWrapper {
//    NSString * _disambiguatedDisplayName;
//}
//+ (id)wrapItem:(id)v1 withDisambiguatedName:(id)v2 forContainer:(id)v3 andAccessor:(id)v4;
//- (id)scriptingID;
//- (id)objectSpecifierByID:(id)v1;
//- (id)name;
//- (id)architecture;
//- (id)platform;
//- (id)targetDevice;
//- (id)targetCompanionDevice;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDeviceWrapper : NSObject {
//    NSObject<DVTBasicDevice> * _device;
//    id _container;
//    NSString * _accessor;
//}
//@property (readonly) NSObject<DVTBasicDevice> * device;
//@property (readonly) id container;
//@property (readonly,copy) NSString * accessor;
//+ (id)deviceWrapperForDevice:(id)v1 forContainer:(id)v2 andAccessor:(id)v3;
//- (id)objectSpecifier;
//- (id)name;
//- (char)generic;
//- (id)deviceIdentifier;
//- (id)operatingSystemVersion;
//- (id)deviceModel;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEScriptingSchemeActionResult : IDEScriptingElement {
//    char _didCancelEnqueuingAction;
//    NSError * _error;
//    IDESchemeActionsInvocationRecord * _invocationRecord;
//    NSString * _identifier;
//    NSMutableArray * _buildErrors;
//    NSMutableArray * _buildWarnings;
//    NSMutableArray * _analyzerIssues;
//    NSMutableArray * _testFailures;
//}
//@property (readonly) IDESchemeActionsInvocationRecord * invocationRecord;
//@property (retain) NSString * identifier;
//@property (readonly) NSMutableArray * buildErrors;
//@property (readonly) NSMutableArray * buildWarnings;
//@property (readonly) NSMutableArray * analyzerIssues;
//@property (readonly) NSMutableArray * testFailures;
//@property (retain) NSError * error;
//@property char didCancelEnqueuingAction;
//- (id)init;
//- (id)initWithInvocationRecord:(id)v1 container:(id)v2 andAccessor:(id)v3;
//- (id)scriptingID;
//- (id)objectSpecifier;
//- (unsigned int)sdefSupport_status;
//- (char)sdefSupport_completed;
//- (id)_logFromBuildInsteadOfAction:(char)v1;
//- (id)sdefSupport_buildLog;
//- (id)sdefSupport_actionLog;
//- (id)sdefSupport_errorText;
//- (void)_updateMyIssues:(id)v1 fromSummaries:(id)v2 forAccessor:(id)v3;
//- (id)sdefSupport_buildErrors;
//- (id)sdefSupport_buildWarnings;
//- (id)sdefSupport_analyzerIssues;
//- (id)sdefSupport_testFailures;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEScriptingSchemeActionIssue : IDEScriptingElement {
//    IDESchemeActionIssueSummary * _issueSummary;
//}
//@property (readonly) IDESchemeActionIssueSummary * issueSummary;
//- (id)init;
//- (id)initWithIssueSummary:(id)v1 container:(id)v2 andAccessor:(id)v3;
//- (id)objectSpecifier;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)sdefSupport_message;
//- (id)sdefSupport_filePath;
//- (id)sdefSupport_startingLineNumber;
//- (id)sdefSupport_endingLineNumber;
//- (id)sdefSupport_startingColumnNumber;
//- (id)sdefSupport_endingColumnNumber;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface XCBuildConfigurationTypeWrapper : IDEScriptingWrapper
//@end
//
//
///*****************************************************************/
//
//@interface IDEExtendedVirtualAddressingItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _entitlementsFlightCheck;
//}
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindDirectorySource : IDEBatchFindFileSource {
//    NSString * _basePathString;
//    DVTFilePath * _basePath;
//}
//@property (readonly) NSString * basePathString;
//@property (readonly) DVTFilePath * basePath;
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)initWithPathString:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isEqualToFileSourceWithIdenticalClass:(id)v1;
//- (unsigned long long)hash;
//- (void)accumulateContributingSources:(id)v1;
//- (void)accessContentWithWorkspace:(id)v1 priority:(long long)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionResult : NSObject {
//    DVTObservingToken * _logRecordingToken;
//    IDESchemeActionCodeCoverage * _coverageReport;
//    NSMutableArray * _warningSummaries;
//    NSMutableArray * _errorSummaries;
//    NSMutableArray * _analyzerWarningSummaries;
//    NSMutableArray * _testFailureSummaries;
//    NSMutableArray * _testRunSummaries;
//    char _includeAllMessages;
//    DVTFilePath * _filePathOfDiagnosticsToCopyIntoLocalResultDirectory;
//    char _localLogFileIsCurrent;
//    char _remoteLogNeedsFetch;
//    char _hasTests;
//    char _remoteTestSummaryNeedsFetch;
//    char _hasTimelineData;
//    char _hasCoverageData;
//    char _hasReadIssueSummaries;
//    NSString * _resultName;
//    long long _status;
//    NSError * _error;
//    IDEActivityLogSection * _log;
//    _TtC13IDEFoundation18IDEResultReference * _logReference;
//    NSData * _timelineMetrics;
//    id _remoteLogIdentifier;
//    unsigned long long _warningCount;
//    unsigned long long _errorCount;
//    unsigned long long _analyzerWarningCount;
//    unsigned long long _testsCount;
//    unsigned long long _testsFailedCount;
//    unsigned long long _testsSkippedCount;
//    _TtC13IDEFoundation18IDEResultReference * _testsReference;
//    _TtC13IDEFoundation18IDEResultReference * _diagnosticsReference;
//    id _remoteTestSummaryIdentifier;
//    DVTFilePath * _buildMetricsFilePath;
//    _TtC13DVTFoundation14DVTFilePromise * _timelineDataFilePromise;
//    _TtC13IDEFoundation18IDEResultReference * _coverageReportReference;
//    _TtC13IDEFoundation18IDEResultReference * _coverageArchiveReference;
//    _TtC13IDEFoundation18IDEResultReference * _timelineDataReference;
//    NSString * _testSummaryPath;
//    NSString * _logPath;
//    _TtC13DVTFoundation14DVTFilePromise * _coverageReportFilePromise;
//    _TtC13DVTFoundation14DVTFilePromise * _coverageArchiveFilePromise;
//    _TtC13DVTFoundation14DVTFilePromise * _diagnosticsFilePromise;
//    DVTFilePath * _testSessionTemporaryDirectoryPath;
//    id __resultBundleWriter;
//    id __testSummariesStream;
//    id __resultStream;
//    id __issueStream;
//    id __issueProcessor;
//    id __logStream;
//    long long _actionIndex;
//    long long _resultIndex;
//    DVTFilePath * _localResultDirectoryFilePath;
//    DVTFilePath * _creatingWorkspaceFilePath;
//    NSHashTable * _blueprintsForShowingIssues;
//}
//@property (retain,nonatomic) NSData * timelineMetrics;
//@property (copy,nonatomic) NSString * resultName;
//@property (copy,nonatomic) NSString * testSummaryPath;
//@property char hasReadIssueSummaries;
//@property (copy,nonatomic) NSString * logPath;
//@property (nonatomic) long long status;
//@property (copy,nonatomic) NSError * error;
//@property (retain,nonatomic) IDEActivityLogSection * log;
//@property (retain,nonatomic) _TtC13IDEFoundation18IDEResultReference * logReference;
//@property (nonatomic) char localLogFileIsCurrent;
//@property (nonatomic) unsigned long long warningCount;
//@property (nonatomic) unsigned long long errorCount;
//@property (nonatomic) unsigned long long analyzerWarningCount;
//@property (nonatomic) unsigned long long testsCount;
//@property (nonatomic) unsigned long long testsFailedCount;
//@property (nonatomic) unsigned long long testsSkippedCount;
//@property (retain,nonatomic) NSMutableArray * warningSummaries;
//@property (retain,nonatomic) NSMutableArray * errorSummaries;
//@property (retain,nonatomic) NSMutableArray * analyzerWarningSummaries;
//@property (retain,nonatomic) NSMutableArray * testRunSummaries;
//@property (retain,nonatomic) NSMutableArray * testFailureSummaries;
//@property (copy,nonatomic) id remoteTestSummaryIdentifier;
//@property (nonatomic) char remoteTestSummaryNeedsFetch;
//@property (retain,nonatomic) _TtC13IDEFoundation18IDEResultReference * testsReference;
//@property (retain,nonatomic) IDESchemeActionCodeCoverage * coverageReport;
//@property (retain,nonatomic) _TtC13DVTFoundation14DVTFilePromise * coverageReportFilePromise;
//@property (retain,nonatomic) _TtC13DVTFoundation14DVTFilePromise * coverageArchiveFilePromise;
//@property (retain,nonatomic) _TtC13DVTFoundation14DVTFilePromise * timelineDataFilePromise;
//@property (retain,nonatomic) _TtC13IDEFoundation18IDEResultReference * coverageReportReference;
//@property (retain,nonatomic) _TtC13IDEFoundation18IDEResultReference * coverageArchiveReference;
//@property (retain,nonatomic) _TtC13IDEFoundation18IDEResultReference * timelineDataReference;
//@property (retain,nonatomic) _TtC13DVTFoundation14DVTFilePromise * diagnosticsFilePromise;
//@property (retain,nonatomic) _TtC13IDEFoundation18IDEResultReference * diagnosticsReference;
//@property (retain,nonatomic) DVTFilePath * testSessionTemporaryDirectoryPath;
//@property (readonly) DVTFilePath * localMetricsFilePath;
//@property (retain,nonatomic) id _resultBundleWriter;
//@property (retain,nonatomic) id _testSummariesStream;
//@property (retain,nonatomic) id _resultStream;
//@property (retain,nonatomic) id _issueStream;
//@property (retain,nonatomic) id _issueProcessor;
//@property (retain,nonatomic) id _logStream;
//@property (readonly,nonatomic) long long actionIndex;
//@property (readonly,nonatomic) long long resultIndex;
//@property (retain,nonatomic) DVTFilePath * localResultDirectoryFilePath;
//@property (retain,nonatomic) DVTFilePath * creatingWorkspaceFilePath;
//@property (retain,nonatomic) NSHashTable * blueprintsForShowingIssues;
//@property (readonly,nonatomic) char isRecording;
//@property (readonly,nonatomic) DVTFilePath * localLogFilePath;
//@property (readonly,nonatomic) DVTFilePath * attachmentsFilePath;
//@property (copy,nonatomic) id remoteLogIdentifier;
//@property (nonatomic) char remoteLogNeedsFetch;
//@property (nonatomic) char hasTests;
//@property (readonly,nonatomic) DVTFilePath * localTestSummaryFilePath;
//@property (readonly,nonatomic) DVTFilePath * localDiagnosticsFilePath;
//@property (nonatomic) char hasTimelineData;
//@property (readonly,nonatomic) DVTFilePath * buildMetricsFilePath;
//@property (nonatomic) char hasCoverageData;
//@property (readonly,nonatomic) DVTFilePath * coverageReportFilePathForWriting;
//@property (readonly,nonatomic) DVTFilePath * coverageArchiveFilePathForWriting;
//+ (id)keyPathsForValuesAffectingIsRecording;
//+ (char)automaticallyNotifiesObserversOfLog;
//+ (unsigned long long)countOfTestsWithStatus:(unsigned long long)v1 inTestPlanRunSummaries:(id)v2;
//+ (id)stringForActionResultStatus:(long long)v1;
//+ (long long)actionResultStatusForString:(id)v1;
//- (void)didSetLog;
//- (id)initWithResultName:(id)v1 localResultDirectoryFilePath:(id)v2 creatingWorkspaceFilePath:(id)v3;
//- (id)initWithResultName:(id)v1 localResultDirectoryFilePath:(id)v2 creatingWorkspaceFilePath:(id)v3 resultBundleWriter:(id)v4 testSummariesStream:(id)v5 resultStream:(id)v6;
//- (id)initWithResultName:(id)v1 status:(long long)v2 localResultDirectoryFilePath:(id)v3 creatingWorkspaceFilePath:(id)v4 warningCount:(unsigned long long)v5 errorCount:(unsigned long long)v6 analyzerWarningCount:(unsigned long long)v7 testsCount:(unsigned long long)v8 testsFailedCount:(unsigned long long)v9 warningSummaries:(id)v10 errorSummaries:(id)v11 analyzerWarningSummaries:(id)v12 testFailureSummaries:(id)v13 testRunSummaries:(id)v14 hasCodeCoverage:(char)v15 coverageReportFilePromise:(id)v16 coverageArchiveFilePromise:(id)v17 timelineDataFilePromise:(id)v18 testsReference:(id)v19 logReference:(id)v20 diagnosticsFilePromise:(id)v21;
//- (id)sparseActionResultAtFilePath:(id)v1 testIdentifiers:(id)v2;
//- (id)init;
//- (void)dealloc;
//- (char)copyResourcesFromSchemeActionResult:(id)v1 error:(id *)v2;
//- (char)saveForSchemeActionRecord:(id)v1 container:(id)v2 error:(id *)v3;
//- (id)dictionaryRepresentationForSchemeActionsInvocationRecord:(id)v1;
//- (char)updateWithDictionaryRepresentation:(id)v1 forSchemeActionsInvocationRecord:(id)v2;
//- (id)description;
//- (void)updateWithActionIndex:(long long)v1 resultIndex:(long long)v2;
//- (char)saveInMemoryLogToContainer:(id)v1 returningError:(id *)v2;
//- (char)writeBuildTimelineToDisk:(id)v1 error:(id *)v2;
//- (char)saveBuildTimelineDataToContainer:(id)v1 withError:(id *)v2;
//- (char)waitUntilBuildLogHasBeenClosed:(id)v1 error:(id *)v2;
//- (void)filterWarningsToBuildables:(id)v1;
//- (id)_issueSummaryForMessage:(id)v1 producingTarget:(id)v2;
//- (void)_readIssueSummaries;
//- (id)testSummaryFormatVersionString;
//- (char)saveTestSummariesForSchemeActionRecord:(id)v1 error:(id *)v2;
//- (char)saveTestSummariesForTestableSummaryFilePath:(id)v1 runDestinationRecord:(id)v2 error:(id *)v3;
//- (char)updateLocalTestSummaryWithRemoteTestSummary:(id)v1 testActionPath:(id)v2 error:(id *)v3;
//- (char)hasLog;
//- (char)loadLogIfNeededFromContainer:(id)v1 withError:(id *)v2;
//- (char)loadTestSummariesIfNeededFromContainer:(id)v1 withError:(id *)v2;
//- (char)loadCoverageReportIfNeededWithError:(id *)v1;
//- (id)loadBuildTimelinePathIfNeededWithError:(id *)v1;
//- (char)saveDiagnosticsToContainer:(id)v1 withError:(id *)v2;
//- (char)saveAttachmentPayloadsToContainer:(id)v1 withError:(id *)v2;
//- (char)saveCodeCoverageToContainer:(id)v1 withError:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEGroupCore : IDEContainerItemCore<IDEGroupCore> {
//    NSObject<IDEContainerCore> * _parentContainer;
//    NSString * _name;
//    NSArray * _subitems;
//}
//@property (retain) NSObject<IDEContainerCore> * parentContainer;
//@property (copy) NSString * name;
//@property (copy) NSArray * subitems;
//@property (retain) NSObject<IDEGroupCore> * parentGroup;
//@property (copy) NSString * path;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAlwaysTrueFilePathPredicate : IDEBatchFindFilePathPredicate
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//+ (id)propertyListIdentifier;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isWorkspaceSpecific;
//- (unsigned long long)hash;
//- (char)isEqualToFilePathPredicateWithIdenticalClass:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInstallCommandLineVerb : IDEBuildCommandLineVerb
//+ (id)synthesizedOverridingBuildPropertiesWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalLaunchServicesService : IDERunDeviceService {
//    char _launchSuspended;
//}
//@property char launchSuspended;
//+ (id)capability;
//- (id)operationWorkerWithLaunchSession:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractQuery : NSObject {
//    id _nextResultIdentifier;
//    char _canceled;
//    IDEBatchFindQuerySpecification * _specification;
//    IDEWorkspace * _workspace;
//    NSObject<IDEBatchFindQueryDelegate> * _delegate;
//    IDEBatchFindLineWrappingParameters * _initialLineWrappingParameters;
//    void (^ /* unknown block signature */)(void) _initialNumberOfLinesCalculator;
//    IDEBatchFindAbstractResult * _rootResult;
//    long long _priority;
//    long long _queryIdentifier;
//}
//@property (readonly) IDEBatchFindQuerySpecification * specification;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) NSObject<IDEBatchFindQueryDelegate> * delegate;
//@property (readonly) IDEBatchFindLineWrappingParameters * initialLineWrappingParameters;
//@property (readonly) void (^ /* unknown block signature */)(void) initialNumberOfLinesCalculator;
//@property (readonly) IDEBatchFindAbstractResult * rootResult;
//@property (readonly) long long priority;
//@property (readonly,getter=isCanceled) char canceled;
//@property (readonly) NSString * customContextMenuID;
//@property (readonly) char lazilyFaultsChildren;
//@property (readonly) long long queryIdentifier;
//+ (id)displayName;
//+ (char)supportsQueryAction:(long long)v1;
//+ (char)supportsAnchorning;
//+ (char)supportsCaseMatching;
//+ (char)isCumbersomeToInitiateManually;
//+ (char)supportsPatterns;
//+ (id)queryTermPlaceholderText;
//+ (long long)acquireQueryIdentifier;
//- (id)initWithSpecification:(id)v1 priority:(long long)v2 initialNumberOfLinesCalculator:(void (^ /* unknown block signature */)(void))v3 initialLineWrappingParameters:(id)v4 workspace:(id)v5 error:(id *)v6;
//- (void)cancel;
//- (id)makeRootResult;
//- (char)requiresEditorDocumentsToSaveBeforeSearching;
//- (id)activityReportTitle;
//- (void)initiateIgnoringUnsavedChangesWithDelegate:(id)v1;
//- (void)execute;
//- (long long)acquireResultIdentifier;
//- (id)emptyResultSetPlaceholderResultKind;
//- (id)emptyResultSetPlaceholderForTerm:(id)v1 scope:(id)v2;
//- (void)userIsAttemptingToViewFaultedChildrenOfItem:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerItem : DVTModelObject<DVTInvalidation,DVTReferenceResolverClient> {
//    IDEGroup * _superitem;
//    NSMutableDictionary * _properties;
//    NSString * _path;
//    DVTReferenceResolver * _resolver;
//    struct anonymous_type_81 _flags;
//    NSDictionary * _cachedResolutionContext;
//}
//@property (readonly,getter=isEditable) char editable;
//@property (readonly) IDEGroup * superitem;
//@property (readonly) IDEContainer * container;
//@property (readonly,copy,nonatomic) NSString * name;
//@property (readonly) NSDictionary * properties;
//@property (readonly) DVTReferenceResolver * resolver;
//@property (readonly) NSString * path;
//@property (readonly) DVTFilePath * resolvedFilePath;
//@property (readonly) DVTFilePath * expectedFilePath;
//@property unsigned long long lineEndings;
//@property unsigned long long textEncoding;
//@property char usesTabs;
//@property long long tabWidth;
//@property long long indentWidth;
//@property char wrapsLines;
//@property (copy) DVTSourceCodeLanguage * language;
//@property (readonly) unsigned long long sourceControlLocalStatus;
//@property (readonly) unsigned long long sourceControlServerStatus;
//@property (readonly) unsigned long long conflictStateForUpdateOrMerge;
//@property (readonly) unsigned long long aggregateSourceControlLocalStatus;
//@property (readonly) unsigned long long aggregateSourceControlServerStatus;
//@property (readonly) unsigned long long aggregateSourceControlConflictStatus;
//@property (readonly) long long progress;
//@property (readonly) NSString * progressDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)supportedResolutionStrategies;
//+ (id)supportedCustomResolutionStrategies;
//+ (char)automaticallyNotifiesObserversOfContainer;
//+ (id)keyPathsForValuesAffectingUsesTabs;
//+ (id)keyPathsForValuesAffectingTabWidth;
//+ (id)keyPathsForValuesAffectingIndentWidth;
//+ (id)keyPathsForValuesAffectingWrapsLines;
//+ (id)observeProgressUpdatesForContainer:(id)v1 observer:(void (^ /* unknown block signature */)(void))v2;
//+ (void)postProgressUpdateForItem:(id)v1;
//+ (id)keyPathsForValuesAffectingExpectedFilePath;
//- (void)setReferenceStyleFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setPathFromUTF8String:(const  char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setLocationFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setReferenceStrategyFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (char)structuredEditingAcceptsInsertionIntoGroup:(id)v1;
//- (id)init;
//- (id)initWithPath:(id)v1 resolutionStrategies:(id)v2;
//- (id)relativePathForPath:(id)v1 resolutionStrategies:(id)v2;
//- (void)_invalidateResolvedFilePath;
//- (void)_workspaceBuildProductsLocationDidChange:(id)v1;
//- (void)_clearBuildProductsRelativeObservations;
//- (void)_setupBuildProductsRelativeObservations;
//- (void)_clearCurrentSDKRelativeObservations;
//- (void)_setupCurrentSDKRelativeObservations;
//- (void)_clearSourceTreeRelativeObservations;
//- (void)_setupSourceTreeRelativeObservations;
//- (void)_clearAllReferenceResolutionStrategySpecificObservations;
//- (void)_configureReferenceResolutionStrategySpecificObservations;
//- (void)resolverStrategiesDidChange:(id)v1;
//- (void)primitiveChangePath:(id)v1 resolutionStrategies:(id)v2;
//- (void)changePath:(id)v1 resolutionStrategies:(id)v2;
//- (void)setPath:(id)v1 resolutionStrategies:(id)v2;
//- (void)_setSuperitem:(id)v1;
//- (char)_willSetContainer:(id)v1;
//- (void)_setContainer:(id)v1;
//- (void)_didSetContainer;
//- (id)_propertiesCreatingIfNeeded;
//- (id)_propertyForKey:(id)v1 searchParent:(char)v2;
//- (void)_setProperty:(id)v1 forKey:(id)v2;
//- (id)_textPreferences;
//- (void)debugPrintInnerStructure;
//- (void)debugPrintStructure;
//- (void)_setContainerItemEdited;
//- (id)issueLog;
//- (id)resolutionContextForStrategies:(id)v1;
//- (id)_absolutePath;
//- (char)_getPath:(id *)v1 forStrategies:(id)v2 absolutePath:(id)v3;
//- (char)_getPath:(id *)v1 forStrategies:(id)v2;
//- (char)_getPathAndResolutionStrategiesForAbsolutePath:(id)v1 path:(id *)v2 resolutionStrategies:(id *)v3;
//- (void)_takePathAndResolutionStrategiesFromContainerItem:(id)v1;
//- (char)_structureEditNameForItemsConnectedToFileSystem:(id)v1 inContext:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)_performMove:(id)v1 newFilePath:(id)v2 inContext:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)primitiveInvalidate;
//- (char)canHaveAssetTags;
//- (void)setAssetTags:(id)v1;
//- (id)assetTags;
//- (id)knownAssetTags;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESystemExtensionInstallItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _entitlementsFlightCheck;
//}
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPosixSpawnLaunchLocalService : IDERunDeviceService
//+ (id)capability;
//- (id)operationWorkerWithLaunchSession:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
@interface IDEPosixSpawnLocalService : IDERunDeviceService
+ (id)capability;
- (id)capabilitySequenceForLaunchSession:(id)v1;
- (id)operationWorkerWithLaunchSession:(id)v1 error:(id *)v2;
@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySDKFilePathResultGenerator : IDEOpenQuicklyPrototypeBasedResultBlockGenerator {
//    DVTFilePath * _sourceSDKFilePath;
//    unsigned char * _candidateFlags;
//    DVTFuzzyMatchCandidateBlock * _frameworkStyleCandidates;
//    NSIndexSet * _privateFilePathsIndexSet;
//}
//+ (void)populateCandidateFlags:(unsigned char *)v1 fromFilePaths:(id)v2 givenInterestingFrameworkNames:(id)v3 privateFilePathsIndexSet:(id)v4;
//- (id)initWithPrototypes:(id)v1 candidates:(id)v2 privateFilePathsIndexSet:(id)v3 sourceSDKFilePath:(id)v4 queryContext:(id)v5 consumer:(id)v6;
//- (void)dealloc;
//- (id)resultForPrototype:(id)v1 candidate:(struct DVTFuzzyMatchCandidate *)v2 query:(id)v3 fromIndex:(long long)v4;
//- (char)supportsLineNumberMatches;
//- (id)frameworkStyleCandidates;
//- (id)candidateBlockForQuery:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexLogProvider : IDELogProvider<IDESourceKitConnectionDelegate> {
//    IDESourceKitConnection * _conn;
//    char _isLogging;
//    IDEActivityLogSectionRecorder * _indexRecorder;
//    IDEActivityLogSectionRecorder * _editorRecorder;
//    NSObject<OS_dispatch_queue> * _queue;
//    NSMutableDictionary * _activeCompiles;
//    IDEIndexRingBuffer * _bufferedNotifications;
//    DVTNotificationToken * _indexCrashNotificationToken;
//    DVTNotificationToken * _indexRestoredNotificationToken;
//    IDELogStore * _logStore;
//}
//@property (retain) IDELogStore * logStore;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) IDESourceKitWorkspace * index;
//@property (readonly) IDESourceKitConnection * connection;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (id)initWithDomainItem:(id)v1;
//- (void)primitiveInvalidate;
//- (void)_setupObservers;
//- (id)logRecords;
//- (id)ideModelObjectTypeIdentifier;
//- (void)onLogOutput:(id)v1;
//- (void)onIndexCompileWillStart:(id)v1;
//- (void)onIndexCompileDidFinish:(id)v1;
//- (void)onToolchainCompilerCrashed:(id)v1;
//- (void)enableTracking:(char)v1;
//- (void)enableLog:(char)v1;
//- (void)_createLog;
//- (void)_removeLog;
//- (void)handleCompileWillStart:(id)v1;
//- (void)handleCompileDidFinish:(id)v1;
//- (void)_handleCrash:(id)v1;
//- (void)indexerCrashed;
//- (id)sectionRecorderForTool:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexActiveCompilationInfo : NSObject {
//    NSString * _compileID;
//    NSString * _toolID;
//    IDEActivityLogSectionRecorder * _recorder;
//}
//@property (readonly) NSString * compileID;
//@property (readonly) NSString * toolID;
//@property (retain) IDEActivityLogSectionRecorder * recorder;
//- (id)initWithCompileID:(id)v1 toolID:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCompileCrashNotification : NSObject {
//    NSString * _toolID;
//}
//@property (retain) NSString * toolID;
//- (id)initWithToolID:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionItem : NSObject<NSCopying> {
//    NSNumber * _isAssetPack;
//    char _canHaveProvisioningProfile;
//    DVTFilePath * _path;
//    DVTFilePath * _machOPath;
//    IDEDistributionItem * _parent;
//    NSArray * _childItems;
//    DVTCodeSigningInformation * _codeSigningInfo;
//    NSDictionary * _infoDictionary;
//    DVTProvisioningProfile * _provisioningProfile;
//    IDEDistributionItemPlatform * _itemPlatform;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//}
//@property IDEDistributionItem * parent;
//@property (readonly,nonatomic) IDEDistributionItemPlatform * itemPlatform;
//@property (retain,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) DVTFilePath * path;
//@property (readonly,nonatomic) DVTFilePath * machOPath;
//@property (readonly,nonatomic) NSArray * childItems;
//@property (readonly,nonatomic) NSString * bundleID;
//@property (readonly,nonatomic) NSString * bundleName;
//@property (readonly,nonatomic) DVTCodeSigningInformation * codeSigningInfo;
//@property (readonly,nonatomic) NSString * appID;
//@property (readonly,nonatomic) NSDictionary * infoDictionary;
//@property (readonly,nonatomic) NSDictionary * entitlements;
//@property (readonly,nonatomic) char canHaveProvisioningProfile;
//@property (readonly,nonatomic) DVTProvisioningProfile * provisioningProfile;
//@property (readonly,nonatomic) char isAssetPack;
//@property (readonly,nonatomic) NSString * sdkVariant;
//+ (id)itemsSupportingProvisioning:(id)v1 archive:(id)v2 logAspect:(id)v3;
//+ (id)itemWithPath:(id)v1 childItems:(id)v2 logAspect:(id)v3 error:(id *)v4;
//+ (id)machOFileTypesAtPath:(id)v1 error:(id *)v2;
//+ (id)canHaveProvisioningProfileForItemAtPath:(id)v1 platform:(id)v2 logAspect:(id)v3 error:(id *)v4;
//+ (id)embeddedProvisioningProfileForItemAtPath:(id)v1 platform:(id)v2 error:(id *)v3;
//+ (id)flattenDistributionItems:(id)v1;
//+ (id)_distributionItemForPath:(id)v1 pathsToItems:(id)v2 pathsToChildPaths:(id)v3 logAspect:(id)v4 error:(id *)v5;
//+ (id)topLevelDistributionItemsFromProductsRoot:(id)v1 logAspect:(id)v2 error:(id *)v3;
//- (char)conformsToHardenedRuntimePolicy:(char *)v1 error:(id *)v2;
//- (long long)profileSupport;
//- (id)provisioningFilePath;
//- (char)supportsProvisioning:(char *)v1 forArchive:(id)v2 error:(id *)v3;
//- (id)init;
//- (id)initWithPath:(id)v1 platform:(id)v2 infoDictionary:(id)v3 canHaveProvisioningProfile:(char)v4 codeSigningInfo:(id)v5 provisioningProfile:(id)v6 childItems:(id)v7;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (long long)compare:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (id)debugDescription;
//- (char)isManuallyProvisionedFromArchive:(id)v1 logAspect:(id)v2;
//- (id)isAppleProvidedContentFromArchive:(id)v1 error:(id *)v2;
//- (id)platformWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionItemPlatform : NSObject {
//    DVTPlatform * _platform;
//    NSString * _sdkVariant;
//    NSError * _platformError;
//}
//@property (readonly) DVTPlatform * platform;
//@property (readonly) NSString * sdkVariant;
//@property (readonly) NSError * platformError;
//+ (id)distributionItemPlatformWithPlatform:(id)v1 sdkVariant:(id)v2 platformError:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOnDiskActivityLogRecord : IDEActivityLogRecord {
//    char _hasPrimaryLog;
//    char _hasAuxiliaryLog;
//    char _hasTests;
//    char _hasCoverageData;
//    char _hasTimelineData;
//    char _isImported;
//    NSObject<IDELogStoreManageable> * _logStoreManageable;
//    double _timeStoppedRecording;
//    NSString * _uniqueIdentifier;
//    NSString * _auxiliaryLogUniqueIdentifier;
//    double _timeStartedRecording;
//    DVTFileDataType * _documentType;
//    IDETypeIdentifier * _domainType;
//    NSString * _title;
//    NSString * _signature;
//    DVTFilePath * _buildMetricsReportFilePath;
//    IDEActivityLogObservableRecord * _primaryObservable;
//    IDEActivityLogObservableRecord * _auxiliaryObservable;
//    NSObject<IDEOnDiskActivityLogRecordManaging> * _logRecordManager;
//    NSString * _logFileName;
//    NSString * _logClassName;
//    DVTObservingToken * _recorderLogObservingToken;
//}
//@property (readonly,copy) NSString * logClassName;
//@property (retain) DVTObservingToken * recorderLogObservingToken;
//@property (readonly) NSObject<IDELogStoreManageable> * logStoreManageable;
//@property (readonly) NSObject<IDEOnDiskActivityLogRecordManaging> * logRecordManager;
//@property (readonly,copy) NSDictionary * dictionaryRepresentation;
//@property (readonly,copy) NSString * logFileName;
//+ (id)entityIdentifierFromDictionary:(id)v1;
//+ (id)keyPathsForValuesAffectingPrimaryObservable;
//+ (id)keyPathsForValuesAffectingAuxiliaryObservable;
//+ (id)keyPathsForValuesAffectingIsRecording;
//- (id)initWithLogStoreManageable:(id)v1 entityIdentifier:(id)v2 logRecordManager:(id)v3;
//- (id)initWithLogStoreManageable:(id)v1 parameters:(id)v2 logRecordManager:(id)v3;
//- (id)initWithDictionaryRepresentation:(id)v1 logRecordManager:(id)v2 error:(id *)v3;
//- (id)coverageReportFilePromise;
//- (id)coverageArchiveFilePromise;
//- (id)primaryLogItems;
//- (id)auxiliaryLogItems;
//- (id)logSectionForItem:(id)v1 error:(id *)v2;
//- (id)onDiskPath;
//- (void)tearDown;
//- (id)_cachedLogStoreManageable;
//- (id)_faultedLogStoreManageable:(id *)v1;
//- (id)primaryObservable;
//- (id)auxiliaryObservable;
//- (id)fullLogWithError:(id *)v1;
//- (id)auxiliaryLogWithError:(id *)v1;
//- (id)fullLogStoreManageableWithError:(id *)v1;
//- (id)fullLogIfInMemory;
//- (void)transferLogStoreManageableToCache;
//- (char)isRecording;
//- (id)description;
//- (double)timeStoppedRecording;
//- (id)uniqueIdentifier;
//- (id)auxiliaryLogUniqueIdentifier;
//- (double)timeStartedRecording;
//- (id)documentType;
//- (id)domainType;
//- (id)title;
//- (id)signature;
//- (id)buildMetricsReportFilePath;
//- (char)hasPrimaryLog;
//- (char)hasAuxiliaryLog;
//- (char)hasTests;
//- (char)hasCoverageData;
//- (char)hasTimelineData;
//- (char)isImported;
//- (void)setIsImported:(char)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOnDiskActivityLogObservableRecord : IDEActivityLogObservableRecord
//@property (readonly,copy) NSDictionary * dictionaryRepresentation;
//- (id)initWithDictionaryRepresentation:(id)v1;
//@end
//
//
///*****************************************************************/
//
@interface IDERunOperationWorker : NSObject<DVTInvalidation> {
    NSString * _extensionIdentifier;
    IDELaunchSession * _launchSession;
    IDERunOperationWorkerGroup * _workerGroup;
    DVTObservingToken * _runnablePIDOberverToken;
    double _preflightAttemptInterval;
    char _hasPerformedWorkerAction;
    //DVTDispatchLock * _hasPerformedWorkerActionLock;
    char _isLongTerm;
    unsigned long long _preflightRetryAttempts;
    IDEExecutionRunnableTracker * _runnableTracker;
}
@property (readonly) NSString * extensionIdentifier;
@property (readonly) IDELaunchSession * launchSession;
@property (retain,nonatomic) IDEExecutionRunnableTracker * runnableTracker;
@property char isLongTerm;
@property (nonatomic) unsigned long long preflightRetryAttempts;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly,copy) NSString * description;
@property (readonly,copy) NSString * debugDescription;
+ (void)initialize;
- (id)init;
- (id)initWithExtensionIdentifier:(id)v1 launchSession:(id)v2;
- (void)setWorkerGroup:(id)v1;
- (void)startNextWorkerFromCompletedWorker:(id)v1 error:(id)v2;
- (char)preflightWithError:(id *)v1 recoverable:(char *)v2 shouldRetry:(char *)v3;
- (void)performWorkerAction;
- (void)performPostLaunchActions;
- (void)_startWithRetrying:(char *)v1;
- (void)start;
- (void)recoveredFromPreflightError;
- (void)finishedWithError:(id)v1;
- (id)notFinishedReasonWithDepth:(unsigned long long)v1;
- (void)terminate;
- (void)primitiveInvalidate;
@end
//
//
///*****************************************************************/
//
//@interface IDEBuildParameters : NSObject<NSCopying> {
//    IDEWorkspaceArenaSnapshot * _workspaceArenaSnapshot;
//    NSString * _buildAction;
//    IDESchemeCommand<IDEPrimitiveSchemeCommand> * _schemeCommand;
//    NSString * _configurationName;
//    IDERunDestination * _activeRunDestination;
//    NSString * _activeArchitecture;
//    IDEOverridingBuildProperties * _overridingProperties;
//    IDEXBSBuildParameters * _xbsBuildParameters;
//    unsigned long long _hash;
//    char _collectBuildTimeStatistics;
//    char _collectTimelineMetrics;
//}
//@property (readonly,copy) IDEWorkspaceArenaSnapshot * workspaceArenaSnapshot;
//@property (readonly,copy) NSString * buildAction;
//@property (readonly) IDESchemeCommand<IDEPrimitiveSchemeCommand> * schemeCommand;
//@property (readonly,copy) NSString * configurationName;
//@property (readonly) IDERunDestination * activeRunDestination;
//@property (readonly,copy) NSString * activeArchitecture;
//@property (readonly,copy) IDEOverridingBuildProperties * overridingProperties;
//@property (readonly) IDEXBSBuildParameters * xbsBuildParameters;
//@property (readonly) char collectBuildTimeStatistics;
//@property (readonly) char collectTimelineMetrics;
//+ (void)registerDefaultXcconfigCommandLineOverridingProperties:(id)v1;
//- (id)init;
//- (id)initForAction:(id)v1 workspaceArenaSnapshot:(id)v2 schemeCommand:(id)v3 configurationName:(id)v4 activeRunDestination:(id)v5 activeArchitecture:(id)v6 overridingProperties:(id)v7 xbsParameters:(id)v8 collectBuildTimeStatistics:(char)v9;
//- (id)initForAction:(id)v1 workspaceArenaSnapshot:(id)v2 schemeCommand:(id)v3 configurationName:(id)v4 activeRunDestination:(id)v5 activeArchitecture:(id)v6 overridingProperties:(id)v7 xbsParameters:(id)v8 collectBuildTimeStatistics:(char)v9 collectTimelineMetrics:(char)v10;
//- (id)initForAction:(id)v1 workspaceArenaSnapshot:(id)v2 schemeCommand:(id)v3 configurationName:(id)v4 activeRunDestination:(id)v5 activeArchitecture:(id)v6 overridingProperties:(id)v7 xbsParameters:(id)v8;
//- (id)initForAction:(id)v1 workspaceArenaSnapshot:(id)v2 schemeCommand:(id)v3 configurationName:(id)v4 activeRunDestination:(id)v5 activeArchitecture:(id)v6 overridingProperties:(id)v7 collectBuildTimeStatistics:(char)v8;
//- (id)initForAction:(id)v1 workspaceArenaSnapshot:(id)v2 schemeCommand:(id)v3 configurationName:(id)v4 activeRunDestination:(id)v5 activeArchitecture:(id)v6 overridingProperties:(id)v7 collectBuildTimeStatistics:(char)v8 collectTimelineMetrics:(char)v9;
//- (id)initForAction:(id)v1 workspaceArenaSnapshot:(id)v2 schemeCommand:(id)v3 configurationName:(id)v4 activeRunDestination:(id)v5 activeArchitecture:(id)v6 overridingProperties:(id)v7;
//- (id)initForBuildWithWorkspaceArenaSnapshot:(id)v1 schemeCommand:(id)v2 configurationName:(id)v3 activeRunDestination:(id)v4 activeArchitecture:(id)v5 overridingProperties:(id)v6 collectBuildTimeStatistics:(char)v7;
//- (id)initForBuildWithWorkspaceArenaSnapshot:(id)v1 schemeCommand:(id)v2 configurationName:(id)v3 activeRunDestination:(id)v4 activeArchitecture:(id)v5 overridingProperties:(id)v6;
//- (id)initForBuildWithConfigurationName:(id)v1;
//- (id)initForBuildWithWorkspaceArenaSnapshot:(id)v1 configurationName:(id)v2;
//- (id)copyWithAction:(id)v1;
//- (id)copyWithConfigurationName:(id)v1;
//- (id)copyWithOverridingProperties:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (id)dvt_detailedDebugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPlainTextTextFragmentProvider : IDETextFragmentProvider
//+ (void)generateTextFragmentProviderSeedForFilePath:(id)v1 completionHandler:(void (^ /* unknown block signature */)(void))v2;
//+ (char)retainsSeed;
//- (id)seed;
//- (void)enumerateTextFragments:(void (^ /* unknown block signature */)(void))v1;
//- (id)documentLocationForToken:(long long)v1 documentURL:(id)v2 timestamp:(id)v3 range:(struct _NSRange)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDEGaugeDocumentLocation : DVTDocumentLocation<IDEDebugNavigableModel> {
//    char _displaysWhileTracing;
//    NSString * _displayName;
//    unsigned long long _priority;
//}
//@property (readonly) NSString * displayName;
//@property (readonly) unsigned long long priority;
//@property char displaysWhileTracing;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)URLForScheme:(id)v1 launchSession:(id)v2 otherQueryString:(id)v3;
//+ (id)URLForScheme:(id)v1 launchSession:(id)v2;
//+ (id)launchSessionFromURL:(id)v1;
//- (id)initWithDisplayName:(id)v1 documentURL:(id)v2 priority:(unsigned long long)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDirectoryBasedCustomDataStore : DVTDirectoryBasedCustomDataStore
//- (void)scmStatusForSpecifier:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)addSpecifier:(id)v1 inWorkspace:(id)v2 toSCMWithCompletionBlock:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningBuildOperationInfo : NSObject {
//    NSMutableSet * _automaticallyAuthorizedUserActionNames;
//    char _allowProvisioningRepairs;
//}
//@property char allowProvisioningRepairs;
//- (id)init;
//- (char)shouldAutomaticallyAuthorizeUserActionNamed:(id)v1;
//- (void)automaticallyAuthorizeUserActionsNamed:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPreviewSchemeAction : IDELaunchTestSchemeAction {
//    char _automaticAppToLaunch;
//    char _livePreviewDebugEnabled;
//}
//@property char livePreviewDebugEnabled;
//+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
//- (id)init;
//- (void)dvt_commonInit;
//- (id)schemeCommand;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (id)name;
//- (void)setRunContext:(id)v1;
//- (id)_commandLineArgumentsForDevice:(id)v1 buildParameters:(id)v2;
//- (id)_previewOperation:(id)v1 launchSession:(id)v2 error:(id *)v3;
//- (id)previewOperationForSchemeOperationParameters:(id)v1 buildOperation:(id)v2 buildParameters:(id)v3 buildableProductDirectories:(id)v4 schemeCommand:(id)v5 schemeActionRecord:(id)v6 outError:(id *)v7 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v8;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setAutomaticAppToLaunchFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setLivePreviewDebugEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)primitiveInvalidate;
//- (char)automaticAppToLaunch;
//- (void)setAutomaticAppToLaunch:(char)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEManageCertificatesItemCollection : NSObject {
//    NSMutableDictionary * _itemsBySerialNumber;
//    NSMutableSet * _items;
//}
//@property (readonly,nonatomic) NSSet * items;
//@property (readonly,nonatomic) NSSet * allSerialNumbers;
//- (id)init;
//- (id)itemWithSerialNumber:(id)v1;
//- (void)addItem:(id)v1;
//- (void)removeItem:(id)v1;
//- (void)removeItemWithSerialNumber:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCreateManifestStep : IDEDistributionProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionManifest : NSObject {
//    NSString * _name;
//    NSString * _bundleIdentifier;
//    NSString * _platformIdentifier;
//    NSString * _bundleVersion;
//    NSString * _appURL;
//    NSString * _displayImageURL;
//    NSString * _fullSizeImageURL;
//    NSString * _assetPackManifestURL;
//}
//@property (copy) NSString * name;
//@property (copy) NSString * bundleIdentifier;
//@property (copy) NSString * platformIdentifier;
//@property (copy) NSString * bundleVersion;
//@property (copy) NSString * appURL;
//@property (copy) NSString * displayImageURL;
//@property (copy) NSString * fullSizeImageURL;
//@property (copy) NSString * assetPackManifestURL;
//+ (id)minimumDeploymentTargetDistributionCoalescedThinningVariantToDeviceIdentifierSet:(id)v1;
//+ (id)variantDescriptorsForDistributionCoalescedThinningVariant:(id)v1 includeDescriptorsForLegacyPlatforms:(char)v2;
//- (char)_validateURL:(id)v1 propertyName:(id)v2 error:(id *)v3;
//- (char)validateAppURL:(id *)v1 error:(id *)v2;
//- (char)validateDisplayImageURL:(id *)v1 error:(id *)v2;
//- (char)validateFullSizeImageURL:(id *)v1 error:(id *)v2;
//- (char)validateAssetPackManifestURL:(id *)v1 error:(id *)v2;
//- (char)isValidManifest;
//- (id)dictionaryRepresentationForDistributionCoalescedThinningVariants:(id)v1 processedTopLevelDistributionItems:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBuildOperationQueueSet : NSObject {
//    NSString * _identifier;
//    NSOperationQueue * _copyTaskQueue;
//    unsigned long long _slidingMaxNumberOfConcurrentCompileTasks;
//    char _didReduceConcurrencyDueToResourcePressure;
//    NSOperationQueue * _compileTaskQueue;
//    NSOperationQueue * _linkTaskQueue;
//    DVTDispatchLock * _updateConcurrencyLock;
//    NSDate * _lastCheckedResourcePressure;
//    NSDate * _lastIncreasedConcurrency;
//    NSObject<OS_dispatch_queue> * _addOperationQueue;
//}
//@property (readonly) NSString * identifier;
//+ (void)initialize;
//+ (void)setMaxNumberOfConcurrentCompileTasks:(unsigned long long)v1;
//+ (unsigned long long)maxNumberOfConcurrentCompileTasks;
//+ (id)sharedBuildTaskQueueSet;
//- (id)initWithIdentifier:(id)v1;
//- (void)updateOperationConcurrency;
//- (void)resetOperationConcurrency;
//- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)v1;
//- (void)addCompileTaskOperation:(id)v1 forCommand:(id)v2;
//- (void)addCopyTaskOperation:(id)v1 forCommand:(id)v2;
//- (void)addLinkTaskOperation:(id)v1 forCommand:(id)v2;
//- (void)dealloc;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningLogProvider : IDELogProvider
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (id)logRecords;
//- (id)ideModelObjectTypeIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindQuerySpecification : NSObject<NSSecureCoding> {
//    char _matchCase;
//    IDEBatchFindQueryTerm * _queryTerm;
//    long long _anchoring;
//    Class _queryClass;
//    IDEBatchFindNamedScope * _namedScope;
//}
//@property (readonly) IDEBatchFindQueryTerm * queryTerm;
//@property (readonly) char matchCase;
//@property (readonly) long long anchoring;
//@property (readonly) Class queryClass;
//@property (readonly) IDEBatchFindNamedScope * namedScope;
//+ (char)supportsSecureCoding;
//- (id)initWithQueryTerm:(id)v1 queryClass:(Class)v2 anchoring:(long long)v3 matchCase:(char)v4 namedScope:(id)v5;
//- (id)initWithCoder:(id)v1;
//- (void)encodeWithCoder:(id)v1;
//- (id)termSymbolsForWorkspaceAssertingOnTypeMismatch:(id)v1 useQualifiedNameParser:(char)v2 cancelWhen:(void (^ /* unknown block signature */)(void))v3;
//- (unsigned long long)hash;
//- (char)isEqualToSpecification:(id)v1;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestRunSpecification : NSObject<IDESchemeActionIssueSummaryProducingTarget> {
//    char _useDestinationArtifacts;
//    char _useInternalIOSLaunchStyleRsync;
//    char _useProcessLauncherKindPosixSpawn;
//    char _parallelizationEnabled;
//    char _testTimeoutsEnabled;
//    char _isUITestBundle;
//    char _useUITargetAppProvidedByTests;
//    char _UITestingTargetAppMainThreadCheckerEnabled;
//    char _mainThreadCheckerCrashOnReport;
//    char _gatherLocalizableStringsData;
//    char _treatMissingBaselinesAsFailures;
//    NSNumber * _isiOSMacTestBundle;
//    NSObject<IDETestingSpecifier> * _testingSpecifier;
//    NSSet * _testIdentifiersToRun;
//    NSSet * _testIdentifiersToSkip;
//    DVTFilePath * _testBundleFilePath;
//    NSString * _testBundleDestinationRelativePathString;
//    IDERunnable * _testHostRunnable;
//    NSString * _bundleIdForTestHost;
//    long long _testHostStyle;
//    NSArray * _filePathsForDependentProducts;
//    NSArray * _testDependencySearchDirectories;
//    NSSet * _bundleIDsForCrashReportEmphasis;
//    NSDictionary * _appRsyncInstallPathsByBundleID;
//    NSString * _productModuleName;
//    NSArray * _toolchainsSettingValue;
//    NSArray * _commandLineArguments;
//    NSDictionary * _environmentVariables;
//    NSDictionary * _testingEnvironmentVariables;
//    IDESchemeCommand<IDEPrimitiveSchemeCommand> * _schemeCommand;
//    NSString * _testLanguage;
//    NSString * _testRegion;
//    long long _systemAttachmentLifetime;
//    long long _userAttachmentLifetime;
//    NSNumber * _parallelTestingWorkerCountOverride;
//    NSNumber * _parallelTestingMaximumWorkerCount;
//    long long _testExecutionOrdering;
//    NSSet * _testBundleSupportedPlatforms;
//    NSSet * _testBundleArchitectures;
//    NSString * _testBundleDeploymentTarget;
//    NSNumber * _defaultTestExecutionTimeAllowance;
//    NSNumber * _maximumTestExecutionTimeAllowance;
//    NSString * _UITestingTargetAppBundleId;
//    DVTFilePath * _UITestingTargetAppPath;
//    NSArray * _UITestingTargetAppCommandLineArguments;
//    NSDictionary * _UITestingTargetAppEnvironmentVariables;
//    NSString * _blueprintProviderRelativePath;
//    NSString * _blueprintName;
//    NSString * _baselineFilePathString;
//    NSObject<IDEBuildableProduct> * _buildableProductForUIRecordingManager;
//    NSObject<IDEBuildableProduct> * _buildableProductForDebugger;
//    NSString * _clangProfileDataDirectoryPathString;
//    NSNumber * _traceCollectionEnabled;
//    NSDictionary * _performanceTestConfiguration;
//    NSNumber * __isAppleInternal;
//}
//@property (retain) NSObject<IDETestingSpecifier> * testingSpecifier;
//@property (copy,nonatomic) NSSet * testIdentifiersToRun;
//@property (copy,nonatomic) NSSet * testIdentifiersToSkip;
//@property (copy) DVTFilePath * testBundleFilePath;
//@property (copy) NSString * testBundleDestinationRelativePathString;
//@property (retain) IDERunnable * testHostRunnable;
//@property (copy) NSString * bundleIdForTestHost;
//@property long long testHostStyle;
//@property char useDestinationArtifacts;
//@property char useInternalIOSLaunchStyleRsync;
//@property char useProcessLauncherKindPosixSpawn;
//@property (copy) NSArray * filePathsForDependentProducts;
//@property (copy) NSArray * testDependencySearchDirectories;
//@property (copy) NSSet * bundleIDsForCrashReportEmphasis;
//@property (copy) NSDictionary * appRsyncInstallPathsByBundleID;
//@property (copy) NSString * productModuleName;
//@property (copy) NSArray * toolchainsSettingValue;
//@property (copy) NSArray * commandLineArguments;
//@property (copy) NSDictionary * environmentVariables;
//@property (copy) NSDictionary * testingEnvironmentVariables;
//@property (retain) IDESchemeCommand<IDEPrimitiveSchemeCommand> * schemeCommand;
//@property (copy) NSString * testLanguage;
//@property (copy) NSString * testRegion;
//@property long long systemAttachmentLifetime;
//@property long long userAttachmentLifetime;
//@property char parallelizationEnabled;
//@property (copy) NSNumber * parallelTestingWorkerCountOverride;
//@property (copy) NSNumber * parallelTestingMaximumWorkerCount;
//@property long long testExecutionOrdering;
//@property (readonly,copy) NSString * bundleIdentifierForInstallationTracking;
//@property (readonly,copy) NSString * pathForInstallationTracking;
//@property (copy,nonatomic) NSNumber * isiOSMacTestBundle;
//@property (copy) NSSet * testBundleSupportedPlatforms;
//@property (copy) NSSet * testBundleArchitectures;
//@property (copy) NSString * testBundleDeploymentTarget;
//@property char testTimeoutsEnabled;
//@property (copy) NSNumber * defaultTestExecutionTimeAllowance;
//@property (copy) NSNumber * maximumTestExecutionTimeAllowance;
//@property char isUITestBundle;
//@property char useUITargetAppProvidedByTests;
//@property (copy) NSString * UITestingTargetAppBundleId;
//@property (copy) DVTFilePath * UITestingTargetAppPath;
//@property (copy) NSArray * UITestingTargetAppCommandLineArguments;
//@property (copy) NSDictionary * UITestingTargetAppEnvironmentVariables;
//@property char UITestingTargetAppMainThreadCheckerEnabled;
//@property char mainThreadCheckerCrashOnReport;
//@property char gatherLocalizableStringsData;
//@property (copy) NSString * blueprintProviderRelativePath;
//@property (copy) NSString * blueprintName;
//@property char treatMissingBaselinesAsFailures;
//@property (copy) NSString * baselineFilePathString;
//@property (retain) NSObject<IDEBuildableProduct> * buildableProductForUIRecordingManager;
//@property (retain) NSObject<IDEBuildableProduct> * buildableProductForDebugger;
//@property (copy) NSString * clangProfileDataDirectoryPathString;
//@property (readonly) NSString * bundleName;
//@property (retain) NSNumber * traceCollectionEnabled;
//@property (retain) NSDictionary * performanceTestConfiguration;
//@property (retain,nonatomic) NSNumber * _isAppleInternal;
//@property (readonly,copy) NSDictionary * dictionaryRepresentation;
//@property (readonly) NSString * ide_schemeActionIssueSummaryProducingTargetName;
//+ (id)outputDirectoriesForBuildables:(id)v1 buildParameters:(id)v2;
//+ (id)testRunSpecificationsForTestingSpecifiers:(id)v1 scheme:(id)v2 buildables:(id)v3 withBuildParameters:(id)v4 additionalEnvironmentVariables:(id)v5 additionalCommandLineArguments:(id)v6 includeClangProfileParameters:(char)v7 shouldDebugAppExtensions:(char)v8 mainThreadCheckerDylibPath:(id)v9 error:(id *)v10;
//+ (id)_additionalEntriesForUITestingTargetAppEnvironmentVariables:(id)v1 fromEnvironmentVariables:(id)v2;
//+ (char)performanceTraceCollectionEligibleForRunDestination:(id)v1;
//+ (char)applyTestIdentifiersToRun:(id)v1 toSpecifications:(id)v2 error:(id *)v3;
//+ (void)applyTestIdentifiersToSkip:(id)v1 toSpecifications:(id)v2;
//+ (void)applyRunSkippedTestsOnlyToSpecifications:(id)v1;
//+ (id)_targetMapFromTestIdentifiers:(id)v1;
//+ (id)insertPathPlaceholdersIn:(id)v1 forTestRootPath:(id)v2 derivedDataPath:(id)v3;
//+ (id)removePathPlaceholdersIn:(id)v1 forTestRootPath:(id)v2 derivedDataPath:(id)v3;
//+ (char)usesInternalTestBuildStyleForBuildable:(id)v1 buildParameters:(id)v2;
//+ (id)_bundleInjectLibraryPathForBuildableProduct:(id)v1 buildParameters:(id)v2 device:(id)v3 testHostPath:(id)v4;
//+ (id)testingEnvironmentVariablesForBuildParameters:(id)v1 testHostStyle:(long long)v2 testBuildableProduct:(id)v3 testHostPath:(id)v4 buildDirectoryPaths:(id)v5 workspace:(id)v6;
//+ (id)environmentVariablesForBuildParameters:(id)v1 buildDirectoryPaths:(id)v2 workspace:(id)v3;
//+ (id)baselinePlistFilePathForTestingSpecifier:(id)v1 bundleBaselineFilePath:(id)v2 baselineOverridesFilePath:(id)v3 runDestination:(id)v4 withError:(id *)v5;
//+ (id)_dependentProductsForBuildables:(id)v1;
//+ (id)filePathsForDependentProductsForBuildables:(id)v1 buildParameters:(id)v2 runDestination:(id)v3;
//+ (id)bundleIDForBuildableProduct:(id)v1 buildParameters:(id)v2;
//+ (id)bundleIDsForDependentProductsForBuildables:(id)v1 buildParameters:(id)v2;
//+ (char)_buildableProductProducesAnApp:(id)v1 buildParameters:(id)v2;
//+ (id)appRsyncInstallPathsByBundleIDForDependentProductsOfBuildables:(id)v1 buildParameters:(id)v2;
//+ (id)hostBuildableProductForBuildable:(id)v1 buildParameters:(id)v2 workspace:(id)v3;
//+ (id)computedHostApplicationForBuildableProduct:(id)v1 forRunDestination:(id)v2 buildParameters:(id)v3 workspace:(id)v4;
//+ (id)testHostRunnableForUsesXCTRunner:(char)v1 runDestination:(id)v2 buildableProduct:(id)v3 buildParameters:(id)v4 testingSpecifier:(id)v5 outError:(id *)v6;
//+ (id)pathForBuildableProduct:(id)v1 buildParameters:(id)v2 runDestination:(id)v3;
//+ (id)buildableProductForTestingSpecifier:(id)v1;
//+ (void (^ /* unknown block signature */)(void))launchParametersBlockForShouldDebugXPCServices:(char)v1 shouldDebugAppExtensions:(char)v2 workspace:(id)v3 doingPGO:(char)v4 schemeIdentifier:(id)v5 workingDirectory:(id)v6 selectedLauncherIdentifier:(id)v7 selectedDebuggerIdentifier:(id)v8 buildConfiguration:(id)v9 buildParameters:(id)v10 debugProcessAsUID:(unsigned int)v11 customLLDBInitFile:(id)v12 suppressSimulatorApplication:(char)v13 shouldGenerateRuntimeProfile:(char)v14 runtimeProfileInfo:(id)v15 buildProductDirectories:(id)v16;
//+ (id)languageAgnosticIdentifersFor:(id)v1;
//+ (id)specificationWithSpecifier:(id)v1 testBundleFilePath:(id)v2 testHostRunnable:(id)v3 bundleIdForTestHost:(id)v4 testHostStyle:(long long)v5 filePathsForDependentProducts:(id)v6 testDependencySearchDirectories:(id)v7 bundleIDsForCrashReportEmphasis:(id)v8 productModuleName:(id)v9 toolchainsSettingValue:(id)v10 testingEnvironmentVariables:(id)v11 schemeCommand:(id)v12 isUITestBundle:(char)v13 useUITargetAppProvidedByTests:(char)v14 UITestingTargetAppPath:(id)v15 UITestingTargetAppEnvironmentVariables:(id)v16 buildableProductForUIRecordingManager:(id)v17 buildableProductForDebugger:(id)v18 treatMissingBaselinesAsFailures:(char)v19 blueprintProviderRelativePath:(id)v20 blueprintName:(id)v21 parallelizationEnabled:(char)v22 testExecutionOrdering:(long long)v23 testTimeoutsEnabled:(char)v24 defaultTestExecutionTimeAllowance:(id)v25 maximumTestExecutionTimeAllowance:(id)v26;
//- (char)_validateBuildablesForRunDestination:(id)v1 error:(id *)v2;
//- (char)_validateBuiltProductsForRunDestination:(id)v1 error:(id *)v2;
//- (char)_isValidBundleAtFilePath:(id)v1 forRunDestination:(id)v2 error:(id *)v3;
//- (char)_isValidRunDestination:(id)v1 error:(id *)v2;
//- (char)validateRunDestination:(id)v1 error:(id *)v2;
//- (void)applyLanguageAndRegionToArguments;
//- (id)initWithDictionaryRepresentation:(id)v1 error:(id *)v2;
//- (id)preparedTestEnvironmentVariablesForRunDestination:(id)v1;
//- (id)destinationDirectoryForDownloadedRuntimeProfiles:(id)v1;
//- (id)mergedProfilePathForRunDestination:(id)v1;
//- (id)lldbToolchain;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexCapabilities : NSObject
//+ (char)isLanguageSupported:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCompileBitcodeStep : IDEDistributionProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningLogDVTLogAspectListener : NSObject {
//    DVTLogAspect * _logAspect;
//    unsigned long long _logLevelThreshold;
//    void (^ /* unknown block signature */)(void) _handler;
//    id _logHandlerToken;
//}
//- (id)initWithLogAspect:(id)v1 logLevelThreshold:(unsigned long long)v2 logHandler:(void (^ /* unknown block signature */)(void))v3;
//- (void)invalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivePreProcessorSnapshot : NSObject {
//    DVTFilePath * _path;
//    DVTFilePath * _archivedContentPath;
//    DVTFilePath * _archivedContentInfoPath;
//}
//@property (retain,nonatomic) DVTFilePath * path;
//@property (retain,nonatomic) DVTFilePath * archivedContentPath;
//@property (retain,nonatomic) DVTFilePath * archivedContentInfoPath;
//- (id)initWithArchive:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivePreProcessorResult : NSObject {
//    NSString * _displayName;
//    NSDictionary * _info;
//}
//@property (retain,nonatomic) NSString * displayName;
//@property (retain,nonatomic) NSDictionary * info;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivePreProcessor : NSObject {
//    NSOperationQueue * _archiveProcessingQueue;
//    NSDictionary * _archivePathToPreProcessingResult;
//}
//@property (retain,nonatomic) NSOperationQueue * archiveProcessingQueue;
//@property (retain,nonatomic) NSDictionary * archivePathToPreProcessingResult;
//+ (id)defaultStore;
//- (id)processArchiveSnapshot:(id)v1;
//- (void)processArchiveSnapshots:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindWorkspaceFileSource : IDEBatchFindFileSource
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//+ (id)wrappedContainerForWorkspace:(id)v1;
//+ (id)searchableContextualizedFilePathsForWorkspace:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isEqualToFileSourceWithIdenticalClass:(id)v1;
//- (unsigned long long)hash;
//- (void)accumulateContributingSources:(id)v1;
//- (void)accessContentWithWorkspace:(id)v1 priority:(long long)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFileReference : IDEContainerItem<IDEStructureEditing> {
//    DVTFilePath * _watchedFilePath;
//    DVTFilePath * _oldWatchedFilePath;
//    DVTFilePath * _resolvedFilePath;
//    DVTFileDataType * _presumedFileDataType;
//    DVTFileDataType * _lastKnownFileDataType;
//    DVTFileDataType * _lastDiscoveredFileDataType;
//    DVTFileDataType * _discoveredFileDataType;
//    DVTExtension * _referencedContainerExtension;
//    IDEContainer * _referencedContainer;
//    DVTObservingToken * _referencedContainerIsValidObservingToken;
//    DVTObservingToken * _workspaceIsValidObservingToken;
//    char _workaroundForProblem8727051;
//    char _stopResolvingReferencedContainers;
//    unsigned long long _sourceControlLocalStatus;
//    unsigned long long _sourceControlServerStatus;
//    unsigned long long _conflictStateForUpdateOrMerge;
//    unsigned long long _aggregateSourceControlLocalStatus;
//    unsigned long long _aggregateSourceControlServerStatus;
//    unsigned long long _aggregateSourceControlConflictStatus;
//    char _sourceControlLocalStatusNeedsUpdate;
//    char _sourceControlServerStatusNeedsUpdate;
//    char _sourceControlConflictStatusNeedsUpdate;
//    char _waitingForChangeNotificationsToResume;
//    NSObject<NSObject> * _modelObjectGraphDidCoalesceNotificationToken;
//    DVTFileDataType * _assignedFileDataType;
//}
//@property (readonly) DVTFileDataType * presumedFileDataType;
//@property unsigned long long sourceControlLocalStatus;
//@property unsigned long long sourceControlServerStatus;
//@property unsigned long long conflictStateForUpdateOrMerge;
//@property (readonly) char _filePathExists;
//@property (readonly,copy,nonatomic) NSString * name;
//@property (readonly) DVTFilePath * resolvedFilePath;
//@property (copy,nonatomic) DVTFileDataType * assignedFileDataType;
//@property (readonly) DVTFileDataType * discoveredFileDataType;
//@property (readonly) DVTFileDataType * lastKnownFileDataType;
//@property (readonly) DVTExtension * referencedContainerExtension;
//@property (readonly) IDEContainer * referencedContainer;
//@property (readonly) DVTFilePath * expectedFilePath;
//+ (id)keyPathsForValuesAffectingIdeModelObjectTypeIdentifier;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (id)_fileReferenceAssociatesForPath:(id)v1 forAllPathsToSameFile:(char)v2 workspace:(id)v3;
//+ (id)fileReferenceAssociatesForPath:(id)v1 forAllPathsToSameFile:(char)v2 workspace:(id)v3;
//+ (id)fileReferenceAssociatesForPath:(id)v1 forAllPathsToSameFile:(char)v2;
//+ (id)keyPathsForValuesAffectingName;
//+ (id)keyPathsForValuesAffectingExpectedFilePath;
//+ (id)keyPathsForValuesAffectingIssueLog;
//+ (char)automaticallyNotifiesObserversOfSourceControlLocalStatus;
//+ (char)automaticallyNotifiesObserversOfSourceControlServerStatus;
//+ (char)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
//+ (char)automaticallyNotifiesObserversOfAggregateSourceControlLocalStatus;
//+ (char)automaticallyNotifiesObserversOfAggregateSourceControlServerStatus;
//+ (char)automaticallyNotifiesObserversOfAggregateSourceControlConflictStatus;
//+ (id)keyPathsForValuesAffectingCanStructureEditName;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setAssignedFileDataTypeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)ide_populateFilePaths:(id)v1 parentSuffixIndex:(long long)v2 visitedContainers:(id)v3;
//- (id)ideModelObjectTypeIdentifier;
//- (void)ideFindScope_accumulateFilePaths:(id)v1 andVisitedContainers:(id)v2;
//- (id)ideFindScope_predicateRoot;
//- (id)ideFindScope_componentForGroupPath;
//- (id)ideFindScope_itemAtPath:(id)v1 position:(long long)v2 preferContainerFileReferenceToRootGroup:(char)v3;
//- (void)openQuickly_enumerateCandidateFilePathsNotingVisitedContainers:(id)v1 enumerator:(void (^ /* unknown block signature */)(void))v2;
//- (id)init;
//- (void)primitiveInvalidate;
//- (void)_setContainer:(id)v1;
//- (void)changePath:(id)v1 resolutionStrategies:(id)v2;
//- (void)_invalidateStartingWith:(id)v1;
//- (void)_invalidateStartingWith:(id)v1 changeBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)_resolvedFilePathIfAvailable;
//- (id)_absolutePath;
//- (void)_resolvedFilePathWasInvalidated;
//- (void)_invalidateResolvedFilePath;
//- (void)_invalidateResolvedFilePathUsingPath:(id)v1 resolutionStrategies:(id)v2;
//- (void)_resolvedFilePathDidChange:(id)v1;
//- (char)_resolvedFilePathIsValid;
//- (void)_assignedFileDataTypeDidChange;
//- (void)_invalidateFileDataType;
//- (char)_isBuildProductReference;
//- (id)_resolveReferencedContainerExtension;
//- (char)_workaroundForProblem8727051;
//- (void)_recalculateReferencedContainer;
//- (void)_referencedContainerWasRecalculated;
//- (void)_resolvedFilePathWasRecalculated;
//- (id)_referencedContainer;
//- (void)_addObserversForReferencedContainer;
//- (void)_invalidateReferencedContainer;
//- (char)isReferencedContainerLoaded;
//- (id)issueLog;
//- (unsigned long long)aggregateSourceControlLocalStatus;
//- (unsigned long long)aggregateSourceControlServerStatus;
//- (unsigned long long)aggregateSourceControlConflictStatus;
//- (void)_enqueueScmStatusUpdate;
//- (void)_updateSourceControlStatus;
//- (void)_updateSourceControlLocalStatus;
//- (void)_updateSourceControlServerStatus;
//- (void)_updateConflictStateForUpdateOrMerge;
//- (void)_setAggregateSourceControlLocalStatus:(unsigned long long)v1;
//- (void)_setAggregateSourceControlServerStatus:(unsigned long long)v1;
//- (void)_setAggregateSourceControlConflictStatus:(unsigned long long)v1;
//- (void)_updateAggregateSourceControlLocalStatus;
//- (void)_updateAggregateSourceControlServerStatus;
//- (void)_updateAggregateSourceControlConflictStatus;
//- (void)_updateSourceControlStatusIfNeeded;
//- (void)debugPrintInnerStructure;
//- (void)_takeConfigurationFromFileReference:(id)v1;
//- (void)fileReferenceWasConfigured;
//- (char)allowRemovingContainerGroup;
//- (char)allowUserModificationOfSubitems;
//- (char)canStructureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (id)structureEditInsertSubitems:(id)v1 atIndex:(unsigned long long)v2;
//- (char)canStructureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2;
//- (id)structureEditInsertFileURLs:(id)v1 atIndex:(unsigned long long)v2 createGroupsForFolders:(char)v3;
//- (char)canStructureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)structureEditSortSubitemsAtIndexes:(id)v1 sortStyle:(unsigned long long)v2;
//- (char)canStructureEditRemoveSubitemsAtIndexes:(id)v1;
//- (char)structureEditRemoveSubitemsAtIndexes:(id)v1 error:(id *)v2;
//- (char)canStructureEditName;
//- (id)_structureEditNameForSuggestedName:(id)v1;
//- (char)structureEditSetName:(id)v1 inContext:(id)v2;
//- (char)structureEditName:(id)v1 inContext:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningTeamAccountPair : NSObject {
//    DVTPortalTeam * _team;
//    NSObject<DVTServicesSessionProvider> * _sessionProvider;
//    NSArray * _otherSessionProviders;
//}
//@property (readonly,nonatomic) DVTPortalTeam * team;
//@property (readonly,nonatomic) NSObject<DVTServicesSessionProvider> * sessionProvider;
//@property (copy,nonatomic) NSArray * otherSessionProviders;
//- (id)initWithTeam:(id)v1 sessionProvider:(id)v2;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
@interface IDEExecutionTracker : NSObject<IDEExecutionTrackerReporting> {
    NSMutableArray * _subtrackers;
    NSError * _error;
    char _isFinished;
    char _wantsHold;
    char _isCanceling;
    int _serviceTier;
    int _cancellationReason;
    NSString * _statusDisplayName;
    //DVTFilePath * _statusImageFilePath;
    //IDELaunchSession * _launchSession;
    IDEExecutionTracker * _cancelingTracker;
    NSString * _debugName;
}
@property (copy) NSString * statusDisplayName;
//@property (retain) DVTFilePath * statusImageFilePath;
@property int serviceTier;
@property char isFinished;
@property int cancellationReason;
@property (retain) NSMutableArray * mutableSubtrackers;
@property (readonly) char statusChanged;
@property char wantsHold;
@property (retain) NSError * error;
//@property (retain) IDELaunchSession * launchSession;
@property (readonly) char isCanceling;
@property (retain) IDEExecutionTracker * cancelingTracker;
@property (readonly,copy) NSArray * subtrackers;
@property (copy) NSString * debugName;
//@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly,copy) NSString * description;
@property (readonly,copy) NSString * debugDescription;
+ (void)initialize;
- (id)init;
- (void)cancelWithReason:(int)v1;
- (void)cancel;
- (void)_updateWantsHold;
- (void)_updateIsFinished;
- (id)notFinishedReasonWithDepth:(unsigned long long)v1;
- (void)addSubtracker:(id)v1;
- (void)setStatusDisplayName:(id)v1 statusImageFilePath:(id)v2;
@end
//
//
///*****************************************************************/
//
//@interface IDEBuildStatisticsData : NSObject<IDEBuildStatisticsData> {
//    NSString * _commandString;
//    NSString * _title;
//    unsigned long long _ordinal;
//    DVTSystemStatisticsMeasurement * _startSystemStats;
//    DVTSystemStatisticsMeasurement * _endSystemStats;
//    double _elapsedUserTime;
//    double _elapsedSystemTime;
//}
//@property (copy) NSString * title;
//@property unsigned long long ordinal;
//@property (retain) DVTSystemStatisticsMeasurement * startSystemStats;
//@property (retain) DVTSystemStatisticsMeasurement * endSystemStats;
//@property double elapsedUserTime;
//@property double elapsedSystemTime;
//@property (copy) NSString * commandString;
//@property (readonly) double startWallClockTime;
//@property (readonly) double endWallClockTime;
//@property (readonly) double elapsedWallClockTime;
//@property (readonly) long long numberOfVMPageins;
//@property (readonly) long long numberOfVMPageouts;
//- (id)initWithTitle:(id)v1 commandString:(id)v2 ordinal:(unsigned long long)v3 startSystemStatisticsMeasurement:(id)v4 endSystemStatisticsMeasurement:(id)v5 elapsedUserTime:(double)v6 elapsedSystemTime:(double)v7;
//- (id)defaultEmissionStringWithIndentLevel:(unsigned long long)v1;
//- (void)emitContentsForAspect:(id)v1 logLevel:(unsigned long long)v2 indentLevel:(unsigned long long)v3 withBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductVersionExtension : IDEProductVersion {
//    NSString * _bundleIdentifier;
//    NSString * _version;
//    NSString * _buildNumber;
//    IDEProductExtensionCategory * _extensionCategory;
//    _TtC13IDEFoundation29IDEProductExtensionIdentifier * _extensionIdentifier;
//}
//@property (retain) NSString * bundleIdentifier;
//@property (retain) NSString * version;
//@property (retain) NSString * buildNumber;
//@property (retain) _TtC13IDEFoundation29IDEProductExtensionIdentifier * extensionIdentifier;
//@property (readonly) IDEProductExtensionCategory * extensionCategory;
//+ (id)productVersionByMerging:(id)v1;
//+ (id)objectFromJSONRepresentation:(id)v1 error:(id *)v2;
//- (id)initWithProductVersionIdentifier:(id)v1 bundleIdentifier:(id)v2 version:(id)v3 buildNumber:(id)v4 name:(id)v5 childProducts:(id)v6 productCategory:(id)v7 extensionIdentifier:(id)v8;
//- (id)cachePathWithRootProductVersion:(id)v1 productDirectory:(id)v2;
//- (id)productExtensionCategory;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)JSONRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindLineWrappingParameters : NSObject<NSCopying> {
//    double _columnWidth;
//    double _indentationPerLevel;
//    long long _maxNumberOfLines;
//    long long _maxXPadding;
//}
//@property (readonly) double columnWidth;
//@property (readonly) double indentationPerLevel;
//@property (readonly) long long maxNumberOfLines;
//@property (readonly) long long maxXPadding;
//- (id)initWithColumnWidth:(double)v1 indentationPerLevel:(double)v2 maxXPadding:(long long)v3 maxNumberOfLines:(long long)v4;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (unsigned long long)hash;
//- (char)isEqualToBatchFindLineWrappingParameters:(id)v1;
//- (char)isEqual:(id)v1;
//- (double)tableCellWidthForIndentionLevel:(long long)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndex : NSObject<DVTInvalidation> {
//    char _valid;
//    char _isQuiescent;
//}
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) char isQuiescent;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)languageSupportsSymbolColoring:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProfileSpecifier : NSObject<NSCopying> {
//    NSString * _teamID;
//    NSString * _specifier;
//}
//@property (readonly,nonatomic) NSString * teamID;
//@property (readonly,nonatomic) NSString * specifier;
//- (id)initWithTeamID:(id)v1 specifier:(id)v2;
//- (id)initWithString:(id)v1;
//- (id)initWithString:(id)v1 error:(id *)v2;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)chunkFromString:(id)v1 remainingString:(id *)v2;
//- (void)_parseString:(id)v1 teamSpecifier:(id *)v2 specifier:(id *)v3;
//- (id)stringRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunDestinationCLI : NSObject
//+ (id)targetDeviceDescriptionForRunDestination:(id)v1;
//+ (id)availableDestinationsDescriptionForDestinations:(id)v1 scheme:(id)v2;
//+ (id)resolveRunDestinationsWithWorkspace:(id)v1 scheme:(id)v2 buildAction:(id)v3 schemeCommand:(id)v4 schemeTask:(long long)v5 destinationSpecifications:(id)v6 architectures:(id)v7 timeout:(double)v8 runDestinationManager:(id)v9 deviceManager:(id)v10 fallbackPreferredSDK:(id)v11 fallbackPreferredArchitectures:(id)v12 skipUnsupportedDestinations:(char)v13 shouldSkipRunDestinationValidation:(char)v14 didDisambiguate:(char *)v15 disambiguatedMatches:(id *)v16 disambiguatedMatchesDescription:(id *)v17 error:(id *)v18;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIndexStringSetFileWatcher : NSObject {
//    DVTFilePath * _filePath;
//    NSObject<IDEIndexStringSetFileWatcherDelegate> * _delegate;
//    NSSet * _contents;
//    NSData * _digest;
//    NSObject<OS_dispatch_queue> * _fileProcessingQueue;
//}
//@property (readonly) DVTFilePath * watchedFilePath;
//@property (readonly) NSObject<IDEIndexStringSetFileWatcherDelegate> * delegate;
//@property (readonly) NSSet * allStrings;
//- (id)initWithFilePath:(id)v1 delegate:(id)v2;
//- (void)dealloc;
//- (void)_fileChanged:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySymbolResultProvider : IDEOpenQuicklyAbstractWorkspaceResultProvider {
//    IDEIndex * _weakIndex;
//    NSMutableDictionary * _cachedSymbolsByName;
//}
//- (id)initWithWorkspace:(id)v1 queryContext:(id)v2 consumer:(id)v3;
//- (id)transformAggregateResults:(id)v1;
//- (void)generateGeneratorsWithCompletionGroup:(id)v1 forWorkspace:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitService : NSObject {
//    struct _sourcekit_connection_s * _lowConn;
//    NSMutableArray * _initializationBlocks;
//    NSMutableArray * _notificationDocumentUpdateBlocks;
//    NSMutableArray * _notificationSemanticsDisabledBlocks;
//    DVTNotificationToken * _connectionInterruptedNotificationToken;
//    DVTNotificationToken * _connectionRestoredNotificationToken;
//    int _serviceStatus;
//}
//@property int serviceStatus;
//+ (void)initialize;
//+ (id)sharedSourceKitService;
//+ (void)handleSourceKitError:(struct _sourcekit_response_s *)v1 logAspect:(id)v2 crashed:(char *)v3;
//- (id)init;
//- (id)sendRequestSyncWithName:(id)v1 parameters:(id)v2 error:(id *)v3;
//- (id)sendRequestSync:(struct _sourcekit_object_s *)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)sendRequestAsync:(struct _sourcekit_object_s *)v1 queue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)addInitializationBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)removeInitializationBlock:(id)v1;
//- (id)addDocumentUpdateNotificationBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)removeDocumentUpdateNotificationBlock:(id)v1;
//- (id)addSemanticsDisabledNotificationBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)removeSemanticsDisabledNotificationBlock:(id)v1;
//- (void)handleConnectionRestored;
//- (void)handleNotification:(struct _sourcekit_response_s *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestingSystem : NSObject {
//    NSString * _name;
//    NSString * _identifier;
//    Class _testableClass;
//}
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * identifier;
//@property (readonly) Class testableClass;
//+ (void)initialize;
//+ (id)_testingSystemForExtension:(id)v1;
//+ (id)testingSystemForIdentifier:(id)v1;
//+ (id)testingSystems;
//- (id)initWithTestingSystemExtension:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningManagerContext : NSObject<DVTInvalidation> {
//    IDEProvisioningContext * _provisioningContext;
//    IDEProvisioningMechanic * _mechanic;
//}
//@property (retain,nonatomic) IDEProvisioningMechanic * mechanic;
//@property (readonly,nonatomic) IDEProvisioningTeamManager * teamManager;
//@property (readonly,nonatomic) DVTProvisioningProfileManager * profileManager;
//@property (readonly,nonatomic) DVTSigningCertificateManager * certificateManager;
//@property (readonly,nonatomic) long long automaticLocationStyle;
//@property (readonly,nonatomic) long long repairMode;
//@property (readonly,nonatomic) long long evaluationMode;
//@property (readonly,nonatomic) NSObject<IDEProvisioningErrorProvider> * errorProvider;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithProvisioningContext:(id)v1 mechanic:(id)v2;
//- (void)primitiveInvalidate;
//- (id)newProvisionableManagerForProvisionable:(id)v1 provisioningManager:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERosettaUpdateController : NSObject
//+ (id)sharedUpdateController;
//+ (void)setSharedUpdateController:(id)v1;
//+ (char)needToInstallRosetta;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchSchemeAction : IDELaunchTestSchemeAction {
//    DVTNotificationToken * _buildablesToken;
//    NSMutableDictionary * _additionalSchemeSettings;
//    DVTObservingToken * _launchSessionObservingToken;
//    NSDictionary * _cachedAppExtensionBuiltPaths;
//    NSObject<IDEAnalysisToolService> * _analysisToolService;
//    char _allowDeviceSensorReplayData;
//    char _debugXPCServices;
//    char _enableMallocStackLoggingLiteForXPCServices;
//    char _hiddenMallocStackLoggingLiteForXPCServices;
//    char _stopOnEveryThreadSanitizerIssue;
//    char _stopOnEveryUBSanitizerIssue;
//    char _stopOnEveryMainThreadCheckerIssue;
//    char _migratedStopOnEveryIssue;
//    char _useCustomWorkingDirectory;
//    char _allowLocationSimulation;
//    char _showNonLocalizedStrings;
//    char _ignoresPersistentStateOnLaunch;
//    char _debugDocumentVersioning;
//    char _viewDebuggingEnabled;
//    char _queueDebuggingEnabled;
//    char _memoryGraphOnResourceException;
//    char _placeholderRenderingEnabled;
//    char _GPUProfilerEnabled;
//    int _launchStyle;
//    int _enableGPUFrameCaptureMode;
//    int _enableGPUValidationMode;
//    int _enableGPUShaderValidationMode;
//    int _internalIOSLaunchStyle;
//    NSString * _resolvedCustomWorkingDirectory;
//    NSMutableOrderedSet * _debugServiceExtensionContents;
//    _TtC13IDEFoundation25IDEDeviceAppDataReference * _deviceAppDataReference;
//    _TtC13IDEFoundation24IDESchemeOptionReference * _deviceSensorReplayFileReference;
//    unsigned long long _launchAutomaticallySubstyle;
//    NSString * _customWorkingDirectory;
//    _TtC13IDEFoundation28IDELocationScenarioReference * _locationScenarioReference;
//    _TtC13IDEFoundation24IDESchemeOptionReference * _routingCoverageFileReference;
//    NSNumber * _simulatorIPhoneDisplay;
//    NSNumber * _simulatorIPadDisplay;
//    _TtC13IDEFoundation24IDESchemeOptionReference * _storeKitConfigurationFileReference;
//    NSString * _launchdServiceSpecifier;
//    NSString * _internalIOSSubstitutionApp;
//    long long _consoleMode;
//    NSString * _debugServiceExtensionContentsString;
//    NSString * _debugServiceExtension;
//}
//@property char launchWithGlance;
//@property char launchWithComplication;
//@property char launchWithNotification;
//@property char staticNotificationSelected;
//@property (retain) _TtC13IDEFoundation25IDEDeviceAppDataReference * deviceAppDataReference;
//@property char allowDeviceSensorReplayData;
//@property (retain) _TtC13IDEFoundation24IDESchemeOptionReference * deviceSensorReplayFileReference;
//@property char debugXPCServices;
//@property char enableMallocStackLoggingLiteForXPCServices;
//@property char hiddenMallocStackLoggingLiteForXPCServices;
//@property char stopOnEveryThreadSanitizerIssue;
//@property char stopOnEveryUBSanitizerIssue;
//@property char stopOnEveryMainThreadCheckerIssue;
//@property char migratedStopOnEveryIssue;
//@property (nonatomic) int launchStyle;
//@property (nonatomic) unsigned long long launchAutomaticallySubstyle;
//@property char useCustomWorkingDirectory;
//@property (copy,nonatomic) NSString * customWorkingDirectory;
//@property (readonly) NSString * resolvedCustomWorkingDirectory;
//@property char allowLocationSimulation;
//@property char showNonLocalizedStrings;
//@property (retain) _TtC13IDEFoundation28IDELocationScenarioReference * locationScenarioReference;
//@property (retain) _TtC13IDEFoundation24IDESchemeOptionReference * routingCoverageFileReference;
//@property (retain) NSNumber * simulatorIPhoneDisplay;
//@property (retain) NSNumber * simulatorIPadDisplay;
//@property (retain) _TtC13IDEFoundation24IDESchemeOptionReference * storeKitConfigurationFileReference;
//@property char ignoresPersistentStateOnLaunch;
//@property char debugDocumentVersioning;
//@property (readonly) char gpuDebuggerAvailable;
//@property int enableGPUFrameCaptureMode;
//@property int enableGPUValidationMode;
//@property int enableGPUShaderValidationMode;
//@property (retain) NSString * customLaunchCommand;
//@property (retain) NSString * launchdServiceSpecifier;
//@property (retain) NSDictionary * additionalSchemeSettings;
//@property int internalIOSLaunchStyle;
//@property (copy) NSString * internalIOSSubstitutionApp;
//@property char viewDebuggingEnabled;
//@property char queueDebuggingEnabled;
//@property char memoryGraphOnResourceException;
//@property long long consoleMode;
//@property char placeholderRenderingEnabled;
//@property char GPUProfilerEnabled;
//@property (copy) NSMutableOrderedSet * debugServiceExtensionContents;
//@property (copy) NSString * debugServiceExtensionContentsString;
//@property (copy) NSString * debugServiceExtension;
//+ (id)createAdditionalDiagnosticsDict;
//+ (id)keyPathsForValuesAffectingDoesNonActionWork;
//+ (id)keyPathsForValuesAffectingLaunchDueToFetchEvent;
//+ (char)shouldEnableMallocLoggingLiteByDefault:(id)v1 device:(id)v2;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_commonInit;
//- (id)schemeCommand;
//- (void)_setupAnalysisToolService;
//- (void)_setupQueueDebuggingState;
//- (id)notificationPayloadFileReferences;
//- (void)setRunContext:(id)v1;
//- (id)name;
//- (char)doesNonActionWork;
//- (id)commandLineArgumentsForDevice:(id)v1 buildParameters:(id)v2;
//- (id)additionalOptions;
//- (char)launchDueToFetchEvent;
//- (void)setLaunchDueToFetchEvent:(char)v1;
//- (id)customLaunchCommandMacroExpanded;
//- (char)enableMallocStackLoggingLiteByDefaultIfNecessary:(id)v1;
//- (void)modifyEnvironmentForMallocStackLogging:(id)v1;
//- (void)_setupRecordedFramesInEnvironmentVariables:(id)v1 runDestination:(id)v2;
//- (char)hasAppExtensionsInTargets;
//- (char)_isMetalRemoteDebuggingEnabledWithEnvironmentVariables:(id)v1;
//- (void)_addMetalValidationVariablesToEnvironment:(id)v1;
//- (char)_overrideParametersForMetalRemoteDebuggingWithEnvironmentVariables:(id)v1 outError:(id *)v2;
//- (void)_restoreLaunchStyleForMetalRemoteDebuggingWithEnvironmentVariables:(id)v1;
//- (id)_preferredBuildableForSchemeCommand:(id)v1 buildParameters:(id)v2;
//- (char)_tweakEnvironmentVariables:(id)v1 buildParameters:(id)v2 buildableProductDirectories:(id)v3 schemeCommand:(id)v4 schemeActionRecord:(id)v5 shouldSetupExtraDebuggingSupport:(char)v6 extensionInfos:(id)v7 outError:(id *)v8;
//- (void)_tweakCommandLineArgumentsBasedOnAnalysisToolServiceProvidedExecutable:(id)v1;
//- (void)_checkForAnalysisToolServiceProvidedExecutableToSet;
//- (id)_checkRunnablePathFromBuildParameters:(id)v1 schemeActionRecord:(id)v2 outError:(id *)v3;
//- (char)_checkRunDestination:(id *)v1 buildParameters:(id)v2 displayName:(id)v3 schemeActionRecord:(id)v4 outError:(id *)v5;
//- (id)runOperationForSchemeOperationParameters:(id)v1 buildOperation:(id)v2 buildParameters:(id)v3 buildableProductDirectories:(id)v4 schemeCommand:(id)v5 schemeActionRecord:(id)v6 outError:(id *)v7 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v8;
//- (void)_prepareForMessageTracer:(id)v1;
//- (char)_launchOptionIsSet:(unsigned long long)v1;
//- (void)_setLaunchOption:(unsigned long long)v1 enabled:(char)v2;
//- (unsigned long long)launchAutomaticallySubstyleForBuildableProduct:(id)v1;
//- (char)askForAppToLaunch;
//- (void)setAskForAppToLaunch:(char)v1;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setDebugDocumentVersioningFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setDebugXPCServicesFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableMallocStackLoggingLiteForXPCServicesFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setStopOnEveryThreadSanitizerIssueFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setStopOnEveryUBSanitizerIssueFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setStopOnEveryMainThreadCheckerIssueFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setCustomLaunchCommandFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setDebugServiceExtensionFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setDebugServiceExtensionContentsStringFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableGPUFrameCaptureModeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableGPUValidationModeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setEnableGPUShaderValidationModeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setAllowLocationSimulationFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setAllowDeviceSensorReplayDataFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setShowNonLocalizedStringsFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setSimulatorIPhoneDisplayFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setSimulatorIPadDisplayFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setInternalIOSSubstitutionAppFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setInternalIOSLaunchStyleFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setLaunchAutomaticallySubstyleFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setViewDebuggingEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setQueueDebuggingEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setMemoryGraphOnResourceExceptionFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setConsoleModeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setPlaceholderRenderingEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setGPUProfilerEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setAskForAppToLaunchFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (char)needsNewSchemeVersionForAppDataPackage;
//- (char)needsNewSchemeVersionForLocationSimulation;
//- (char)needsNewSchemeVersionForInternalIOSLaunchStyleAndOthers;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)addDeviceAppData:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addLocationScenarioReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addRoutingCoverageFileReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addStoreKitConfigurationFileReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)addDeviceSensorReplayFileReference:(id)v1 fromXMLUnarchiver:(id)v2;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDataMatrix : NSObject {
//    struct _IDEDataMatrixDescriptor * _descriptor;
//}
//@property (readonly,nonatomic) struct _IDEDataMatrixDescriptor * descriptor;
//@property (readonly) unsigned long long rowCount;
//+ (void)initialize;
//+ (id)allocWithZone:(struct _NSZone *)v1;
//- (id)initWithCapacity:(unsigned long long)v1 descriptor:(struct _IDEDataMatrixDescriptor *)v2;
//- (void)addSInt64Rows:(unsigned long long)v1 withBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)enumerateInt64Range:(struct _NSRange)v1 withBlock:(void (^ /* unknown block signature */)(void))v2;
//- (long long)SInt64AtRow:(unsigned long long)v1 column:(unsigned char)v2;
//- (void)executeRowOperation:(struct _IDEDataMatrixRowOp *)v1 overColumns:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDataMatrixSIn64 : IDEDataMatrix {
//    struct vector<long long, std::__1::allocator<long long> > * _columns;
//}
//- (id)initWithCapacity:(unsigned long long)v1 descriptor:(struct _IDEDataMatrixDescriptor *)v2;
//- (void)dealloc;
//- (void)enumerateInt64Range:(struct _NSRange)v1 withBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)addSInt64Rows:(unsigned long long)v1 withBlock:(void (^ /* unknown block signature */)(void))v2;
//- (long long)SInt64AtRow:(unsigned long long)v1 column:(unsigned char)v2;
//- (void)executeRowOperation:(struct _IDEDataMatrixRowOp *)v1 overColumns:(id)v2;
//- (unsigned long long)rowCount;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourcePackagePreflightedProduct : NSObject<NSCopying> {
//    NSString * _productName;
//    long long _productType;
//}
//@property (readonly) NSString * productName;
//@property (readonly) long long productType;
//+ (id)displayNameForProductType:(long long)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)initWithProductName:(id)v1 productType:(long long)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPerformanceSignpostEvent : NSObject<IDEPerformanceSignpostSerializable> {
//    NSString * _name;
//    NSDate * _timestamp;
//    NSDictionary * _userInfo;
//}
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSDate * timestamp;
//@property (readonly,copy) NSDictionary * userInfo;
//@property (readonly,copy) NSDictionary * serializedRepresentation;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)saveEvents:(id)v1 toPath:(id)v2 error:(id *)v3;
//+ (id)eventsLoadedFromPath:(id)v1 error:(id *)v2;
//+ (id)firstEventOfName:(id)v1 fromEvents:(id)v2;
//- (id)initWithName:(id)v1 timestamp:(id)v2 userInfo:(id)v3;
//- (id)initWithName:(id)v1 userInfo:(id)v2;
//- (id)initFromSerialized:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEEntityIdentifier : NSObject<NSCopying> {
//    unsigned long long _hashValue;
//    long long _sharedState;
//    NSString * _entityName;
//    NSString * _containerName;
//    long long _entityType;
//    NSString * _entityGUID;
//}
//@property (readonly,copy) NSString * entityName;
//@property (readonly,copy) NSString * containerName;
//@property (readonly) long long entityType;
//@property (readonly,copy) NSString * entityGUID;
//@property (readonly) long long sharedState;
//@property (readonly,copy) NSDictionary * dictionaryRepresentation;
//+ (id)entityIdentifierFromGUID:(id)v1 entityName:(id)v2 entityType:(long long)v3 containerName:(id)v4 isShared:(char)v5;
//+ (id)entityIdentifierFromGUID:(id)v1 entityName:(id)v2 entityType:(long long)v3 containerName:(id)v4;
//+ (id)entityIdentifierFromEntityName:(id)v1 entityType:(long long)v2 containerName:(id)v3 isShared:(char)v4;
//+ (id)entityIdentifierFromEntityName:(id)v1 entityType:(long long)v2 containerName:(id)v3;
//- (id)initWithGUID:(id)v1 entityName:(id)v2 entityType:(long long)v3 containerName:(id)v4 shared:(long long)v5;
//- (id)initWithDictionaryRepresentation:(id)v1 error:(id *)v2;
//- (char)isEqual:(id)v1;
//- (id)description;
//- (unsigned long long)hash;
//- (char)isSimilarToEntityIdentifier:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestActivitySummary : NSObject {
//    IDESchemeActionTestSummary * _test;
//    NSString * _title;
//    NSString * _activityType;
//    NSString * _attachmentsDirectory;
//    NSUUID * _uuid;
//    NSDate * _start;
//    NSDate * _finish;
//    NSArray * _attachments;
//    NSMutableArray * _subActivities;
//    id _urlRedirector;
//    NSMutableArray * _mutableFailureSummaryIDs;
//}
//@property (copy) NSArray * attachments;
//@property (copy) NSDate * start;
//@property (retain) NSMutableArray * mutableFailureSummaryIDs;
//@property (readonly,copy) NSString * title;
//@property (readonly,copy) NSString * activityType;
//@property (copy) NSString * attachmentsDirectory;
//@property (readonly,copy) NSUUID * uuid;
//@property (readonly,copy) NSDate * finish;
//@property IDESchemeActionTestSummary * test;
//@property (readonly,copy) NSArray * allAttachments;
//@property (readonly,copy) NSData * screenshotData;
//@property (readonly,copy) XCElementSnapshot * snapshot;
//@property (readonly,copy) NSData * diagnosticReportData;
//@property (readonly,copy) NSData * memoryGraphData;
//@property (readonly) NSDictionary * dictionaryRepresentation;
//@property (readonly,copy) NSMutableArray * subActivities;
//@property (readonly,copy) NSArray * subActivitiesSnapshot;
//@property (readonly,copy) NSString * screenshotFileName;
//@property (readonly,copy) NSString * snapshotFileName;
//@property (readonly,copy) NSString * diagnosticReportFileName;
//@property (readonly,copy) NSString * diagnosticReportFilePath;
//@property (readonly,copy) NSString * memoryGraphFileName;
//@property (readonly,copy) NSString * memoryGraphFilePath;
//@property (readonly,copy) NSArray * failureSummaryIDs;
//@property id urlRedirector;
//+ (id)summariesFromSummaries:(id)v1 withAttachmentsExtractedToDirectory:(id)v2;
//+ (char)_attachments:(id)v1 containAttachmentWithName:(id)v2;
//+ (void)loadLegacyAttachmentMetadataFromActivityRecord:(id)v1 outTitle:(id *)v2;
//+ (id)screenshotNameBasedOnUTI:(id)v1;
//+ (id)_convertedAttachmentsFromActivityRecord:(id)v1 attachmentsDirectory:(id)v2 outTitle:(id *)v3;
//+ (id)_legacyFileNameForAttachmentWithName:(id)v1 activityUUID:(id)v2;
//- (id)initWithActivityRecord:(id)v1 attachmentsDirectory:(id)v2;
//- (id)initWithTitle:(id)v1 activityType:(id)v2 uuid:(id)v3 start:(id)v4 finish:(id)v5 subactivities:(id)v6 attachments:(id)v7 failureSummaryIDs:(id)v8;
//- (id)initWithDictionaryRepresentation:(id)v1;
//- (void)loadAttachmentsFromDirectory:(id)v1;
//- (void)loadDiagnosticsFromFilePromise:(id)v1;
//- (void)addAttachment:(id)v1;
//- (void)updateFromActivityRecord:(id)v1;
//- (void)addSubActivity:(id)v1;
//- (char)matchesTestActivitySummary:(id)v1;
//- (id)_dataIfPresentForAttachmentName:(id)v1;
//- (id)_unarchiveIfPresentAttachmentWithName:(id)v1 expectedClassName:(id)v2;
//- (id)_fileNameForAttachmentName:(id)v1;
//- (void)pruneAttachmentsWithLifetimes:(id)v1 deletedAutomationScreenshots:(char *)v2 deletedUserAttachments:(char *)v3;
//- (char)hasAttachmentWithName:(id)v1;
//- (id)attachmentWithName:(id)v1;
//- (void)addFailureSummaryID:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEThread : NSObject<IDEDebugNavigableModel,DVTInvalidation> {
//    IDEThread * _leadingThread;
//    char _staleThreadDisplayName;
//    long long _lastCompressionValue;
//    long long _secondLastCompressionValue;
//    NSCache * _compressedStackFramesCache;
//    NSMutableArray * _stackFrames;
//    NSMutableArray * _delayedInvalidationChildren;
//    DVTDispatchLock * _delayedInvalidationChildrenLock;
//    char _autoRefreshStackFramesWhenPaused;
//    char _hasLatestStackFrames;
//    char _hasInitializedStackFrames;
//    char _recorded;
//    char _recordedForDisplayingStackFrames;
//    char _userSuspended;
//    char _specialRuntimeThread;
//    int _state;
//    int _stopReason;
//    int _breakpointStackSelectionBehavior;
//    NSString * _associatedProcessUUID;
//    NSString * _threadDisplayName;
//    IDEDebugProcess * _parentProcess;
//    NSNumber * _uniqueID;
//    NSString * _threadName;
//    IDEDebugQueue * _queue;
//    IDEThread * _recordedThread;
//    unsigned long long _recordedThreadDepth;
//    NSString * _lastReasonStopped;
//    IDERecordedThreadCollection * _recordedThreadCollection;
//    NSObject<DVTInvalidation><IDEDataValue> * _exceptionDataValue;
//    IDEIssue * _runtimeIssue;
//    NSString * _qualityOfServiceValue;
//}
//@property (nonatomic) unsigned long long recordedThreadDepth;
//@property (readonly,copy) NSMutableArray * mutableStackFrames;
//@property (retain,nonatomic) IDEDebugProcess * parentProcess;
//@property (readonly,nonatomic) NSNumber * uniqueID;
//@property (nonatomic) int state;
//@property (copy,nonatomic) NSString * threadName;
//@property (readonly,nonatomic) NSString * threadDisplayName;
//@property (nonatomic) int stopReason;
//@property (retain,nonatomic) IDEDebugQueue * queue;
//@property (nonatomic) char autoRefreshStackFramesWhenPaused;
//@property (copy,nonatomic) NSArray * stackFrames;
//@property (nonatomic) char hasLatestStackFrames;
//@property char hasInitializedStackFrames;
//@property (retain,nonatomic) IDEThread * recordedThread;
//@property (nonatomic,getter=isRecorded) char recorded;
//@property (nonatomic) char recordedForDisplayingStackFrames;
//@property (copy,nonatomic) NSString * lastReasonStopped;
//@property (nonatomic) char userSuspended;
//@property (retain,nonatomic) IDERecordedThreadCollection * recordedThreadCollection;
//@property (retain,nonatomic) NSObject<DVTInvalidation><IDEDataValue> * exceptionDataValue;
//@property (retain,nonatomic) IDEIssue * runtimeIssue;
//@property char specialRuntimeThread;
//@property (copy,nonatomic) NSString * qualityOfServiceValue;
//@property (nonatomic) int breakpointStackSelectionBehavior;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)displayNameForThreadName:(id)v1 threadID:(id)v2;
//+ (id)keyPathsForValuesAffectingThreadDisplayName;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//- (id)initWithParentProcess:(id)v1 uniqueID:(id)v2;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (char)_isStopped;
//- (char)_shouldSkipRecordedFrames;
//- (id)compressedStackFramesIncludingRecorded:(long long)v1;
//- (void)_resetCurrentStackFrameIfNecessary:(id)v1;
//- (void)_resetQueueStackFramesAndRecordedStates:(char)v1;
//- (void)willReuse:(char)v1;
//- (void)setPrimitiveQueue:(id)v1;
//- (id)leadingThread;
//- (void)setLeadingThread:(id)v1 depth:(unsigned long long)v2;
//- (void)_invalidateStackFrames:(id)v1;
//- (void)invalidateUnusedStackFramesAfterCallToSetStackFrames:(id)v1;
//- (void)refreshStackFrames;
//- (void)requestStackFrames:(unsigned long long)v1 handleOnMainQueue:(char)v2 resultHandler:(void (^ /* unknown block signature */)(void))v3;
//- (id)compressedStackFrames:(long long)v1;
//- (id)primitiveStackFrames;
//- (void)_inferState;
//- (void)_inferStateFromStackFrames:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEThreadStateInterpreter : NSObject
//+ (char)useThreadStateInterpreter;
//+ (void)updateStateOfThread:(id)v1 usingStackFrames:(id)v2;
//+ (char)_isThreadWaitingForSpinLock:(id)v1;
//+ (char)_isThreadWaitingForLock:(id)v1;
//+ (char)_isThreadInConditionalWait:(id)v1;
//+ (char)_doAnyOfTheFirst:(unsigned long long)v1 stackFrames:(id)v2 matchName:(id)v3;
//+ (char)_doesStackFrameAtIndex:(unsigned long long)v1 inStackFrames:(id)v2 matchName:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableStatusEvaluator : NSObject {
//    DVTLogAspect * _logAspect;
//}
//@property (readonly,nonatomic) DVTLogAspect * logAspect;
//- (id)initWithName:(id)v1 logAspect:(id)v2;
//- (id)evaluateStatusWithInputs:(id)v1;
//- (id)evaluateStatusWithInputs:(id)v1 iOSMacInputs:(id)v2;
//- (id)evaluationForInputs:(id)v1 configuration:(id)v2;
//- (long long)_signingStyleForProvisionableSnapshot:(id)v1 configuration:(id)v2;
//- (id)_provisioningInputsForEvaluationInputs:(id)v1 configuration:(id)v2 entitlements:(id)v3 error:(id *)v4;
//- (id)_localExecutionCodesignParametersForEvaluationInputs:(id)v1 configuration:(id)v2 error:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableStatusEvaluatorResult : NSObject {
//    NSString * _configuration;
//    IDEProvisionableStatusEvaluation * _evaluation;
//    IDEProvisionableStatusEvaluation * _iOSMacEvaluation;
//}
//@property (readonly,nonatomic) NSString * configuration;
//@property (readonly,nonatomic) IDEProvisionableStatusEvaluation * evaluation;
//@property (readonly,nonatomic) IDEProvisionableStatusEvaluation * iOSMacEvaluation;
//+ (id)resultWithConfiguration:(id)v1 evaluation:(id)v2 iOSMacEvaluation:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableStatusEvaluation : NSObject {
//    long long _signingStyle;
//    NSArray * _errors;
//    IDEProfileQualification * _profileQualification;
//    NSObject<IDEProvisioningBasicProfile> * _profileForDisplay;
//    IDEProvisionableEntitlements * _entitlements;
//    IDEProvisioningCommandInputs * _provisioningCommandInputs;
//    NSString * _configuration;
//    IDECodesignParameterSnapshot * _codesignParameterSnapshot;
//    IDEProvisioningRepairInfo * _repairInfo;
//    DVTLogAspect * _logAspect;
//    IDEProvisionableStatusEvalutorInputs * _evaluationInputs;
//    IDEProvisionableEntitlements * _rawEntitlements;
//    NSArray * _rawErrors;
//}
//@property (readonly,nonatomic) char needsRepair;
//@property (readonly) IDEProvisionableStatusEvalutorInputs * evaluationInputs;
//@property (readonly) IDEProvisionableEntitlements * rawEntitlements;
//@property (readonly) NSArray * rawErrors;
//@property (readonly,nonatomic) IDEProvisionableSnapshot * provisionableSnapshot;
//@property (readonly,nonatomic) NSString * configuration;
//@property (readonly,nonatomic) IDECodesignParameterSnapshot * codesignParameterSnapshot;
//@property (readonly,nonatomic) NSArray * errors;
//@property (readonly,nonatomic) IDEProfileQualification * profileQualification;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicProfile> * profileForDisplay;
//@property (readonly,nonatomic) long long signingStyle;
//@property (readonly,nonatomic) IDEProvisionableEntitlements * entitlements;
//@property (readonly,nonatomic) NSString * appIdentifierPrefix;
//@property (readonly,nonatomic) NSString * teamIdentifierPrefix;
//@property (readonly,nonatomic) IDEProvisioningCommandInputs * provisioningCommandInputs;
//@property (readonly,nonatomic) IDEProvisioningRepairInfo * repairInfo;
//@property (readonly) DVTLogAspect * logAspect;
//+ (id)keyPathsForValuesAffectingNeedsRepair;
//+ (id)mostRecentManualProfilesFromProfiles:(id)v1 bundleIdentifier:(id)v2 team:(id)v3 platform:(id)v4 profileType:(id)v5 logAspect:(id)v6 errorProvider:(id)v7;
//- (id)initWithEvaluationInputs:(id)v1 configuration:(id)v2 codesignParameterSnapshot:(id)v3 entitlements:(id)v4 repairInfo:(id)v5 logAspect:(id)v6 errors:(id)v7;
//- (id)description;
//- (id)evaluationByInjectingError:(id)v1;
//- (id)qualificationForProfile:(id)v1 requiredTeam:(id)v2 requireSuccessfulCertificateResolution:(char)v3 error:(id *)v4;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2;
//- (long long)_provisioningStyle;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2 requiredTeam:(id)v3 requiredProfileType:(id)v4;
//- (id)mergedEntitlementsWithWarnings:(id *)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableStatusEvalutorInputs : NSObject {
//    IDEProvisionableSnapshot * _provisionableSnapshot;
//    NSSet * _provisioningProfiles;
//    NSSet * _signingCertificates;
//    _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * _destinationRequirement;
//    long long _automaticLocationStyle;
//    NSObject<IDEProvisioningErrorProvider> * _errorProvider;
//}
//@property (retain,nonatomic) IDEProvisionableSnapshot * provisionableSnapshot;
//@property (readonly,nonatomic) NSSet * provisioningProfiles;
//@property (readonly,nonatomic) NSSet * signingCertificates;
//@property (readonly,nonatomic) _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * destinationRequirement;
//@property (readonly,nonatomic) long long automaticLocationStyle;
//@property (readonly,nonatomic) NSObject<IDEProvisioningErrorProvider> * errorProvider;
//+ (id)evaluatorInputsWithProvisionableSnapshot:(id)v1 provisioningProfiles:(id)v2 signingCertificates:(id)v3 destinationRequirement:(id)v4 automaticLocationStyle:(long long)v5 errorProvider:(id)v6;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisionableRepairArbiter : NSObject
//- (id)_onlyEntitlementQualificationIssueInErrors:(id)v1;
//- (id)repairInfoForEvaluatorInputs:(id)v1 provisioningInputs:(id)v2 insigatingErrors:(id)v3 outError:(id *)v4;
//@end
//
//
///*****************************************************************/
//
//@interface PotentialScheme : NSObject {
//    NSObject<IDEBuildable> * _mainBuildable;
//    NSString * _name;
//    NSMutableArray * _buildables;
//}
//@property (retain) NSObject<IDEBuildable> * mainBuildable;
//@property (retain) NSString * name;
//@property (retain) NSMutableArray * buildables;
//- (id)initWithBuildable:(id)v1 name:(id)v2;
//- (id)initWithBuildable:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContextAutocreation : NSObject
//+ (id)_applicationBuildablesInWorkspace:(id)v1;
//+ (id)_applicationsInWorkspace:(id)v1 thatDependOnBuildable:(id)v2;
//+ (id)_configFromArray:(id)v1 matchingPrefix:(id)v2 preferringConfig:(id)v3;
//+ (id)_expandedPlatformForBuildableProduct:(id)v1;
//+ (char)_isWatchAppExtension:(id)v1;
//+ (id)_newSchemeSpecifierForName:(id)v1;
//+ (void)_setDefaultConfigurationsInScheme:(id)v1 forBuildable:(id)v2;
//+ (void)_setDefaultBuildActionForScheme:(id)v1 forBuildable:(id)v2 inWorkspace:(id)v3;
//+ (void)_setDefaultLaunchActionForScheme:(id)v1 forBuildable:(id)v2 inWorkspace:(id)v3;
//+ (void)_addEnvEntriesInScheme:(id)v1 forSettings:(id)v2;
//+ (void)_setDefaultProfileActionForScheme:(id)v1 forBuildable:(id)v2 inWorkspace:(id)v3;
//+ (char)_shouldAutocreateSchemesForBuildableProduct:(id)v1;
//+ (id)buildablesNotPartOfExistingContextAmongBuildables:(id)v1 inWorkspace:(id)v2;
//+ (id)candidateBuildablesForcedAutocreate:(char)v1 inWorkspace:(id)v2;
//+ (char)isAutocreationSuppressedForBuildable:(id)v1 inWorkspace:(id)v2;
//+ (id)logAspect;
//+ (void)addBuildable:(id)v1 toScheme:(id)v2;
//+ (id)addTestSchemeActionsFromAddingBlueprint:(char)v1 withBuildablesToCreateContextsFor:(id)v2 inWorkspace:(id)v3;
//+ (id)addTestSchemeActionsFromAddingBlueprint:(char)v1 withBuildablesToCreateContextsFor:(id)v2 inWorkspace:(id)v3 forScheme:(id)v4;
//+ (long long)schemeTypeForName:(id *)v1;
//+ (id)potentiallyAutocreatedSchemeByName:(id)v1 inWorkspace:(id)v2 fromAddingBlueprint:(char)v3;
//+ (id)autocreateSchemeWithName:(id)v1 inWorkspace:(id)v2;
//+ (id)autocreateSchemeWithName:(id)v1 inWorkspace:(id)v2 fromAddingBlueprint:(char)v3;
//+ (id)buildablesToAutocreateSchemesForcedAutocreate:(char)v1 inWorkspace:(id)v2;
//+ (id)createSchemeForBuildable:(id)v1 withName:(id)v2 transient:(char)v3 inWorkspace:(id)v4 orderHint:(long long)v5;
//+ (id)createSchemeForBuildable:(id)v1 withName:(id)v2 transient:(char)v3 inWorkspace:(id)v4;
//+ (id)finishAutocreateSchemesInWorkspace:(id)v1 forcingAutocreate:(char)v2 fromAddingBlueprint:(char)v3 withBuildablesToCreateContextsFor:(id)v4;
//+ (char)isWatchApp:(id)v1;
//+ (id)orderBuildables:(id)v1 inWorkspace:(id)v2;
//+ (id)parentBuildableForBuildable:(id)v1 inWorkspace:(id)v2;
//+ (id)possibleSchemeContentsForAutocreationInWorkspace:(id)v1;
//+ (id)possibleSchemeContentsForAutocreationInWorkspace:(id)v1 fromAddingBlueprint:(char)v2 withBuildablesToCreateContextsFor:(id)v3;
//+ (id)possibleSchemeNamesForAutocreationInWorkspace:(id)v1;
//+ (id)platformProductTypeOfBuildable:(id)v1;
//+ (id)_watchExtensionProductForBuildableProduct:(id)v1;
//+ (char)_hasSwiftUINotificationController:(id)v1;
//+ (char)_hasComplication:(id)v1;
//+ (char)_isAppExtension:(id)v1;
//+ (char)_isAppClip:(id)v1;
//+ (id)_watchKitStoryboardFilesInWorkspace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningBasicProfile : NSObject<IDEProvisioningBasicProfile> {
//    IDEProfileSpecifier * _specifier;
//    DVTProvisioningProfile * _provisioningProfile;
//}
//@property (readonly) DVTProvisioningProfile * provisioningProfile;
//@property (readonly) NSString * UUID;
//@property (readonly) NSString * automaticIdentitySelector;
//@property (readonly) NSString * name;
//@property (readonly) char existsOnDisk;
//@property (readonly) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly) IDEProfileSpecifier * specifier;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)basicProfileWithDVTProvisioningProfile:(id)v1;
//+ (id)basicProfileWithDVTProvisioningProfile:(id)v1 profileSpecifier:(id)v2;
//+ (id)basicMissingProfileWithSpecifier:(id)v1;
//+ (id)locateBasicProfileInProfiles:(id)v1 matchingSpecifier:(id)v2 bundleID:(id)v3 platform:(id)v4 provisioningStyle:(long long)v5;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogSection : NSObject<IDEBuildNoticeLogSection,IDELogStoreManageable,IDELogStoreObservable,NSCopying> {
//    IDEActivityLogSectionRecorder * _recorder;
//    IDETypeIdentifier * _domainType;
//    NSString * _title;
//    double _timeStartedRecording;
//    double _timeStoppedRecording;
//    NSMutableArray * _subsections;
//    NSMutableString * _text;
//    NSMutableArray * _messages;
//    id _representedObject;
//    NSString * _subtitle;
//    DVTDocumentLocation * _location;
//    NSString * _signature;
//    NSString * _commandDetailDesc;
//    unsigned short _totalTestFailureCount;
//    unsigned short _totalErrorCount;
//    unsigned short _totalWarningCount;
//    unsigned short _totalAnalyzerWarningCount;
//    unsigned short _totalAnalyzerResultCount;
//    unsigned short _sectionType;
//    unsigned short _sectionAuthority;
//    unsigned short _resultCode;
//    char _wasCancelled;
//    char _isQuiet;
//    char _wasFetchedFromCache;
//    char _hasAddedIssueMessage;
//    NSString * _uniqueIdentifier;
//    NSString * _localizedResultString;
//    struct os_unfair_lock_s _lock;
//    NSMapTable * _customDataObjectsByClass;
//    char _hideTimingInformation;
//    DVTFilePath * _filePath;
//    NSData * _xcbuildSignature;
//}
//@property (readonly) char isRecording;
//@property (readonly) char isSealed;
//@property (readonly,copy) NSArray * subsections;
//@property (readonly) NSArray * messages;
//@property (readonly,copy) NSString * signature;
//@property (readonly) IDENoticeBlueprintID * buildNoticeLogSectionBlueprintID;
//@property (readonly,copy) NSString * uniqueIdentifier;
//@property (readonly,copy) NSString * signature;
//@property (readonly,copy) NSString * title;
//@property (readonly) IDETypeIdentifier * domainType;
//@property (readonly) double timeStartedRecording;
//@property (readonly) double timeStoppedRecording;
//@property (readonly) char isRecording;
//@property (readonly) NSObject<IDELogStoreObservable> * primaryObservable;
//@property (readonly) NSObject<IDELogStoreObservable> * auxiliaryObservable;
//@property (readonly) char hasTests;
//@property (readonly) char hasCoverageData;
//@property (readonly) char hasTimelineData;
//@property (readonly) char hasPrimaryLog;
//@property (readonly) char hasAuxiliaryLog;
//@property (readonly) IDEActivityLogSection * primaryLogSectionIfInMemory;
//@property (readonly,copy) NSString * defaultFileName;
//@property (copy) DVTFilePath * filePath;
//@property (readonly,copy) DVTFilePromise * coverageReportFilePromise;
//@property (readonly,copy) DVTFilePromise * coverageArchiveFilePromise;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) char isRecording;
//@property (readonly) unsigned long long totalNumberOfTestFailures;
//@property (readonly) unsigned long long totalNumberOfErrors;
//@property (readonly) unsigned long long totalNumberOfWarnings;
//@property (readonly) unsigned long long totalNumberOfAnalyzerResults;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property unsigned short sectionAuthority;
//@property (copy) NSData * xcbuildSignature;
//@property (readonly) long long result;
//@property (readonly) long long sectionType;
//@property (readonly) IDETypeIdentifier * domainType;
//@property (readonly,copy) NSString * title;
//@property (readonly,copy) NSString * subtitle;
//@property (readonly) double timeStartedRecording;
//@property (readonly) double timeStoppedRecording;
//@property (readonly,copy) NSArray * subsections;
//@property (readonly) NSString * text;
//@property (readonly) NSArray * messages;
//@property (readonly) long long resultCode;
//@property (readonly) char wasCancelled;
//@property (readonly) char isRecording;
//@property (readonly) IDEActivityLogSectionRecorder * recorder;
//@property (readonly) id representedObject;
//@property (readonly) char isQuiet;
//@property char wasFetchedFromCache;
//@property (readonly) unsigned long long totalNumberOfTestFailures;
//@property (readonly) unsigned long long totalNumberOfErrors;
//@property (readonly) unsigned long long totalNumberOfWarnings;
//@property (readonly) unsigned long long totalNumberOfAnalyzerWarnings;
//@property (readonly) unsigned long long totalNumberOfAnalyzerResults;
//@property (readonly) DVTDocumentLocation * location;
//@property (copy) NSString * signature;
//@property (readonly) NSString * commandDetailDescription;
//@property char hasAddedIssueMessage;
//@property (readonly) NSURL * logSectionURL;
//@property (copy) NSString * localizedResultString;
//@property (readonly,copy) NSString * uniqueIdentifier;
//@property char hideTimingInformation;
//@property (copy) DVTFilePath * filePath;
//+ (id)makeInstanceWithContentsOfFile:(id)v1 error:(id *)v2;
//+ (void)initialize;
//+ (Class)logRecorderClass;
//+ (id)defaultLogSectionDomainType;
//+ (id)defaultMainLogDomainType;
//+ (id)URLWithUUID:(id)v1;
//+ (id)UUIDWithURL:(id)v1;
//+ (id)mainLogWithDomainType:(id)v1 title:(id)v2;
//+ (id)majorGroupWithDomainType:(id)v1 title:(id)v2 representedObject:(id)v3 subtitle:(id)v4;
//+ (id)commandInvocationWithDomainType:(id)v1 title:(id)v2 detailDescription:(id)v3 location:(id)v4;
//+ (id)commandInvocationWithDomainType:(id)v1 title:(id)v2 detailDescription:(id)v3 filePath:(id)v4;
//+ (unsigned long long)serializationFormatVersion;
//+ (unsigned long long)serializationFormatCompatibilityVersion;
//+ (id)sectionByDeserializingData:(id)v1 error:(id *)v2;
//+ (id)sectionWithContentsOfFile:(id)v1 error:(id *)v2;
//- (id)primaryLogSectionWithError:(id *)v1;
//- (id)auxiliaryLogSectionWithError:(id *)v1;
//- (id)primaryLogItems;
//- (id)auxiliaryLogItems;
//- (id)logSectionForItem:(id)v1 error:(id *)v2;
//- (void)addCompletionBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeSectionsLifetimes:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeAddedSections:(void (^ /* unknown block signature */)(void))v1;
//- (id)observeSealedSections:(void (^ /* unknown block signature */)(void))v1;
//- (id)initWithSectionType:(long long)v1 domainType:(id)v2 title:(id)v3 subtitle:(id)v4 location:(id)v5 signature:(id)v6 timeStartedRecording:(double)v7 timeStoppedRecording:(double)v8 subsections:(id)v9 text:(id)v10 messages:(id)v11 wasCancelled:(char)v12 wasFetchedFromCache:(char)v13 commandDetailDescription:(id)v14 resultCode:(long long)v15 uniqueIdentifier:(id)v16 localizedResultString:(id)v17 xcbuildSignature:(id)v18;
//- (id)initWithSectionType:(long long)v1 domainType:(id)v2 title:(id)v3 subtitle:(id)v4 location:(id)v5;
//- (id)initWithSectionType:(long long)v1 domainType:(id)v2 title:(id)v3 subtitle:(id)v4 location:(id)v5 startTime:(id)v6;
//- (id)initWithSectionType:(long long)v1 domainType:(id)v2 title:(id)v3 location:(id)v4;
//- (id)initMainLogWithDomainType:(id)v1 title:(id)v2;
//- (id)initMajorGroupWithDomainType:(id)v1 title:(id)v2 representedObject:(id)v3 subtitle:(id)v4;
//- (id)initCommandInvocationWithDomainType:(id)v1 title:(id)v2 detailDescription:(id)v3 location:(id)v4;
//- (id)initCommandInvocationWithDomainType:(id)v1 title:(id)v2 detailDescription:(id)v3 filePath:(id)v4;
//- (id)initWithSectionType:(long long)v1 domainType:(id)v2 title:(id)v3;
//- (id)init;
//- (id)initWithTitle:(id)v1;
//- (void)dealloc;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)logRecorder:(id)v1 addSubsection:(id)v2;
//- (void)logRecorder:(id)v1 appendText:(id)v2;
//- (void)logRecorder:(id)v1 addMessage:(id)v2;
//- (void)logRecorder:(id)v1 setWasCancelled:(char)v2;
//- (void)checkMessageCounts;
//- (void)logRecorder:(id)v1 didStopRecordingWithResultCode:(long long)v2 wasCancelled:(char)v3 duration:(double)v4;
//- (void)logRecorder:(id)v1 adjustMessageCountsWithTestFailureDelta:(long long)v2 errorCountDelta:(long long)v3 warningCountDelta:(long long)v4 analyzerWarningDelta:(long long)v5 analyzerResultDelta:(long long)v6;
//- (void)logRecorder:(id)v1 setIsQuiet:(char)v2;
//- (void)logRecorder:(id)v1 setWasFetchedFromCache:(char)v2;
//- (void)logRecorder:(id)v1 setCommandDetailDescription:(id)v2;
//- (void)logRecorder:(id)v1 setTitle:(id)v2;
//- (id)emittedOutputText;
//- (void)registerCustomDataObject:(id)v1 forClass:(Class)v2;
//- (id)customDataObjectForClass:(Class)v1;
//- (void)_enumerateSubsectionsRecursivelyUsingPreorderBlock:(void (^ /* unknown block signature */)(void))v1 returningFilteredSections:(id)v2;
//- (id)enumerateSubsectionsRecursivelyUsingPreorderBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)enumerateMessagesUsingBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)addObserverUsingBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)removeObserver:(id)v1;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (id)serializedData;
//- (char)writeToFile:(id)v1 error:(id *)v2;
//- (id)messageOrSectionAtIndexPath:(id)v1;
//- (id)indexPathForMessageOrSection:(id)v1 messageOrSectionEqualityTest:(void (^ /* unknown block signature */)(void))v2;
//- (id)indexPathForMessageOrSection:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDERunnable : NSObject {
//    DVTFileDataType * _dataType;
//    NSError * _dataTypeDetectionError;
//    NSString * _bundleIdentifier;
//    char _usesSwift;
//    char _checkedForSwift;
//    char _isPlaceholder;
//    int _runnableDebuggingMode;
//    IDEScheme * _scheme;
//    DVTFilePath * _remotePath;
//}
//@property (retain) IDEScheme * scheme;
//@property (readonly,copy) NSString * displayName;
//@property (copy,nonatomic) NSString * bundleIdentifier;
//@property (readonly,copy) NSString * toolTip;
//@property (readonly) NSObject<IDEBuildableProduct> * buildableProduct;
//@property (readonly) IDESchemeBuildableReference * buildableReference;
//@property (readonly) char hasRunnablePath;
//@property (readonly) char requiresPairedProxyDevice;
//@property (readonly) char runsDirectlyOnPairedProxyDevice;
//@property (readonly,copy) DVTFilePath * remotePath;
//@property (nonatomic) char isPlaceholder;
//@property (readonly) char usesSwift;
//@property int runnableDebuggingMode;
//+ (id)runnableForBuildProduct:(id)v1 inScheme:(id)v2;
//+ (id)_productTypeForBuildableProduct:(id)v1 scheme:(id)v2;
//- (id)pathToRunnableForBuildParameters:(id)v1;
//- (id)runnableUTIType:(id *)v1;
//- (void)resolveBuildableFromImport;
//- (int)runnableType;
//- (void)setBundleIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (char)_checkForSwiftInBuildable;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningChooseAndRevokeCertificateUserAction : IDEProvisioningUserAction {
//    NSArray * _certificates;
//    DVTPortalCertificateType * _type;
//}
//@property (readonly,nonatomic) DVTPortalCertificateType * type;
//@property (readonly,nonatomic) NSArray * certificates;
//+ (id)chooseAndRevokeCertificateUserActionWithCertificates:(id)v1 type:(id)v2 context:(id)v3;
//- (id)initWithCertificates:(id)v1 type:(id)v2 context:(id)v3;
//- (char)preflightWithError:(id *)v1;
//- (void)userDidAuthorizeForCertificate:(id)v1;
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//- (id)executionMessage;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEStructureEditingHelper : NSObject
//+ (id)distinctFilePathInParent:(id)v1 withProposedName:(id)v2 andExtension:(id)v3;
//+ (id)distinctFilePathForNewUntitledFolderIn:(id)v1;
//+ (id)distinctFilePathForNewFileIn:(id)v1 withName:(id)v2 andExtension:(id)v3;
//+ (id)distinctFilePathForCopyOf:(id)v1;
//+ (void)computeLocationsForSourceURLs:(id)v1 intoDstFolderPath:(id)v2 srcPaths:(id)v3 dstPaths:(id)v4 addPaths:(id)v5 allURLs:(id)v6 shouldCheckAncestry:(char)v7;
//+ (id)urlsFromContainerItems:(id)v1;
//+ (id)_distinctFolderRootPathsInWorkspace:(id)v1;
//+ (char)_divideUpURLs:(id)v1 inWorkspace:(id)v2 toCopy:(id)v3 orMove:(id)v4 intentToCopy:(char)v5 intentToMove:(char)v6;
//+ (void)_ensureDestinationFolderPathExists:(id)v1;
//+ (void)_performHoldingLock:(id)v1 errors:(id)v2 operation:(void (^ /* unknown block signature */)(void))v3;
//+ (char)moveOrCopyContainerItems:(id)v1 andURLs:(id)v2 intoFolderPath:(id)v3 workspace:(id)v4 intentToCopy:(char)v5 intentToMove:(char)v6 addedPaths:(id *)v7;
//@end
//
//
///*****************************************************************/
//
//@interface IDERuntimeIssueProvider : IDEIssueProvider {
//    NSMapTable * _issuesForGroupingObjectTable;
//    NSMutableSet * _retiredRuntimeGroupingObjects;
//    NSMapTable * _tokenForLaunchSessionTable;
//}
//@property (readonly) NSString * issueTypeIdentifier;
//+ (int)providerType;
//- (id)initWithIssueManager:(id)v1 extension:(id)v2;
//- (id)issueProviderContext;
//- (id)_categoryFromRuntimeIssueTypeIdentifier:(id)v1;
//- (void)_handleLaunchSessionsChanged:(id)v1;
//- (unsigned long long)breakpointType;
//- (char)canCreateBreakpoint;
//- (id)createBreakpointIfNecessary:(id)v1 ignoreExisting:(char)v2;
//- (id)displayNameForIssueTypeIdentifier:(id)v1;
//- (id)ideModelObjectTypeIdentifier;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCreateDestRootStep : IDEDistributionProcessingStep
//- (id)name;
//- (bool)runWithError:(id *)v1;
//- (id)requiredInputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionODR : IDEDistributionOption
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningManager : NSObject<IDEProvisioningMechanicDelegate,DVTInvalidation,IDESigningEditorProvisionableManagerProvider,IDEProvisioningMechanicContextProvider> {
//    DVTDispatchLock * _onDemandEvaluationFuturesLock;
//    NSMutableSet * _onDemandEvaluationFutures;
//    char _finishedInitialProvisionableLoading;
//    IDEProvisioningManagerContext * _context;
//    IDEProvisioningLedger * _ledger;
//    NSMapTable * _provisionablesToManagers;
//    DVTLogAspect * _logAspect;
//    DVTPerformanceMetric * _loadingMetric;
//    DVTDispatchLock * _repairLock;
//    NSMapTable * _repairablesToObservers;
//    NSMapTable * _observersToRepairables;
//    NSMapTable * _repairableToRepairState;
//    IDEProvisioningUserAction * _delegateApprovedUserAction;
//    NSObject<IDEProvisionableProvider> * _provisionableProvider;
//    NSObject<IDEProvisioningManagerDelegate> * _delegate;
//    NSObject<OS_dispatch_queue> * _delegateCallbackQueue;
//}
//@property (retain,nonatomic) IDEProvisioningManagerContext * context;
//@property (retain,nonatomic) NSMapTable * provisionablesToManagers;
//@property (retain,nonatomic) DVTLogAspect * logAspect;
//@property (nonatomic) char finishedInitialProvisionableLoading;
//@property (retain,nonatomic) DVTPerformanceMetric * loadingMetric;
//@property (readonly,nonatomic) DVTDispatchLock * repairLock;
//@property (readonly,nonatomic) NSMapTable * repairablesToObservers;
//@property (readonly,nonatomic) NSMapTable * observersToRepairables;
//@property (readonly,nonatomic) NSMapTable * repairableToRepairState;
//@property (retain,nonatomic) IDEProvisioningUserAction * delegateApprovedUserAction;
//@property (retain,nonatomic) NSObject<IDEProvisionableProvider> * provisionableProvider;
//@property (nonatomic) NSObject<IDEProvisioningManagerDelegate> * delegate;
//@property (retain,nonatomic) NSObject<OS_dispatch_queue> * delegateCallbackQueue;
//@property (readonly,nonatomic) NSSet * provisionableDestinations;
//@property (readonly,nonatomic) IDEProvisioningLedger * ledger;
//@property (readonly,nonatomic) NSSet * provisionableManagers;
//@property (readonly,nonatomic) IDEProvisioningTeamManager * teamManager;
//@property (readonly,nonatomic) DVTProvisioningProfileManager * profileManager;
//@property (readonly,nonatomic) DVTSigningCertificateManager * certificateManager;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,getter=isFinishedLoading) char finishedLoading;
//+ (void)initialize;
//+ (char)supportsInvalidationPrevention;
//+ (id)keyPathsForValuesAffectingFinishedLoading;
//+ (char)supportCommandLineRepairs;
//+ (void)setSupportCommandLineRepairs:(char)v1;
//+ (char)automaticallyRegisterDevices;
//+ (void)setAutomaticallyRegisterDevices:(char)v1;
//+ (id)requiredProvisionableDestinations;
//+ (void)setRequiredProvisionableDestinations:(id)v1;
//+ (id)keyPathsForValuesAffectingProvisionableDestinations;
//- (id)init;
//- (id)_newMechanic;
//- (id)_defaultContext;
//- (id)initWithProvisionableProvider:(id)v1;
//- (id)initWithProvisionableProvider:(id)v1 provisioningContext:(id)v2;
//- (id)initWithProvisionableProvider:(id)v1 context:(id)v2;
//- (void)_commonInit;
//- (void)primitiveInvalidate;
//- (id)mechanic;
//- (id)managerForProvisionable:(id)v1;
//- (void)_setUpObservations;
//- (void)_finishedLoading;
//- (void)_provisionablesChanged;
//- (id)teamsForScheme:(id)v1 commands:(id)v2 buildConfiguration:(id)v3;
//- (void)waitUntilFinished;
//- (id)evaluateProvisioningForProvisionable:(id)v1 overrides:(id)v2 destinationRequirement:(id)v3 isXBS:(char)v4;
//- (void)setRepairables:(id)v1 forObserver:(id)v2;
//- (void)setRepairables:(id)v1 forObserver:(id)v2 repairStateCallback:(void (^ /* unknown block signature */)(void))v3;
//- (void)setRepairables:(id)v1 forObserver:(id)v2 retryExistingRepairs:(char)v3 repairStateCallback:(void (^ /* unknown block signature */)(void))v4;
//- (void)_addObserver:(id)v1 forRepairable:(id)v2;
//- (void)_removeObserver:(id)v1 forRepairable:(id)v2;
//- (id)_allRepairables;
//- (id)_repairablesForObserver:(id)v1;
//- (id)_observersForRepairable:(id)v1;
//- (void)_performStateUpdateOnMainThreadForRepairable:(id)v1 updateBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)repairPendingForRepairable:(id)v1;
//- (void)repairDidBeginForRepairable:(id)v1;
//- (void)repairForRepairable:(id)v1 isExecutingStep:(id)v2;
//- (void)repairDidFinishForRepairable:(id)v1;
//- (void)repairForRepairable:(id)v1 didFailWithError:(id)v2;
//- (char)_doesDelegateAuthorizeOrPendUserAction:(id)v1 repairable:(id)v2 observers:(id)v3;
//- (void)repairForRepairable:(id)v1 requiresUserAction:(id)v2;
//- (void)repairUserActionDidBeginForRepairable:(id)v1;
//- (void)_userActionFinished:(id)v1;
//- (void)repairUserAction:(id)v1 didFinishForRepairable:(id)v2;
//- (void)repairForRepairable:(id)v1 userAction:(id)v2 didFailWithError:(id)v3;
//- (void)setDelegate:(id)v1 callbackQueue:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRepairStateInfo : NSObject {
//    NSObject<IDERepairable> * _repairable;
//    long long _state;
//    DVTLogAspect * _logAspect;
//    NSString * _stepDescription;
//    IDEProvisioningUserAction * _userAction;
//    NSError * _error;
//}
//@property (readonly) NSObject<IDERepairable> * repairable;
//@property (readonly) long long state;
//@property (readonly) DVTLogAspect * logAspect;
//@property (readonly) NSString * stepDescription;
//@property (readonly) IDEProvisioningUserAction * userAction;
//@property (readonly) NSError * error;
//+ (id)repairStateWithRepairable:(id)v1 logAspect:(id)v2;
//- (id)description;
//- (void)setPending;
//- (void)setExecutingWithStepDescription:(id)v1;
//- (void)setWaitingForUserAction:(id)v1;
//- (void)setExecutingUserAction;
//- (void)clearUserAction;
//- (void)setSucceeded;
//- (void)setFailedWithError:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEResultBundleCommandLineVerb : IDECommandLineVerb
//+ (id)stringForSchemeActionInvocationRecordStatus:(long long)v1;
//+ (id)stringForSimpleOperationStatus:(long long)v1;
//+ (void)emitJSONForPropertyList:(id)v1 toFileHandle:(id)v2;
//+ (id)simpleSummaryForSchemeActionsInvocationRecord:(id)v1;
//+ (id)arrayOfDictionaryRepresentationsForIssueSummaries:(id)v1;
//+ (id)issueSummariesForSchemeActionsInvocationRecord:(id)v1;
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProductExtensionCategory : NSObject {
//    NSString * _userDescription;
//    long long _sortOrder;
//    _TtC13IDEFoundation29IDEProductExtensionIdentifier * _identifier;
//    NSString * _imageName;
//}
//@property (readonly) NSString * userDescription;
//@property (readonly) long long sortOrder;
//@property (readonly) _TtC13IDEFoundation29IDEProductExtensionIdentifier * identifier;
//@property (readonly) NSString * imageName;
//+ (id)productExtensions;
//+ (id)identifierToProductExtensionCategory;
//+ (id)productExtensionCategoryForExtensionIdentifier:(id)v1;
//+ (id)productExtensionCategoryForAppClip;
//- (id)initWithIdentifier:(id)v1 userDescription:(id)v2 sortOrder:(long long)v3 imageName:(id)v4 isAppClip:(char)v5;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEPathRunnable : IDERunnable<DVTXMLUnarchiving> {
//    IDESchemeBuildableReference * _buildableReference;
//    NSObject<IDEBuildable> * _buildableProduct;
//    DVTFilePath * _filePath;
//}
//@property (retain) IDESchemeBuildableReference * buildableReference;
//@property (retain) NSObject<IDEBuildable> * buildableProduct;
//@property (readonly,copy) DVTFilePath * filePath;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)_askOnLaunchPlaceHolderFilePath;
//+ (id)askOnLaunchPlaceHolderForBuildable:(id)v1 scheme:(id)v2;
//+ (id)_automaticPlaceHolderFilePath;
//+ (id)automaticPlaceHolderForBuildable:(id)v1 scheme:(id)v2;
//+ (id)keyPathsForValuesAffectingHasRunnablePath;
//- (id)initWithFilePath:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (id)displayName;
//- (id)bundleIdentifier;
//- (id)toolTip;
//- (id)pathToRunnableForBuildParameters:(id)v1;
//- (char)hasRunnablePath;
//- (id)runnableUTIType:(id *)v1;
//- (int)runnableType;
//- (char)isPlaceholder;
//- (void)setFilePathFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeOperationParameters : NSObject {
//    char _collectBuildTimeStatistics;
//    char _collectTimelineMetrics;
//    long long _schemeTask;
//    long long _buildCommand;
//    IDEExecutionEnvironment * _executionEnvironment;
//    IDERunDestination * _runDestination;
//    IDESchemeCommand * _schemeCommand;
//    NSString * _commandName;
//    IDESchemeActionsInvocationRecord * _invocationRecord;
//    DVTFilePath * _filePathForSingleFileAction;
//    NSObject<IDETestRunDestinationPool> * _testingRunDestinationPool;
//    NSArray * _overridingTestingSpecifierGroups;
//    NSArray * _overridingTestPlanReferences;
//    NSArray * _onlyTestConfigurations;
//    NSArray * _skipTestConfigurations;
//    NSArray * _additionalLaunchCommandLineArguments;
//    NSDictionary * _overridingLaunchEnvironmentVariables;
//    NSNumber * _parallelTestingEnabledOverride;
//    NSNumber * _parallelTestingWorkerCountOverride;
//    NSNumber * _parallelTestingMaximumWorkerCount;
//    NSNumber * _testTimeoutsEnabled;
//    NSNumber * _defaultTestExecutionTimeAllowance;
//    NSNumber * _maximumTestExecutionTimeAllowance;
//    NSString * _contextString;
//    NSObject<IDEBuildOperationClientInfo> * _buildOperationClientInfo;
//    NSNumber * _traceCollectionEnabled;
//    NSDictionary * _performanceTestConfiguration;
//}
//@property long long schemeTask;
//@property long long buildCommand;
//@property (retain) IDEExecutionEnvironment * executionEnvironment;
//@property (retain) IDERunDestination * runDestination;
//@property (retain) IDESchemeCommand * schemeCommand;
//@property (copy) NSString * commandName;
//@property (retain) IDESchemeActionsInvocationRecord * invocationRecord;
//@property (copy) DVTFilePath * filePathForSingleFileAction;
//@property (retain) NSObject<IDETestRunDestinationPool> * testingRunDestinationPool;
//@property (copy) NSArray * overridingTestingSpecifierGroups;
//@property (copy) NSArray * overridingTestPlanReferences;
//@property (copy) NSArray * onlyTestConfigurations;
//@property (copy) NSArray * skipTestConfigurations;
//@property (copy) NSArray * additionalLaunchCommandLineArguments;
//@property (copy) NSDictionary * overridingLaunchEnvironmentVariables;
//@property (copy) NSNumber * parallelTestingEnabledOverride;
//@property (copy) NSNumber * parallelTestingWorkerCountOverride;
//@property (copy) NSNumber * parallelTestingMaximumWorkerCount;
//@property (copy) NSNumber * testTimeoutsEnabled;
//@property (copy) NSNumber * defaultTestExecutionTimeAllowance;
//@property (copy) NSNumber * maximumTestExecutionTimeAllowance;
//@property char collectBuildTimeStatistics;
//@property (copy) NSString * contextString;
//@property char collectTimelineMetrics;
//@property (retain) NSObject<IDEBuildOperationClientInfo> * buildOperationClientInfo;
//@property (retain) NSNumber * traceCollectionEnabled;
//@property (retain) NSDictionary * performanceTestConfiguration;
//+ (id)operationParametersWithSchemeTask:(long long)v1 buildCommand:(long long)v2 executionEnvironment:(id)v3 runDestination:(id)v4 schemeCommand:(id)v5 commandName:(id)v6 invocationRecord:(id)v7;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
@interface IDEExecutionRunnableTracker : IDEExecutionTracker {
    IDERunOperationWorker * _worker;
    char _finishedRunning;
}
- (id)init;
- (id)initWithWorker:(id)v1;
- (char)isFinished;
- (void)cancel;
- (void)runningDidFinishWithError:(id)v1;
- (void)executionWantsHold:(char)v1 withError:(id)v2;
- (id)notFinishedReasonWithDepth:(unsigned long long)v1;
@end
//
//
///*****************************************************************/
//
//@interface IDEDataProvider_procinfo : IDEDataProvider {
//    NSObject<OS_dispatch_queue> * _capture_lock;
//    struct unordered_map<int, (anonymous namespace)::ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, (anonymous namespace)::ProcessInfo> > > _processInfoByPID;
//}
//+ (id)sharedDataProvider;
//- (id)init;
//- (id)supportedAttributes;
//- (char)captureAttributes:(id)v1 toDictionary:(id)v2 forPID:(id)v3;
//- (id)captureAttributes:(id)v1 forPIDs:(id)v2;
//- (void).cxx_destruct;
//- (id).cxx_construct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractOperatorOperandPredicate : IDEBatchFindFilePathPredicate {
//    long long _operatorValue;
//    NSString * _operand;
//}
//@property (readonly) long long operatorValue;
//@property (readonly) NSString * operand;
//+ (long long)operatorFromString:(id)v1;
//+ (id)operatorToString:(long long)v1;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)initWithOperator:(long long)v1 operand:(id)v2;
//- (unsigned long long)hash;
//- (char)isEqualToFilePathPredicateWithIdenticalClass:(id)v1;
//- (char)isWorkspaceSpecific;
//- (id)propertyListRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAutoFillCredentialProviderItemModel : IDEProjectItemModel {
//    NSObject<IDEFlightChecking> * _entitlementsFlightCheck;
//    NSObject<IDEFlightChecking> * _linkedFrameworksFlightCheck;
//}
//+ (id)coalescableReadOnlyKeyPaths;
//- (id)initWithCapabilitiesContext:(id)v1 item:(id)v2;
//- (id)linkedFrameworksFlightCheck;
//- (id)entitlementsFlightCheck;
//- (id)flightChecks;
//- (char)isEnabledUsingEducatedGuess;
//- (id)coalescableWriteableKeyPathToDataSource;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestOperationStateMachine : NSObject {
//    char _testPlanDidStartExecuting;
//    char _testRunnerHasFinishedExecutingTests;
//    void (^ /* unknown block signature */)(void) _logger;
//    NSObject<IDETestOperationStateMachineDelegate> * _delegate;
//    double _finalizationTimeout;
//    double _bootstrappingTimeout;
//    unsigned long long _state;
//    NSString * _candidateDescription;
//    NSString * _crashReportDescription;
//    NSObject<OS_dispatch_queue> * _queue;
//    NSObject<OS_dispatch_queue> * _callbackQueue;
//}
//@property (readonly) NSObject<IDETestOperationStateMachineDelegate> * delegate;
//@property (readonly) double finalizationTimeout;
//@property (readonly) double bootstrappingTimeout;
//@property (nonatomic) unsigned long long state;
//@property (copy,nonatomic) NSString * candidateDescription;
//@property (copy,nonatomic) NSString * crashReportDescription;
//@property (readonly,nonatomic) NSObject<OS_dispatch_queue> * queue;
//@property (readonly) NSObject<OS_dispatch_queue> * callbackQueue;
//@property char testPlanDidStartExecuting;
//@property char testRunnerHasFinishedExecutingTests;
//@property (copy) void (^ /* unknown block signature */)(void) logger;
//+ (void)initialize;
//- (id)initWithDelegate:(id)v1 finalizationTimeout:(double)v2 bootstrappingTimeout:(double)v3 callbackQueue:(id)v4 logger:(void (^ /* unknown block signature */)(void))v5;
//- (id)initWithDelegate:(id)v1 callbackQueue:(id)v2 logger:(void (^ /* unknown block signature */)(void))v3;
//- (id)_runnerExitDescriptionWithMessage:(id)v1;
//- (void)testRunnerAcquiredPID;
//- (void)_on_queue_testRunnerAcquiredPID;
//- (void)startedExecutingTests;
//- (void)_on_queue_startedExecutingTests;
//- (void)startedInteractivelyDebugging;
//- (void)_on_queue_launchSessionCrashedWithSignal:(id)v1;
//- (void)_on_queue_launchSessionExitedWithCode:(int)v1;
//- (void)launchSessionExpiredWithExitCode:(id)v1 terminatingSignal:(id)v2 hasCrashed:(char)v3;
//- (void)launchSessionConnectionLost;
//- (void)testmanagerdConnectionLost;
//- (void)_on_queue_handleFinalizationEventWithDescription:(id)v1;
//- (void)willReceiveCrashReportForTestRunnerProcess;
//- (void)_on_queue_willReceiveCrashReportForTestRunnerProcess;
//- (void)receivedCrashReportForTestRunnerProcessWithDescription:(id)v1;
//- (void)_on_queue_receivedCrashReportForTestRunnerProcessWithDescription:(id)v1;
//- (void)testExceededTimeout;
//- (void)_on_queue_testExceededTimeout;
//- (void)log:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProduct : NSObject<DVTServicesJSONSerialization,DVTInvalidation,NSCopying> {
//    NSString * _adamId;
//    NSArray * _archives;
//    IDEProductIdentifier * _identifier;
//    NSArray * _productVersions;
//    IDEProductCoordinator * _coordinator;
//}
//@property (nonatomic) IDEProductCoordinator * coordinator;
//@property (retain) NSArray * productVersions;
//@property (readonly) IDEProductIdentifier * identifier;
//@property (readonly) NSString * name;
//@property (readonly) NSURL * imageURL;
//@property (readonly) NSURL * cacheImageURL;
//@property (readonly) NSArray * flatProductVersions;
//@property (readonly) NSArray * productVersionsAvailableForSale;
//@property (readonly) IDEProductVersion * mostRecentVersion;
//@property (readonly) IDEProductVersion * mostRecentVersionAvailableForSale;
//@property (readonly) NSArray * archives;
//@property (readonly) IDEProductCategory * productCategory;
//@property (readonly) NSString * adamId;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (id)productByMergingProducts:(id)v1 coordinator:(id)v2;
//+ (id)keyPathsForValuesAffectingMostRecentVersion;
//+ (id)keyPathsForValuesAffectingName;
//+ (id)keyPathsForValuesAffectingImageURL;
//+ (id)keyPathsForValuesAffectingCacheImageURL;
//+ (id)keyPathsForValuesAffectingProductCategory;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (id)objectFromFilePath:(id)v1 withCoordinator:(id)v2 error:(id *)v3;
//- (id)init;
//- (id)_initWithCoordinator:(id)v1 productIdentifier:(id)v2 productVersions:(id)v3;
//- (void)_buildFlatproductVersionsWithVersionedProduct:(id)v1 flatArray:(id)v2;
//- (void)primitiveInvalidate;
//- (id)JSONRepresentation;
//- (char)writeToFilePath:(id)v1 error:(id *)v2;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEARCConversionTarget : IDEMigrationTarget {
//    char _fileOveridesARCSetting;
//    NSString * _displayName;
//}
//@property (readonly,nonatomic) NSString * blueprintProviderName;
//@property (readonly,copy) NSString * displayName;
//@property (readonly) char canConvertToUseARC;
//@property (readonly) char buildsWithARC;
//@property char convertsToARC;
//@property (readonly) char fileOveridesARCSetting;
//- (id)initWithBlueprint:(id)v1 migrationContext:(id)v2;
//- (id)warningMessage;
//- (char)shouldMigrate;
//- (void)enableOverridingBuildSettings;
//- (void)disableOverridingBuildSettings;
//- (void)updateBuildSettings;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEARCConversionBuildFile : NSObject {
//    id _iconImage;
//    IDEFileReference * _fileReference;
//    IDEARCConversionTarget * _target;
//    NSString * _warningMessage;
//    char _enablesARC;
//}
//@property (readonly,copy) IDEFileReference * fileReference;
//@property (readonly) IDEARCConversionTarget * target;
//@property char enablesARC;
//@property (readonly,copy) NSString * displayName;
//@property (readonly,copy) NSString * warningMessage;
//- (id)compilerFlagsForBlueprint:(id)v1;
//- (id)initWithFileReference:(id)v1 target:(id)v2;
//- (void)_setEnablesARC:(char)v1 overridingOnly:(char)v2;
//- (void)enableOverridingBuildSettings;
//- (void)disableOverridingBuildSettings;
//- (void)updateBuildSettings;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningRevokeCertificatesUserAction : IDEProvisioningUserAction {
//    char _forPreExistingMachineSpecificCertificate;
//    NSArray * _certificates;
//}
//@property (readonly,nonatomic) NSArray * certificates;
//@property (nonatomic,getter=isForPreExistingMachineSpecificCertificate) char forPreExistingMachineSpecificCertificate;
//+ (id)revokeCertificatesUserActionWithCertificates:(id)v1 context:(id)v2;
//- (id)initWithCertificates:(id)v1 context:(id)v2;
//- (id)userActionTitle;
//- (id)userActionMessage;
//- (id)userActionName;
//- (id)executionMessage;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogSourceControlMessage : IDEActivityLogMessage
//@property (readonly) DVTSourceControlRemoteRepository * remoteRepository;
//@property (readonly) NSError * underlyingError;
//- (id)initWithSeverity:(unsigned long long)v1 title:(id)v2 sourceControlSystemIdentifier:(id)v3 repositoryURL:(id)v4 scmErrorCode:(long long)v5 scmErrorSSHFingerprint:(id)v6;
//- (id)initWithSeverity:(unsigned long long)v1 title:(id)v2 remoteRepository:(id)v3 underlyingError:(id)v4;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFileReferenceCore : IDEContainerItemCore<IDEFileReferenceCore> {
//    DVTFileDataType * _assignedDataType;
//}
//@property (copy) DVTFileDataType * assignedDataType;
//@property (retain) NSObject<IDEGroupCore> * parentGroup;
//@property (copy) NSString * path;
//@property (readonly) NSObject<IDEContainerCore> * parentContainer;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDeviceInstallLogProvider : IDELogProvider
//+ (id)keyPathsForValuesAffectingLogRecords;
//- (id)logRecords;
//- (id)ideModelObjectTypeIdentifier;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindIndexTable : NSObject {
//    struct anonymous_type_90 * _entries;
//    long long _capacity;
//    long long _count;
//}
//@property (readonly) long long count;
//- (void)dealloc;
//- (long long)addEntry:(id)v1 reference:(long long)v2 flags:(unsigned char)v3;
//- (id)entryAtIndex:(long long)v1 reference:(long long *)v2 flags:(char *)v3;
//- (long long)referenceAtIndex:(long long)v1;
//- (void)setFlags:(unsigned char)v1 forIndex:(long long)v2;
//- (void)enumerateEntries:(void (^ /* unknown block signature */)(void))v1;
//- (long long)entriesWithFlags;
//- (long long)entriesWithoutFlags;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindScopeChooserCompoundScope : IDEBatchFindNamedScope {
//    NSArray * _namedScopes;
//    NSArray * _workspaceLocationPredicates;
//}
//@property (readonly) NSArray * namedScopes;
//@property (readonly) NSArray * workspaceLocationPredicates;
//+ (id)propertyListIdentifier;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//- (id)initWithNamedScopes:(id)v1 workspaceLocationPredicates:(id)v2;
//- (unsigned long long)hash;
//- (char)isEqualToNamedScopeWithIdenticalClass:(id)v1;
//- (id)name;
//- (id)source;
//- (id)predicate;
//- (id)propertyListRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionODRStep : IDEDistributionItemProcessingStep
//+ (bool)runsPerThinningVariant;
//- (id)name;
//- (bool)processAppAtPath:(id)v1 destinationPath:(id)v2 isAppStoreBound:(char)v3 baseURL:(id)v4 assetPackManifestPath:(id *)v5 includeODRAssetPackInBundle:(char)v6 error:(id *)v7;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySymbolResultGenerator : IDEOpenQuicklyPrototypeBasedResultBlockGenerator
//- (id)resultForPrototype:(id)v1 candidate:(struct DVTFuzzyMatchCandidate *)v2 query:(id)v3 fromIndex:(long long)v4;
//- (char)supportsLineNumberMatches;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceFileBuildInfo : NSObject {
//    char _isForSourceGeneration;
//    NSString * _outputFile;
//    NSString * _languageName;
//    NSArray * _toolchainIdents;
//    NSArray * _swiftCommandLine;
//    NSString * _swiftBuiltProductsDir;
//    NSString * _swiftModuleName;
//    NSArray * _clangCommandLine;
//    NSString * _clangBuiltProductsDir;
//    NSString * _clangPrefixFilePath;
//    NSString * _clangPCHFilePath;
//    NSString * _clangPCHHashCriteria;
//    NSArray * _clangPCHCommandLine;
//    NSArray * _coremlcGeneratedFilePaths;
//    NSString * _coremlcLanguageToGenerate;
//    NSString * _coremlcNotice;
//    NSString * _coremlcError;
//    NSArray * _rcProjectGeneratedFilePaths;
//    NSString * _rcProjectLanguageToGenerate;
//    NSString * _rcProjectNotice;
//    NSString * _rcProjectError;
//    NSArray * _ibGeneratedFilePaths;
//    NSArray * _intentsGeneratedFilePaths;
//    NSArray * _metalCommandLine;
//    NSString * _metalBuiltProductsDir;
//}
//@property (readonly) NSArray * metalCommandLine;
//@property (readonly) NSString * metalBuiltProductsDir;
//@property (readonly) NSString * outputFile;
//@property (readonly) NSString * languageName;
//@property (readonly) NSArray * toolchainIdents;
//@property (readonly) NSArray * swiftCommandLine;
//@property (readonly) NSString * swiftBuiltProductsDir;
//@property (readonly) NSString * swiftModuleName;
//@property (readonly) NSArray * clangCommandLine;
//@property (readonly) NSString * clangBuiltProductsDir;
//@property (readonly) NSString * clangPrefixFilePath;
//@property (readonly) NSString * clangPCHFilePath;
//@property (readonly) NSString * clangPCHHashCriteria;
//@property (readonly) NSArray * clangPCHCommandLine;
//@property (readonly) char isForSourceGeneration;
//@property (readonly) NSArray * coremlcGeneratedFilePaths;
//@property (readonly) NSString * coremlcLanguageToGenerate;
//@property (readonly) NSString * coremlcNotice;
//@property (readonly) NSString * coremlcError;
//@property (readonly) NSArray * rcProjectGeneratedFilePaths;
//@property (readonly) NSString * rcProjectLanguageToGenerate;
//@property (readonly) NSString * rcProjectNotice;
//@property (readonly) NSString * rcProjectError;
//@property (readonly) NSArray * ibGeneratedFilePaths;
//@property (readonly) NSArray * intentsGeneratedFilePaths;
//+ (id)sourceFileBuildInfoFromLegacyASTBuildInfoDictionaryRepresentation:(id)v1;
//- (id)initFromLegacyASTBuildInfoDictionaryRepresentation:(id)v1;
//- (id)legacyDictionaryASTBuildInfoRepresentation;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProjectItemModelFlightCheckContext : NSObject<IDEFlightCheckingContext> {
//    NSObject<IDEPortalInfoDelegate> * _portalInfoDelegate;
//    NSObject<IDEProjectItem> * _item;
//}
//@property (nonatomic) NSObject<IDEPortalInfoDelegate> * portalInfoDelegate;
//@property (nonatomic) NSObject<IDEProjectItem> * item;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithPortalInfoDelegate:(id)v1 item:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionSymbolsStep : IDEDistributionItemProcessingStep
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)shouldProcessSymbolsForItem:(id)v1 archive:(id)v2 error:(id *)v3;
//- (bool)shouldSkip;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionValidationStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)archiveSubmissionInfoWithIssues:(id)v1;
//- (void)validate;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitSymbolOccurrence : NSObject<IDEIndexSymbolOccurrence> {
//    long long _role;
//    DVTDocumentLocation * _location;
//    long long _lineNumber;
//    long long _column;
//    DVTFilePath * _file;
//    NSURL * _moduleURL;
//    IDESourceKitSymbol * _correspondingSymbol;
//    IDESourceKitSymbol * _containingSymbol;
//    IDESourceKitWorkspace * _index;
//}
//@property (readonly,nonatomic) long long lineNumber;
//@property (readonly,nonatomic) long long column;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (void)describeFields:(void (^ /* unknown block signature */)(void))v1;
//- (id)initWithCorrespondingSymbol:(id)v1 role:(long long)v2 lineNumber:(long long)v3 column:(long long)v4 file:(id)v5 location:(id)v6 moduleURL:(id)v7 forSourceKitWorkspace:(id)v8;
//- (id)correspondingSymbol;
//- (void)setOccurrence:(id)v1;
//- (id)containingSymbol;
//- (void)setContainingSymbol:(id)v1;
//- (id)occurrence;
//- (id)index;
//- (char)isKindOfClass:(Class)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECommandLineBuildLogRecorder : IDEActivityLogSectionRecorder {
//    IDEActivityLogSection * _activeTargetSection;
//    NSMapTable * _activityLogSectionsToConsoleOutputGroups;
//    NSMutableArray * _activeSections;
//    NSMapTable * _bufferedTextPerLogSection;
//}
//@property (retain) NSMutableArray * activeSections;
//@property (readonly) IDEActivityLogSection * effectiveSection;
//@property (retain) NSMapTable * bufferedTextPerLogSection;
//+ (void)initialize;
//- (id)initWithLogSection:(id)v1;
//- (void)stopRecordingWithInfo:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (id)section;
//- (void)_emitString:(id)v1 withNewlineIfNeeded:(char)v2 verbosityLevel:(long long)v3;
//- (char)_isTransparentLogSection:(id)v1;
//- (void)_cleanupClosedSection:(id)v1 inSupersection:(id)v2;
//- (void)_emitSection:(id)v1 inSupersection:(id)v2;
//- (void)_noteLogSection:(id)v1 didAddSubsection:(id)v2;
//- (void)noteDescendantLogSection:(id)v1 didAddSubsection:(id)v2;
//- (void)noteDescendantLogSection:(id)v1 didAppendText:(id)v2;
//- (char)_findNewEffectiveSectionFromSubsectionsOfSection:(id)v1 startingAtIndex:(unsigned long long)v2;
//- (char)_findNewEffectiveSectionFromSubsectionsOfSection:(id)v1;
//- (void)noteDescendantLogSectionDidClose:(id)v1 inSupersection:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySDKSnapshot : NSObject {
//    DVTFilePath * _basePath;
//    NSMutableArray * _filePathArrays;
//    NSMutableArray * _candidateBlocks;
//    NSMutableArray * _privatePathsIndexSets;
//    NSMutableArray * _consumers;
//    NSObject<OS_dispatch_queue> * _notificationQueue;
//    char _complete;
//}
//+ (id)explorationQueue;
//+ (id)synchronizationQueue;
//+ (void)collectFilePathsInSearchPath:(id)v1 withConsumer:(void (^ /* unknown block signature */)(void))v2;
//+ (char)loadBasePathFromCache:(id)v1 withProgressHandler:(void (^ /* unknown block signature */)(void))v2;
//+ (void)saveCacheForBasePath:(id)v1 withFilePaths:(id)v2 fileNameCandidateBlocks:(id)v3 andPrivateFilePathIndexSets:(id)v4;
//+ (void)exploreBasePath:(id)v1 withProgressHandler:(void (^ /* unknown block signature */)(void))v2;
//+ (void)accumulateIsPrivateIndexes:(id)v1 toTrackAccumulatedFilePaths:(id)v2 isTransitioningToPrivate:(char)v3 during:(void (^ /* unknown block signature */)(void))v4;
//+ (void)exploreURL:(id)v1 accumulatedFilePaths:(id)v2 accumulatedIsPrivateIndexes:(id)v3 isPrivate:(char)v4;
//- (id)initWithFilePath:(id)v1;
//- (void)beginIndexing;
//- (void)addConsumer:(void (^ /* unknown block signature */)(void))v1;
//- (void)didDiscoverFilePaths:(id)v1 withCandidates:(id)v2 privateFilePathsIndexSet:(id)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFrameworkCore : IDEContainerCore<IDEFrameworkCore>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDebugQueue : NSObject<IDEDebugNavigableModel,DVTInvalidation> {
//    NSString * _type;
//    char _displayNameComputed;
//    NSMutableArray * _delayedInvalidationChildren;
//    char _toBeInvalidated;
//    NSString * _displayName;
//    IDEDebugProcess * _parentProcess;
//    NSString * _name;
//    NSArray * _threads;
//    NSArray * _pendingBlocksThreads;
//    IDEThread * _recordedThread;
//}
//@property (retain,nonatomic) IDEThread * recordedThread;
//@property (readonly,nonatomic) IDEDebugProcess * parentProcess;
//@property (copy,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSString * displayName;
//@property (readonly,nonatomic) unsigned long long numberOfPendingBlocks;
//@property (copy,nonatomic) NSArray * threads;
//@property (copy,nonatomic) NSArray * pendingBlocksThreads;
//@property (readonly,nonatomic,getter=isRecorded) char recorded;
//@property char toBeInvalidated;
//@property (readonly,copy) NSString * associatedProcessUUID;
//@property (readonly) IDELaunchSession * launchSession;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (char)_queueNameBelongsToConcurrentQueues:(id)v1;
//+ (id)keyPathsForValuesAffectingRecorded;
//+ (id)keyPathsForValuesAffectingDisplayName;
//- (id)initWithParentProcess:(id)v1 name:(id)v2 type:(id)v3 recordedThread:(id)v4;
//- (char)isEqual:(id)v1;
//- (void)setPrimitiveThreads:(id)v1;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionStripSwiftSymbols : IDEDistributionOption
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//+ (char)isApplicableForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)initWithIdentifier:(id)v1 context:(id)v2;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestingSchemeActionRecordMessageTracerStats : NSObject {
//    char _deviceIsWireless;
//    char _debuggerEnabled;
//    char _codeCoverageEnabled;
//    char _atLeastOneBundleWasParallelized;
//    char _randomizationEnabledForAtLeastOneBundle;
//    char _includesPerformanceTests;
//    char _bootstrappingFailed;
//    float _unitVsUITestRatio;
//    float _screenshotAttachmentRatio;
//    NSString * _initiationEvent;
//    NSString * _platformName;
//    NSString * _activeSanitizers;
//    double _bootstrappingTimeOverhead;
//    unsigned long long _attachmentCount;
//    unsigned long long _totalAttachmentSize;
//    unsigned long long _testCount;
//}
//@property (readonly,copy) NSString * initiationEvent;
//@property (readonly,copy) NSString * platformName;
//@property (readonly) char deviceIsWireless;
//@property (readonly) char debuggerEnabled;
//@property (readonly) char codeCoverageEnabled;
//@property (readonly,copy) NSString * activeSanitizers;
//@property (readonly) char atLeastOneBundleWasParallelized;
//@property (readonly) char randomizationEnabledForAtLeastOneBundle;
//@property (readonly) float unitVsUITestRatio;
//@property (readonly) char includesPerformanceTests;
//@property (readonly) char bootstrappingFailed;
//@property (readonly) double bootstrappingTimeOverhead;
//@property (readonly) unsigned long long attachmentCount;
//@property (readonly) float screenshotAttachmentRatio;
//@property (readonly) unsigned long long totalAttachmentSize;
//@property (readonly) unsigned long long testCount;
//- (id)initWithSchemeActionRecord:(id)v1;
//- (void)_calculateAttachmentMetricsForSchemeActionRecord:(id)v1;
//- (double)_bootstrappingTimeOverheadForSchemeActionRecord:(id)v1;
//- (char)_bootstrappingFailedForAtLeastOneBundleForSchemeActionRecord:(id)v1;
//- (id)_activeSanitizersForSchemeActionRecord:(id)v1;
//- (char)_atLeastOneBundleWasParallelizedForSchemeActionRecord:(id)v1;
//- (char)_randomizationEnabledForAtLeastOneBundleForSchemeActionRecord:(id)v1;
//- (void)_visitTestsInSchemeActionRecord:(id)v1 usingBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)_visitTestsInTestSummaryObject:(id)v1 containingTestableSummary:(id)v2 usingBlock:(void (^ /* unknown block signature */)(void))v3;
//- (double)_totalTestExecutionTimeForSchemeActionRecord:(id)v1;
//- (void)reportToMessageTracer;
//- (void)reportGeneralStats;
//- (void)reportInitiationEvent;
//- (void)reportBootstrappingOverhead;
//- (void)reportAttachmentStats;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExtendedPlatformInfo : NSObject {
//    NSDictionary * _productTypeIdentifiersToInterfaceBuilderDocumentUTIs;
//    NSDictionary * _sdkVariantNamesToBaseEntitlements;
//    char _supportsDeviceSelection;
//    char _wantsIntegrityCheckForApplicationCategory;
//    char _wantsHiDPIArtworkTargetUpgrade;
//    char _canBeJetsamedDuringGPUTracing;
//    char _tryOtherArchWhenDesignatedArchFails;
//    char _requiresGameCenterDeviceCompatibilityInfoPlistEntry;
//    char _onlySupportsAppStoreDeployment;
//    char _wantsMapsRoutingOptions;
//    char _supportsAppThinning;
//    char _supportsLaunchScreenXibs;
//    char _supportsCloudDocuments;
//    char _appStoreArchivesRequirePreciseSizeEstimate;
//    char _distributionShouldCopySwiftSupport;
//    char _distributionShouldCopyWatchKitSupport;
//    char _wantsAppStoreSubmissionConfigurationSupport;
//    char _allowsRelaxationOfStrictBitcodeAndPlatformChecks;
//    char _swinfoSupportsUncompressedPackage;
//    char _supportsUIRecording;
//    char _requiresSharedFrameworksInExtraTestingFrameworkSearchPaths;
//    char _requiresPlatformFrameworksInExtraTestingFrameworkSearchPaths;
//    char _requiresPlatformLibrariesInExtraTestingLibrarySearchPaths;
//    NSString * _appStoreSubmissionConfigurationBitCodeDefaultSupportLevel;
//    NSString * _platformIdentifier;
//    NSString * _bundleFormatApplicationPathFormatString;
//    NSString * _embeddedProvisioningProfileName;
//    NSString * _deploymentTargetSettingName;
//    NSString * _deploymentTargetClangFlagName;
//    NSString * _deploymentTargetClangEnvName;
//    NSString * _deploymentTargetLdFlagName;
//    NSString * _deploymentTargetLdEnvName;
//    NSString * _swiftTargetPrefix;
//    NSString * _minimumOSForSwiftInTheOS;
//    NSString * _appStoreNameTitleCase;
//    NSString * _appStoreConnectNameTitleCase;
//    NSArray * _hiDPIArtworkTargetUpgradeProductTypesToExclude;
//    NSString * _debuggingPlatformName;
//    NSString * _gaugeCPUMeterScale;
//    NSString * _sdkName;
//    NSString * _internalSDKName;
//    NSString * _addressSanitizerLibraryName;
//    NSString * _threadSanitizerLibraryName;
//    NSString * _UBSanitizerLibraryName;
//    NSString * _appStoreSubmissionConfigurationResponseIdentifier;
//    NSString * _appStoreSubmissionConfigurationCompiledCodeDefaultSupportLevel;
//    NSString * _appStoreSubmissionConfigurationOnDemandResourcesDefaultSupportLevel;
//    NSString * _swinfoPlatformArgument;
//    NSString * _minimumOSForUITesting;
//    Class _testingUIRecorderClass;
//}
//@property (readonly,copy) NSString * platformIdentifier;
//@property (readonly,copy) NSString * bundleFormatApplicationPathFormatString;
//@property (readonly,copy) NSString * embeddedProvisioningProfileName;
//@property (readonly) char supportsDeviceSelection;
//@property (readonly,copy) NSString * deploymentTargetSettingName;
//@property (readonly,copy) NSString * deploymentTargetClangFlagName;
//@property (readonly,copy) NSString * deploymentTargetClangEnvName;
//@property (readonly,copy) NSString * deploymentTargetLdFlagName;
//@property (readonly,copy) NSString * deploymentTargetLdEnvName;
//@property (readonly,copy) NSString * deploymentTargetSettingHumanReadableNameTitleCase;
//@property (readonly,copy) NSString * deploymentTargetSettingHumanReadableNameSentenceCase;
//@property (readonly,copy) NSString * swiftTargetPrefix;
//@property (readonly,copy) NSString * minimumOSForSwiftInTheOS;
//@property (readonly) char wantsIntegrityCheckForApplicationCategory;
//@property (readonly,copy) NSString * appStoreNameTitleCase;
//@property (readonly,copy) NSString * appStoreConnectNameTitleCase;
//@property (readonly) char wantsHiDPIArtworkTargetUpgrade;
//@property (readonly,copy) NSArray * hiDPIArtworkTargetUpgradeProductTypesToExclude;
//@property (readonly,copy) NSString * debuggingPlatformName;
//@property (readonly,copy) NSString * gaugeCPUMeterScale;
//@property (readonly) char canBeJetsamedDuringGPUTracing;
//@property (readonly) char tryOtherArchWhenDesignatedArchFails;
//@property (readonly) char requiresGameCenterDeviceCompatibilityInfoPlistEntry;
//@property (readonly,copy) NSString * sdkName;
//@property (readonly,copy) NSString * internalSDKName;
//@property (readonly) char onlySupportsAppStoreDeployment;
//@property (readonly) char wantsMapsRoutingOptions;
//@property (readonly) char supportsAppThinning;
//@property (readonly) NSString * addressSanitizerLibraryName;
//@property (readonly) NSString * threadSanitizerLibraryName;
//@property (readonly) NSString * UBSanitizerLibraryName;
//@property (readonly) char supportsLaunchScreenXibs;
//@property (readonly) char supportsCloudDocuments;
//@property (readonly) char appStoreArchivesRequirePreciseSizeEstimate;
//@property (readonly) char distributionShouldCopySwiftSupport;
//@property (readonly) char distributionShouldCopyWatchKitSupport;
//@property (readonly) char wantsAppStoreSubmissionConfigurationSupport;
//@property (readonly) NSString * appStoreSubmissionConfigurationResponseIdentifier;
//@property (readonly) NSString * appStoreSubmissionConfigurationBitCodeDefaultSupportLevel;
//@property (readonly) NSString * appStoreSubmissionConfigurationCompiledCodeDefaultSupportLevel;
//@property (readonly) NSString * appStoreSubmissionConfigurationOnDemandResourcesDefaultSupportLevel;
//@property (readonly) char allowsRelaxationOfStrictBitcodeAndPlatformChecks;
//@property (readonly) NSString * swinfoPlatformArgument;
//@property (readonly) char swinfoSupportsUncompressedPackage;
//@property (readonly,copy) NSString * minimumOSForUITesting;
//@property (readonly) char supportsUIRecording;
//@property (readonly) Class testingUIRecorderClass;
//@property (readonly) char requiresSharedFrameworksInExtraTestingFrameworkSearchPaths;
//@property (readonly) char requiresPlatformFrameworksInExtraTestingFrameworkSearchPaths;
//@property (readonly) char requiresPlatformLibrariesInExtraTestingLibrarySearchPaths;
//+ (id)extendedPlatformInfoForPlatformIdentifier:(id)v1;
//+ (void)_initializePlatformInfo:(id)v1 fromExtension:(id)v2;
//+ (id)_baseEntitlementsWithFileName:(id)v1 bundle:(id)v2 platformIdentifier:(id)v3;
//- (id)baseEntitlementsForSDKVariant:(id)v1;
//- (id)supportedInterfaceBuilderDocumentUTIsForProductType:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProcessingPipeline : NSObject {
//    char _cancelled;
//    NSArray * _pipelineSteps;
//    IDEDistributionProcessingStep * _currentStep;
//    IDEDistributionProcessingPipelineContext * _context;
//}
//@property (retain) IDEDistributionProcessingStep * currentStep;
//@property (retain) IDEDistributionProcessingPipelineContext * context;
//@property char cancelled;
//@property (readonly) NSArray * pipelineSteps;
//+ (void)initialize;
//+ (id)pipelineWithContext:(id)v1;
//+ (id)pipelineWithAppContext:(id)v1;
//+ (id)pipelineWithInAppPurchaseContext:(id)v1;
//- (id)initWithPipelineSteps:(id)v1 context:(id)v2;
//- (id)init;
//- (void)cancel;
//- (bool)process:(id *)v1;
//- (void)_reportDistributionUsageWithElapsedTime:(double)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProcessingPipelineContext : IDEDistributionContext {
//    DVTFilePath * _destinationRoot;
//    Class _packagingStep;
//    NSDictionary * _onDemandResourcesAssetPacksOwningBundleForCopy;
//    NSDictionary * _onDemandResourcesAssetPacksZippedPaths;
//    DVTFilePath * _symbolsPath;
//    NSDictionary * _thinningDestinationPathMap;
//    NSDictionary * _destinationPathMap;
//    NSNumber * _dryRun;
//    NSDictionary * _pipelineOutputs;
//    IDEDistributionItem * _activeDistributionItem;
//    IDEDistributionCoalescedThinningVariantAbstractClass * _activeCoalescedThinningVariant;
//    NSNumber * _thinningVariantIndex;
//    DVTFilePath * _appStorePackageOutputPath;
//    DVTFilePath * _developerIDPackageOutputPath;
//    DVTFilePath * _developerIDAppOutputPath;
//}
//@property (retain,nonatomic) DVTFilePath * destinationRoot;
//@property (retain,nonatomic) Class packagingStep;
//@property (retain,nonatomic) NSDictionary * onDemandResourcesAssetPacksOwningBundleForCopy;
//@property (retain,nonatomic) NSDictionary * onDemandResourcesAssetPacksZippedPaths;
//@property (retain,nonatomic) DVTFilePath * symbolsPath;
//@property (retain,nonatomic) NSDictionary * thinningDestinationPathMap;
//@property (retain,nonatomic) NSDictionary * destinationPathMap;
//@property (retain,nonatomic) NSNumber * dryRun;
//@property (retain,nonatomic) NSDictionary * pipelineOutputs;
//@property (retain,nonatomic) IDEDistributionItem * activeDistributionItem;
//@property (retain,nonatomic) IDEDistributionCoalescedThinningVariantAbstractClass * activeCoalescedThinningVariant;
//@property (retain,nonatomic) NSNumber * thinningVariantIndex;
//@property (retain,nonatomic) DVTFilePath * appStorePackageOutputPath;
//@property (retain,nonatomic) DVTFilePath * developerIDPackageOutputPath;
//@property (retain,nonatomic) DVTFilePath * developerIDAppOutputPath;
//@property (readonly) DVTFilePath * swinfoOutputPath;
//+ (id)modifiedName:(id)v1 forVariant:(id)v2;
//- (char)useTopLevelItemForPackageName;
//- (id)initWithParent:(id)v1 stepClass:(Class)v2 allowedInputs:(id)v3 allowedOutputs:(id)v4;
//- (void)addPipelineOutputAtRelativePath:(id)v1 fromSourcePath:(id)v2;
//- (id)relativeDestinationPathForPipelineOutputAtSourcePath:(id)v1;
//- (id)thinningSourceRoot;
//- (id)destinationRootForVariant:(id)v1;
//- (id)destinationPathForItem:(id)v1;
//- (id)thinningSourcePathForItem:(id)v1;
//- (id)thinningDestinationPathForItem:(id)v1 forVariant:(id)v2;
//- (id)destinationPathForItem:(id)v1 forVariant:(id)v2;
//- (id)packagePathForVariant:(id)v1;
//- (id)assetPackFileName:(id)v1 forVariant:(id)v2;
//- (id)assetPackManifestFileName:(id)v1 forVariant:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProvisioningEvaluator : NSObject<DVTInvalidation,IDEProvisionableProvider> {
//    DVTPlatform * _fallbackPlatform;
//    IDEProvisioningContext * _context;
//    void (^ /* unknown block signature */)(void) _callback;
//    IDEDistributionMethod * _distributionMethod;
//    _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * _destinationRequirement;
//    NSSet * _distributionItemProvisionables;
//    IDEProvisioningManager * _provisioningManager;
//    IDEDistributionProvisioningEvaluation * _evaluation;
//    long long _provisioningStyle;
//    IDEDistributionProvisioningManualSigningMap * _signingAssetMap;
//    NSDictionary * _entitlementsProcessorsMap;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    NSArray * _topLevelDistributionItems;
//    DVTLogAspect * _logAspect;
//    _TtC13IDEFoundation41IDEDistributionProvisioningLedgerDelegate * _ledgerDelegate;
//}
//@property (copy,nonatomic) void (^ /* unknown block signature */)(void) callback;
//@property (retain,nonatomic) IDEProvisioningContext * context;
//@property (readonly,nonatomic) IDEDistributionMethod * distributionMethod;
//@property (readonly,nonatomic) _TtC13IDEFoundation38IDEProvisionableDestinationRequirement * destinationRequirement;
//@property (retain,nonatomic) NSSet * distributionItemProvisionables;
//@property (retain,nonatomic) IDEProvisioningManager * provisioningManager;
//@property (readonly,nonatomic) IDEDistributionProvisioningEvaluation * evaluation;
//@property (readonly,nonatomic) long long provisioningStyle;
//@property (readonly,nonatomic) IDEDistributionProvisioningManualSigningMap * signingAssetMap;
//@property (readonly,nonatomic) NSDictionary * entitlementsProcessorsMap;
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) NSArray * topLevelDistributionItems;
//@property (readonly,nonatomic) DVTLogAspect * logAspect;
//@property (readonly,nonatomic) _TtC13IDEFoundation41IDEDistributionProvisioningLedgerDelegate * ledgerDelegate;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic) char finishedLoading;
//@property (readonly,nonatomic) NSSet * provisionables;
//@property (readonly,nonatomic) NSSet * provisionableDestinations;
//+ (void)initialize;
//+ (id)evaluationForTopLevelDistributionItems:(id)v1 withItemParameters:(id)v2 method:(id)v3 provisioningStyle:(long long)v4 logAspect:(id)v5;
//- (void)primitiveInvalidate;
//- (id)initWithTopLevelDistributionItems:(id)v1 method:(id)v2 team:(id)v3 destinationRequirement:(id)v4 provisioningStyle:(long long)v5 signingAssetsMap:(id)v6 entitlementsProcessorsMap:(id)v7 context:(id)v8 logAspect:(id)v9 logging:(id)v10 evaluationCallback:(void (^ /* unknown block signature */)(void))v11;
//- (id)configuredProvisioningContextWithStyle:(long long)v1 method:(id)v2;
//- (id)initForAutomaticSigningWithDistributionContext:(id)v1 destinationRequirement:(id)v2 evaluationCallback:(void (^ /* unknown block signature */)(void))v3;
//- (id)initForManualSigningWithDistributionContext:(id)v1 destinationRequirement:(id)v2 signingAssetMap:(id)v3 evaluationCallback:(void (^ /* unknown block signature */)(void))v4;
//- (id)init;
//- (void)_startEvaluating;
//- (id)_fallbackPlatform;
//- (id)_evaluationOverridesForProvisionableManager:(id)v1;
//- (void)_evaluateProvisionables;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProvisioningEvaluation : NSObject {
//    IDEProvisionableStatusEvaluation * _installerPackageEvaluation;
//    NSMutableDictionary * _distributionItemToEvaluationMap;
//}
//@property (readonly,nonatomic) NSMutableDictionary * distributionItemToEvaluationMap;
//@property (retain,nonatomic) IDEProvisionableStatusEvaluation * installerPackageEvaluation;
//@property (readonly) NSArray * allItemEvaluations;
//@property (readonly) NSArray * allEvaluationErrors;
//- (id)submissionCertificate;
//- (id)init;
//- (id)evaluationForDistributionItem:(id)v1;
//- (void)setEvaluation:(id)v1 forDistributionItem:(id)v2;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProvisioningManualSigningMap : NSObject<NSCopying> {
//    NSObject<IDEProvisioningBasicSigningIdentity> * _certificate;
//    NSObject<IDEProvisioningBasicSigningIdentity> * _installerCertificate;
//    NSDictionary * _distributionItemProfileSpecifierMap;
//}
//@property (retain) NSObject<IDEProvisioningBasicSigningIdentity> * certificate;
//@property (retain) NSObject<IDEProvisioningBasicSigningIdentity> * installerCertificate;
//@property (copy) NSDictionary * distributionItemProfileSpecifierMap;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceBasedCommandLineVerb : IDECommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitContainerSymbol : IDESourceKitSymbol<IDEIndexContainerSymbol>
//@property (readonly) NSString * name;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly) NSString * resolution;
//@property (readonly) DVTSymbol * identifier;
//@property (readonly) NSString * moduleName;
//@property (readonly) char isVirtual;
//@property (readonly) char isSystem;
//@property (readonly) char hasOccurrence;
//@property (readonly) char navigationPrefersDefinition;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)children;
//- (char)isKindOfClass:(Class)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExtensionManager : NSObject {
//    struct os_unfair_lock_s _discoveredPreXcode12ExtensionDescriptionsLock;
//    NSMutableSet * _discoveredPreXcode12ExtensionDescriptions;
//}
//@property (readonly,copy) NSSet * discoveredPreXcode12ExtensionDescriptions;
//+ (void)initialize;
//+ (id)sharedExtensionManager;
//+ (id)permanentlyEnabledExtensionIdentifiers;
//- (id)init;
//- (id)_attributesForMatchingWithExtensionPointIdentifier:(id)v1;
//- (id)_minimumVersionForExtension:(id)v1;
//- (id)beginMatchingExtensionsWithAttributes:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)endMatchingExtensions:(id)v1;
//- (id)startSearchingForExtensionsOfExtensionPoint:(id)v1 callback:(void (^ /* unknown block signature */)(void))v2;
//- (char)checkWhetherExtension:(id)v1 matchesCodeSigningRequirements:(struct __SecRequirement *)v2 error:(id *)v3;
//- (void)registerPreXcode12ExtensionDescriptionWithName:(id)v1 identifier:(id)v2 toolsVersion:(id)v3 path:(id)v4;
//- (void)warnAboutUnknownPreXcode12Extensions;
//- (void)_warnAboutUnknownPreXcode12Extensions;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindSCMStatusPredicate : IDEBatchFindFilePathPredicate {
//    long long _desiredStatus;
//}
//@property (readonly) long long desiredStatus;
//+ (id)decodeFromPropertyListRepresentation:(id)v1;
//+ (id)propertyListIdentifier;
//- (id)initWithDesiredStatus:(long long)v1;
//- (unsigned long long)hash;
//- (char)isEqualToFilePathPredicateWithIdenticalClass:(id)v1;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//- (id)propertyListRepresentation;
//- (char)isWorkspaceSpecific;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainer : DVTModelObject<DVTInvalidation,IDEIssueLogDataSource,IDEReadOnlyItem,DVTDirectoryBasedCustomDataStoreDelegate,IDEUpgradeableItem> {
//    NSObject<IDEContainerCore> * _containerCore;
//    IDEWorkspace * _workspace;
//    DVTFilePath * _filePath;
//    IDEGroup * _rootGroup;
//    DVTFilePath * _itemBaseFilePath;
//    DVTExtension * _extension;
//    DVTOperation * _willReadOperation;
//    DVTOperation * _readOperation;
//    DVTOperation * _didReadOperation;
//    DVTTimeSlicedMainThreadWorkQueue * _scmStatusUpdatingQueue;
//    DVTTimeSlicedMainThreadWorkQueue * _pendingFileReferenceResolvingQueue;
//    int _activity;
//    int _transitionActivity;
//    NSMutableDictionary * _sessionIdentifiersToFilePaths;
//    NSMutableDictionary * _containerLoadingTokens;
//    NSDictionary * _containerDataFilePaths;
//    int _autosaveBehavior;
//    int _saveIssue;
//    NSTimer * _pendingSaveTimer;
//    NSString * _sessionIdentifier;
//    NSMutableDictionary * _filePathToReadOnlyItemMap;
//    NSMapTable * _readOnlyItemToStatusObserverMap;
//    NSObject<IDEContainerDelegate> * _containerDelegate;
//    NSMapTable * _pendingFilePathChangeDictionary;
//    int _readOnlyStatus;
//    char _hasTransitionedToIdle;
//    char _containerEdited;
//    char _isMajorGroup;
//    char _isFolderLike;
//    char _validForSchemeBuildableReferences;
//    char _transitioningToNewFilePath;
//    IDEActivityLogSection * _issueLog;
//}
//@property char containerEdited;
//@property int readOnlyStatus;
//@property (getter=isTransitioningToNewFilePath) char transitioningToNewFilePath;
//@property (readonly,nonatomic,getter=isValidForSchemeBuildableReferences) char validForSchemeBuildableReferences;
//@property int activity;
//@property (retain) NSObject<IDEContainerDelegate> * containerDelegate;
//@property (readonly) NSObject<IDEContainerCore> * containerCore;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) DVTExtension * extension;
//@property (readonly) DVTFilePath * filePath;
//@property (readonly) DVTFilePath * rootFilePath;
//@property (readonly) NSString * displayName;
//@property (readonly,copy) NSString * workspaceParentRelativePath;
//@property (copy,nonatomic) DVTFilePath * itemBaseFilePath;
//@property (readonly) IDEGroup * rootGroup;
//@property (readonly,getter=isMajorGroup) char majorGroup;
//@property (readonly,getter=isFolderLike) char folderLike;
//@property (readonly,getter=isEditable) char editable;
//@property (readonly) char allowsRenaming;
//@property (readonly) char supportsOnDemandResources;
//@property (retain) IDEActivityLogSection * issueLog;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) NSURL * readOnlyItemURL;
//+ (void)initialize;
//+ (id)containerLoadingModelObjectGraph;
//+ (id)containerExtensionForFileDataType:(id)v1;
//+ (id)containerFileDataType;
//+ (id)containerTypeDisplayName;
//+ (id)_noContainerClassForFileTypeError:(id)v1;
//+ (id)_containerOpenAsAnotherContainerTypeErrorForPath:(id)v1 newContainerTypeName:(id)v2 oldContainerTypeName:(id)v3;
//+ (id)_containerOpenInAnotherWorkspaceErrorForPath:(id)v1;
//+ (id)retainedContainerAtFilePath:(id)v1 fileDataType:(id)v2 workspace:(id)v3 error:(id *)v4;
//+ (id)_retainedContainerAtFilePath:(id)v1 fileDataType:(id)v2 workspace:(id)v3 options:(id)v4 error:(id *)v5;
//+ (id)retainedContainerForFilePath:(id)v1 workspace:(id)v2;
//+ (id)containersForFilePath:(id)v1;
//+ (id)retainedWrappedWorkspaceForContainerAtFilePath:(id)v1 fileDataType:(id)v2 error:(id *)v3;
//+ (char)isContainerOpenForFilePath:(id)v1;
//+ (id)_openContainers;
//+ (id)_containersPendingRelease;
//+ (id)_refcountTableForContainer:(id)v1;
//+ (unsigned long long)_countForContainer:(id)v1;
//+ (void)_increaseCountForContainer:(id)v1;
//+ (void)_decreaseCountForContainer:(id)v1;
//+ (void)_removeOpenContainer:(id)v1;
//+ (char)_closeContainerIfNeeded:(id)v1;
//+ (void)_retainContainer:(id)v1;
//+ (void)_releaseContainer:(id)v1;
//+ (void)_invalidateContainer:(id)v1;
//+ (id)_containerForSessionIdentifier:(id)v1;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (char)_observeContainerDataFilePathsForChanges;
//+ (id)_containersWithPendingFilePathChanges;
//+ (void)suspendFilePathChangeNotifications;
//+ (void)resumeFilePathChangeNotifications;
//+ (void)suspendFilePathChangeNotificationsForWorkspace:(id)v1;
//+ (void)resumeFilePathChangeNotificationsForWorkspace:(id)v1;
//+ (char)filePathChangeNotificationsAreSuspendedForWorkspace:(id)v1;
//+ (void)_addContainerWithPendingChanges:(id)v1;
//+ (char)automaticallyNotifiesObserversOfContainerEdited;
//+ (double)_defaltAutosaveDelay;
//+ (double)_defaltSlowAutosaveDelay;
//+ (id)_errorSavingContainer:(id)v1 code:(int)v2;
//+ (char)supportsFilePersistence;
//+ (id)containerDataFilePathsForFilePath:(id)v1;
//+ (char)automaticallyNotifiesObserversOfActivity;
//+ (id)keyPathsForValuesAffectingWorkspaceParentRelativePath;
//+ (char)automaticallyNotifiesObserversOfFilePath;
//+ (char)supportsMultipleInstancesPerFilePath;
//+ (char)isOnlyUsedForUserInteraction;
//+ (void)setErrorPresenter:(id)v1;
//+ (id)errorPresenter;
//+ (void)setReloadingDelegate:(id)v1;
//+ (id)reloadingDelegate;
//+ (void)setUnlockingDelegate:(id)v1;
//+ (id)unlockingDelegate;
//+ (char)_shouldTrackReadOnlyStatus;
//- (char)openQuickly_shouldIncludeDescendants;
//- (char)openQuickly_shouldIncludeAsResult;
//- (id)_containerInstanceDescription;
//- (void)_addPendingFileReference:(id)v1;
//- (void)_removePendingFileReference:(id)v1;
//- (void)_locateFileReferencesRecursivelyInGroup:(id)v1;
//- (void)_handleContainerResolutionFailureForFileReference:(id)v1;
//- (void)_resolveFileReference:(id)v1;
//- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
//- (void)_locateFileReferencesRecursively;
//- (void)_removeContainerLoadingTokenForContainer:(id)v1;
//- (void)_setContainerLoadingTokenForContainer:(id)v1;
//- (void)_addSubcontainer:(id)v1;
//- (void)_removeSubcontainer:(id)v1;
//- (id)initWithFilePath:(id)v1 extension:(id)v2 workspace:(id)v3 options:(id)v4 error:(id *)v5;
//- (id)init;
//- (char)canSaveContainer;
//- (void)_saveContainerIfNeeded;
//- (void)retainContainer;
//- (void)releaseContainer;
//- (void)_willInvalidateContainerToDiscardInMemoryRepresentation;
//- (void)_invalidateContainerToDiscardInMemoryRepresentation:(char)v1;
//- (id)_sessionIdentifier;
//- (void)invalidate;
//- (void)primitiveInvalidate;
//- (void)_filePathDidChangeWithPendingChangeDictionary;
//- (void)_registerForChangesToContainerDataFilePath:(id)v1;
//- (void)_unregisterForChangesToContainerDataFilePath:(id)v1;
//- (void)_clearContainerDataFilePathsToModDateMap;
//- (id)_modificationDateForFilePath:(id)v1;
//- (void)_createContainerDataFilePathsToModDateMap;
//- (void)_updateContainerDataFilePathsToModDateMap;
//- (id)_lastKnownModDateForContainerDataFile:(id)v1;
//- (id)_containerDataFilePaths;
//- (void)_saveContainerPeriodically;
//- (void)_scheduleAutosaveTimer;
//- (char)_saveContainerForAction:(int)v1 error:(id *)v2;
//- (void)_containerEditedDidChange;
//- (void)_setContainerEdited;
//- (char)ignoreLocalChanges;
//- (char)_canClosePreflightOrError:(id *)v1;
//- (char)_canClosePreflightWithCheckedContainers:(id)v1 error:(id *)v2;
//- (id)_readOperationWithFilePath:(id)v1;
//- (id)_willReadOperationWithFilePath:(id)v1;
//- (id)_didReadOperationWithFilePath:(id)v1;
//- (char)_readAsyncIfPossibleFromFilePath:(id)v1 error:(id *)v2;
//- (char)readFromFilePath:(id)v1 error:(id *)v2;
//- (char)willReadFromFilePath:(id)v1 error:(id *)v2;
//- (char)didReadFromFilePath:(id)v1 error:(id *)v2;
//- (char)writeToFilePath:(id)v1 forceWrite:(char)v2 error:(id *)v3;
//- (void)_containerDidLoad;
//- (void)_didTransitionToActivity:(int)v1;
//- (void)_willUpdateActivity;
//- (void)_didUpdateActivity;
//- (void)_setExtension:(id)v1;
//- (void)_setTransitioningToNewFilePath:(char)v1;
//- (void)_makeAbsoluteFileReferencesInGroup:(id)v1 relativeToFolderFilePath:(id)v2 withPathString:(id)v3;
//- (void)_respondToFileChangeOnDiskWithFilePath:(id)v1;
//- (char)_shouldRespondToFileChangeOnDisk;
//- (void)_setFilePath:(id)v1 strict:(char)v2 createContainerDataFilePathsToModDateMap:(char)v3;
//- (void)_setFilePath:(id)v1;
//- (char)_setContainerFilePath:(id)v1 strict:(char)v2 error:(id *)v3;
//- (char)setContainerFilePath:(id)v1 error:(id *)v2;
//- (void)_changeContainerFilePath:(id)v1 inContext:(id)v2;
//- (void)_makeRelativeFileReferencesInGroup:(id)v1 relativeToNewBasePath:(id)v2 oldBaseFilePath:(id)v3;
//- (id)_itemBaseFilePathForFilePath:(id)v1;
//- (id)createRootGroup;
//- (void)_initRootGroup;
//- (void)enumerateUpgradeTasksWithBlock:(void (^ /* unknown block signature */)(void))v1;
//- (void)analyzeModelForIssues;
//- (void)holdOnDiskFilesForICloudDriveIfNecessary;
//- (void)collectMessageTracerStatisticsIntoDictionary:(id)v1;
//- (void)_enqueueSCMUpdateForItem:(id)v1;
//- (void)debugPrintInnerStructure;
//- (void)debugPrintStructure;
//- (char)makeWritableWithError:(id *)v1;
//- (void)_updateSharedReadOnlyItemStatus;
//- (void)_removeReadOnlyItemPath:(id)v1;
//- (void)_removeAllReadOnlyItemPaths;
//- (void)_addReadOnlyItemPath:(id)v1;
//- (id)_readOnlyItemsToUnlock;
//- (void)_unlockReadOnlyItems:(id)v1 completionQueue:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)customDataStore:(id)v1 makeFilePathsWritable:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)customDataStore:(id)v1 moveItemAtFilePath:(id)v2 toFilePath:(id)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//- (void)customDataStore:(id)v1 removeItemAtFilePath:(id)v2 completionQueue:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEUnitTestContainerUnlockingDelegate : NSObject<IDEContainerUnlockingDelegate>
//- (void)container:(id)v1 attemptToUnlockItems:(id)v2 workspace:(id)v3 completionQueue:(id)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//@end
//
//
///*****************************************************************/
//
//@interface IDEContainerContentGenerator : NSObject
//@end
//
//
///*****************************************************************/
//
//@interface IDEDemangler : NSObject
//+ (void (^ /* unknown block signature */)(void))demanglerForDataType:(id)v1 toolchains:(id)v2;
//+ (void (^ /* unknown block signature */)(void))demanglerForDataType:(id)v1 demanglingKind:(unsigned long long)v2 toolchains:(id)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDECodeGenerator : NSObject<DVTInvalidation> {
//    NSDictionary * _userInfo;
//}
//@property (copy) NSDictionary * userInfo;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)codeGeneratorWithIdentifier:(id)v1;
//+ (long long)executeCommandLineMainWithIdentifier:(id)v1;
//- (void)primitiveInvalidate;
//- (id)generatedFilePathsForInputFilePath:(id)v1 outputFilePath:(id)v2 error:(id *)v3;
//- (void)generateCodeForInputFile:(id)v1 outputFilePath:(id)v2 completionQueue:(id)v3 completionHandler:(void (^ /* unknown block signature */)(void))v4;
//- (Class)toolClassForCommandLineEquivalent;
//- (long long)executeCommandLineEquivalent:(id)v1 returningStandardOutput:(id *)v2 standardError:(id *)v3;
//- (long long)commandLineMain;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECodeGeneratorOutputInMemoryDelegate : NSObject<IDECodeGeneratorOutputDelegate> {
//    NSMutableString * _output;
//    NSMutableString * _error;
//}
//@property (copy) NSString * output;
//@property (copy) NSString * error;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)init;
//- (void)emitOutput:(id)v1;
//- (void)emitError:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionCreateIPAStep : IDEDistributionProcessingPackagingStep {
//    NSString * name;
//}
//@property (copy) NSString * name;
//+ (char)wantsPayloadDir;
//+ (bool)supportsDryRun;
//+ (bool)runsPerThinningVariant;
//+ (id)packagePathExtension;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitPropertySymbol : IDESourceKitSymbol<IDEIndexPropertySymbol>
//@property (readonly) NSString * name;
//@property (readonly) DVTSourceCodeSymbolKind * symbolKind;
//@property (readonly) DVTSourceCodeLanguage * symbolLanguage;
//@property (readonly) NSString * resolution;
//@property (readonly) DVTSymbol * identifier;
//@property (readonly) NSString * moduleName;
//@property (readonly) char isVirtual;
//@property (readonly) char isSystem;
//@property (readonly) char hasOccurrence;
//@property (readonly) char navigationPrefersDefinition;
//@property (readonly) long long role;
//@property (readonly) DVTFilePath * file;
//@property (readonly) NSURL * moduleURL;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (char)isKindOfClass:(Class)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEHelpCommandLineVerb : IDECommandLineVerb
//+ (void)printBasicUsageInformationWithEnvironment:(id)v1;
//+ (void)printDetailedUsageInformationForCommandVerbExtension:(id)v1 withEnvironment:(id)v2;
//+ (int)performWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionLogging : NSObject {
//    NSMutableDictionary * _nameToAspect;
//    NSString * _path;
//}
//@property (readonly,copy) NSString * path;
//+ (id)_loggingBundlePathsLock;
//+ (void)_addLoggingBundlePath:(id)v1;
//+ (id)loggingBundlePaths;
//- (id)init;
//- (id)initWithArchiveName:(id)v1;
//- (id)_loggingBundlePathForArchiveNamed:(id)v1;
//- (char)_createLoggingBundleAtPath:(id)v1;
//- (id)logAspectWithName:(id)v1 wantsDistinctFilesPerLogLevel:(char)v2;
//- (char)copyLogsForSubtaskNamed:(id)v1 fromURLs:(id)v2 errors:(id *)v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateCategory : NSObject {
//    NSMutableArray * _templates;
//    NSString * _name;
//}
//@property (readonly) NSArray * templates;
//@property (readonly) NSMutableArray * mutableTemplates;
//@property (copy) NSString * name;
//+ (void)initialize;
//- (id)initWithName:(id)v1;
//- (id)init;
//- (id)standardCategoryNames;
//- (long long)categoryCompare:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningMechanicContext : NSObject<DVTInvalidation> {
//    char _runningInIDE;
//    IDEProvisioningMechanic * _mechanic;
//    NSObject<IDEProvisioningMechanicContextProvider> * _provisioningManager;
//    NSObject<IDEProvisioningTeamAccountPairProvider> * _teamAccountPairProvider;
//}
//@property (retain,nonatomic) IDEProvisioningMechanic * mechanic;
//@property (retain,nonatomic) NSObject<IDEProvisioningMechanicContextProvider> * provisioningManager;
//@property (retain,nonatomic) NSObject<IDEProvisioningTeamAccountPairProvider> * teamAccountPairProvider;
//@property (nonatomic) char runningInIDE;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)init;
//- (void)primitiveInvalidate;
//- (id)makeRepairForRepairable:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETest : NSObject<IDETestContainer,DVTInvalidation> {
//    NSMutableSet * _subtests;
//    NSMutableArray * _cachedArrangedSubtests;
//    char _canHaveSubtests;
//    char _indexLocationWasSet;
//    NSObject<IDETestable> * _testable;
//    IDETestIdentifier * _testIdentifier;
//    NSString * _name;
//    IDETest * _supertest;
//    NSString * _parentClassName;
//    DVTTextDocumentLocation * _indexLocation;
//    NSArray * _recentDynamicallyReportedSourceCodeLocations;
//}
//@property char canHaveSubtests;
//@property (copy,nonatomic) DVTTextDocumentLocation * indexLocation;
//@property (copy) NSArray * recentDynamicallyReportedSourceCodeLocations;
//@property char indexLocationWasSet;
//@property (readonly,copy) NSMutableSet * mutableSubtests;
//@property (copy) NSString * parentClassName;
//@property (readonly) NSObject<IDETestable> * testable;
//@property (readonly,copy) IDETestIdentifier * testIdentifier;
//@property (readonly,copy) NSString * identifierString;
//@property (readonly,copy) NSString * name;
//@property (readonly,copy) NSString * displayName;
//@property (readonly,copy,nonatomic) DVTTextDocumentLocation * location;
//@property (readonly) IDETest * supertest;
//@property (readonly,copy) NSSet * subtests;
//@property (readonly,copy) NSArray * arrangedSubtests;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//+ (void)initialize;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//+ (id)keyPathsForValuesAffectingLocation;
//+ (char)automaticallyNotifiesObserversForIndexLocation;
//+ (char)automaticallyNotifiesObserversForIndexLocationWasSet;
//- (char)_isInFile:(id)v1;
//- (void)primitiveInvalidate;
//- (id)initWithTestable:(id)v1 identifier:(id)v2 location:(id)v3 parentClassName:(id)v4;
//- (char)isEqual:(id)v1;
//- (long long)localizedStandardCompare:(id)v1;
//- (void)_setIndexLocation:(id)v1 forSubtest:(id)v2;
//- (void)_primitiveSetIndexLocation:(id)v1;
//- (void)_setIndexLocation:(id)v1;
//- (void)_setDynamicallyReportedSourceCodeLocations:(id)v1;
//- (void)_primitiveAddSubtest:(id)v1;
//- (void)_primitiveRemoveSubtest:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEExecutionAction : NSObject<DVTXMLUnarchiving> {
//    NSString * _title;
//    IDEScheme * _runContext;
//}
//@property (copy,nonatomic) NSString * title;
//@property (retain) IDEScheme * runContext;
//@property (readonly) NSDictionary * actionEnvironmentVariables;
//@property (readonly) char needsCurrentArchiveVersion;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)actionType;
//- (id)operationForExecutionWithBuildParameters:(id)v1 error:(id *)v2;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setTitleFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)schemeObjectGraphSetupComplete;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodExportArchive : IDEDistributionMethodExport
//- (double)sortOrder;
//- (bool)supportsDistributionOfArchive:(id)v1;
//- (id)title;
//- (id)shortTitle;
//- (id)subtitle;
//- (id)orderedDistributionStepClassNamesForDestination:(long long)v1;
//- (id)certificateKind;
//- (id)installerCertificateKind;
//- (long long)wantsProvisioningProfiles;
//- (id)exportStepName;
//@end
//
//
///*****************************************************************/
//
//@interface IDECommandLineVerb : NSObject
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (void (^ /* unknown block signature */)(void))fallbackOptionHandlerBlockWithEnvironment:(id)v1 options:(id)v2;
//+ (int)performWithEnvironment:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionIssueSummary : NSObject {
//    NSString * _issueType;
//    NSString * _message;
//    NSString * _producingTarget;
//    DVTDocumentLocation * _documentLocationInCreatingWorkspace;
//    DVTFilePath * _creatingWorkspaceFilePath;
//}
//@property (retain) DVTFilePath * creatingWorkspaceFilePath;
//@property (copy) NSString * issueType;
//@property (copy) NSString * message;
//@property (copy) NSString * producingTarget;
//@property (copy) DVTDocumentLocation * documentLocationInCreatingWorkspace;
//@property (readonly,copy) NSString * stringSignature;
//- (id)initWithIssueType:(id)v1 message:(id)v2 producingTarget:(id)v3 documentLocation:(id)v4 creatingWorkspaceFilePath:(id)v5;
//- (id)initWithDictionaryRepresentation:(id)v1 creatingWorkspaceFilePath:(id)v2;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (id)documentLocationInLocalWorkspace:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESchemeActionTestFailureIssueSummary : IDESchemeActionIssueSummary {
//    NSString * _testCaseName;
//}
//@property (copy) NSString * testCaseName;
//- (id)initWithIssueType:(id)v1 message:(id)v2 producingTarget:(id)v3 documentLocation:(id)v4 creatingWorkspaceFilePath:(id)v5;
//- (id)initWithIssueType:(id)v1 message:(id)v2 producingTarget:(id)v3 documentLocation:(id)v4 creatingWorkspaceFilePath:(id)v5 testCaseName:(id)v6;
//- (id)initWithDictionaryRepresentation:(id)v1 creatingWorkspaceFilePath:(id)v2;
//- (id)dictionaryRepresentation;
//- (char)updateWithDictionaryRepresentation:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)stringSignature;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlRevision : NSObject {
//    NSString * _revision;
//    NSString * _author;
//    NSDate * _date;
//    NSString * _message;
//    char _isHEAD;
//    char _isBASE;
//    char _isCurrent;
//    NSString * _displayRevision;
//    NSString * _filePath;
//    NSString * _currentFilePath;
//    unsigned long long _status;
//    NSString * _subtext;
//}
//@property (readonly) NSString * filePath;
//@property (readonly) NSString * currentFilePath;
//@property (readonly) NSString * author;
//@property (readonly) NSDate * date;
//@property (readonly) NSString * message;
//@property (readonly) NSString * revision;
//@property (readonly) NSString * displayRevision;
//@property (readonly) NSString * shortRevisionString;
//@property (readonly) unsigned long long status;
//@property char isHEAD;
//@property char isBASE;
//@property char isCurrent;
//@property (retain) NSString * subtext;
//+ (id)keyPathsForValuesAffectingLongRevisionString;
//+ (id)localRevision;
//+ (id)inMemoryRevision;
//- (id)initWithRevision:(id)v1 displayRevision:(id)v2 author:(id)v3 date:(id)v4 message:(id)v5;
//- (id)initWithRevision:(id)v1 displayRevision:(id)v2 author:(id)v3 date:(id)v4 message:(id)v5 filePath:(id)v6 currentFilePath:(id)v7 status:(unsigned long long)v8;
//- (id)initWithRevision:(id)v1 displayRevision:(id)v2 author:(id)v3 date:(id)v4 message:(id)v5 filePath:(id)v6 currentFilePath:(id)v7 isBASE:(char)v8 isHEAD:(char)v9 isCurrent:(char)v10;
//- (id)description;
//- (id)ideModelObjectTypeIdentifier;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindAbstractPathComponentPredicate : IDEBatchFindAbstractOperatorOperandPredicate
//@property (readonly) long long stringOperator;
//+ (long long)operatorFromString:(id)v1;
//+ (id)operatorToString:(long long)v1;
//- (id)initWithOperator:(long long)v1 operand:(id)v2;
//- (id)extractComponent:(id)v1;
//- (void (^ /* unknown block signature */)(void))filterBoundToWorkspace:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindFullPathPredicate : IDEBatchFindAbstractPathComponentPredicate
//+ (id)propertyListIdentifier;
//- (id)extractComponent:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindFileNamePredicate : IDEBatchFindAbstractPathComponentPredicate
//+ (id)propertyListIdentifier;
//- (id)extractComponent:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindFileExtensionPredicate : IDEBatchFindAbstractPathComponentPredicate
//+ (id)propertyListIdentifier;
//- (id)extractComponent:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEIssue : NSObject<IDEDiagnosticItemDelegate> {
//    IDEIssue * _parentIssue;
//    char _frozen;
//    char _valid;
//    char _wasFetchedFromCache;
//    char __coalesced;
//    char __vended;
//    NSArray * _filteredSubissues;
//    IDEIssueProvider * _issueProvider;
//    unsigned long long _sequenceNumber;
//    NSArray * _documentLocations;
//    DVTDocumentLocation * _primaryDocumentLocation;
//    NSObject * _issueTypeIdentifier;
//    NSString * _fullMessage;
//    unsigned long long _severity;
//    NSArray * _subissues;
//    IDEActivityLogMessage * _representedMessage;
//    IDEActivityLogRecord * _originatingLogRecord;
//    unsigned long long _issueType;
//    NSArray * _threads;
//    id _helpIDOrURL;
//    NSObject<NSCopying> * _coalescingGroupIdentifier;
//    NSObject<NSCopying> * _coalescingIdentifier;
//}
//@property char wasFetchedFromCache;
//@property (getter=isValid) char valid;
//@property (retain) IDEIssue * _parentIssue;
//@property (getter=_isCoalesced) char _coalesced;
//@property (getter=_isVended) char _vended;
//@property (retain,nonatomic) IDEIssueProvider * issueProvider;
//@property (retain) NSObject * issueTypeIdentifier;
//@property (retain,nonatomic) IDEActivityLogMessage * representedMessage;
//@property (readonly) NSArray * filteredSubissues;
//@property (readonly) unsigned long long sequenceNumber;
//@property (readonly) NSArray * documentLocations;
//@property (readonly) DVTDocumentLocation * primaryDocumentLocation;
//@property (readonly,copy) NSSet * secondaryDocumentURLs;
//@property (readonly) NSString * fullMessage;
//@property (readonly) unsigned long long severity;
//@property (copy,nonatomic) NSArray * subissues;
//@property (readonly) NSArray * fixableDiagnosticItems;
//@property (readonly) IDEActivityLogRecord * originatingLogRecord;
//@property (readonly) NSString * formattedStringRepresentation;
//@property (readonly) IDEIssue * parentIssue;
//@property (readonly) unsigned long long issueType;
//@property (readonly) char isLiveIssue;
//@property (copy,nonatomic) NSArray * threads;
//@property (copy) id helpIDOrURL;
//@property (readonly,nonatomic) IDEIssue * representativeSubIssue;
//@property (retain,nonatomic) NSObject<NSCopying> * coalescingGroupIdentifier;
//@property (retain,nonatomic) NSObject<NSCopying> * coalescingIdentifier;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)isIssueTypeRuntime:(unsigned long long)v1;
//- (id)init;
//- (id)initWithIssueProvider:(id)v1 documentLocations:(id)v2 issueTypeIdentifier:(id)v3 fullMessage:(id)v4 severity:(unsigned long long)v5 representedMessage:(id)v6;
//- (id)initWithIssueProvider:(id)v1 message:(id)v2 originatingLogRecord:(id)v3 wasFetchedFromCache:(char)v4;
//- (id)initWithIssueProvider:(id)v1 message:(id)v2 wasFetchedFromCache:(char)v3;
//- (void)_setSequenceNumber:(unsigned long long)v1;
//- (void)_setSubissues:(id)v1 force:(char)v2;
//- (void)_setRepresentedMessage:(id)v1 force:(char)v2;
//- (void)_freeze;
//- (id)_severityString;
//- (long long)compare:(id)v1;
//- (void)diagnosticItemWasFixed:(id)v1;
//- (id)_firstCommonLocationFromArray:(id)v1 andArray:(id)v2;
//- (char)isEqualDisregardingLocationTimestamps:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationAction : NSObject
//- (id)createController;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationManager : NSObject<DVTInvalidation> {
//    IDELocalizationAction * _action;
//    NSObject<IDELocalizationController> * _controller;
//    NSObject<IDEClientTrackingToken> * _token;
//    DVTObservingToken * _controllerCompleteObserver;
//    IDEWorkspace * _workspace;
//}
//@property (retain) IDELocalizationAction * action;
//@property (retain) NSObject<IDELocalizationController> * controller;
//@property (retain) NSObject<IDEClientTrackingToken> * token;
//@property (retain) DVTObservingToken * controllerCompleteObserver;
//@property (retain) IDEWorkspace * workspace;
//@property (readonly) NSObject<IDELocalizationWorkProgress> * currentLocalizationProgress;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)keyPathsForValuesAffectingCurrentLocalizationProgress;
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (char)startLocalizationAction:(id)v1 withBuildParameters:(id)v2 error:(id *)v3;
//- (void)_complete;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
@interface IDEExecutionOperationTracker : IDEExecutionTracker {
    DVTOperation * _operation;
    DVTObservingToken * _isFinishedObservingToken;
    char _operationFinished;
}
@property (retain) DVTOperation * operation;
@property (nonatomic) char operationFinished;
- (id)initWithOperation:(id)v1 serviceTier:(int)v2;
- (id)initWithOperation:(id)v1;
- (void)cancelWithReason:(int)v1;
- (char)isFinished;
- (id)notFinishedReasonWithDepth:(unsigned long long)v1;
@end
//
//
///*****************************************************************/
//
//@interface IDETestingDiagnosticLogArbiter : NSObject {
//    char _preserveAllMessages;
//    NSObject<OS_dispatch_queue> * _queue;
//    NSObject<IDETestingDiagnosticLogWriter> * _writer;
//    unsigned long long _state;
//    NSMutableArray * _buffers;
//    NSMutableData * _currentBuffer;
//    unsigned long long _maxLoggedBytes;
//    unsigned long long _maxBufferedBytes;
//    double _contextInterval;
//    unsigned long long _totalBytesLogged;
//    unsigned long long _totalBytesBuffered;
//    NSObject<OS_dispatch_source> * _rotationTimer;
//    unsigned long long _bufferedMessages;
//    unsigned long long _bufferedMessagesInCurrentBuffer;
//}
//@property (retain) NSObject<OS_dispatch_queue> * queue;
//@property NSObject<IDETestingDiagnosticLogWriter> * writer;
//@property unsigned long long state;
//@property (retain) NSMutableArray * buffers;
//@property (retain) NSMutableData * currentBuffer;
//@property unsigned long long maxLoggedBytes;
//@property unsigned long long maxBufferedBytes;
//@property double contextInterval;
//@property unsigned long long totalBytesLogged;
//@property unsigned long long totalBytesBuffered;
//@property (retain) NSObject<OS_dispatch_source> * rotationTimer;
//@property unsigned long long bufferedMessages;
//@property unsigned long long bufferedMessagesInCurrentBuffer;
//@property char preserveAllMessages;
//+ (void)initialize;
//- (void)dealloc;
//- (id)initWithWriter:(id)v1 maxLoggedBytes:(unsigned long long)v2 maxBufferedBytes:(unsigned long long)v3 contextInterval:(double)v4;
//- (id)initWithWriter:(id)v1 maxLoggedBytes:(unsigned long long)v2 maxBufferedBytes:(unsigned long long)v3 contextInterval:(double)v4 preserveAllMessages:(char)v5;
//- (void)logMessage:(id)v1;
//- (void)_on_queue_logMessage:(id)v1;
//- (id)_on_queue_dataForTruncatedMessage:(id)v1 withLength:(unsigned long long)v2;
//- (void)_on_queue_writeData:(id)v1;
//- (void)_on_queue_rotateBuffers;
//- (void)_on_queue_flushBuffers;
//- (void)startLogging;
//- (void)_on_queue_startLogging;
//- (void)startBuffering;
//- (void)_on_queue_startBuffering;
//- (void)dumpBuffersPreservingContextInterval;
//- (void)_on_queue_dumpBuffersPreservingContextInterval;
//- (void)flushBufferedMessages;
//- (void)_on_queue_flushBufferedMessages;
//- (void)finishLogging:(void (^ /* unknown block signature */)(void))v1;
//- (void)_on_queue_finishLogging:(void (^ /* unknown block signature */)(void))v1;
//- (void)dispatchQueueBarrier:(void (^ /* unknown block signature */)(void))v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySymbolResult : IDEOpenQuicklyResult {
//    DVTDocumentLocation * _location;
//    DVTFilePath * _sourceSDKFilePath;
//    DVTFilePath * _symbolFilePath;
//    NSObject<IDEOpenQuicklyIndexSymbol> * _symbol;
//}
//@property (readonly) NSObject<IDEOpenQuicklyIndexSymbol> * symbol;
//+ (double)scoreAdjustmentForSymbolKind:(id)v1 isComplex:(char)v2;
//+ (id)resultWithCandidate:(struct DVTFuzzyMatchCandidate *)v1 precision:(long long)v2 symbol:(id)v3 query:(id)v4;
//- (id)updatedResultForQuery:(id)v1 precision:(long long)v2;
//- (unsigned long long)hashOfResultIdentity;
//- (char)representsSameResultAsSymbolResult:(id)v1;
//- (char)representsSameResult:(id)v1;
//- (id)location;
//- (id)sourceSDKFilePath;
//- (char)isSymbolic;
//- (char)isFromPoject;
//- (unsigned long long)hashForAlternateIdentity;
//- (id)valueStandingInForForAlternateIdentity;
//- (id)alternateTitleGivenParentResult:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklySymbolKindRanking : NSObject {
//    double _regularCoefficient;
//    double _complexCoefficient;
//}
//@property double regularCoefficient;
//@property double complexCoefficient;
//- (id)initWithRegularCoefficient:(double)v1 complexCoefficient:(double)v2;
//- (id)description;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationExtractLocStringsOperation : IDELocalizationTaskOperation {
//    NSString * _argumentsPlistPath;
//    NSMutableArray * _outputStringsFiles;
//    char _swiftUISupport;
//    NSArray * _sourceFiles;
//    NSArray * _macroBaseNames;
//    NSString * _outputDirectory;
//}
//@property (readonly,copy) NSArray * sourceFiles;
//@property (readonly,copy) NSArray * macroBaseNames;
//@property (readonly) char swiftUISupport;
//@property (readonly,copy) NSString * outputDirectory;
//@property (readonly,copy) NSArray * outputStringsFiles;
//- (id)initWithSourceFiles:(id)v1 macroBaseNames:(id)v2 swiftUISupport:(char)v3 outputDirectory:(id)v4;
//- (char)startTask:(id *)v1;
//- (void)taskDidFinish;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationSourceFile : NSObject<NSCopying> {
//    unsigned long long _hash;
//    DVTFilePath * _sourceFilePath;
//    unsigned long long _fileEncoding;
//}
//@property (readonly,copy) DVTFilePath * sourceFilePath;
//@property (readonly) unsigned long long fileEncoding;
//- (id)initWithSourceFilePath:(id)v1 fileEncoding:(unsigned long long)v2;
//- (id)description;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (unsigned long long)hash;
//- (char)isEqual:(id)v1;
//- (char)isEqualToLocalizationSourceFile:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlHostServiceCommandInvocation : NSObject {
//    NSString * _extensionIdentifier;
//    NSString * _command;
//}
//@property (copy) NSString * extensionIdentifier;
//@property (retain,nonatomic) NSString * command;
//- (id)init:(id)v1 command:(SEL)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceControlHostService : NSObject<_TtP15XCSourceControl37XCSourceControlXPCHostServiceProtocol_,_TtP15XCSourceControl41XCSourceControlXPCExportedServiceProtocol_> {
//    NSObject<OS_dispatch_queue> * _serviceQueue;
//    NSMutableDictionary * _outstandingCommandInvocations;
//    NSMutableDictionary * _repositoriesPaginationBlockMapping;
//    NSMutableDictionary * _branchesPaginationBlockMapping;
//    NSString * _identifier;
//    NSString * _name;
//    NSBundle * _bundle;
//    NSArray * _endpoints;
//    NSDictionary * _endpointsByIdentifier;
//    NSOperationQueue * _paginatedResponseOperationQueue;
//}
//@property (copy) NSString * identifier;
//@property (copy) NSString * name;
//@property (retain) NSBundle * bundle;
//@property (readonly) NSOperationQueue * paginatedResponseOperationQueue;
//@property (readonly,copy) NSArray * endpoints;
//@property (readonly,copy) NSDictionary * endpointsByIdentifier;
//+ (void)initialize;
//+ (char)enableServices;
//+ (id)_servicePaths;
//+ (id)setupSourceControlHostExtensions;
//+ (id)sourceControlHostExtensions;
//+ (id)knownOrderedServiceIdentifiers;
//+ (id)sortedSourceControlHostExtensions;
//+ (id)endpointForURL:(id)v1;
//+ (id)endpointsForURL:(id)v1;
//+ (id)endpointForIdentifier:(id)v1;
//- (id)initWithIdentifier:(id)v1 name:(id)v2 bundle:(id)v3;
//- (id)serviceQueue;
//- (id)description;
//- (void)_instantiateProperEndpointDefinitions:(id)v1;
//- (void)cancelOperation:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (id)displayName:(id)v1;
//- (void)addRepositoriesPaginationBlock:(void (^ /* unknown block signature */)(void))v1 forUUID:(id)v2;
//- (void (^ /* unknown block signature */)(void))repositoriesPaginationBlockForUUID:(id)v1;
//- (void)removeRepositoriesPaginationBlockForUUID:(id)v1;
//- (void)addBranchesPaginationBlock:(void (^ /* unknown block signature */)(void))v1 forUUID:(id)v2;
//- (void (^ /* unknown block signature */)(void))branchesPaginationBlockForUUID:(id)v1;
//- (void)removeBranchesPaginationBlockForUUID:(id)v1;
//- (void)repositoryForURL:(id)v1 url:(id)v2 account:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)capabilities:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)validateCredentials:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)requestAuthCode:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)requestPersonalAccessToken:(id)v1 account:(id)v2 twoFactorCode:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 sha:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 branch:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)webURL:(id)v1 repositoryURL:(id)v2 tag:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)webURLComponents:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (void)avatar:(id)v1 account:(id)v2 email:(id)v3 username:(id)v4 url:(id)v5 size:(unsigned int)v6 reply:(void (^ /* unknown block signature */)(void))v7;
//- (void)star:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)unstar:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)createRepository:(id)v1 account:(id)v2 owner:(id)v3 name:(id)v4 description:(id)v5 homepage:(id)v6 private:(char)v7 reply:(void (^ /* unknown block signature */)(void))v8;
//- (void)repositories:(id)v1 account:(id)v2 type:(unsigned long long)v3 pagination:(void (^ /* unknown block signature */)(void))v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)repositories:(id)v1 account:(id)v2 type:(unsigned long long)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)searchCodeRepositories:(id)v1 account:(id)v2 type:(unsigned long long)v3 query:(id)v4 path:(id)v5 filename:(id)v6 fileExtension:(id)v7 pagination:(void (^ /* unknown block signature */)(void))v8 reply:(void (^ /* unknown block signature */)(void))v9;
//- (void)searchRepositories:(id)v1 account:(id)v2 query:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)membership:(id)v1 account:(id)v2 options:(long long)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)user:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)validateSSHKey:(id)v1 account:(id)v2 publicSSHKey:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)uploadSSHKey:(id)v1 account:(id)v2 publicSSHKey:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)repositoryMetadata:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)listSSHKeys:(id)v1 account:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)username:(id)v1 url:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)pullRequests:(id)v1 account:(id)v2 repository:(id)v3 filter:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)pullRequestMergabilityInformation:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)branch:(id)v1 account:(id)v2 repositoryURL:(id)v3 branchName:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)pullRequest:(id)v1 account:(id)v2 repository:(id)v3 identifier:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)createPullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)updatePullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 force:(char)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)updatePullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 targetBranch:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)uploadPullRequestAttachments:(id)v1 account:(id)v2 repository:(id)v3 fileURLs:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)createFileDiscussion:(id)v1 discussion:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)createComment:(id)v1 comment:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)updateComment:(id)v1 comment:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)reply:(id)v1 commentEvent:(id)v2 withComment:(id)v3 pullRequest:(id)v4 account:(id)v5 repository:(id)v6 reply:(void (^ /* unknown block signature */)(void))v7;
//- (void)deleteComment:(id)v1 comment:(id)v2 pullRequest:(id)v3 account:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)fetchEvents:(id)v1 pullRequest:(id)v2 account:(id)v3 repository:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)addParticipants:(id)v1 account:(id)v2 pullRequest:(id)v3 participants:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)removeParticipants:(id)v1 account:(id)v2 pullRequest:(id)v3 participants:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)commentFor:(id)v1 in:(id)v2 account:(id)v3 repository:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)findUsers:(id)v1 matching:(id)v2 account:(id)v3 repository:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)actionPullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 action:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)mergePullRequest:(id)v1 account:(id)v2 pullRequest:(id)v3 action:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)updateRepositoryPermissions:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)repositoryBranches:(id)v1 account:(id)v2 repository:(id)v3 includeUpstream:(char)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)searchBranches:(id)v1 account:(id)v2 repository:(id)v3 query:(id)v4 pagination:(void (^ /* unknown block signature */)(void))v5 reply:(void (^ /* unknown block signature */)(void))v6;
//- (void)deleteRepositoryWithAccount:(id)v1 repository:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)deleteSSHKeyWithAccount:(id)v1 sshKey:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)resetRepositoryWithAccount:(id)v1 repository:(id)v2 defaultBranch:(id)v3 branches:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)endpointURL:(id)v1 reply:(void (^ /* unknown block signature */)(void))v2;
//- (void)listCommentsWithPullRequest:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)shouldAllowAvatarFrom:(id)v1 withAccount:(id)v2 reply:(void (^ /* unknown block signature */)(void))v3;
//- (void)commitDetails:(id)v1 account:(id)v2 repository:(id)v3 revision:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)listCommits:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)listCommits:(id)v1 account:(id)v2 pullRequest:(id)v3 file:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)renderMarkdown:(id)v1 account:(id)v2 text:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)exportFile:(id)v1 account:(id)v2 file:(id)v3 revision:(id)v4 repositoryURL:(id)v5 reply:(void (^ /* unknown block signature */)(void))v6;
//- (void)exportFile:(id)v1 account:(id)v2 file:(id)v3 revisionLocation:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)listChanges:(id)v1 account:(id)v2 pullRequest:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)createStatusAnnotation:(id)v1 account:(id)v2 repository:(id)v3 commit:(id)v4 statusAnnotation:(id)v5 reply:(void (^ /* unknown block signature */)(void))v6;
//- (void)statusAnnotation:(id)v1 account:(id)v2 repository:(id)v3 commit:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)labels:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)milestones:(id)v1 account:(id)v2 repository:(id)v3 reply:(void (^ /* unknown block signature */)(void))v4;
//- (void)setLabels:(id)v1 account:(id)v2 pullRequest:(id)v3 labels:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)setMilestone:(id)v1 account:(id)v2 pullRequest:(id)v3 milestone:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)setNetworkActivityLoggingEnabled:(char)v1;
//- (void)fetchParticipants:(id)v1 account:(id)v2 repository:(id)v3 pullRequest:(id)v4 reply:(void (^ /* unknown block signature */)(void))v5;
//- (void)commonAncestor:(id)v1 account:(id)v2 repository:(id)v3 sourceBranch:(id)v4 targetBranch:(id)v5 reply:(void (^ /* unknown block signature */)(void))v6;
//- (void)paginateRepositories:(id)v1 participant:(id)v2 repositories:(id)v3;
//- (void)paginate:(id)v1 repositoryBranches:(id)v2;
//- (void)logNetworkRequest:(id)v1;
//- (id)serviceClient;
//- (void)_logExtensionCall:(char)v1 selector:(SEL)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogCommandInvocationSectionRecorder : IDEActivityLogSectionRecorder
//@property (readonly) IDEActivityLogCommandInvocationSection * section;
//- (void)stopRecordingWithResult:(long long)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogContextInfoMessage : IDEActivityLogMessage
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogHeaderInclusionMessage : IDEActivityLogMessage
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethodManager : NSObject
//+ (id)defaultDistributionMethodManager;
//- (id)orderedDistributionMethods;
//- (char)_passesPreflightChecksForArchive:(id)v1 method:(id)v2 error:(id *)v3;
//- (id)orderedDistributionMethodsForTask:(long long)v1 archive:(id)v2 ignorePreflightChecks:(char)v3 error:(id *)v4;
//- (id)orderedDistributionMethodsForTask:(long long)v1 archive:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningBasicSigningIdentity : NSObject<IDEProvisioningBasicSigningIdentity> {
//    NSString * _identifier;
//    NSString * _userDescription;
//}
//@property (readonly) NSString * identifier;
//@property (readonly) NSString * userDescription;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithIdentifier:(id)v1 userDescription:(id)v2;
//- (char)isEqual:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionMethod : NSObject
//@property (readonly) double sortOrder;
//@property (readonly) long long supportedTask;
//@property (readonly) NSArray * supportedDestinations;
//@property (readonly,getter=isAppStoreBound) char appStoreBound;
//@property (readonly) char supportsManifestDistribution;
//@property (readonly) char supportsAppClips;
//@property (readonly) NSString * commandLineName;
//@property (readonly) NSString * title;
//@property (readonly) NSString * shortTitle;
//@property (readonly) NSString * subtitle;
//@property (readonly) NSString * certificateKind;
//@property (readonly) NSString * installerCertificateKind;
//@property (readonly) long long wantsProvisioningProfiles;
//@property (readonly) DVTPortalProfilePurpose * provisioningProfilePurpose;
//@property (readonly) DVTPortalPlatform * provisioningProfilePlatform;
//@property (readonly) NSString * exportStepName;
//@property (readonly) char supportsFreeProvisioning;
//@property (readonly) char supportsCustomToolchains;
//@property (readonly) char hasPostUploadProcessing;
//@property (readonly) NSArray * distributionOptionIdentifiers;
//- (bool)supportsDistributionOfArchive:(id)v1;
//- (id)commandLineNameForTask:(long long)v1 destination:(long long)v2;
//- (id)orderedDistributionStepClassNamesForDestination:(long long)v1;
//- (id)orderedDistributionStepModelClassNamesForDestination:(long long)v1;
//- (id)orderedDistributionStepViewControllerClassNamesForDestination:(long long)v1;
//- (id)packagingStepIdentifierForDestination:(long long)v1;
//- (id)uploadDescription;
//- (id)exportDescription;
//- (id)distributionFinishedButtonTitleForDestination:(long long)v1;
//- (char)requireHardenedRuntimeForDestination:(long long)v1;
//- (char)areDistributionItemsEligible:(id)v1 destination:(long long)v2 logAspect:(id)v3 error:(id *)v4;
//- (char)_validateArchs:(id)v1 logAspect:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface _IDETestAggregatedState : NSObject {
//    unsigned long long _sessionGeneration;
//    unsigned long long _state;
//    NSArray * _performanceMetrics;
//    NSArray * _notices;
//}
//@property (readonly) unsigned long long sessionGeneration;
//@property (readonly) unsigned long long state;
//@property (readonly,copy) NSArray * performanceMetrics;
//@property (readonly,copy) NSArray * notices;
//- (id)initWithSessionGeneration:(unsigned long long)v1 state:(unsigned long long)v2 performanceMetrics:(id)v3 notices:(id)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _IDETestableState : NSObject<DVTInvalidation> {
//    NSMutableSet * _testableObservers;
//    NSObject<IDETestable> * _testable;
//    IDETestableIssueProvider * _issueProvider;
//    unsigned long long _sessionGeneration;
//    NSMutableDictionary * _aggregatedStateForLeafNodeTest;
//    NSMutableDictionary * _cachedCompositeStateForSuperTest;
//}
//@property (readonly) NSObject<IDETestable> * testable;
//@property (readonly) IDETestableIssueProvider * issueProvider;
//@property unsigned long long sessionGeneration;
//@property (readonly) NSMutableDictionary * aggregatedStateForLeafNodeTest;
//@property (readonly) NSMutableDictionary * cachedCompositeStateForSuperTest;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)_initWithTestable:(id)v1 andWorkspace:(id)v2;
//- (void)primitiveInvalidate;
//- (void)_addObserver:(id)v1;
//- (void)_removeObserver:(id)v1;
//- (char)_hasObservers;
//- (void)_notifyTestableChanged;
//- (void)_notifyAllTestablesChanged;
//- (void)_clearCachedStateForTest:(id)v1 andNoteParentIn:(id)v2;
//- (void)_notifyObserversTestsChanged:(id)v1;
//- (void)_beginNewGenerationPrefixingAnnotationsWithConfigurationName:(char)v1;
//- (void)_processNewTestResult:(id)v1 forTest:(id)v2;
//- (void)_addAllTestsForTestable:(id)v1 intoSet:(id)v2;
//- (void)_clearAllResults;
//- (unsigned long long)_compositeStateOfSubTests:(id)v1;
//- (unsigned long long)_testableStateForTestable:(id)v1;
//- (unsigned long long)_stateOfTest:(id)v1;
//- (id)_performanceMetricsForTest:(id)v1;
//- (id)_noticesForTest:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestManager : NSObject<DVTInvalidation> {
//    IDEWorkspace * _workspace;
//    NSSet * _testableProviders;
//    NSSet * _testables;
//    NSMutableDictionary * _testablesByFileURL;
//    NSMapTable * _testableProvidersToObservingTokens;
//    NSMapTable * _testablesToObservingTokens;
//    NSMutableSet * _searchedTestables;
//    NSMutableSet * _testableObservingTokens;
//    NSMapTable * _subtestObservingTokenMapTable;
//    NSObject<DVTInvalidation> * _blueprintsChangedObserver;
//    DVTNotificationToken * _buildOperationObserver;
//    DVTNotificationToken * _cleanBuildFolderObserver;
//    DVTNotificationToken * _testableChangedHackNotification;
//    DVTObservingToken * _activeSchemeObserver;
//    NSObject<DVTCancellable> * _delayedNotifyObserversOfChangedTestablesToken;
//    DVTTimeSlicedMainThreadWorkQueue * _changedTestableNotificationQueue;
//    char _forcingReloadAll;
//    NSMutableDictionary * _dataSources;
//    NSMutableDictionary * _testRunGenerationCountsByID;
//    DVTDelayedInvocation * _forceReloadAllTestablesInvocation;
//    char _didRunTests;
//    char _loadingComplete;
//    IDETestRunSession * _testRunSession;
//    NSSet * _generateCoverageReportSessions;
//    IDELogStore * _logStore;
//    _TtC13IDEFoundation21IDEAdHocTestSelection * _testsLastRun;
//    _TtC13IDEFoundation21IDEAdHocTestSelection * _testsLastProfiled;
//    NSObject<IDETestMetadataDatabase> * _testDatabase;
//    NSMutableDictionary * _testableStateByTestableName;
//    NSMutableDictionary * _fileChangeBrokersByFileURL;
//    unsigned long long _testSessionGenerationCounter;
//    NSMutableArray * _concurrentTestRunSessions;
//    _TtC13IDEFoundation24IDETestPlanChangeHandler * _testPlanDeletionHandler;
//    _TtC13IDEFoundation24IDETestPlanChangeHandler * _testPlanTargetDeletionHandler;
//    _TtC13IDEFoundation24IDETestPlanChangeHandler * _testPlanTargetNameChangeHandler;
//    NSArray * _testConfigurationsLastRun;
//    NSArray * _testConfigurationsLastProfiled;
//    DVTFilePath * _actionResultsBundleWithBaselineOverridesFilePath;
//    NSObject<IDETestManagerUITestingPermissionSheetDelegate> * _UITestingPermissionSheetDelegate;
//}
//@property (retain) IDELogStore * logStore;
//@property (copy) NSSet * generateCoverageReportSessions;
//@property (readonly) NSMutableDictionary * testableStateByTestableName;
//@property (readonly) NSMutableDictionary * fileChangeBrokersByFileURL;
//@property char loadingComplete;
//@property unsigned long long testSessionGenerationCounter;
//@property (retain) NSMutableArray * concurrentTestRunSessions;
//@property (retain,nonatomic) _TtC13IDEFoundation24IDETestPlanChangeHandler * testPlanDeletionHandler;
//@property (retain,nonatomic) _TtC13IDEFoundation24IDETestPlanChangeHandler * testPlanTargetDeletionHandler;
//@property (retain,nonatomic) _TtC13IDEFoundation24IDETestPlanChangeHandler * testPlanTargetNameChangeHandler;
//@property (retain) _TtC13IDEFoundation21IDEAdHocTestSelection * testsLastRun;
//@property (retain) _TtC13IDEFoundation21IDEAdHocTestSelection * testsLastProfiled;
//@property (copy) NSArray * testConfigurationsLastRun;
//@property (copy) NSArray * testConfigurationsLastProfiled;
//@property (retain) DVTFilePath * actionResultsBundleWithBaselineOverridesFilePath;
//@property (nonatomic) NSObject<IDETestManagerUITestingPermissionSheetDelegate> * UITestingPermissionSheetDelegate;
//@property (readonly) IDEWorkspace * workspace;
//@property (readonly) NSSet * testableProviders;
//@property (readonly) NSSet * testables;
//@property (retain) IDETestRunSession * testRunSession;
//@property char didRunTests;
//@property (readonly) NSObject<IDETestMetadataDatabase> * testDatabase;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)testingTypeIdentifier;
//+ (void)initialize;
//+ (id)testsForFileURL:(id)v1 fromTestablesByFileURL:(id)v2;
//+ (id)testLocationsForFileURL:(id)v1 fromTestablesByFileURL:(id)v2 testablesInScheme:(id)v3 compositeStateBlock:(void (^ /* unknown block signature */)(void))v4;
//+ (id)staticLibraryDependenciesForBlueprint:(id)v1 inWorkspace:(id)v2;
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void)_removeInvalidTestableStateForInvalidTestables:(id)v1;
//- (void)_updateWithTestablesToRemove:(id)v1 toAdd:(id)v2;
//- (void)_updateWithTestableProvidersToRemove:(id)v1 toAdd:(id)v2;
//- (void)_updateForCurrentTestableProviders:(id)v1;
//- (void)addRunningTest:(id)v1;
//- (void)removeRunningTest:(id)v1;
//- (void)setLastRunSessionGenerationCount:(unsigned long long)v1 forTest:(id)v2;
//- (void)processNewTestResult:(id)v1 forTest:(id)v2;
//- (unsigned long long)_lastRunSessionGenerationCountForTest:(id)v1;
//- (unsigned long long)_lastRunSessionGenerationCountForTestable:(id)v1;
//- (void)_removeCoverageReportOperation:(id)v1;
//- (void)addCoverageReportOperation:(id)v1;
//- (void)_updateAllFileChangeBrokerObservers;
//- (void)_blueprintsDidChange:(id)v1;
//- (void)_cleanBuildFolder:(id)v1;
//- (void)_buildOperationDidStop:(id)v1;
//- (void)_notifyAllTestablesObservers;
//- (id)_stateForTestable:(id)v1;
//- (void)setTestablesObserved:(id)v1 byObserver:(id)v2;
//- (void)addObserver:(id)v1 ofFile:(id)v2;
//- (void)removeObserver:(id)v1 ofFile:(id)v2;
//- (void)_notifyUpdatedTestFilesForTestable:(id)v1 addedFiles:(id)v2 removedFiles:(id)v3;
//- (void)_notifyObserversOfChangedTestable:(id)v1;
//- (void)_delayedForceReloadAllTestables;
//- (void)_forceReloadAllTestables;
//- (void)_diffPrevious:(id)v1 current:(id)v2 onlyNew:(id *)v3 onlyOld:(id *)v4;
//- (void)_updateTestsLastRunOrProfiledForRemovedTests:(id)v1;
//- (void)_checkLoadingComplete;
//- (void)_loadTestsForTestable:(id)v1;
//- (void)_registerSubtestsObservance:(id)v1 forTest:(id)v2 inTestable:(id)v3;
//- (void)_unregisterSubtestsObservanceForTest:(id)v1 inTestable:(id)v2;
//- (void)_unregisterSubtestsObservanceForAllTestsInTestable:(id)v1;
//- (void)_cancelAndRemoveAllTestObservingTokens;
//- (char)isTestPendingRun:(id)v1;
//- (char)isTestablePendingRun:(id)v1;
//- (unsigned long long)stateOfTest:(id)v1;
//- (id)performanceMetricsForTest:(id)v1;
//- (id)noticesForTest:(id)v1;
//- (unsigned long long)stateOfTestable:(id)v1;
//- (unsigned long long)compositeStateOfTests:(id)v1;
//- (void)resetTestsLastRun;
//- (void)startTestingFor:(id)v1;
//- (unsigned long long)_latestGenerationForAncestorsOfTest:(id)v1;
//- (char)_shouldPurgeRuntimeDiscoveredTestTestResultForTest:(id)v1;
//- (void)_purgeInvalidRuntimeDiscoveredTestsForTest:(id)v1 withSkippedTests:(id)v2;
//- (void)finishTestingForTestingSpecifier:(id)v1;
//- (id)testOperationForTestRunSpecificationGroups:(id)v1 executionEnvironment:(id)v2 runDestinationPool:(id)v3 actionRecord:(id)v4 schemeIdentifier:(id)v5 outSchemeActionResultOperation:(id *)v6 launchParametersBlock:(void (^ /* unknown block signature */)(void))v7 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v8 error:(id *)v9;
//- (void)didCompleteFor:(id)v1;
//- (void)setTestableDataSource:(id)v1 forTestingSystemWithIdentifier:(id)v2;
//- (id)testableDataSourceForTestingSystemWithIdentifier:(id)v1;
//- (id)_bestTestableForFileURL:(id)v1;
//- (id)testsForFileURL:(id)v1;
//- (id)testLocationsForFileURL:(id)v1;
//- (id)fileURLForTestIdentifier:(id)v1;
//- (id)testForIdentifier:(id)v1;
//- (id)testablesForFileURL:(id)v1;
//- (void)asyncApplyBaselineRecord:(id)v1 forBlueprintProviderRelativePath:(id)v2 blueprintName:(id)v3 testBundleRunDestinationRecord:(id)v4 behavior:(unsigned long long)v5 completionBlock:(void (^ /* unknown block signature */)(void))v6;
//- (void)displayWorkspaceSheetForUITestingPermissionWithReply:(void (^ /* unknown block signature */)(void))v1;
//- (void)asyncApplyBaselineRecord:(id)v1 forTestBundleRunDestinationRecord:(id)v2 behavior:(unsigned long long)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDECommandLineBuildTask : IDEBuildTask {
//    NSTask * _task;
//}
//@property (readonly) NSArray * commandLine;
//@property (readonly) NSDictionary * environmentEntries;
//@property (readonly) NSString * workingDirectory;
//+ (id)buildTaskWithIdentifier:(id)v1 restorePersistedBuildResults:(char)v2 commandLine:(id)v3 workingDirectory:(id)v4 environmentEntries:(id)v5;
//+ (id)buildTaskWithIdentifier:(id)v1 restorePersistedBuildResults:(char)v2 commandLine:(id)v3;
//+ (id)buildTaskWithIdentifier:(id)v1 restorePersistedBuildResults:(char)v2 command:(id)v3;
//- (id)initWithIdentifier:(id)v1 restorePersistedBuildResults:(char)v2 properties:(id)v3;
//- (void)dealloc;
//- (void)main;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOpenQuicklyUtilities : NSObject
//+ (id)selectAbout:(long long)v1 fromGroupsOfOrderedResults:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDESymbolicBreakpoint : IDEBreakpoint {
//    NSString * _symbolName;
//    NSString * _moduleName;
//}
//@property (copy) NSString * symbolName;
//@property (copy) NSString * moduleName;
//+ (id)propertiesAffectingPersistenceState;
//+ (id)keyPathsForValuesAffectingDisplayName;
//+ (id)keyPathsForValuesAffectingLocationsProvideAdditionalInformation;
//- (id)init;
//- (id)initWithSymbolName:(id)v1 moduleName:(id)v2;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)displayName;
//- (id)description;
//- (char)locationsProvideAdditionalInformation;
//- (id)accessibilityDescription;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpointAction : NSObject<DVTXMLUnarchiving,NSCopying> {
//    NSArray * _expressions;
//    char _displayable;
//    NSString * _displayName;
//    NSString * _filterableText;
//}
//@property (readonly) NSMutableArray * mutableExpressions;
//@property (copy) NSString * displayName;
//@property (copy) NSArray * expressions;
//@property (getter=isDisplayable) char displayable;
//@property (copy) NSString * filterableText;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//+ (id)_expandMacrosInString:(id)v1 usingBreakpoint:(id)v2;
//+ (id)_replace:(id)v1 with:(id)v2 inString:(id)v3;
//+ (id)propertiesAffectingPersistenceState;
//+ (id)_expressionsInString:(id)v1;
//- (id)init;
//- (void)_breakpointActionCommonInit;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)performActionUsingContext:(id)v1 andBreakpoint:(id)v2;
//- (void)resetExpressionResults;
//- (char)haveExpressionsBeenEvaluated;
//- (id)expandExpressionsAndMacrosInString:(id)v1 usingBreakpoint:(id)v2;
//- (void)clearExpressions;
//- (void)extractAndAddExpressionsFromString:(id)v1;
//- (void)extractAndSetExpressionsFromString:(id)v1;
//- (id)_expandExpressionsInString:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpointActionEvaluationContext : NSObject {
//    IDEDebugSession * _debugSession;
//    IDEConsoleAdaptor * _consoleAdaptor;
//    unsigned long long _selectedThreadIndex;
//    unsigned long long _selectedFrameIndex;
//}
//@property (readonly) IDEDebugSession * debugSession;
//@property (readonly) IDEConsoleAdaptor * consoleAdaptor;
//@property (readonly) unsigned long long selectedThreadIndex;
//@property (readonly) unsigned long long selectedFrameIndex;
//- (id)initWithDebugSession:(id)v1 consoleAdaptor:(id)v2 selectedThreadIndex:(unsigned long long)v3 selectedFrameIndex:(unsigned long long)v4;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionAppStoreConfigurationStep : IDEDistributionStep
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (id)defaultConfigurationPlatformsDictionaryWithError:(id *)v1;
//- (id)platformsDictionaryForConfigurationResponse:(id)v1 topLevelKey:(id)v2 logAspect:(id)v3 error:(id *)v4;
//- (char)fetchAndSetAppStoreConfigurationUsingDefaultConfiguration:(char)v1 error:(id *)v2;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//@end
//
//
///*****************************************************************/
//
@interface IDERunOperationWorkerGroup : IDERunOperationWorker {
    NSArray * _subworkers;
    NSMutableSet * _completedWorkers;
    NSMutableSet * _finishedWorkers;
    char _shouldStartNextWorker;
    unsigned long long _currentWorkerIndex;
    char _lastSubworkerFinished;
    //DVTDispatchLock * _subworkersLock;
}
- (id)initWithExtensionIdentifier:(id)v1 launchSession:(id)v2;
- (id)initWithWorkers:(id)v1 launchSession:(id)v2;
- (void)_startNextWorker;
- (void)performWorkerAction;
- (void)terminate;
- (void)startNextWorkerFromCompletedWorker:(id)v1 error:(id)v2;
- (void)finishFromFinishedWorker:(id)v1 error:(id)v2;
- (void)finishedWithError:(id)v1;
- (void)allSubworkersDidFinishWithError:(id)v1;
- (id)description;
- (void)primitiveInvalidate;
@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogMessage : NSObject<IDEBuildNoticeLogMessage,NSCopying> {
//    NSString * _title;
//    NSString * _shortTitle;
//    double _timeEmitted;
//    IDEActivityLogSection * _supersection;
//    IDEActivityLogMessage * _supermessage;
//    NSMutableArray * _submessages;
//    unsigned long long _severity;
//    IDETypeIdentifier * _type;
//    DVTDocumentLocation * _location;
//    NSString * _categoryIdent;
//    NSArray * _secondaryLocations;
//    struct os_unfair_lock_s _lock;
//}
//@property (readonly) NSString * title;
//@property (readonly) NSString * shortTitle;
//@property (readonly) NSObject<IDEBuildNoticeLogSection> * supersection;
//@property (readonly) NSObject<IDEBuildNoticeLogMessage> * supermessage;
//@property (readonly) unsigned long long severity;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) NSArray * secondaryLocations;
//@property (readonly) NSArray * submessages;
//@property (readonly) unsigned long long severity;
//@property (readonly) IDETypeIdentifier * type;
//@property (readonly) NSString * title;
//@property (readonly) NSString * shortTitle;
//@property (readonly) double timeEmitted;
//@property (readonly) IDEActivityLogSection * supersection;
//@property (readonly) IDEActivityLogMessage * supermessage;
//@property (readonly) NSArray * submessages;
//@property (readonly) NSString * logMessageString;
//@property (readonly) DVTDocumentLocation * location;
//@property (readonly) NSString * categoryIdentifier;
//@property (readonly) NSArray * secondaryLocations;
//@property (readonly) unsigned long long totalNumberOfTestFailures;
//@property (readonly) unsigned long long totalNumberOfErrors;
//@property (readonly) unsigned long long totalNumberOfWarnings;
//@property (readonly) unsigned long long totalNumberOfAnalyzerWarnings;
//@property (readonly) unsigned long long totalNumberOfAnalyzerResults;
//+ (id)optimizationOpportunityMessageType;
//+ (id)optimizationOpportunityMessageWithTitle:(id)v1 location:(id)v2;
//+ (id)defaultMessageType;
//+ (id)messageWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 location:(id)v4;
//+ (id)messageWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 filePath:(id)v4 lineNumber:(unsigned long long)v5;
//- (id)formatForIndexLog;
//- (id)initWithTitle:(id)v1 shortTitle:(id)v2 timeEmitted:(double)v3 submessages:(id)v4 severity:(unsigned long long)v5 typeIdentifierString:(id)v6 location:(id)v7 categoryIdentifier:(id)v8 secondaryLocations:(id)v9;
//- (id)initWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3;
//- (id)init;
//- (id)initWithTitle:(id)v1;
//- (id)initWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 shortTitle:(id)v4 categoryIdentifier:(id)v5 location:(id)v6;
//- (id)initWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 location:(id)v4;
//- (id)initWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 shortTitle:(id)v4 categoryIdentifier:(id)v5 filePath:(id)v6 lineNumber:(unsigned long long)v7;
//- (id)initWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 filePath:(id)v4 lineNumber:(unsigned long long)v5;
//- (id)initWithType:(id)v1 severity:(unsigned long long)v2 title:(id)v3 filePath:(id)v4;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (char)_hasEqualTitleLocationsSubmessages:(id)v1 disregardingTimestamp:(char)v2;
//- (id)description;
//- (void)_setSupersection:(id)v1;
//- (void)_setSupermessage:(id)v1;
//- (void)addSubmessage:(id)v1;
//- (void)logRecorder:(id)v1 addSubmessage:(id)v2;
//- (void)setShortTitle:(id)v1;
//- (void)setCategoryIdentifier:(id)v1;
//- (void)setSecondaryLocations:(id)v1;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogTopLevelSectionRecorder : IDEActivityLogSectionRecorder
//@property (readonly) IDEActivityLogTopLevelSection * section;
//- (void)stopRecording;
//@end
//
//
///*****************************************************************/
//
//@interface IDEStackFramesDefaultCompressionStrategy : NSObject
//+ (id)sharedInstance;
//- (id)init;
//- (id)_initInternal;
//- (unsigned long long)maxCompressionLevel;
//- (unsigned long long)defaultCompressionLevel;
//- (id)compressStackFrames:(id)v1 level:(unsigned long long)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDELocalizationStringsFileParser : NSObject {
//    NSMutableArray * _parsedStringListElements;
//    unsigned long long _length;
//    NSData * _parseData;
//    unsigned short * _parseRaw;
//    NSArray * _lineStarts;
//    NSString * _stringToParse;
//    unsigned long long _currentPosition;
//}
//@property (readonly,nonatomic) unsigned long long currentPosition;
//@property (readonly,nonatomic,getter=isAtEnd) char atEnd;
//@property (readonly,copy,nonatomic) NSString * stringToParse;
//@property (readonly,copy,nonatomic) NSArray * parsedStringListElements;
//- (id)initWithStringToParse:(id)v1;
//- (id)init;
//- (void)_computeLineStarts;
//- (void)_translateOffset:(unsigned long long)v1 line:(unsigned long long *)v2 column:(unsigned long long *)v3;
//- (id)_composeParseError:(long long)v1;
//- (id)_composeParseError:(long long)v1 parameters:(id)v2;
//- (char)_readCharacter:(unsigned short *)v1 error:(id *)v2;
//- (void)_unreadCharacter:(unsigned short)v1;
//- (id)_parseOctalDigitsAndReturnError:(id *)v1;
//- (id)_parseHexDigitsAndReturnError:(id *)v1;
//- (id)_parseEscapeSequenceAndReturnError:(id *)v1;
//- (id)_parseUpToBackslashOrQuoteCharacter:(unsigned short)v1 stopCharacter:(unsigned short *)v2 error:(id *)v3;
//- (id)_parseQuotedStringWithQuoteCharacter:(unsigned short)v1 error:(id *)v2;
//- (id)_parseNonQuotedStringAndReturnError:(id *)v1;
//- (id)_parseStringAndReturnError:(id *)v1;
//- (char)_parseWhitespaceAndComments:(id *)v1 error:(id *)v2;
//- (char)_parseEqualsOrSemicolonCharacter:(unsigned short *)v1 error:(id *)v2;
//- (char)_parseSemicolonAndReturnError:(id *)v1;
//- (char)_parseDictionaryStart:(char *)v1 error:(id *)v2;
//- (char)_parseDictionaryEnd:(char *)v1 error:(id *)v2;
//- (void)_configureInitialState;
//- (char)parseAndReturnError:(id *)v1;
//- (void)getParseResultStrings:(id *)v1 comments:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitIndexableProxy : NSObject<IDEIndexable> {
//    char _respondsToSettingsForFilesNoQueue;
//    char _respondsToSettingsForFilesWithQueue;
//    NSString * _cachedIdentifier;
//    NSString * _cachedIndexName;
//    NSObject<IDEIndexable><DVTInvalidation> * _indexableObject;
//}
//@property (retain) NSObject<IDEIndexable><DVTInvalidation> * indexableObject;
//@property (readonly,copy) NSString * identifier;
//@property (readonly,copy) NSString * indexName;
//@property (readonly,copy) NSArray * indexableFiles;
//@property (readonly) char requiresMainThread;
//@property (readonly,copy) NSString * localizedIndexableDescription;
//@property (nonatomic) NSObject<IDEIndexable> * proxy;
//@property (readonly,copy) NSString * productType;
//@property (readonly,getter=isUnitTest) char unitTest;
//@property (readonly) NSSet * supportedPlatformsForIndexing;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithIndexable:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)containerForIndexables:(id)v1 rootPaths:(id)v2;
//- (void)productHeadersInWorkspace:(id)v1 withCompletionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (char)writeProductHeaders:(id)v1 toFile:(id)v2 error:(id *)v3;
//- (void)settingsForFilesInWorkspace:(id)v1 shouldWriteAuxiliaryFiles:(char)v2 withCompletionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (void)settingsForFilesInWorkspace:(id)v1 shouldWriteAuxiliaryFiles:(char)v2 queue:(id)v3 withCompletionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)clearCachedBuildSettings;
//- (void)languageOfMainFile:(id)v1 workspace:(id)v2 completionBlock:(void (^ /* unknown block signature */)(void))v3;
//- (id)buildSettingsForMainFile:(id)v1 workspace:(id)v2;
//- (id)productNameWithBuildSetting:(id)v1 workspace:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAbstractProvisioningProfileProvider : NSObject<DVTProvisioningProfileProvider> {
//    NSString * _identifier;
//}
//@property (readonly,nonatomic) NSString * identifier;
//@property (readonly,nonatomic) NSSet * supportedPlatforms;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (id)provisioningProfilePathExtension;
//- (id)provisioningProfileFromData:(id)v1 error:(id *)v2;
//- (id)provisioningProfileFromFilePath:(id)v1 error:(id *)v2;
//- (id)initWithIdentifier:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchive : NSObject<IDEArchiveDistributionRecordObserver,IDEDistributable,IDEDistributableEventRecording> {
//    NSMutableDictionary * _infoDictionary;
//    DVTDispatchLock * _infoDictionaryLock;
//    DVTDelayedInvocation * _delayedSave;
//    NSArray * _topLevelDistributionItems;
//    NSArray * _distributionsStorage;
//    DVTDispatchLock * _onlineStatusLock;
//    char _symbolDownloadInProgress;
//    DVTFilePath * _path;
//    IDEArchivedContent * _archivedContent;
//    NSString * _statusString;
//}
//@property (readonly) IDEProductCategory * products_productCategory;
//@property (readonly) NSString * products_displayName;
//@property (readonly) char products_hideShowStatusLog;
//@property (readonly) char products_canExportDeveloperIDApp;
//@property (retain) DVTFilePath * path;
//@property (retain,nonatomic) NSString * statusString;
//@property (readonly) NSMutableDictionary * infoDictionary;
//@property (readonly) unsigned long long version;
//@property (readonly) DVTFilePath * productsDirectoryPath;
//@property (readonly) DVTFilePath * dSYMDirectoryPath;
//@property (readonly) DVTFilePath * sourceControlBlueprintDirectoryPath;
//@property (readonly) DVTFilePath * submissionsDirectoryPath;
//@property (readonly) DVTFilePath * productDefinitionPlistPath;
//@property (copy) NSString * name;
//@property (readonly) NSString * schemeName;
//@property (readonly) NSDate * creationDate;
//@property char symbolDownloadInProgress;
//@property (copy) NSString * comment;
//@property (readonly,copy) NSArray * distributions;
//@property (readonly) IDEArchiveDistributionRecord * currentDeveloperIDUploadRecord;
//@property (readonly) char isCurrentDeveloperIDUploadRecordSuccessfulOrProcessing;
//@property (readonly,copy) NSArray * downloadedSymbolUUIDs;
//@property (readonly) IDEArchivedContent * archivedContent;
//@property (readonly) char canValidate;
//@property (readonly) char canDistribute;
//@property (readonly) char canDownloadSymbols;
//@property (readonly) char containsCustomToolchain;
//@property (readonly) NSString * toolchainIdentifier;
//@property (readonly) NSString * toolchainDisplayName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (readonly) NSObject<IDEDistributableContent> * content;
//@property (readonly) NSObject<IDEDistributableEventRecording> * recorder;
//+ (id)largestImageInFilePaths:(id)v1;
//+ (id)keyPathsForValuesAffectingProducts_hideShowStatusLog;
//+ (id)keyPathsForValuesAffectingProducts_hideDeveloperIDStatus;
//+ (id)keyPathsForValuesAffectingCanDownloadSymbols;
//+ (id)_productsDirectoryPathForArchivePath:(id)v1;
//+ (id)keyPathsForValuesAffectingProductsDirectoryPath;
//+ (id)_dSYMDirectoryPathForArchivePath:(id)v1;
//+ (id)keyPathsForValuesAffectingDSYMDirectoryPath;
//+ (id)_sourceControlBlueprintDirectoryPathForArchivePath:(id)v1;
//+ (id)keyPathsForValuesAffectingSourceControlBlueprint;
//+ (id)_submissionsDirectoryPathForArchivePath:(id)v1;
//+ (id)keyPathsForValuesAffectingSubmissionsDirectoryPath;
//+ (id)_productDefinitionPlistPathForArchivePath:(id)v1;
//+ (id)keyPathsForValuesAffectingProductDefinitionPlistPath;
//+ (id)keyPathsForValuesAffectingCurrentDeveloperIDUploadRecord;
//+ (id)archiveWithArchivePath:(id)v1;
//+ (id)installArchiveWithArchivePath:(id)v1 usingFileManager:(id)v2;
//+ (id)_infoForToolchain:(id)v1;
//+ (void)createArchiveWithName:(id)v1 schemeName:(id)v2 platform:(id)v3 toolchain:(id)v4 products:(id)v5 auxiliaryFiles:(id)v6 workspace:(id)v7 usingFileManager:(id)v8 completionBlock:(void (^ /* unknown block signature */)(void))v9;
//+ (id)_folderPathForArchiveWithDate:(id)v1;
//+ (id)_createArchiveWithName:(id)v1 usingFileManager:(id)v2 error:(id *)v3;
//+ (char)_copydSYMsFromDirectory:(id)v1 toArchiveWithPath:(id)v2 usingFileManager:(id)v3 error:(id *)v4;
//+ (char)_copyBCSymbolMapsFromDirectory:(id)v1 toArchiveWithPath:(id)v2 usingFileManager:(id)v3 error:(id *)v4;
//+ (char)_copyProductDefinitionPlistFromDirectory:(id)v1 toArchiveWithPath:(id)v2 usingFileManager:(id)v3 error:(id *)v4;
//+ (char)_copyAppleProvidedContentFromDirectory:(id)v1 toArchiveWithPath:(id)v2 usingFileManager:(id)v3 error:(id *)v4;
//+ (void)_copySCMBlueprintFromWorkspace:(id)v1 toArchiveWithPath:(id)v2 usingFileManager:(id)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//+ (id)_archivePlistPathForArchivePath:(id)v1;
//+ (id)_archivePathOverride;
//+ (id)_availableArchivePathInDirectory:(id)v1 withName:(id)v2 creationDate:(id)v3 usingFileManager:(id)v4;
//- (id)products_appInfoPlist;
//- (id)products_platformName;
//- (id)applicationBundle;
//- (id)products_platform;
//- (id)products_distributeButtonTitle;
//- (id)products_validateButtonTitle;
//- (char)products_hideDownloadSymbols;
//- (char)products_hideDeveloperIDStatus;
//- (void)dealloc;
//- (id)_initWithPath:(id)v1 infoDictionary:(id)v2;
//- (char)_canPerformTask:(long long)v1 ignorePreflightChecks:(char)v2 error:(id *)v3;
//- (char)_canPerformAllTasksWithError:(id *)v1;
//- (char)canSubmitIgnoringPreflightChecks;
//- (char)_embedPackageFromDistributionRecord:(id)v1 error:(id *)v2;
//- (char)addDistribution:(id)v1 error:(id *)v2;
//- (void)setDistributions:(id)v1;
//- (void)distributionRecordUpdated:(id)v1;
//- (char)refreshDeveloperIDStatus:(id *)v1;
//- (char)_lockedCheckDeveloperIDStatusForRecord:(id)v1 error:(id *)v2;
//- (id)embeddedPackagePathForRecord:(id)v1 error:(id *)v2;
//- (id)auditLogPathForRecord:(id)v1;
//- (char)_downloadStatusLogFromURL:(id)v1 destination:(id)v2 record:(id)v3 error:(id *)v4;
//- (void)addDownloadedSymbolUUID:(id)v1;
//- (void)_delayedSaveArchive;
//- (void)_saveArchive;
//- (id)_toolchainInfo;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitVariantWrapper : NSObject {
//    struct anonymous_type_94 _obj;
//    IDESourceKitResponse * _response;
//}
//- (id)initWithSourceKitObject:(struct anonymous_type_95)v1 response:(id)v2;
//- (id)response;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponse : NSObject {
//    struct _sourcekit_response_s * _obj;
//}
//- (id)initWithSourceKitObject:(struct _sourcekit_response_s *)v1;
//- (struct _sourcekit_response_s *)sourceKitObject;
//- (void)dealloc;
//- (id)value;
//- (char)isError;
//- (id)error;
//- (id)description;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitVariantDictionary : IDESourceKitVariantWrapper
//- (id)NSDictionaryForKey:(struct _sourcekit_uid_s *)v1;
//- (id)filePathForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalNSDictionaryForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalFilePathForKey:(struct _sourcekit_uid_s *)v1;
//- (long long)intForKey:(struct _sourcekit_uid_s *)v1;
//- (double)doubleForKey:(struct _sourcekit_uid_s *)v1;
//- (char)boolForKey:(struct _sourcekit_uid_s *)v1;
//- (struct _sourcekit_uid_s *)UIDForKey:(struct _sourcekit_uid_s *)v1;
//- (id)stringForKey:(struct _sourcekit_uid_s *)v1;
//- (id)dictionaryForKey:(struct _sourcekit_uid_s *)v1;
//- (id)arrayForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalIntForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalDoubleForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalBoolForKey:(struct _sourcekit_uid_s *)v1;
//- (struct _sourcekit_uid_s *)optionalUIDForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalStringForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalDictionaryForKey:(struct _sourcekit_uid_s *)v1;
//- (id)optionalArrayForKey:(struct _sourcekit_uid_s *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitVariantArray : IDESourceKitVariantWrapper
//- (unsigned long long)count;
//- (id)stringForIndex:(unsigned long long)v1;
//- (const  char *)cStringForIndex:(unsigned long long)v1;
//- (long long)intForIndex:(unsigned long long)v1;
//- (double)doubleForIndex:(unsigned long long)v1;
//- (char)boolForIndex:(unsigned long long)v1;
//- (struct _sourcekit_uid_s *)UIDForIndex:(unsigned long long)v1;
//- (id)dictionaryForIndex:(unsigned long long)v1;
//- (id)arrayForIndex:(unsigned long long)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitVariantDictionaryWrapper : NSObject {
//    IDESourceKitUIDSet * _UID;
//    IDESourceKitVariantDictionary * _dict;
//}
//- (id)initWithUIDSet:(id)v1 dictionary:(id)v2;
//- (id)response;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseArray : NSObject {
//    IDESourceKitUIDSet * _UID;
//    IDESourceKitVariantArray * _obj;
//    Class _objectClass;
//}
//- (id)ide_collection:(id)v1;
//- (id)ide_collectionArray:(id)v1;
//- (id)initWithUIDSet:(id)v1 array:(id)v2 objectClass:(Class)v3;
//- (unsigned long long)count;
//- (id)objectAtIndex:(unsigned long long)v1;
//- (id)objectAtIndexedSubscript:(unsigned long long)v1;
//- (id)allObjects;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseStringArray : NSObject {
//    IDESourceKitVariantArray * _obj;
//}
//- (id)initWithArray:(id)v1;
//- (unsigned long long)count;
//- (id)objectAtIndex:(unsigned long long)v1;
//- (id)objectAtIndexedSubscript:(unsigned long long)v1;
//- (const  char *)cStringAtIndex:(unsigned long long)v1;
//- (void)enumerateCStringsUsingBlock:(void (^ /* unknown block signature */)(void))v1;
//- (id)allObjects;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESourceKitResponseFilePathArray : NSObject {
//    IDESourceKitVariantArray * _obj;
//}
//- (id)ide_collection;
//- (id)initWithArray:(id)v1;
//- (unsigned long long)count;
//- (id)objectAtIndex:(unsigned long long)v1;
//- (id)objectAtIndexedSubscript:(unsigned long long)v1;
//- (id)allObjects;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchServicesLauncher : IDERunOperationPathWorker {
//    char _terminateCalled;
//    char _targetReallyDead;
//    char _responsibleForTermination;
//    char _startSuspended;
//    int _childPID;
//    struct BKSWatchdogAssertion * _watchDogAssertionRef;
//    DVTDispatchLock * _lifeCycleLock;
//    DVTDispatchLock * _deathMutex;
//    IDEPseudoTerminal * _pty;
//}
//@property (retain) IDEPseudoTerminal * pty;
//- (id)initWithExtensionIdentifier:(id)v1 launchSession:(id)v2 launchSuspended:(char)v3;
//- (void)start;
//- (char)_willUseExistingProcess;
//- (void)_setPIDOnMainThread:(int)v1;
//- (char)_setupPTY:(id *)v1;
//- (void)_launch;
//- (void)terminate;
//- (void)_forceQuit:(id)v1;
//- (void)_waitForChildExit:(int)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESwiftMigrationPlaygroundTarget : IDESwiftMigrationTarget {
//    NSObject<IDEPlaygroundReference> * _playground;
//}
//@property (readonly,copy) NSObject<IDEPlaygroundReference> * playground;
//- (id)initWithPlayground:(id)v1;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (id)title;
//- (id)subTitle;
//- (id)blueprint;
//- (char)canMigrate;
//- (char)shouldMigrate;
//- (id)warningMessage;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogChangeEvent : NSObject {
//    IDEActivityLogSection * _section;
//}
//@property (readonly) IDEActivityLogSection * section;
//+ (id)addSubsectionEventWithSection:(id)v1 subsection:(id)v2;
//+ (id)addSubmessageEventWithSection:(id)v1 supermessage:(id)v2 submessage:(id)v3;
//+ (id)appendTextEventWithSection:(id)v1 textString:(id)v2;
//+ (id)setValueEventWithSection:(id)v1 key:(id)v2 value:(id)v3;
//+ (id)stopRecordingEventWithSection:(id)v1 supersections:(id)v2;
//- (id)initWithSection:(id)v1;
//- (void)writeToLogEventStream:(id)v1;
//- (id)changedParent;
//- (id)addedChild;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAddSubsectionChangeEvent : IDEActivityLogChangeEvent {
//    IDEActivityLogSection * _subsection;
//}
//@property (readonly) IDEActivityLogSection * subsection;
//- (id)initWithSection:(id)v1 subsection:(id)v2;
//- (void)writeToLogEventStream:(id)v1;
//- (id)addedChild;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAddSubmessageChangeEvent : IDEActivityLogChangeEvent {
//    IDEActivityLogMessage * _supermessage;
//    IDEActivityLogMessage * _submessage;
//}
//@property (readonly) IDEActivityLogMessage * supermessage;
//@property (readonly) IDEActivityLogMessage * submessage;
//- (id)initWithSection:(id)v1 supermessage:(id)v2 submessage:(id)v3;
//- (id)initWithSection:(id)v1 submessage:(id)v2;
//- (void)writeToLogEventStream:(id)v1;
//- (id)changedParent;
//- (id)addedChild;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAppendTextChangeEvent : IDEActivityLogChangeEvent {
//    NSString * _textString;
//}
//@property (readonly) NSString * textString;
//- (id)initWithSection:(id)v1 textString:(id)v2;
//- (void)writeToLogEventStream:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogSetKeyValueChangeEvent : IDEActivityLogChangeEvent {
//    NSString * _key;
//    NSValue * _value;
//}
//@property (readonly) NSString * key;
//@property (readonly) NSValue * value;
//- (id)initWithSection:(id)v1 key:(id)v2 value:(id)v3;
//- (void)writeToLogEventStream:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogStopRecordingChangeEvent : IDEActivityLogChangeEvent {
//    NSSet * _supersections;
//}
//@property (readonly) NSSet * supersections;
//- (id)initWithSection:(id)v1 supersections:(id)v2;
//- (void)writeToLogEventStream:(id)v1;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAnalyzeSchemeAction : IDESchemeAction<DVTXMLUnarchiving>
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)shouldAllowCustomPhaseActions;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (void)insertsynthesizedMacrosIntoOverridingProperties:(id)v1;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)_commonInit;
//- (id)prePhaseExecutionActions;
//- (id)mutablePrePhaseExecutionActions;
//- (id)postPhaseExecutionActions;
//- (id)mutablePostPhaseExecutionActions;
//- (id)name;
//- (id)subtitle;
//- (char)doesNonActionWork;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEHardenedRuntimeItemModel : IDEProjectItemModel
//+ (id)generateAvailableHardenedRuntimeAllowances;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestIssue : IDEIssue {
//    char _shouldNotDisplayAnnotation;
//    IDETest * _test;
//    NSArray * _performanceMetrics;
//    NSString * _annotationMessage;
//    unsigned long long _issueGeneration;
//}
//@property (readonly) unsigned long long issueGeneration;
//@property char shouldNotDisplayAnnotation;
//@property (readonly) IDETest * test;
//@property (readonly) NSArray * performanceMetrics;
//@property (readonly,copy) NSString * annotationMessage;
//- (id)initWithIssueProvider:(id)v1 test:(id)v2 performanceMetrics:(id)v3 documentLocation:(id)v4 messageText:(id)v5 annotationMessage:(id)v6 issueTypeIdentifier:(id)v7 issueGeneration:(unsigned long long)v8 severity:(unsigned long long)v9;
//- (id)secondaryDocumentURLs;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestableIssueProvider : IDEIssueProvider<IDETestsInTestableObserver> {
//    IDEWorkspace * _workspace;
//    NSMutableDictionary * _issuesByTestID;
//    unsigned long long _currentIssueGeneration;
//    NSMutableSet * _observedTestables;
//    char _shouldPrefixAnnotationsWithConfigurationName;
//}
//@property char shouldPrefixAnnotationsWithConfigurationName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)v1;
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (void)_updateObservedTestablesForTest:(id)v1;
//- (void)allTestablesChanged;
//- (void)testablesChanged:(id)v1;
//- (void)testsChanged:(id)v1;
//- (id)displayNameForIssueTypeIdentifier:(id)v1;
//- (char)shouldAutoExpandIssueInNavigator:(id)v1;
//- (char)_filterIssuesByActiveScheme;
//- (void)_beginNewIssueGenerationPrefixingAnnotationsWithConfigurationName:(char)v1;
//- (void)_postTestIssue:(id)v1 forTestable:(id)v2;
//- (void)_clearStaleIssuesForTest:(id)v1;
//- (void)_addIssuesForTest:(id)v1 issues:(id)v2;
//- (id)issuesForTestResult:(id)v1 test:(id)v2;
//- (void)_processResult:(id)v1 forTest:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBatchFindRegularExpressionQuery : IDEBatchFindAbstractFileByFileTextualQuery
//+ (char)supportsAnchorning;
//+ (char)supportsCaseMatching;
//+ (id)displayName;
//+ (id)queryTermPlaceholderText;
//- (char)treatsTextAsRegularExpression;
//- (id)emptyResultSetPlaceholderResultKind;
//@end
//
//
///*****************************************************************/
//
//@interface IDEWorkspaceInfoCommandLineVerb : IDEWorkspaceBasedCommandLineVerb
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//+ (void)_indentToLevel:(unsigned long long)v1 withEnvironment:(id)v2;
//+ (void)_printSchemesForContainer:(id)v1 withEnvironment:(id)v2 indentationLevel:(unsigned long long)v3;
//+ (void)_printBlueprintProviderInfo:(id)v1 withEnvironment:(id)v2 showAllProjects:(char)v3 showTargets:(char)v4 showSchemes:(char)v5 showConfigurations:(char)v6 indentationLevel:(unsigned long long)v7;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionStripXattrsStep : IDEDistributionItemProcessingStep
//+ (bool)supportsDryRun;
//+ (bool)runsPerThinningVariant;
//- (id)name;
//- (id)requiredInputContextPropertyNames;
//- (id)providedOutputContextPropertyNames;
//- (bool)runWithError:(id *)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProvisioningEntitlementsExpansion : IDEProvisioningEntitlementsExpansion
//- (id)expandEntitlements:(id)v1 withOverrides:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionProvisionable : NSObject<IDEProvisionable> {
//    IDEDistributionProvisioningEntitlementsExpansion * _entitlementsExpansion;
//    DVTPlatform * _platform;
//    IDEDistributionItem * _distributionItem;
//    NSString * _certificateSpecifier;
//    IDEProfileSpecifier * _profileSpecifier;
//    NSObject<IDEProvisioningBasicTeam> * _team;
//    IDEDistributionMethod * _method;
//    long long _provisioningStyle;
//    NSArray * _entitlementsProcessors;
//    DVTLogAspect * _logAspect;
//}
//@property (readonly,nonatomic) NSObject<IDEProvisioningBasicTeam> * team;
//@property (readonly,nonatomic) IDEDistributionMethod * method;
//@property (readonly,nonatomic) long long provisioningStyle;
//@property (readonly,nonatomic) NSArray * entitlementsProcessors;
//@property (readonly,nonatomic) DVTLogAspect * logAspect;
//@property (readonly,nonatomic,getter=isInstallerPackage) char installerPackage;
//@property (readonly,nonatomic) IDEDistributionItem * distributionItem;
//@property (copy,nonatomic) NSString * certificateSpecifier;
//@property (retain,nonatomic) IDEProfileSpecifier * profileSpecifier;
//@property (readonly,nonatomic) NSString * name;
//@property (readonly,nonatomic) NSOrderedSet * configurations;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (id)initWithDistributionItem:(id)v1 team:(id)v2 method:(id)v3 provisioningStyle:(long long)v4 entitlementsProcessors:(id)v5 logAspect:(id)v6;
//- (long long)provisioningStyleForBuildParameters:(id)v1;
//- (id)teamForBuildParameters:(id)v1;
//- (long long)profileSupportForBuildParameters:(id)v1;
//- (id)platformForBuildParameters:(id)v1;
//- (id)sdkForBuildParameters:(id)v1;
//- (id)sdkVariantForBuildParameters:(id)v1;
//- (id)bundleIdentifierForBuildParameters:(id)v1;
//- (id)signingCertificateIdentifierForBuildParameters:(id)v1;
//- (id)provisioningProfileSpecifierForBuildParameters:(id)v1;
//- (id)baseEntitlementsForBuildParameters:(id)v1;
//- (id)entitlementsFilePathForBuildParameters:(id)v1;
//- (id)entitlementsExpansionForBuildParameters:(id)v1;
//- (id)appIDFeaturesForBuildParameters:(id)v1 entitlements:(id)v2 withEntitlementsExpansion:(id)v3;
//- (id)appIDFeaturesForBuildParameters:(id)v1;
//- (void)noteProvisioningInputsChanged;
//- (char)signingRequiresTeamForBuildParameters:(id)v1;
//- (char)allowSigningWithoutTeamSelectionForBuildParameters:(id)v1;
//- (id)provisioningPurposeForBuildParameters:(id)v1;
//- (unsigned long long)entitlementsDestinationForBuildParameters:(id)v1;
//- (char)wantsBundleIdentifierEditingForBuildParameters:(id)v1;
//- (char)supportsIOSMacForBuildParameters:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionItemProvisionable : IDEDistributionProvisionable {
//    IDEProvisionableEntitlements * _baseEntitlements;
//    DVTPortalAppIDFeatures * _appIDFeatures;
//}
//+ (id)availableCapabilitiesForPlatform:(id)v1 sdkVariant:(id)v2;
//- (long long)profileSupportForBuildParameters:(id)v1;
//- (id)bundleIdentifierForBuildParameters:(id)v1;
//- (id)signingCertificateIdentifierForBuildParameters:(id)v1;
//- (id)baseEntitlementsForBuildParameters:(id)v1;
//- (id)appIDFeaturesForBuildParameters:(id)v1;
//- (id)sdkVariantForBuildParameters:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionItemInstallerProvisionable : IDEDistributionProvisionable
//- (id)signingCertificateIdentifierForBuildParameters:(id)v1;
//- (char)isInstallerPackage;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppSubmissionPreference : NSObject {
//    char _developerWantsBitCodeSubmitted;
//    long long _appStoreStrippingSupportLevelMachineCode;
//    long long _appStoreStrippingSupportLevelBitCode;
//    long long _appStoreOnDemandResourcesSupportLevel;
//}
//@property (readonly) long long appStoreStrippingSupportLevelMachineCode;
//@property (readonly) long long appStoreStrippingSupportLevelBitCode;
//@property (readonly) long long appStoreOnDemandResourcesSupportLevel;
//@property (readonly) char developerWantsBitCodeSubmitted;
//@property (readonly) unsigned long long strippingOptions;
//- (id)initWithAppStoreStrippingSupportLevelMachineCode:(long long)v1 appStoreStrippingSupportLevelBitCode:(long long)v2 developerWantsBitCodeSubmitted:(char)v3 appStoreOnDemandResourcesSupportLevel:(long long)v4;
//- (id)description;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAppStoreSubmissionConfiguration : NSObject {
//    NSDictionary * _platformToSubmissionPreferences;
//    NSDictionary * _bitcodeSupportLevelToPlatformPreferences;
//    DVTLogAspect * _logAspect;
//    NSArray * _platformsDictionaries;
//}
//@property (retain,nonatomic) NSDictionary * platformToSubmissionPreferences;
//@property (retain,nonatomic) NSDictionary * bitcodeSupportLevelToPlatformPreferences;
//@property (retain,nonatomic) DVTLogAspect * logAspect;
//@property (retain,nonatomic) NSArray * platformsDictionaries;
//+ (id)submissionPreferenceFromConfigurationResponsePlatformDictionariesToMerge:(id)v1 error:(id *)v2;
//+ (id)platformToSubmissionPreferencesFromPlatformsDictionaries:(id)v1 logAspect:(id)v2 error:(id *)v3;
//- (id)initWithConfigurationPlatformsDictionaries:(id)v1 logAspect:(id)v2 error:(id *)v3;
//- (id)configurationByReplacingSubmissionPreference:(id)v1 forPlatform:(id)v2;
//- (id)submissionPreferenceForPlatform:(id)v1;
//- (id)platformsForBitcodeSupportLevel:(long long)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningEntitlementsExpansion : NSObject
//- (id)expandEntitlements:(id)v1 withOverrides:(id)v2;
//- (id)expandMacro:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningEntitlementsOverrides : NSObject {
//    NSString * _appIdentifierPrefix;
//    NSString * _teamIdentifierPrefix;
//    NSString * _bundleIdentifier;
//}
//@property (retain,nonatomic) NSString * appIdentifierPrefix;
//@property (retain,nonatomic) NSString * teamIdentifierPrefix;
//@property (retain,nonatomic) NSString * bundleIdentifier;
//- (id)description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAnalyzerWarningMessage : IDEActivityLogMessage
//+ (id)analyzerWarningType;
//- (char)isAnalyzerWarningMessage;
//- (unsigned long long)totalNumberOfWarnings;
//- (unsigned long long)totalNumberOfAnalyzerWarnings;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAnalyzerResultMessage : IDEActivityLogMessage {
//    NSString * _resultType;
//    long long _keyEventIndex;
//}
//@property long long keyEventIndex;
//+ (id)analyzerMessageType;
//- (unsigned long long)totalNumberOfWarnings;
//- (unsigned long long)totalNumberOfAnalyzerResults;
//- (void)setResultType:(id)v1;
//- (id)resultType;
//- (id)resultCategory;
//- (id)initWithTitle:(id)v1 location:(id)v2 resultType:(id)v3 categoryIdentifier:(id)v4 keyEventIndex:(long long)v5 submessages:(id)v6;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAnalyzerStepMessage : IDEActivityLogMessage {
//    long long _parentIndex;
//}
//@property long long parentIndex;
//- (id)initWithParentIndex:(long long)v1 title:(id)v2 location:(id)v3;
//- (char)isAnalyzerStepMessage;
//- (unsigned long long)totalNumberOfWarnings;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAnalyzerControlFlowStepMessage : IDEActivityLogAnalyzerStepMessage {
//    DVTTextDocumentLocation * _endLocation;
//    NSArray * _edges;
//}
//- (id)initWithTitle:(id)v1 startLocation:(id)v2 endLocation:(id)v3;
//- (id)initWithTitle:(id)v1 startLocation:(id)v2 endLocation:(id)v3 edges:(id)v4 parentIndex:(long long)v5;
//- (char)isAnalyzerControlFlowStepMessage;
//- (unsigned long long)totalNumberOfWarnings;
//- (id)startLocation;
//- (id)endLocation;
//- (id)edges;
//- (void)setEdges:(id)v1;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAnalyzerControlFlowStepEdge : NSObject {
//    DVTTextDocumentLocation * _startLocation;
//    DVTTextDocumentLocation * _endLocation;
//}
//- (id)initWithStartLocation:(id)v1 endLocation:(id)v2;
//- (id)startLocation;
//- (id)endLocation;
//- (id)description;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEActivityLogAnalyzerEventStepMessage : IDEActivityLogAnalyzerStepMessage {
//    NSString * _description;
//    unsigned long long _callDepth;
//}
//- (unsigned long long)totalNumberOfWarnings;
//- (id)description;
//- (void)setDescription:(id)v1;
//- (unsigned long long)callDepth;
//- (void)setCallDepth:(unsigned long long)v1;
//- (id)locations;
//- (id)initWithTitle:(id)v1 location:(id)v2 description:(id)v3 callDepth:(unsigned long long)v4 parentIndex:(long long)v5;
//- (id)dvt_initFromDeserializer:(id)v1;
//- (void)dvt_writeToSerializer:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningMechanic : NSObject<IDEProvisioningRepairDelegate,DVTInvalidation> {
//    DVTDispatchLock * _lock;
//    DVTDispatchLock * _delegateLock;
//    IDEProvisioningRepair * _activeRepair;
//    NSMutableArray * _repairs;
//    NSMutableArray * _pendingRepairs;
//    NSMutableArray * _failedRepairs;
//    NSMutableArray * _waitingForUserActionRepairs;
//    NSCountedSet * _repairablesCountedSet;
//    NSObject<IDEProvisioningMechanicDelegate> * _delegate;
//    IDEProvisioningMechanicContext * _context;
//}
//@property (readonly,nonatomic) IDEProvisioningMechanicContext * context;
//@property (readonly,nonatomic) NSObject<IDEProvisioningMechanicDelegate> * delegate;
//@property (readonly,nonatomic,getter=isValid) char valid;
//@property (readonly) DVTStackBacktrace * invalidationBacktrace;
//@property (retain) DVTStackBacktrace * creationBacktrace;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (void)initialize;
//- (id)initWithDelegate:(id)v1 context:(id)v2;
//- (void)primitiveInvalidate;
//- (char)addRepairForRepairable:(id)v1;
//- (char)removeRepairForRepairable:(id)v1;
//- (char)removeRepairForRepairable:(id)v1 includingFailedRepair:(char)v2;
//- (id)repairForRepairable:(id)v1 isExecuting:(char *)v2 userAction:(id *)v3 repairError:(id *)v4;
//- (id)repairs;
//- (id)pendingRepairs;
//- (id)waitingForUserActionRepairs;
//- (id)failedRepairs;
//- (id)activeRepair;
//- (void)repairDidBegin:(id)v1;
//- (void)repair:(id)v1 isExecutingStep:(id)v2;
//- (void)repairDidFinish:(id)v1;
//- (void)repair:(id)v1 requiresUserAction:(id)v2;
//- (void)repair:(id)v1 didFailWithError:(id)v2;
//- (void)repair:(id)v1 userActionWasAuthorized:(id)v2;
//- (void)repairUserActionDidBegin:(id)v1;
//- (void)repair:(id)v1 didFinishUserAction:(id)v2;
//- (void)repair:(id)v1 userAction:(id)v2 didFailWithError:(id)v3;
//- (id)_repairForRepairable:(id)v1;
//- (char)_executeNextRepairIfNeeded;
//- (char)_pendRepair:(id)v1 skip:(char)v2;
//- (void)_pendAllWaitingForUserActionRepairs;
//- (void)_removeRepair:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEOverridingPropertiesDeviceCache : NSObject {
//    DVTDispatchLock * _cacheLock;
//    NSMutableDictionary * _cache;
//    NSMutableDictionary * _deviceIdentifierCacheKeys;
//    NSMutableDictionary * _buildableCacheKeys;
//    DVTObservingToken * _deviceObservingToken;
//    DVTNotificationToken * _buildablesNotificationToken;
//    unsigned long long _hitCount;
//    unsigned long long _missCount;
//}
//+ (id)sharedCache;
//- (id)init;
//- (void)dealloc;
//- (id)overridingPropertiesForDevice:(id)v1 buildable:(id)v2 buildParameters:(id)v3 createBlock:(void (^ /* unknown block signature */)(void))v4;
//- (id)_cacheKeyForDevice:(id)v1 buildable:(id)v2 buildParameters:(id)v3;
//- (id)_cachedOverridingPropertiesForDevice:(id)v1 buildable:(id)v2 buildParameters:(id)v3;
//- (void)_installOverrdingBuildProperties:(id)v1 device:(id)v2 buildable:(id)v3 buildParameters:(id)v4;
//- (void)_evictCachesForDevice:(id)v1;
//- (void)_evictCachesForBuildable:(id)v1;
//- (void)_observeDevices;
//- (void)_observeBuildables;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEBreakpointLocation : IDEBreakpoint {
//    NSString * _urlString;
//    long long _startingColumnNumber;
//    long long _endingColumnNumber;
//    long long _startingLineNumber;
//    long long _endingLineNumber;
//    NSString * _characterRangeString;
//    char _usesParentBreakpointCondition;
//    NSString * _uuid;
//    DVTTextDocumentLocation * _zeroBasedDocumentLocation;
//    IDEBreakpoint * _parentBreakpoint;
//    DVTTextDocumentLocation * _documentLocation;
//    NSString * _symbolName;
//    NSString * _moduleName;
//    unsigned long long _address;
//    unsigned long long _offsetFromSymbolStart;
//}
//@property (retain,nonatomic) IDEBreakpoint * parentBreakpoint;
//@property char usesParentBreakpointCondition;
//@property (readonly) DVTTextDocumentLocation * documentLocation;
//@property (readonly) DVTTextDocumentLocation * zeroBasedDocumentLocation;
//@property (readonly) NSString * symbolName;
//@property (readonly) NSString * moduleName;
//@property (readonly) unsigned long long address;
//@property unsigned long long offsetFromSymbolStart;
//+ (void)initialize;
//+ (char)supportsInvalidationPrevention;
//+ (id)propertiesAffectingPersistenceState;
//+ (id)breakpointLocationForUUID:(id)v1;
//- (id)initWithDocumentTextLocation:(id)v1 symbolName:(id)v2 moduleName:(id)v3 address:(unsigned long long)v4;
//- (id)_uuidHash;
//- (void)_dvt_IDEBreakpointLocationCommonInit;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (id)description;
//- (id)displayName;
//- (id)bucket;
//- (char)isBreakpointLocationTheSameDisregardingAddress:(id)v1;
//- (char)_isTextDocumentLocationEqual:(id)v1;
//- (void)setUuid:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)setUsesParentBreakpointConditionFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)primitiveInvalidate;
//- (id)uuid;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInstallSchemeAction : IDESchemeAction<DVTXMLUnarchiving> {
//    NSString * _customInstallName;
//    NSArray * _killProcessList;
//    NSString * _killProcessListString;
//}
//@property (copy) NSArray * killProcessList;
//@property (copy) NSString * killProcessListString;
//@property (copy) NSString * customInstallName;
//@property (readonly) NSString * defaultInstallName;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//+ (char)allowInstallSchemeAction;
//+ (id)keyPathsForValuesAffectingSubtitle;
//+ (id)keyPathsForValuesAffectingDefaultInstallName;
//+ (id)keyPathsForValuesAffectingKillProcessListString;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)_commonInit;
//- (id)name;
//- (id)subtitle;
//- (char)doesNonActionWork;
//- (id)installOperationWithSchemeOperationParameters:(id)v1 buildOperation:(id)v2 buildParameters:(id)v3 schemeActionRecord:(id)v4 outError:(id *)v5 actionCallbackBlock:(void (^ /* unknown block signature */)(void))v6;
//- (id)overridingMacrosForInstallBuildForWorkspaceArena:(id)v1 destination:(id)v2;
//- (id)installProductDirectoriesForRunDestination:(id)v1;
//- (id)resolvedInstallBuildables;
//- (char)hasDefaultValues;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setBuildConfigurationFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setCustomInstallNameFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setKillProcessesFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEInstallOperation : DVTOperation<IDEExecutingOperationTrackable> {
//    IDEExecutionOperationTracker * _tracker;
//}
//@property (readonly) IDEExecutionOperationTracker * tracker;
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//- (void)registerTracker:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEAdditionalLaunchSchemeActionOptionsHandler : NSObject
//+ (void)populateAdditionalOptions:(id)v1 forLaunchSchemeAction:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface IDETemplateSection : NSObject {
//    NSMutableDictionary * _templateCategoriesByName;
//    NSString * _explicitName;
//    char _showsCategoriesAsChildren;
//    NSArray * _categories;
//    DVTPlatform * _platform;
//}
//@property (retain) DVTPlatform * platform;
//@property (readonly) NSString * name;
//@property (readonly) NSString * sectionIdentifier;
//@property (readonly) NSArray * categories;
//@property char showsCategoriesAsChildren;
//@property (readonly) NSArray * templates;
//+ (id)crossPlatformSectionName;
//+ (id)otherSectionName;
//- (id)initWithPlatform:(id)v1;
//- (id)initWithName:(id)v1;
//- (id)init;
//- (id)categoryWithName:(id)v1;
//- (void)addTemplate:(id)v1;
//- (void)sortAllCategories;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivingOperation : DVTOperationGroup {
//    NSString * _archiveName;
//    NSString * _schemeName;
//    DVTPlatform * _platform;
//    DVTFilePath * _archiveBuildFolder;
//    DVTFilePath * _dstrootPath;
//    DVTFilePath * _symrootPath;
//    DVTFilePath * _objrootPath;
//    DVTFilePath * _sharedPrecompsPath;
//    IDEArchivePathsSnapshot * _archiveSnapshot;
//    DVTToolchain * _toolchain;
//    char _revealCreatedArchive;
//    IDEWorkspaceArena * _workspaceArena;
//}
//@property (retain) IDEWorkspaceArena * workspaceArena;
//@property (readonly) IDEArchivePathsSnapshot * archiveSnapshot;
//+ (char)shouldEnableUnsafeIncrementalArchiveBuild;
//+ (void)_calculateArchiveBuildFolder:(id *)v1 dstrootPath:(id *)v2 symrootPath:(id *)v3 objrootPath:(id *)v4 sharedPrecompsPath:(id *)v5 givenSchemeName:(id)v6 workspaceArena:(id)v7;
//+ (id)overridingMacrosForArchiveBuildWithSchemeName:(id)v1 workspaceArena:(id)v2;
//- (id)initWithArchiveName:(id)v1 schemeName:(id)v2 workspaceArena:(id)v3 platform:(id)v4 toolchain:(id)v5 revealCreatedArchive:(char)v6;
//- (id)preparatoryOperationForArchiveBuild;
//- (void)main;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchivingOperationGroup : DVTOperationGroup {
//    IDEArchivingOperation * _archivingOperation;
//    IDEBuildOperationGroup * _buildForArchiveOperation;
//}
//@property (readonly) IDEArchivingOperation * archivingOperation;
//@property (retain) IDEBuildOperationGroup * buildForArchiveOperation;
//+ (id)operationGroupWithArchivingOperation:(id)v1 otherOperations:(id)v2;
//+ (id)operationGroupWithSuboperations:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEArchiveDistributionRecord : NSObject {
//    NSString * _status;
//    IDEArchiveDistributionEvent * _preparationEvent;
//    IDEArchiveDistributionEvent * _uploadEvent;
//    IDEArchiveDistributionEvent * _validationEvent;
//    IDEArchiveDistributionEvent * _processingEvent;
//    IDEArchiveDistributionEvent * _processingCompletedEvent;
//    NSObject<IDEArchiveDistributionRecordObserver> * _observer;
//    long long _task;
//    long long _distributionDestination;
//    long long _uploadDestination;
//    NSString * _teamID;
//    NSString * _signingCertificateSHA1;
//    NSString * _uniqueIdentifier;
//    DVTFilePath * _packagePath;
//    NSString * _originalTaskString;
//    NSString * _originalDestinationString;
//    NSString * _originalUploadDestinationString;
//    DVTDispatchLock * _lock;
//}
//@property (readonly) NSString * originalTaskString;
//@property (readonly) NSString * originalDestinationString;
//@property (readonly) NSString * originalUploadDestinationString;
//@property (retain) DVTDispatchLock * lock;
//@property (retain) DVTFilePath * packagePath;
//@property (retain,nonatomic) IDEArchiveDistributionEvent * preparationEvent;
//@property (retain,nonatomic) IDEArchiveDistributionEvent * uploadEvent;
//@property (retain,nonatomic) IDEArchiveDistributionEvent * validationEvent;
//@property (retain,nonatomic) IDEArchiveDistributionEvent * processingEvent;
//@property (retain,nonatomic) IDEArchiveDistributionEvent * processingCompletedEvent;
//@property NSObject<IDEArchiveDistributionRecordObserver> * observer;
//@property (readonly) long long task;
//@property (readonly) long long distributionDestination;
//@property (readonly) long long uploadDestination;
//@property (readonly) NSString * teamID;
//@property (readonly) NSString * signingCertificateSHA1;
//@property (readonly) NSString * uniqueIdentifier;
//@property (readonly) NSString * status;
//@property (readonly) NSArray * events;
//@property (readonly) IDEArchiveDistributionEvent * currentEvent;
//@property (readonly,nonatomic) char isDeveloperIDUploadRecord;
//+ (id)recordWithTask:(long long)v1 destination:(long long)v2 uploadDestination:(long long)v3 teamID:(id)v4 signingCertificateSHA1:(id)v5 uniqueIdentifier:(id)v6 packagePath:(id)v7;
//+ (id)recordFromDictionaryRepresentation:(id)v1;
//+ (id)keyPathsForValuesAffectingEvents;
//+ (id)keyPathsForValuesAffectingCurrentEvent;
//+ (id)keyPathsForValuesAffectingStatus;
//- (id)init;
//- (id)_taskForSerialization;
//- (id)_destinatonForSerialization;
//- (id)_uploadDestinationForSerialization;
//- (id)dictionaryRepresentation;
//- (char)isEqual:(id)v1;
//- (unsigned long long)hash;
//- (id)description;
//- (long long)compare:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDESimulateLocationService : DVTDeviceService
//+ (id)capability;
//- (char)stopLocationSimulationWithError:(id *)v1;
//- (char)simulateLocationWithLatitude:(id)v1 longitude:(id)v2 error:(id *)v3;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFileBreakpoint : IDEBreakpoint {
//    DVTFilePath * _dvtFilePath;
//    NSString * _filePath;
//    long long _startingColumnNumber;
//    long long _endingColumnNumber;
//    long long _startingLineNumber;
//    long long _endingLineNumber;
//    NSString * _characterRangeString;
//    DVTTextDocumentLocation * _location;
//    NSString * _landmarkName;
//    unsigned long long _landmarkType;
//}
//@property (readonly) NSString * filePathStringForArchiving;
//@property (copy,nonatomic) DVTTextDocumentLocation * location;
//@property (copy) NSString * landmarkName;
//@property unsigned long long landmarkType;
//@property (readonly) char associatedFileExists;
//+ (id)propertiesAffectingPersistenceState;
//+ (id)keyPathsForValuesAffectingDisplayName;
//+ (unsigned long long)assertionBehaviorForKeyValueObservationsAtEndOfEvent;
//- (id)initWithDocumentTextLocation:(id)v1;
//- (id)copyWithZone:(struct _NSZone *)v1;
//- (void)_createDVTFilePathFromLocationAndWatchIt;
//- (id)displayName;
//- (void)setLocationFromZeroBasedLocation:(id)v1 newTimestamp:(char)v2;
//- (id)zeroBasedLocation;
//- (id)description;
//- (id)accessibilityDescription;
//- (void)dvt_awakeFromXMLUnarchiver:(id)v1;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)ideModelObjectTypeIdentifier;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEProvisioningProfileBulkDownloader : NSObject {
//    char _busy;
//    double _progress;
//    NSOperationQueue * _serialQueue;
//    NSOperationQueue * _workQueue;
//    IDEProvisioningSessionManager * _sessionManager;
//    DVTProvisioningProfileManager * _profileManager;
//    NSObject<IDEProvisioningProfileDownloaderPortal> * _portal;
//    DVTLogAspect * _logAspect;
//}
//@property (retain,nonatomic) NSOperationQueue * serialQueue;
//@property (retain,nonatomic) NSOperationQueue * workQueue;
//@property (retain,nonatomic) IDEProvisioningSessionManager * sessionManager;
//@property (retain,nonatomic) DVTProvisioningProfileManager * profileManager;
//@property (retain,nonatomic) NSObject<IDEProvisioningProfileDownloaderPortal> * portal;
//@property (retain,nonatomic) DVTLogAspect * logAspect;
//@property (nonatomic,getter=isBusy) char busy;
//@property double progress;
//+ (id)defaultDownloader;
//- (id)initWithSessionManager:(id)v1 profileManager:(id)v2 portal:(id)v3;
//- (id)manualProfiles:(id)v1;
//- (id)portalProfilesForTeam:(id)v1 session:(id)v2 platform:(id)v3 sdkVariant:(id)v4 error:(id *)v5;
//- (id)portalProfilesForTeam:(id)v1 session:(id)v2 error:(id *)v3;
//- (void)waitForAreProfilesLoaded;
//- (id)fetchProvisioningProfiles;
//- (void)installDownloadedPortalProfiles:(id)v1 errors:(id *)v2;
//- (id)downloadPortalProfiles:(id)v1 localProfileUUIDs:(id)v2 session:(id)v3 errors:(id *)v4;
//- (id)eligiblePlatformsForTeam:(id)v1;
//- (void)serialBackgroundDownloadProfilesForTeam:(id)v1 account:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (void)downloadProfilesForTeam:(id)v1 account:(id)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDEFindCommandLineVerb : IDECommandLineVerb
//+ (id)filePathForExecutableWithName:(id)v1 commandLineToolchainNames:(id)v2 environmentVariables:(id)v3 sdk:(id)v4 diagnostics:(id *)v5;
//+ (id)filePathForLibraryWithName:(id)v1 commandLineToolchainNames:(id)v2 environmentVariables:(id)v3 sdk:(id)v4 diagnostics:(id *)v5;
//+ (id)optionDefinitionsWithEnvironment:(id)v1;
//+ (int)performWithEnvironment:(id)v1;
//+ (id)_filePathHierarchyForFilePath:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation35IDEStructureEditingPlannedProcedure : _TtC13IDEFoundation28IDEStructureEditingProcedure {
//    id topLevelItems;
//    id _masterPlans;
//    id _unplannedItemCount;
//    id _completedItemCount;
//}
//@property (nonatomic,readonly) double progress;
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34IDEActivityLogEventStreamProcessor : NSObject {
//    id bundleReader;
//    id log;
//    id baseSectionRecorder;
//    id idsToSectionRecorders;
//    id idsToSections;
//}
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation30IDETestRunDestinationAllocator : NSObject {
//    id daemonControllersByDevice;
//    id daemonControllerProvider;
//    id runDestinationAllocations;
//    id runDestinationPool;
//    id queue;
//    id inFlightRunDestinationRequest;
//    id executionEnvironment;
//    id launchParametersBlock;
//    id activityReporter;
//    id testingInstallationTracker;
//    id requests;
//}
//@property (nonatomic,readonly) id daemonControllers;
//- (void)collectLogArchivesWithStartDate:(id)v1 activityGenerator:(id)v2 completionHandler:(void (^ /* unknown block signature */)(void))v3;
//- (id)initWithRunDestinationPool:(id)v1 executionEnvironment:(id)v2 launchParametersBlock:(void (^ /* unknown block signature */)(void))v3 activityReporter:(id)v4 testingInstallationTracker:(id)v5;
//- (char)prepareForTestSessionWithTestingMode:(long long)v1 error:(id *)v2;
//- (void)beginSessionWithDaemonControllerProvider:(void (^ /* unknown block signature */)(void))v1;
//- (void)testSessionDidEnd;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation30IDETestRunDestinationAllocatorP33_F555D9396E96CF6C0D64240C589F5A4A7Request : _TtCs12_SwiftObject {
//    id testRunSpec;
//    id testRunSpecGroup;
//    id artifactsDirectory;
//    id promise;
//    id alreadyAskedPool;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation30IDETestRunDestinationAllocatorP33_F555D9396E96CF6C0D64240C589F5A4A24RunDestinationAllocation : _TtCs12_SwiftObject {
//    id runDestination;
//    id activeToolHostedProcessesCount;
//    id activeAppHostedProcessesCount;
//    id activeUITestProcessesCount;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation17IDETestCollection : NSObject {
//    id tests;
//}
//@property (nonatomic,readonly) long long hash;
//+ (id)emptyTestCollection;
//- (id)initWithTestContainers:(id)v1;
//- (id)initWithTestContainer:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21IDEAdHocTestSelection : NSObject {
//    id testCollection;
//    id configurations;
//}
//@property (nonatomic,readonly) NSObject<IDETestCollection> * testCollection;
//@property (nonatomic,readonly) NSArray * configurations;
//- (id)initWithTestCollection:(id)v1 configurations:(id)v2;
//- (id)equivalentTestSelectionByReplacingConfigurationsFromTestPlan:(id)v1;
//- (id)testSelectionByReplacingConfigurationsFromTestPlan:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation15IDETestLocation : NSObject {
//    id testIdentifier;
//    id location;
//    id tests;
//    id compositeState;
//}
//@property (nonatomic,readonly) IDETestIdentifier * testIdentifier;
//@property (nonatomic,readonly) DVTTextDocumentLocation * location;
//@property (nonatomic,readonly) NSArray * tests;
//@property (nonatomic,readonly) unsigned long long compositeState;
//@property (nonatomic,readonly) char canHaveSubtests;
//@property (nonatomic,readonly) _TtC13IDEFoundation15IDETestLocation * inheritedTestLocation;
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) NSString * description;
//- (id)initWithTestIdentifier:(id)v1 location:(id)v2 tests:(id)v3 compositeState:(unsigned long long)v4;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation25IDEDeviceAppDataReference : NSObject<DVTXMLUnarchiving> {
//    id resolvedPath;
//    id appDataBundleId;
//    id appDataDownloadDate;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (nonatomic,copy) NSString * resolvedPath;
//@property (nonatomic,copy) NSString * appDataBundleId;
//@property (nonatomic,copy) NSString * appDataDownloadDate;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setResolvedPathFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setAppDataBundleIdFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setAppDataDownloadDateFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20IDEPreviewInfoOutput : NSObject {
//    id sdkRoot;
//    id sdkVariant;
//    id buildVariant;
//    id architecture;
//    id compileCommandLine;
//    id linkCommandLine;
//    id thunkSourceFile;
//    id thunkObjectFile;
//    id thunkLibrary;
//    id pifGUID;
//}
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation46SigningEditorCapabilityItemLibraryAssetManager : NSObject {
//    id locallyDefinedSource;
//    id networkDefinedSource;
//    id delegate;
//    id contextProviderSubscription;
//    id contextProvider;
//    id configuration;
//    id emptyResultTitle;
//    id emptyResultSubtitle;
//    id isBusy;
//    id wantsContextUpdating;
//    id context;
//    id items;
//    id error;
//}
//@property (nonatomic) NSObject<_TtP13IDEFoundation54SigningEditorCapabilityItemLibraryAssetManagerDelegate_> * delegate;
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemLibraryAssetManagerContextProvider> * contextProvider;
//@property (nonatomic,retain) _TtC13IDEFoundation26SigningEditorConfiguration * configuration;
//- (id)init;
//- (void)dealloc;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation22IDEBuildNoticeProvider16BuildLogObserver : DVTInvalidation_NSObject {
//    id workspace;
//    id latestBuildLogDidChangeIdentityObservation;
//    id activeSession;
//    id observer;
//    id buildInProgress;
//}
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34IDEDocumentationIndexSymbolRequest : _TtCs12_SwiftObject {
//    id responseIsAuthoritative;
//    id responseIsMandatory;
//    id symbol;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31IDEDocumentationIndexUSRRequest : _TtCs12_SwiftObject {
//    id responseIsAuthoritative;
//    id responseIsMandatory;
//    id usrs;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation29IDEDocumentationSymbolRequest : _TtCs12_SwiftObject {
//    id responseIsAuthoritative;
//    id responseIsMandatory;
//    id symbols;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation39IDEDocumentationIndexedXMLSymbolRequest : _TtCs12_SwiftObject {
//    id responseIsAuthoritative;
//    id responseIsMandatory;
//    id indexSymbol;
//    id selectedExpressionLocation;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31IDEDocumentationSearchOperation : NSObject {
//    id _manager;
//    id _future;
//    id _qos;
//    id _completionBlock;
//}
//@property (nonatomic,readonly) char cancelled;
//- (void)cancel;
//- (char)isCancelled;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation18IDEResultReference : NSObject<NSCopying> {
//    id id;
//}
//@property (nonatomic,readonly) NSString * id;
//@property (nonatomic,readonly) long long hash;
//+ (char)clearCacheAndReturnError:(id *)v1;
//- (id)initWithId:(id)v1;
//- (id)copyWithZone:(void *)v1;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41IDEStructureEditingGroupCreationOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41IDEStructureEditingGroupMoveCopyOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21EntitlementsFileStore : NSObject {
//    id paths;
//}
//+ (id)defaultStore;
//- (id)retain:(id)v1;
//- (void)release:(id)v1;
//- (void)dealloc;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation22IDEBuildNoticeProvider17SchemeLogObserver : DVTInvalidation_NSObject {
//    id identifiedRoot;
//    id sectionAddedObservation;
//    id sectionSealedObservation;
//    id blueprintSessions;
//    id completedChildSections;
//    id observer;
//}
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31IDEActivityLogEventStreamWriter : NSObject {
//    id writer;
//    id bundleWriter;
//    id log;
//    id resultInfo;
//    id isOpen;
//    id sectionIDs;
//    id nextUnassignedID;
//}
//- (void)writeAttachSubsectionEventWithSection:(id)v1 subsection:(id)v2;
//- (void)writeAppendMessageEventWithSection:(id)v1 message:(id)v2;
//- (void)writeAppendTextEventWithSection:(id)v1 textString:(id)v2;
//- (void)writeCloseSectionEventWithSection:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDETestingBlockOutputStream : NSObject {
//    id writeHandler;
//    id finishHandler;
//}
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) writeStringHandler;
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) finishHandler;
//- (void)writeString:(id)v1;
//- (void)finish;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDETestingMultiOutputStream : NSObject {
//    id outputStreams;
//}
//- (id)initWithOutputStreams:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31IDEDocumentationManagerProducer : NSObject
//+ (id)documentationManagerWith:(id)v1;
//+ (id)sharedFullTextIndexedDocumentationManager;
//+ (void)buildDocumentationFullTextIndexIfNecessary;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation23IDEDocumentationManager
//+ (id)normalizeSearchQuery:(id)v1 preservingCase:(char)v2;
//- (id)performSearch:(id)v1 in:(int)v2 limit:(long long)v3 qualityOfService:(long long)v4 completionBlock:(void (^ /* unknown block signature */)(void))v5;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34_IDEDocumentationManagerStandalone : _TtC13IDEFoundation23IDEDocumentationManager {
//    id indexingProgress;
//}
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation36_IDEDocumentationManagerForWorkspace : _TtC13IDEFoundation23IDEDocumentationManager {
//    id _index;
//}
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation51SigningEditorCapabilityItemLibraryAssetSourceResult : NSObject {
//    id state;
//    id items;
//    id error;
//}
//@property (nonatomic,readonly) long long state;
//@property (nonatomic,readonly) NSArray * items;
//@property (nonatomic,readonly) NSError * error;
//@property (nonatomic,readonly) char isFinalState;
//- (id)initWithState:(long long)v1 items:(id)v2 error:(id)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCE13IDEFoundationCSo25IDELaunchTestSchemeAction11BaseOptions : NSObject {
//    id commandLineArgumentEntries;
//    id environmentVariableEntries;
//    id buildableReferenceForMacroExpansion;
//    id codeCoverage;
//    id addressSanitizer;
//    id isThreadSanitizerEnabled;
//    id isUndefinedBehaviorSanitizerEnabled;
//    id isMainThreadCheckerEnabled;
//    id language;
//    id region;
//    id isMallocScribbleEnabled;
//    id isMallocGuardEdgesEnabled;
//    id isGuardMallocEnabled;
//    id isNSZombieEnabled;
//    id mallocStackLoggingOptions;
//}
//@property (nonatomic,readonly) NSArray * commandLineArgumentEntries;
//@property (nonatomic,readonly) NSArray * environmentVariableEntries;
//@property (nonatomic,readonly) _TtC13IDEFoundation21IDEBuildableReference * buildableReferenceForMacroExpansion;
//@property (nonatomic,readonly) char isThreadSanitizerEnabled;
//@property (nonatomic,readonly) char isUndefinedBehaviorSanitizerEnabled;
//@property (nonatomic,readonly) char isMainThreadCheckerEnabled;
//@property (nonatomic,readonly) NSString * language;
//@property (nonatomic,readonly) NSString * region;
//@property (nonatomic,readonly) char isMallocScribbleEnabled;
//@property (nonatomic,readonly) char isMallocGuardEdgesEnabled;
//@property (nonatomic,readonly) char isGuardMallocEnabled;
//@property (nonatomic,readonly) char isNSZombieEnabled;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21ProjectDescriptorObjc : NSObject
//+ (id)describeSchemesAsJSONWithWorkspace:(id)v1 error:(id *)v2;
//+ (id)describeProductsAsJSONWithWorkspace:(id)v1 schemeName:(id)v2 actionName:(id)v3 destinationIdentifier:(id)v4 error:(id *)v5;
//+ (id)describeArchivableProductsAsJSONWithWorkspace:(id)v1 error:(id *)v2;
//+ (id)describeSwiftPackageFailuresWithErrors:(id)v1 error:(id *)v2;
//+ (id)describeSwiftPackagesWithPackages:(id)v1 error:(id *)v2;
//- (id)init;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20IDESchemeDescription : NSObject {
//    id name;
//    id disambiguatedName;
//    id isShared;
//    id isAutogenerated;
//    id actions;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * disambiguatedName;
//@property (nonatomic,readonly) char isShared;
//@property (nonatomic,readonly) char isAutogenerated;
//@property (nonatomic,readonly) _TtC13IDEFoundation14IDEActionsInfo * actions;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation13IDEActionInfo : NSObject {
//    id configurationName;
//    id products;
//    id testPlans;
//}
//@property (nonatomic,readonly) NSString * configurationName;
//@property (nonatomic,readonly) NSArray * products;
//@property (nonatomic,readonly) NSArray * testPlans;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation14IDEActionsInfo : NSObject {
//    id analyze;
//    id archive;
//    id profile;
//    id run;
//    id test;
//}
//@property (nonatomic,readonly) _TtC13IDEFoundation13IDEActionInfo * analyze;
//@property (nonatomic,readonly) _TtC13IDEFoundation13IDEActionInfo * archive;
//@property (nonatomic,readonly) _TtC13IDEFoundation13IDEActionInfo * profile;
//@property (nonatomic,readonly) _TtC13IDEFoundation13IDEActionInfo * run;
//@property (nonatomic,readonly) _TtC13IDEFoundation13IDEActionInfo * test;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation14IDEProductInfo : NSObject {
//    id displayName;
//    id identifier;
//    id supportedDestinations;
//}
//@property (nonatomic,readonly) NSString * displayName;
//@property (nonatomic,readonly) NSString * identifier;
//@property (nonatomic,readonly) NSArray * supportedDestinations;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation15IDETestPlanInfo : NSObject {
//    id displayName;
//}
//@property (nonatomic,readonly) NSString * displayName;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation18IDEDestinationInfo : NSObject {
//    id platformName;
//    id isSimulator;
//}
//@property (nonatomic,readonly) NSString * platformName;
//@property (nonatomic,readonly) char isSimulator;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21IDEProductDescription : NSObject {
//    id displayName;
//    id productName;
//    id identifier;
//    id dependencies;
//    id bundleIdentifier;
//    id deploymentTarget;
//    id marketingVersion;
//    id buildVersion;
//    id enableBitcode;
//    id team;
//    id infoPlistPath;
//    id iconPath;
//    id rawCodesign;
//    id rawProductType;
//    id rawTargetedDeviceFamilies;
//}
//@property (nonatomic,readonly) NSString * displayName;
//@property (nonatomic,readonly) NSString * productName;
//@property (nonatomic,readonly) NSString * identifier;
//@property (nonatomic,readonly) NSArray * dependencies;
//@property (nonatomic,readonly) NSString * bundleIdentifier;
//@property (nonatomic,readonly) NSString * deploymentTarget;
//@property (nonatomic,readonly) NSString * marketingVersion;
//@property (nonatomic,readonly) NSString * buildVersion;
//@property (nonatomic,readonly) char enableBitcode;
//@property (nonatomic,readonly) NSString * team;
//@property (nonatomic,readonly) NSString * infoPlistPath;
//@property (nonatomic,readonly) NSString * iconPath;
//@property (nonatomic,readonly) NSString * rawCodesign;
//@property (nonatomic,readonly) NSString * rawProductType;
//@property (nonatomic,readonly) NSArray * rawTargetedDeviceFamilies;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation26IDEProductTupleDescription : NSObject {
//    id displayName;
//    id productName;
//    id identifier;
//    id bundleIdentifier;
//    id destination;
//    id containingSchemes;
//    id iconPath;
//    id rawProductType;
//}
//@property (nonatomic,readonly) NSString * displayName;
//@property (nonatomic,readonly) NSString * productName;
//@property (nonatomic,readonly) NSString * identifier;
//@property (nonatomic,readonly) NSString * bundleIdentifier;
//@property (nonatomic,readonly) _TtC13IDEFoundation18IDEDestinationInfo * destination;
//@property (nonatomic,readonly) NSArray * containingSchemes;
//@property (nonatomic,readonly) NSString * iconPath;
//@property (nonatomic,readonly) NSString * rawProductType;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31CapabilitiesMacCatalystMigrator : NSObject {
//    id infoPlistCoordinator;
//    id coordinatorStore;
//    id hardenedRuntimeAllowances;
//    id $__lazy_storage_$_entitlementsCoordinators;
//}
//- (id)initWithInfoPlistCoordinator:(id)v1 coordinatorStore:(id)v2;
//- (void)migrate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation32SigningEditoriOSMacProvisionable : NSObject {
//    id configurationDataSourceDelegate;
//    id provisionable;
//    id dataSource;
//}
//@property (nonatomic) NSObject<IDESigningEditorConfigurationDataSourceDelegate> * configurationDataSourceDelegate;
//@property (nonatomic) _TtC13IDEFoundation26SigningEditorProvisionable * provisionable;
//@property (nonatomic) long long provisioningStyle;
//@property (nonatomic,readonly) char isSigningIdentityChangeable;
//@property (nonatomic,readonly) NSOrderedSet * signingIdentities;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicSigningIdentity> * signingIdentity;
//@property (nonatomic,readonly) long long signingStyle;
//@property (nonatomic,readonly) char wantsTeamSelectionRegardlessOfSigningStyle;
//@property (nonatomic,readonly) char repairBusy;
//@property (nonatomic,readonly) char profileChangeable;
//@property (nonatomic,readonly) long long profileSupport;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicProfile> * provisioningProfile;
//@property (nonatomic,readonly) IDEProfileQualification * profileQualification;
//@property (nonatomic,readonly) char showEmptyProfileSelectionPlaceholder;
//@property (nonatomic,readonly) char isTeamSelectionRequired;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicTeam> * team;
//@property (nonatomic,readonly) char isBundleIdentifierReadOnly;
//@property (nonatomic,readonly) char wantsBundleIdentifierEditing;
//@property (nonatomic,copy) NSString * bundleIdentifier;
//@property (nonatomic,readonly) char wantsBundleIdentifierEditingLabel;
//@property (nonatomic,readonly) NSString * bundleIdentifierPlaceholder;
//@property (nonatomic) char useIOSAppID;
//@property (nonatomic,readonly) char wantsUniversalBundleIdentifierOption;
//@property (nonatomic,readonly) _TtC13IDEFoundation26SigningEditorConfiguration * configuration;
//@property (nonatomic,readonly) long long hash;
//+ (id)keyPathsForValuesAffectingProvisioningStyle;
//+ (id)keyPathsForValuesAffectingIsRepairBusy;
//- (char)isRepairBusy;
//- (char)isProfileChangeable;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2;
//- (id)provisioningProfileDownloaderContextWithError:(id *)v1;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21CoordinatorCollection : NSObject {
//    id infoPlistCoordinator;
//    id entitlementsCoordinator;
//    id appIDFeatureCoordinator;
//    id buildSettingsCoordinator;
//    id linkedFrameworksCoordinator;
//}
//@property (nonatomic,readonly) NSObject<IDEInfoPlistCoordination> * infoPlistCoordinator;
//@property (nonatomic,readonly) NSObject<IDEEntitlementsCoordination> * entitlementsCoordinator;
//@property (nonatomic,readonly) NSObject<IDEAppIDFeatureCoordination> * appIDFeatureCoordinator;
//@property (nonatomic,readonly) NSObject<IDEBuildSettingsCoordination> * buildSettingsCoordinator;
//@property (nonatomic,readonly) NSObject<IDELinkedFrameworksCoordination> * linkedFrameworksCoordinator;
//- (id)initWithGenerator:(id)v1 configuration:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34TargetCapabilitiesCoordinatorStore : DVTInvalidation_NSObject {
//    id configurationToCoordinatorCollection;
//    id generator;
//}
//@property (nonatomic,readonly) NSArray * allCoordinatorCollections;
//- (id)initWithGenerator:(id)v1;
//- (id)coordinatorCollectionWithConfiguration:(id)v1;
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation39IDESourceControlHostTokenAuthentication : _TtC13IDEFoundation34IDESourceControlHostAuthentication {
//    id tokenAuthentication;
//    id tokenKeychainIdentifier;
//    id refreshTokenKeychainIdentifier;
//}
//- (id)initWithHostURL:(id)v1 token:(id)v2 refreshToken:(id)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation11IDETestPlan6Target : NSObject {
//    id buildableReference;
//    id isEnabled;
//    id parallelizable;
//    id deviceAppDataReference;
//    id testSelection;
//}
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDETestRunSpecificationGroup : NSObject {
//    id name;
//    id testRunSpecifications;
//    id isDerivedFromScheme;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSArray * testRunSpecifications;
//@property (nonatomic,readonly) char isDerivedFromScheme;
//- (id)initWithName:(id)v1 testRunSpecifications:(id)v2 isDerivedFromScheme:(char)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDETestPlanRunSpecification : NSObject {
//    id testPlanReference;
//    id testRunSpecificationGroups;
//    id coverageBuildableInfos;
//}
//@property (nonatomic,readonly) _TtC13IDEFoundation26IDESchemeTestPlanReference * testPlanReference;
//@property (nonatomic,readonly) NSArray * testRunSpecificationGroups;
//@property (nonatomic,readonly) NSArray * coverageBuildableInfos;
//- (id)initWithTestPlanReference:(id)v1 testRunSpecificationGroups:(id)v2 coverageBuildableInfos:(id)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation30IDEStructureEditingCoordinator : DVTInvalidation_NSObject {
//    id _backgroundQueue;
//    id logAspect;
//    id activeProcedures;
//}
//@property (nonatomic,copy) NSSet * activeProcedures;
//+ (char)useNewStructureEditingMoveCoordinator;
//- (id)init;
//- (void)primitiveInvalidate;
//- (id)createMoveCopyProcedureWithTopLevelItems:(id)v1 destinationGroup:(id)v2 insertingAtIndex:(long long)v3 commandKeyDown:(char)v4 optionKeyDown:(char)v5;
//- (id)createMoveToGroupProcedureWithTopLevelItems:(id)v1 destinationGroup:(id)v2 insertingAtIndex:(long long)v3 completionBlock:(void (^ /* unknown block signature */)(void))v4;
//- (void)beginProcedure:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation22IDEBuildNoticeProvider26SelectedBlueprintsObserver : DVTInvalidation_NSObject {
//    id workspace;
//    id observer;
//    id token;
//}
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation33SigningEditorConfigurationManager : NSObject {
//    id center;
//    id projectName;
//    id targetName;
//    id configurations;
//}
//@property (nonatomic,copy) NSString * projectName;
//@property (nonatomic,copy) NSString * targetName;
//@property (nonatomic,copy) NSArray * configurations;
//+ (id)allConfiguration;
//- (id)initWithSource:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation23IDESimulatorCloningPool : NSObject {
//    id templateSimulator;
//    id sharedClonePool;
//    id containsAlmondDestination;
//}
//@property (nonatomic,readonly) char containsAlmondDestination;
//@property (nonatomic,readonly) DVTPlatformFamily * platformFamily;
//@property (nonatomic,readonly) NSString * displayName;
//@property (nonatomic,readonly) char canVendMoreThanOneRunDestination;
//- (id)initWithTemplateSimulator:(id)v1;
//- (id)initWithTemplateSimulator:(id)v1 sharedClonePool:(id)v2;
//- (char)prepareForTestSessionWithTestingMode:(long long)v1 error:(id *)v2;
//- (void)testSessionDidEnd;
//- (char)preflightWithTestRunSpecification:(id)v1 error:(id *)v2;
//- (id)allocateRunDestinationFor:(id)v1;
//- (void)deallocateRunDestination:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation32IDEGenericTestRunDestinationPool : NSObject {
//    id queue;
//    id allRunDestinations;
//    id availableRunDestinations;
//    id requests;
//    id deviceClaims;
//    id uuid;
//    id canVendMoreThanOneRunDestination;
//    id platformFamily;
//    id containsAlmondDestination;
//}
//@property (nonatomic) char canVendMoreThanOneRunDestination;
//@property (nonatomic,readonly) DVTPlatformFamily * platformFamily;
//@property (nonatomic,readonly) char containsAlmondDestination;
//@property (nonatomic,readonly) NSString * displayName;
//- (id)initWithRunDestinations:(id)v1;
//- (id)initWithRunDestination:(id)v1;
//- (char)prepareForTestSessionWithTestingMode:(long long)v1 error:(id *)v2;
//- (void)testSessionDidEnd;
//- (char)preflightWithTestRunSpecification:(id)v1 error:(id *)v2;
//- (id)allocateRunDestinationFor:(id)v1;
//- (void)deallocateRunDestination:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation32IDEGenericTestRunDestinationPoolP33_6EA32093C120B10AF48ECD8A3860D6A27Request : _TtCs12_SwiftObject {
//    id testRunSpec;
//    id promise;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation25BackgroundModeSessionType : NSObject {
//    id name;
//    id key;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * key;
//@property (nonatomic,readonly) long long hash;
//- (id)initWithName:(id)v1 key:(id)v2;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation22IDEBuildNoticeProvider : DVTInvalidation_NSObject {
//    id workspace;
//    id buildLogAndSelectedBlueprintsObserver;
//    id openStream;
//    id providerID;
//    id collator;
//}
//- (id)initWithWorkspace:(id)v1;
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation30IDESourceControlAccountManager : NSObject<DVTSourceControlAccountManager> {
//    id accountsRepositoriesQueue;
//    id accountsRepositoriesOperationQueue;
//    id shouldLoadAccounts;
//    id credentialsManager;
//    id _knownRepositories;
//    id _accounts;
//    id sourceControlManager;
//    id userDefaults;
//    id isLoadingHostedAccounts;
//    id accountsMutationLock;
//    id queue;
//}
//@property (nonatomic,readonly) NSArray * knownRepositories;
//@property (nonatomic,readonly) NSArray * accounts;
//@property (nonatomic,readonly) NSArray * hostedAccounts;
//- (id)initWithUserDefaults:(id)v1;
//- (id)initWithSavedAccounts:(char)v1 sourceControlManager:(id)v2;
//- (id)initWithSavedAccounts:(char)v1 sourceControlManager:(id)v2 credentialsManager:(id)v3 userDefaults:(id)v4;
//- (void)accountChanged:(id)v1 previousUsername:(id)v2;
//- (void)reloadTrustedServerFingerprints;
//- (void)synchronizeSSHKeyPassphrasesFor:(id)v1;
//- (id)existingAccountForRepository:(id)v1 authenticationStrategy:(id)v2 createIfNeeded:(char)v3;
//- (id)existingAccountLikeAccount:(id)v1 addingIfNew:(char)v2;
//- (void)addAccount:(id)v1;
//- (void)add:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)removeAccount:(id)v1;
//- (void)remove:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)remove:(id)v1 deleteFromKeychain:(char)v2;
//- (void)remove:(id)v1 deleteFromKeychain:(char)v2 completion:(void (^ /* unknown block signature */)(void))v3;
//- (void)updateUserDefaults;
//- (void)loadHostedAccounts;
//- (id)hostedAccountsForUrl:(id)v1;
//- (void)loadAccountsFrom:(id)v1;
//- (id)authenticationStrategyForURL:(id)v1 usingAccount:(id)v2;
//- (id)knownRepositoryForURL:(id)v1 sourceControlSystem:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation9ResultKit : NSObject
//+ (id)logAspect;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21IDETestWorkerProvider : NSObject<IDETestWorkerProvider> {
//    id testRunSpecification;
//    id testRunSpecificationGroup;
//    id artifactsDirectory;
//    id testRunDestinationAllocator;
//}
//- (id)initWithTestRunSpecification:(id)v1 testRunSpecificationGroup:(id)v2 artifactsDirectory:(id)v3 testRunDestinationAllocator:(id)v4;
//- (id)vendWorker;
//- (void)returnWorker:(id)v1;
//- (char)supportsMultipleWorkersFor:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation35MessageTracerBuildOperationObserver : NSObject<IDEBuildOperationObserver> {
//    id queue;
//    id reportedSchemes;
//}
//- (void)buildOperationWasCompleted:(id)v1 forWorkspace:(id)v2;
//- (void)buildOperationWasSlowerThanExpected:(id)v1 forWorkspace:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation24IDESchemeOptionReference : NSObject<DVTXMLUnarchiving> {
//    id identifier;
//    id resolvedReference;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (nonatomic,copy) NSString * identifier;
//@property (nonatomic,copy) NSString * resolvedReference;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setIdentifierFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)initWithIdentifier:(id)v1;
//- (id)init;
//- (id)resolvedReferenceForWorkspace:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation47IDEStructureEditingAutoTargetInferenceOperation : _TtC13IDEFoundation40IDEStructureEditingMultiPlannedOperation {
//    id _shouldPromptForCopyMoveLeaveChoice;
//    id _needTargetSelection;
//    id _homogenousTargetSelection;
//    id _existingFileReference;
//    id _newReferencesCreated;
//    id referenceCreationCompletionBlock;
//}
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation45IDEAppIdentifierPrefixedEntitlementsProcessor : IDEEntitlementsProcessor {
//    id isEnabled;
//    id appIdentifierPrefixedEntitlements;
//}
//@property (nonatomic,readonly) char needsInteraction;
//+ (id)propertyListForContext:(id)v1;
//+ (id)availableOptionsForPropertyList;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)initWithDistributionMethod:(id)v1 distributionItem:(id)v2 itemEntitlements:(id)v3 team:(id)v4;
//- (id)initWithDistributionMethod:(id)v1 distributionItem:(id)v2 itemEntitlements:(id)v3 team:(id)v4 enableProcessor:(char)v5 appIdentifierPrefixedEntitlements:(id)v6;
//- (char)runWithError:(id *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation32IDETestPlanChangeHandlerProvider : NSObject
//+ (id)createTargetNameChangeHandlerWithWorkspace:(id)v1 notificationCenter:(id)v2;
//+ (id)createTargetDeletionHandlerWithWorkspace:(id)v1 notificationCenter:(id)v2;
//+ (id)createDeletionHandlerWithWorkspace:(id)v1 notificationCenter:(id)v2;
//- (id)init;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation24IDETestPlanChangeHandler : NSObject {
//    id token;
//    id notificationCenter;
//}
//- (void)dealloc;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation39IDEStructureEditingMoveToGroupProcedure : _TtC13IDEFoundation37IDEStructureEditingInsertingProcedure {
//    id _completionBlock;
//}
//@property (nonatomic,readonly) NSString * title;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation11IDETestPlan : NSObject {
//    id version;
//    id testableReferences;
//    id defaultOptions;
//    id configurations;
//    id isDerivedFromScheme;
//    id jsonMerger;
//}
//@property (nonatomic,copy) NSArray * testableReferences;
//@property (nonatomic,readonly) IDETestPlanOptions * defaultOptions;
//@property (nonatomic,copy) NSArray * configurations;
//@property (nonatomic) char isDerivedFromScheme;
//@property (nonatomic,readonly) NSArray * testables;
//@property (nonatomic,readonly) NSArray * enabledTestingSpecifierGroups;
//+ (id)modifiedNotification;
//+ (id)modifiedNotificationFilePathKey;
//+ (id)modifiedNotificationTestPlanCopierKey;
//- (id)init;
//- (void)configureDefaultOptionsUsingTestSchemeAction:(id)v1;
//- (void)addTestableReference:(id)v1;
//- (id)addTestableReferenceWithTestable:(id)v1 inScheme:(id)v2;
//- (id)addConfigurationWithName:(id)v1;
//- (char)isTestingEnabledForTestContainer:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation24CodableUserInfoReference : _TtCs12_SwiftObject {
//    id target;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDECommandLineArgumentEntry : NSObject {
//    id argument;
//    id enabled;
//}
//@property (nonatomic,copy) NSString * argument;
//@property (nonatomic) char enabled;
//@property (nonatomic,readonly) NSString * description;
//@property (nonatomic,readonly) long long hash;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setArgumentFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setIsEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (char)isEnabled;
//- (id)initWithArgument:(id)v1 enabled:(char)v2;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(void *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28SigningEditorUserDescription : NSObject
//+ (id)signingEditorName;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation17IDEBlockThrottler : _TtCs12_SwiftObject {
//    id throttlingWindow;
//    id syncQueue;
//    id currentWorkBlock;
//    id isEnabled;
//    id lastFiredTimestamp;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation23IDETestDaemonController : NSObject {
//    id queue;
//    id observersToObserverQueues;
//    id daemonControlSessionGenerator;
//    id $__lazy_storage_$_lazyDaemonControlSession;
//    id diagnosticReportProcessor;
//    id diagnosticsDirectory;
//    id logStream;
//    id processNamesToToolchains;
//    id monitoredCrashReportDirectoryPaths;
//    id monitoredCrashReportProcessNames;
//    id requestedCrashReportProcessNames;
//    id bundleIDsForCrashReportEmphasis;
//    id selfDiagnosisIssueHandler;
//}
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) selfDiagnosisIssueHandler;
//- (id)initWithDaemonControlSessionGenerator:(void (^ /* unknown block signature */)(void))v1 temporaryDirectoryPath:(id)v2 processNamesToToolchains:(id)v3 monitoredCrashReportDirectoryPaths:(id)v4 bundleIDsForCrashReportEmphasis:(id)v5;
//- (void)dealloc;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation35IDETestDaemonControllerWithFallback : NSObject {
//    id primaryDaemonController;
//    id fallbackDaemonController;
//}
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) selfDiagnosisIssueHandler;
//- (id)initWithPrimaryDaemonController:(id)v1 fallbackDaemonController:(id)v2;
//- (void)activate;
//- (void)addObserver:(id)v1 queue:(id)v2;
//- (void)removeObserver:(id)v1;
//- (void)authorizeProcessWithIdentifier:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)addProcessNamesToMonitoredCrashReports:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)collectLogArchiveFromDate:(id)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (void)requestSpindumpWithPid:(int)v1 completion:(void (^ /* unknown block signature */)(void))v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation15DescriptorCache : _TtCs12_SwiftObject {
//    id _storage;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation48DistributionArchiveValidatedReformatterSelection : NSObject {
//    id error;
//    id selection;
//    id isErrorOrRequiresSelection;
//}
//@property (nonatomic,readonly) NSError * error;
//@property (nonatomic,readonly) _TtC13IDEFoundation39DistributionArchiveReformatterSelection * selection;
//@property (nonatomic,readonly) char isErrorOrRequiresSelection;
//- (id)initWithArchive:(id)v1 method:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation39DistributionArchiveReformatterSelection : NSObject {
//    id state;
//    id selectedReformatter;
//    id selectableReformatters;
//    id reformatters;
//}
//@property (nonatomic,readonly) long long state;
//@property (nonatomic,readonly) NSString * selectedBundleIdentifier;
//@property (nonatomic,retain) _TtC13IDEFoundation40DistributionArchiveSelectableReformatter * selectedReformatter;
//@property (nonatomic,readonly) NSArray * selectableReformatters;
//- (char)selectReformatterWithBundleIdentifier:(id)v1 error:(id *)v2;
//- (id)initWithArchive:(id)v1 method:(id)v2 error:(id *)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation43IDEStructureEditingSingleReferenceOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation22IDEBuildNoticeProvider37BuildLogAndSelectedBlueprintsObserver : DVTInvalidation_NSObject {
//    id logStore;
//    id observer;
//    id retiredSections;
//    id workspace;
//    id buildLogObserver;
//    id selectedBlueprintsObserver;
//    id streamingStatus;
//}
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation42IDESchemeActionTypesSerializationConverter : NSObject {
//    id name;
//}
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDEDocumentationSearchResult : NSObject {
//    id searchResult;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * ownerName;
//@property (nonatomic,readonly) NSString * collectionNames;
//@property (nonatomic,readonly) NSString * abstractText;
//@property (nonatomic,readonly) NSString * primaryName;
//@property (nonatomic,readonly) NSString * secondaryTextDecorator;
//@property (nonatomic,readonly) NSString * secondaryTextLabel;
//@property (nonatomic,readonly) DVTSourceCodeSymbolKind * sourceCodeSymbolKind;
//@property (nonatomic,readonly) NSURL * url;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDEStructureEditingProcedure : DVTInvalidation_NSObject {
//    id topLevelOperation;
//    id _mainThreadTimeSlicingQueue;
//    id logAspect;
//}
//@property (nonatomic,readonly) NSString * title;
//@property (nonatomic,readonly) double progress;
//- (id)init;
//- (void)primitiveInvalidate;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20IDEXCTestRunCoder_V2 : NSObject
//- (id)init;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation49IDEStructureEditingGroupContentsMoveCopyOperation : _TtC13IDEFoundation40IDEStructureEditingMultiPlannedOperation
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation32IDEConcreteTestingSpecifierGroup : NSObject {
//    id name;
//    id options;
//    id testingSpecifiers;
//    id isDerivedFromScheme;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSObject<IDETestPlanResolvedOptions> * options;
//@property (nonatomic,readonly) NSArray * testingSpecifiers;
//@property (nonatomic,readonly) char isDerivedFromScheme;
//- (id)initWithName:(id)v1 options:(id)v2 testingSpecifiers:(id)v3 isDerivedFromScheme:(char)v4;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20IDETestPlanSpecifier : NSObject {
//    id testPlanReference;
//    id testingSpecifierGroups;
//    id codeCoverageProvider;
//}
//@property (nonatomic,readonly) _TtC13IDEFoundation26IDESchemeTestPlanReference * testPlanReference;
//@property (nonatomic,readonly) NSArray * testingSpecifierGroups;
//@property (nonatomic,readonly) NSObject<IDECodeCoverageBuildableProviding> * codeCoverageProvider;
//- (id)initWithTestPlanReference:(id)v1 testingSpecifierGroups:(id)v2 codeCoverageProvider:(id)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation23IDEStructureEditingPlan : _TtCs12_SwiftObject {
//    id creationBacktrace;
//    id logAspect;
//    id errors;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31IDEStructureEditingMoveCopyPlan : _TtC13IDEFoundation23IDEStructureEditingPlan {
//    id item;
//    id specification;
//    id pathToMoveOrCopy;
//    id insertionPlan;
//    id parentGroupsPlan;
//    id destinationGroup;
//    id newPath;
//    id newReference;
//    id newReferenceFilePath;
//    id newDirectoryCreationMode;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation32IDEStructureEditingInsertionPlan : _TtCs12_SwiftObject {
//    id _orderedNames;
//    id _placedItems;
//    id logAspect;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation29IDETestingInstallationTracker : NSObject {
//    id lock;
//}
//- (void)addBundleIdentifier:(id)v1 hostBuildProductPath:(id)v2 toDevice:(id)v3;
//- (void)removeBundleIdentifier:(id)v1 hostBuildProductPath:(id)v2 fromDevice:(id)v3;
//- (char)shouldSkipInstallationForBundleIdentifier:(id)v1 hostBuildProductPath:(id)v2 onDevice:(id)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation33SigningEditorProvisionableManager : NSObject<IDESigningEditorAssetSelectionDataSourceProvider> {
//    id manager;
//    id dataSources;
//    id observation;
//    id delayedInvocation;
//    id dataSourceProviderSubscription;
//    id configuration;
//    id signingEditorProvisionableToMatchingProvisionables;
//    id signingEditorProvisionables;
//}
//@property (nonatomic,retain) NSObject<IDEProvisioningAssetSelectionDataSourceProvider> * manager;
//@property (nonatomic,copy) NSArray * dataSources;
//@property (nonatomic,retain) _TtC13IDEFoundation26SigningEditorConfiguration * configuration;
//- (id)initWithProvisionableManager:(id)v1 configuration:(id)v2;
//- (void)dealloc;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation22AdvisoryMessagesStream : _TtCs12_SwiftObject {
//    id streamWriter;
//    id buildNotificationToken;
//    id testNotificationToken;
//    id throttler;
//    id notificationCenter;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation11IDETestPlan11BaseOptions : _TtCE13IDEFoundationCSo25IDELaunchTestSchemeAction11BaseOptions {
//    id parallelizable;
//    id testExecutionOrdering;
//    id deviceAppDataReference;
//    id locationScenarioReference;
//    id uiTestingScreenshotsLifetime;
//    id areLocalizationScreenshotsEnabled;
//    id userAttachmentLifetime;
//    id testTimeoutsEnabled;
//    id defaultTestExecutionTimeAllowance;
//    id maximumTestExecutionTimeAllowance;
//}
//@property (nonatomic,readonly) char parallelizable;
//@property (nonatomic,readonly) long long testExecutionOrdering;
//@property (nonatomic,readonly) _TtC13IDEFoundation25IDEDeviceAppDataReference * deviceAppDataReference;
//@property (nonatomic,readonly) _TtC13IDEFoundation28IDELocationScenarioReference * locationScenarioReference;
//@property (nonatomic,readonly) long long uiTestingScreenshotsLifetime;
//@property (nonatomic,readonly) char areLocalizationScreenshotsEnabled;
//@property (nonatomic,readonly) long long userAttachmentLifetime;
//@property (nonatomic,readonly) char testTimeoutsEnabled;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDEActivityLogIssueProcessor : _TtCs12_SwiftObject {
//    id delegate;
//    id log;
//    id observationToken;
//    id creatingWorkspaceFilePath;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41InMemoryActivityLogIssueProcessorDelegate : _TtCs12_SwiftObject {
//    id warnings;
//    id analyzerWarnings;
//    id errors;
//    id testFailures;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDEStructureEditingOperation : DVTOperation {
//    id _procedure;
//    id logAspect;
//}
//- (void)main;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation35IDEStructureEditingPlannedOperation : _TtC13IDEFoundation28IDEStructureEditingOperation {
//    id plan;
//}
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation40IDEStructureEditingMultiPlannedOperation : _TtC13IDEFoundation28IDEStructureEditingOperation {
//    id plans;
//}
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation38IDEProvisionableDestinationRequirement : NSObject {
//    id requireRegistration;
//    id destinations;
//}
//@property (nonatomic,readonly) char requireRegistration;
//@property (nonatomic,readonly) NSSet * destinations;
//@property (nonatomic,readonly) NSString * description;
//@property (nonatomic,readonly) long long hash;
//+ (id)requireUnregisteredDestinations:(id)v1;
//+ (id)requireRegisteredDestinations:(id)v1;
//- (id)initWithDestinations:(id)v1 requireRegistration:(char)v2;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation53SigningEditorCapabilityItemLibraryAssetManagerContext : NSObject {
//    id target;
//    id configuration;
//    id platform;
//    id isMacCatalystTarget;
//    id productType;
//    id isXPCTarget;
//    id appExtensionPointIdentifier;
//    id team;
//    id supportsCapabilities;
//    id enabledCapabilityItemIdentifiers;
//}
//@property (nonatomic,readonly) long long hash;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation25SandboxItemModelPrivilege : NSObject {
//    id key;
//    id entitlement;
//    id deprecatedEntitlement;
//    id usageDescriptionKeys;
//}
//@property (nonatomic,readonly) NSString * key;
//@property (nonatomic,readonly) NSString * entitlement;
//@property (nonatomic,readonly) NSString * deprecatedEntitlement;
//@property (nonatomic,readonly) NSArray * usageDescriptionKeys;
//@property (nonatomic,readonly) long long hash;
//- (id)initWithKey:(id)v1 entitlement:(id)v2 deprecatedEntitlement:(id)v3 usageDescriptionKeys:(id)v4;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation22IDESchemeFileReference : NSObject<DVTXMLUnarchiving> {
//    id dependencies;
//    id persistedReference;
//    id scheme;
//    id resolvedFilePathResult;
//    id fileReferenceObservations;
//}
//@property (nonatomic,copy) NSString * persistedReference;
//@property (nonatomic,retain) NSObject<_TtP13IDEFoundation29IDESchemeFileReference_Scheme_> * scheme;
//@property (nonatomic,retain) DVTFilePath * resolvedFilePath;
//@property (nonatomic,readonly) NSString * persistedFileName;
//- (id)initWithResolvedFilePath:(id)v1;
//- (id)init;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)dealloc;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setReferenceFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20IDECodingKeyRegistry : _TtCs12_SwiftObject {
//    id valueStack;
//    id codingPath;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation40IDESourceControlHostBearerAuthentication : _TtC13IDEFoundation34IDESourceControlHostAuthentication {
//    id tokenKeychainIdentifier;
//    id bearerAuthentication;
//}
//- (id)initWithHostURL:(id)v1 token:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34SigningEditorCapabilityEditingItem : NSObject {
//    id delegate;
//    id manager;
//    id configuration;
//    id overrideWantsConsolidatedReadWriteBehavior;
//    id projectItemModel;
//    id coalescableWriteableKeyPaths;
//    id coalescableReadOnlyKeyPaths;
//    id $__lazy_storage_$_coalescableKeyPathsArray;
//}
//@property (nonatomic) _TtC13IDEFoundation41SigningEditorCapabilityEditingItemManager * manager;
//@property (nonatomic,readonly) IDEProjectItemModel * projectItemModel;
//@property (nonatomic,readonly) NSString * description;
//@property (nonatomic,readonly) long long hash;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDETestPlanConfiguration : NSObject {
//    id name;
//    id options;
//    id isEnabled;
//    id id;
//}
//@property (nonatomic,copy) NSString * name;
//@property (nonatomic,readonly) IDETestPlanOptions * options;
//@property (nonatomic) char isEnabled;
//@property (nonatomic,readonly) NSUUID * id;
//@property (nonatomic,readonly) long long hash;
//- (id)testingSpecifierForTestableReference:(id)v1 skippedTests:(id)v2 selectedTests:(id)v3;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(void *)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation36IDEStructureEditingNewGroupInference : NSObject
//+ (char)shouldCreateFolderFor:(id)v1;
//- (id)init;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41SigningEditorCapabilityEditingItemManager : NSObject {
//    id provider;
//    id delegate;
//    id delayedInvocation;
//    id configurationToEnabledItems;
//    id configurationToItemEligibleForEnable;
//    id capabilityEditingItems;
//    id configuration;
//    id source;
//    id capabilityEditingItemToMatchingCapabilityEditingItems;
//    id dataSources;
//}
//- (id)initWithProvider:(id)v1 configuration:(id)v2;
//- (void)dealloc;
//- (id)addCapabilityEditingItemWithIdentifiers:(id)v1 error:(id *)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDEDistributionExportOptions : NSObject {
//    id teamID;
//    id method;
//    id destination;
//    id compileBitcode;
//    id uploadBitcode;
//    id generateAppStoreInformation;
//    id manifest;
//    id onDemandResourcesAssetPacksBaseURL;
//    id embedOnDemandResourcesAssetPacksInBundle;
//    id stripSwiftSymbols;
//    id uploadSymbols;
//    id thinning;
//    id iCloudContainerEnvironment;
//    id signingStyle;
//    id signingCertificate;
//    id installerSigningCertificate;
//    id provisioningProfiles;
//    id appStoreConnectAccountUsername;
//    id testDevices;
//    id buildNumber;
//    id reformatterBundleIdentifier;
//}
//@property (nonatomic,readonly) NSString * teamID;
//@property (nonatomic,readonly) NSString * method;
//@property (nonatomic,readonly) NSString * destination;
//@property (nonatomic,readonly) char compileBitcode;
//@property (nonatomic,readonly) _TtC13IDEFoundation41IDEDistributionExportOptionsUploadBitcode * uploadBitcode;
//@property (nonatomic,readonly) char generateAppStoreInformation;
//@property (nonatomic,readonly) _TtC13IDEFoundation36IDEDistributionExportOptionsManifest * manifest;
//@property (nonatomic,readonly) NSURL * onDemandResourcesAssetPacksBaseURL;
//@property (nonatomic,readonly) char embedOnDemandResourcesAssetPacksInBundle;
//@property (nonatomic,readonly) char stripSwiftSymbols;
//@property (nonatomic,readonly) char uploadSymbols;
//@property (nonatomic,readonly) NSString * thinning;
//@property (nonatomic,readonly) NSString * iCloudContainerEnvironment;
//@property (nonatomic,readonly) NSString * signingStyle;
//@property (nonatomic,readonly) NSString * signingCertificate;
//@property (nonatomic,readonly) NSString * installerSigningCertificate;
//@property (nonatomic,readonly) _TtC13IDEFoundation48IDEDistributionExportOptionsProvisioningProfiles * provisioningProfiles;
//@property (nonatomic,readonly) NSString * appStoreConnectAccountUsername;
//@property (nonatomic,readonly) NSArray * testDevices;
//@property (nonatomic,readonly) NSString * buildNumber;
//@property (nonatomic,readonly) NSString * reformatterBundleIdentifier;
//+ (id)reformatterBundleIdentifierCodingKey;
//+ (id)loadFromURL:(id)v1 error:(id *)v2;
//- (id)initWithTeamID:(id)v1 method:(id)v2 destination:(id)v3 compileBitcode:(char)v4 uploadBitcode:(id)v5 generateAppStoreInformation:(char)v6 manifest:(id)v7 onDemandResourcesAssetPacksBaseURL:(id)v8 embedOnDemandResourcesAssetPacksInBundle:(char)v9 stripSwiftSymbols:(char)v10 uploadSymbols:(char)v11 thinning:(id)v12 iCloudContainerEnvironment:(id)v13 signingStyle:(id)v14 signingCertificate:(id)v15 installerSigningCertificate:(id)v16 provisioningProfiles:(id)v17 appStoreConnectAccountUsername:(id)v18 testDevices:(id)v19 buildNumber:(id)v20 reformatterBundleIdentifier:(id)v21;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation36IDEDistributionExportOptionsManifest : NSObject {
//    id appURL;
//    id displayImageURL;
//    id fullSizeImageURL;
//    id assetPackManifestURL;
//}
//@property (nonatomic,readonly) NSString * appURL;
//@property (nonatomic,readonly) NSString * displayImageURL;
//@property (nonatomic,readonly) NSString * fullSizeImageURL;
//@property (nonatomic,readonly) NSString * assetPackManifestURL;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41IDEDistributionExportOptionsUploadBitcode : NSObject {
//    id shouldUpload;
//}
//@property (nonatomic,readonly) char shouldUpload;
//- (id)init;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation48IDEDistributionExportOptionsProvisioningProfiles : NSObject {
//    id storage;
//}
//- (id)objectForKeyedSubscript:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol
//- (id)classMethodSymbolWithObjCSignature:(id)v1;
//- (id)instanceMethodSymbolWithObjCSignature:(id)v1;
//- (id)propertySymbolWithObjCName:(id)v1;
//- (id)childSymbolWithObjCName:(id)v1 kind:(id)v2 error:(id *)v3;
//- (id)initWithResolution:(id)v1 kind:(id)v2;
//- (id)initWithCoder:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28_IDEObjectiveCCategorySymbol : _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol
//- (id)initWithResolution:(id)v1 kind:(id)v2;
//- (id)initWithCoder:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28_IDEObjectiveCProtocolSymbol : _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol
//- (id)initWithResolution:(id)v1 kind:(id)v2;
//- (id)initWithCoder:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation25_IDEObjectiveCClassSymbol : _TtC13IDEFoundation36_IDEObjectiveCSymbolContainingSymbol
//- (id)categorySymbolWithObjCName:(id)v1;
//- (id)instanceVariableSymbolWithObjCName:(id)v1;
//- (id)initWithResolution:(id)v1 kind:(id)v2;
//- (id)initWithCoder:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation29IDEProductExtensionIdentifier : NSObject {
//    id extensionPointIdentifier;
//    id isAppClip;
//}
//@property (nonatomic,readonly) NSString * extensionPointIdentifier;
//@property (nonatomic,readonly) char isAppClip;
//+ (id)extensionIdentifierForAppClip;
//+ (id)extensionIdentifierWithExtensionPointIdentifier:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation33IDEBatchFindQueryStatusAggregator : NSObject {
//    id mainThreadState;
//    id sharedThreadState;
//    id backPressure;
//}
//- (id)initWithQuery:(id)v1;
//- (void)didStart;
//- (void)establishIncrementalGoal:(long long)v1;
//- (void)incrementProgressBy:(long long)v1;
//- (void)updateProgressTo:(long long)v1;
//- (void)deliverResults:(id)v1;
//- (void)deliverResult:(id)v1;
//- (void)didBeginStallingOnFilePath:(id)v1;
//- (void)didFinishStallingOnFilePath:(id)v1;
//- (void)didFinishGeneratingLazyChildrenOfResult:(id)v1;
//- (void)didFinish;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundationP33_73A6DC029C09B28BFB689EDBD4C7F1D812BackPressure : _TtCs12_SwiftObject {
//    id queue;
//    id signal;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41IDEDistributionProvisioningLedgerDelegate : NSObject<IDEProvisioningLedgerDelegate> {
//    id logAspect;
//}
//- (id)initWithLogging:(id)v1;
//- (void)provisioningLedger:(id)v1 didAddDetails:(id)v2 toLedgerEntry:(id)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28TargetEditorBundleIdentifier : NSObject {
//    id source;
//    id isEveryConfigurationEqual;
//    id provisionableSettingsSubscription;
//    id delayedInvocation;
//}
//@property (nonatomic,retain) NSObject<IDETargetEditorBundleIdentifierSource> * source;
//@property (nonatomic) char isEveryConfigurationEqual;
//@property (nonatomic,copy) NSString * bundleIdentifier;
//- (id)initWithSource:(id)v1;
//- (void)dealloc;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation42IDETestRunnerBootstrappingDiagnosticReport : NSObject {
//    id reportData;
//    id type;
//}
//@property (nonatomic,readonly) NSData * reportData;
//@property (nonatomic,readonly) long long type;
//- (id)initWithReportData:(id)v1 type:(long long)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation42IDEProvisionableManagerIOSMacConfiguration : NSObject {
//    id configuration;
//    id evaluation;
//    id bundleIdentifierPlaceholder;
//}
//@property (nonatomic,readonly) IDEProvisionableStatusEvaluation * evaluation;
//@property (nonatomic,readonly) char repairBusy;
//@property (nonatomic,readonly) char isTeamSelectionRequired;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicTeam> * team;
//@property (nonatomic,readonly) char profileChangeable;
//@property (nonatomic,readonly) long long profileSupport;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicProfile> * provisioningProfile;
//@property (nonatomic,readonly) IDEProfileQualification * profileQualification;
//@property (nonatomic,readonly) char showEmptyProfileSelectionPlaceholder;
//@property (nonatomic,readonly) char isBundleIdentifierReadOnly;
//@property (nonatomic,readonly) char wantsBundleIdentifierEditing;
//@property (nonatomic,readonly) char wantsBundleIdentifierEditingLabel;
//@property (nonatomic,copy) NSString * bundleIdentifier;
//@property (nonatomic,copy) NSString * bundleIdentifierPlaceholder;
//@property (nonatomic,readonly) char wantsUniversalBundleIdentifierOption;
//@property (nonatomic) char useIOSAppID;
//@property (nonatomic,readonly) char isSigningIdentityChangeable;
//@property (nonatomic,readonly) NSOrderedSet * signingIdentities;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicSigningIdentity> * signingIdentity;
//@property (nonatomic,readonly) long long signingStyle;
//@property (nonatomic,readonly) char wantsTeamSelectionRegardlessOfSigningStyle;
//- (id)initWithConfiguration:(id)v1;
//- (char)isRepairBusy;
//- (char)isProfileChangeable;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2;
//- (id)provisioningProfileDownloaderContextWithError:(id *)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation29IDESourceControlNetworkLogger : NSObject {
//    id delegates;
//    id logEntries;
//    id lock;
//    id requestCount;
//    id loggingEnabled;
//}
//@property (nonatomic) long long requestCount;
//@property (nonatomic,readonly) NSArray * allLogEntries;
//+ (id)sharedLogger;
//- (id)init;
//- (void)startLogging;
//- (void)stopLogging;
//- (void)resetState;
//- (void)logNetworkRequest:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation26SigningEditorConfiguration : NSObject {
//    id name;
//    id type;
//    id sortOrder;
//}
//@property (nonatomic,copy) NSString * name;
//@property (nonatomic) long long type;
//@property (nonatomic) long long sortOrder;
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) NSString * description;
//- (id)init:(id)v1 sortOrder:(long long)v2;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation22IDETemplateMacroEngine : NSObject {
//    id instanceOverrides;
//    id dataStoreMacros;
//    id compatibilityMacros;
//    id standardMacros;
//    id customDataStores;
//    id modifierMap;
//    id uuidTable;
//    id specialMacrosMap;
//}
//+ (id)templateMacroDefinitionsFilename;
//+ (id)userNameMacro;
//+ (id)fullUserNameMacro;
//+ (id)organizationNameMacro;
//+ (id)copyrightMacro;
//+ (id)copyrightCommentMacro;
//+ (id)humanReadableCopyrightPlistMacro;
//+ (id)fileHeaderMacro;
//+ (id)dateMacro;
//+ (id)timeMacro;
//+ (id)yearMacro;
//+ (id)uuidMacro;
//+ (id)workspaceNameMacro;
//+ (id)projectNameMacro;
//+ (id)packageNameMacro;
//+ (id)packageNamePreviewContentMacro;
//+ (id)packageNameAsIdentifierMacro;
//+ (id)targetNameMacro;
//+ (id)productNameMacro;
//+ (id)fileNameMacro;
//+ (id)fileBaseNameMacro;
//+ (id)fileBaseNameAsIdentifierMacro;
//+ (id)runningMacOSVersionMacro;
//+ (id)runningDarwinVersionMacro;
//+ (id)bestMacOSVersionMacro;
//+ (id)bestDriverKitVersionMacro;
//+ (id)defaultToolchainSwiftVersionMacro;
//- (id)init;
//- (id)initWithWorkspaceName:(id)v1 projectName:(id)v2 packageName:(id)v3 targetName:(id)v4 productName:(id)v5 fileName:(id)v6 organizationName:(id)v7 customDataStores:(id)v8;
//- (void)setExpansion:(id)v1 forMacro:(id)v2;
//- (void)addExpansionsFrom:(id)v1;
//- (id)substituteMacrosIn:(id)v1 leavingUnknownMacros:(char)v2 error:(id *)v3;
//- (char)createFileAt:(id)v1 substitutingMacrosInFileAt:(id)v2 leavingUnknownMacros:(char)v3 error:(id *)v4;
//- (id)objectForKeyedSubscript:(id)v1;
//- (void)resetStandardMacrosWithWorkspaceName:(id)v1 projectName:(id)v2 packageName:(id)v3 targetName:(id)v4 productName:(id)v5 fileName:(id)v6 organizationName:(id)v7;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation64SigningEditorCapabilityItemLibraryAssetManagerUnvalidatedContext : NSObject {
//    id target;
//    id configuration;
//    id platform;
//    id isMacCatalystTarget;
//    id productType;
//    id isXPCTarget;
//    id appExtensionPointIdentifier;
//    id team;
//    id supportsCapabilities;
//    id enabledCapabilityItemIdentifiers;
//}
//@property (nonatomic,readonly) NSString * target;
//@property (nonatomic,readonly) NSString * configuration;
//@property (nonatomic,readonly) DVTPlatform * platform;
//@property (nonatomic,readonly) char isMacCatalystTarget;
//@property (nonatomic,readonly) IDEProductType * productType;
//@property (nonatomic,readonly) char isXPCTarget;
//@property (nonatomic,readonly) NSString * appExtensionPointIdentifier;
//@property (nonatomic,readonly) NSObject<IDEProvisioningBasicTeam> * team;
//@property (nonatomic,readonly) char supportsCapabilities;
//@property (nonatomic,readonly) NSSet * enabledCapabilityItemIdentifiers;
//- (id)initWithTarget:(id)v1 configuration:(id)v2 platform:(id)v3 isMacCatalystTarget:(char)v4 productType:(id)v5 isXPCTarget:(char)v6 appExtensionPointIdentifier:(id)v7 team:(id)v8 supportsCapabilities:(char)v9 enabledCapabilityItemIdentifiers:(id)v10;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation46SigningEditorCapsuleViewStateRestorationRecord : NSObject {
//    id configurations;
//    id capabilityItemIdentifier;
//    id type;
//}
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) NSString * description;
//- (id)initWithConfigurations:(id)v1 capabilityItemIdentifier:(id)v2;
//- (id)initWithConfigurations:(id)v1;
//- (id)initWithSigningPlaceholder;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation39IDESourceControlHostBasicAuthentication : _TtC13IDEFoundation34IDESourceControlHostAuthentication {
//    id basicAuthentication;
//}
//- (id)initWithUsername:(id)v1 password:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation36IDEStructureEditingMoveCopyProcedure : _TtC13IDEFoundation37IDEStructureEditingInsertingProcedure {
//    id didShowSheet;
//    id shouldCopyFiles;
//    id shouldCreateBlueFoldersForDirectories;
//    id referenceCreationCompletionBlock;
//    id _targetApplierOperation;
//    id _initialIntentOverride;
//}
//@property (nonatomic) char didShowSheet;
//@property (nonatomic) char shouldCopyFiles;
//@property (nonatomic) char shouldCreateBlueFoldersForDirectories;
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) referenceCreationCompletionBlock;
//@property (nonatomic,readonly) NSString * title;
//@property (nonatomic,readonly) char requiresUserInteraction;
//- (void)primitiveInvalidate;
//- (void)replan;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation23IDETestingLaunchSession : NSObject<IDETestingLaunchSession> {
//    id consoleAdaptorsObservingToken;
//    id consoleAdaptor;
//    id outputStream;
//    id hasStarted;
//    id filter;
//    id receivedRunnablePID;
//}
//@property (nonatomic,retain) NSObject<IDETestingOutputStream> * outputStream;
//@property (nonatomic) char hasStarted;
//@property (nonatomic,readonly) char isFinishedReceivingData;
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) filter;
//@property (nonatomic,copy) void (^ /* unknown block signature */)(void) receivedRunnablePID;
//- (id)initWithIDELaunchSession:(id)v1;
//- (void)dealloc;
//- (void)invalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation52SigningEditorCapabilityEditingItemConsolidatedWriter : _TtCs12_SwiftObject
//@end
//
//
///*****************************************************************/
//
//@interface IDEDistributionOptionBuildNumber : IDEDistributionOption
//@property (nonatomic,readonly) NSSet * requiredInputContextPropertyNames;
//@property (nonatomic,readonly) NSSet * providedOutputContextPropertyNames;
//+ (id)availableOptionsForPropertyList;
//+ (id)propertyListForContext:(id)v1;
//- (char)loadFromExportOptions:(id)v1 error:(id *)v2;
//- (id)initWithIdentifier:(id)v1 context:(id)v2;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation19TestSummariesStream : NSObject {
//    id streamWriter;
//    id bundleWriter;
//}
//- (void)builder:(id)v1 didStartTestWithName:(id)v2 identifier:(id)v3;
//- (void)builder:(id)v1 didFinishTestWithSummary:(id)v2;
//- (void)builder:(id)v1 didStartTestSuiteWithSummary:(id)v2;
//- (void)builder:(id)v1 didFinishTestSuiteWithSummary:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34IDESourceControlHostAuthentication : NSObject
//- (id)init;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDEProvisionableDestination : NSObject {
//    id device;
//    id targetSDK;
//    id isProxiedDestination;
//}
//@property (nonatomic,readonly) DVTCodesignableDeviceSnapshot * device;
//@property (nonatomic,readonly) DVTSDK * targetSDK;
//@property (nonatomic,readonly) char isProxiedDestination;
//@property (nonatomic,readonly) NSString * description;
//@property (nonatomic,readonly) long long hash;
//- (id)initWithDeviceSnapshot:(id)v1 targetSDK:(id)v2;
//- (id)initWithDevice:(id)v1 targetSDK:(id)v2;
//- (id)initWithRunDestination:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20NotarizationAuditLog : NSObject {
//    id logFormatVersion;
//    id jobId;
//    id status;
//    id statusSummary;
//    id statusCode;
//    id archiveFilename;
//    id uploadDate;
//    id sha256;
//    id issues;
//    id ticketContents;
//}
//@property (readonly) long long distributionEventState;
//@property (nonatomic,readonly) long long logFormatVersion;
//@property (nonatomic,readonly) NSString * jobId;
//@property (nonatomic,readonly) NSString * status;
//@property (nonatomic,readonly) NSString * statusSummary;
//@property (nonatomic,readonly) long long statusCode;
//@property (nonatomic,readonly) NSString * archiveFilename;
//@property (nonatomic,readonly) NSDate * uploadDate;
//@property (nonatomic,readonly) NSString * sha256;
//@property (nonatomic,readonly) NSArray * issues;
//@property (nonatomic,readonly) NSArray * ticketContents;
//@property (nonatomic,readonly) NSArray * errors;
//@property (nonatomic,readonly) NSArray * warnings;
//@property (nonatomic,readonly) NSArray * notices;
//+ (id)auditLogWithFileURL:(id)v1 error:(id *)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation17NotarizationIssue : NSObject {
//    id severity;
//    id path;
//    id message;
//    id docUrl;
//    id internalCode;
//}
//@property (nonatomic,readonly) NSString * severity;
//@property (nonatomic,readonly) NSString * path;
//@property (nonatomic,readonly) NSString * message;
//@property (nonatomic,readonly) NSURL * docUrl;
//@property (nonatomic,readonly) NSNumber * code;
//@property (nonatomic,readonly) long long distributionIssueSeverity;
//@property (nonatomic,readonly) NSError * errorRepresentation;
//@property (nonatomic,readonly) NSString * description;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation25NotarizationTicketContent : NSObject {
//    id path;
//    id arch;
//    id digestAlgorithm;
//    id cdhash;
//}
//@property (nonatomic,readonly) NSString * path;
//@property (nonatomic,readonly) NSString * arch;
//@property (nonatomic,readonly) NSString * digestAlgorithm;
//@property (nonatomic,readonly) NSString * cdhash;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDEEnvironmentVariableEntry : NSObject {
//    id key;
//    id value;
//    id enabled;
//    id defaultEnabled;
//    id isArchivedVersion;
//}
//@property (nonatomic,copy) NSString * key;
//@property (nonatomic,copy) NSString * value;
//@property (nonatomic) char enabled;
//@property (nonatomic) char defaultEnabled;
//@property (nonatomic) char isArchivedVersion;
//@property (nonatomic,readonly) NSString * description;
//@property (nonatomic,readonly) long long hash;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setKeyFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setValueFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)setIsEnabledFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (char)isEnabled;
//- (id)initWithKey:(id)v1 value:(id)v2 enabled:(char)v3;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(void *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation37IDEStructureEditingInsertingProcedure : _TtC13IDEFoundation35IDEStructureEditingPlannedProcedure {
//    id insertionPlan;
//    id destinationGroup;
//}
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation26SigningEditorProvisionable : NSObject {
//    id configurationDataSourceDelegate;
//    id dataSource;
//    id manager;
//    id $__lazy_storage_$_iOSMacDataSource;
//    id observedReadOnlyKeyPaths;
//    id delegate;
//    id configuration;
//    id teams;
//}
//@property (nonatomic) NSObject<IDESigningEditorConfigurationDataSourceDelegate> * configurationDataSourceDelegate;
//@property (nonatomic,readonly) NSObject<IDEProvisioningAssetSelectionDataSource> * dataSource;
//@property (nonatomic) _TtC13IDEFoundation33SigningEditorProvisionableManager * manager;
//@property (nonatomic,retain) NSObject<IDESigningEditorIOSMacAssetSelectionDataSource><NSObject> * iOSMacDataSource;
//@property (nonatomic,readonly) _TtC13IDEFoundation46SigningEditorCapsuleViewStateRestorationRecord * restorationRecord;
//@property (nonatomic,readonly) NSArray * configurationNames;
//@property (nonatomic,readonly) NSString * title;
//@property (nonatomic,readonly) _TtC13IDEFoundation26SigningEditorConfiguration * configuration;
//@property (nonatomic) long long provisioningStyle;
//@property (nonatomic,readonly) char isBundleIdentifierReadOnly;
//@property (nonatomic,readonly) char wantsBundleIdentifierEditing;
//@property (nonatomic,readonly) char wantsBundleIdentifierEditingLabel;
//@property (nonatomic,readonly) NSString * bundleIdentifierPlaceholder;
//@property (nonatomic,copy) NSString * bundleIdentifier;
//@property (nonatomic,retain) NSOrderedSet * teams;
//@property (nonatomic,readonly) char isTeamSelectionRequired;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicTeam> * team;
//@property (nonatomic,readonly) char repairBusy;
//@property (nonatomic,readonly) char profileChangeable;
//@property (nonatomic,readonly) long long profileSupport;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicProfile> * provisioningProfile;
//@property (nonatomic,readonly) IDEProfileQualification * profileQualification;
//@property (nonatomic,readonly) char showEmptyProfileSelectionPlaceholder;
//@property (nonatomic,readonly) char isSigningIdentityChangeable;
//@property (nonatomic,readonly) NSOrderedSet * signingIdentities;
//@property (nonatomic,retain) NSObject<IDEProvisioningBasicSigningIdentity> * signingIdentity;
//@property (nonatomic,readonly) long long signingStyle;
//@property (nonatomic,readonly) char wantsTeamSelectionRegardlessOfSigningStyle;
//@property (nonatomic,readonly) NSString * repairBusyReason;
//@property (nonatomic,readonly) NSArray * errors;
//@property (nonatomic,readonly) long long hash;
//+ (id)keyPathsForValuesAffectingProvisioningStyle;
//+ (id)keyPathsForValuesAffectingIsRepairBusy;
//+ (id)keyPathsForValuesAffectingRepairBusyReason;
//+ (id)keyPathsForValuesAffectingErrors;
//- (void)dealloc;
//- (void)observeValueForKeyPath:(id)v1 ofObject:(id)v2 change:(id)v3 context:(void *)v4;
//- (char)isRepairBusy;
//- (char)isProfileChangeable;
//- (void)locateEligibleProfiles:(id *)v1 ineligibleProfiles:(id *)v2;
//- (id)provisioningProfileDownloaderContextWithError:(id *)v1;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation53SigningEditorCapabilityItemLibraryAssetProtocolFilter : NSObject {
//    id coalescedContext;
//    id allItems;
//    id $__lazy_storage_$_items;
//}
//@property (nonatomic,readonly) _TtC13IDEFoundation63SigningEditorCapabilityItemLibraryAssetManagerCoaelescedContext * coalescedContext;
//@property (nonatomic,readonly) NSArray * allItems;
//@property (nonatomic,copy) NSArray * items;
//- (id)initWithContext:(id)v1 allItems:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation18ProductsDescriptor : _TtCs12_SwiftObject {
//    id cache;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDEResultBundleMetricsReport : DVTMetricsReport {
//    id resultBundleFormatVersion;
//    id defaultResultBundleFormatVersion;
//    id machineIdentifier;
//    id resultBundleTotalSize;
//    id environment;
//    id resultBundleSavingSuccess;
//    id resultBundleSavingError;
//    id actionTypes;
//}
//@property (nonatomic,copy) NSString * resultBundleFormatVersion;
//@property (nonatomic,retain) NSNumber * defaultResultBundleFormatVersion;
//@property (nonatomic,copy) NSString * machineIdentifier;
//@property (nonatomic,retain) NSNumber * resultBundleTotalSize;
//@property (nonatomic,copy) NSString * environment;
//@property (nonatomic) char resultBundleSavingSuccess;
//@property (nonatomic,retain) NSString * resultBundleSavingError;
//@property (nonatomic,copy) NSArray * actionTypes;
//+ (long long)currentReportVersion;
//+ (void)setCurrentReportVersion:(long long)v1;
//+ (id)keyPathsForReporting;
//+ (id)logAspect;
//+ (id)Key_Identifier;
//+ (id)Key_IdentifierTimestamp;
//- (id)init;
//- (id)initWithDictionary:(id)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21IDEBuildableReference : NSObject {
//    id buildableIdentifier;
//    id blueprintIdentifier;
//    id blueprintName;
//    id referencedContainerPath;
//}
//@property (nonatomic,readonly) NSString * buildableIdentifier;
//@property (nonatomic,readonly) NSString * blueprintIdentifier;
//@property (nonatomic,readonly) NSString * blueprintName;
//@property (nonatomic,readonly) NSString * referencedContainerPath;
//- (id)initWithBuildableIdentifier:(id)v1 blueprintIdentifier:(id)v2 blueprintName:(id)v3 referencedContainerPath:(id)v4;
//- (id)initWithSchemeBuildableReference:(id)v1 blueprintName:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation7IPATool : NSObject {
//    id logAspect;
//}
//@property (nonatomic,readonly) DVTLogAspect * logAspect;
//- (id)initWithLogAspect:(id)v1;
//- (id)compileBitcodeWithIpa:(id)v1 error:(id *)v2;
//- (id)availableThinningVariantsWithIpa:(id)v1 error:(id *)v2;
//- (id)availableDevicesWithVariantsWithIpa:(id)v1 error:(id *)v2;
//- (id)thinWithIpa:(id)v1 variants:(id)v2 error:(id *)v3;
//- (id)coalescedThinningVariantsWithIpa:(id)v1 error:(id *)v2;
//- (id)availableDevicesToCoalescedVariantSetWithIpa:(id)v1 error:(id *)v2;
//- (id)thinWithIpa:(id)v1 coalescedVariant:(id)v2 error:(id *)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IPAToolDevice : NSObject {
//    id identifier;
//    id displayName;
//}
//@property (nonatomic,readonly) NSString * identifier;
//@property (nonatomic,readonly) NSString * displayName;
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) NSString * description;
//- (id)initWithIdentifier:(id)v1 displayName:(id)v2;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IPAToolThinningVariant : NSObject {
//    id device;
//    id deploymentTarget;
//    id isPostOSVariants;
//}
//@property (nonatomic,readonly) IPAToolDevice * device;
//@property (nonatomic,readonly) NSString * deploymentTarget;
//@property (nonatomic,readonly) char isPostOSVariants;
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) NSString * description;
//- (id)initWithDevice:(id)v1 deploymentTarget:(id)v2 isPostOSVariants:(char)v3;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IPAToolCoalescedThinningVariant : NSObject {
//    id variants;
//}
//@property (nonatomic,readonly) NSSet * variants;
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) NSString * description;
//- (id)initWithVariants:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IPAToolThinnedIPAResult : NSObject {
//    id root;
//    id sourceToDestination;
//}
//@property (nonatomic,readonly) NSURL * root;
//@property (nonatomic,readonly) NSDictionary * sourceToDestination;
//- (id)initWithRoot:(id)v1 sourceToDestination:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation13IDEJSONMerger : _TtCs12_SwiftObject {
//    id originalData;
//    id originalJSON;
//    id jsonObjectWithData;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation27IDEConcreteTestingSpecifier : NSObject {
//    id _testable;
//    id options;
//    id skippedTests;
//    id selectedTests;
//}
//@property (nonatomic,readonly) NSObject<IDETestPlanResolvedOptions> * options;
//@property (nonatomic,readonly) NSSet * skippedTests;
//@property (nonatomic,readonly) NSSet * selectedTests;
//@property (nonatomic,readonly) NSObject<IDETestable> * testable;
//- (id)initWithTestable:(id)v1 options:(id)v2 skippedTests:(id)v3 selectedTests:(id)v4;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation59SigningEditorCapabilityItemLibraryAssetNetworkDefinedSource : _TtCs12_SwiftObject<IDESigningEditorCapabilityItemLibraryAssetManagerSource> {
//    id delegate;
//    id refreshQueue;
//    id contextToResult;
//    id accountManager;
//    id accountManagerSubscription;
//    id currentContext;
//    id rateLimiter;
//}
//@property (nonatomic,retain) NSObject<IDESigningEditorCapabilityItemLibraryAssetManagerSourceDelegate> * delegate;
//- (id)resultForContext:(id)v1;
//- (char)isBusyForContext:(id)v1;
//- (char)wantsRefreshForContext:(id)v1;
//- (void)refreshForContext:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundationP33_41248A53AAFF25D43AFC078A8E61716D11MockService : _TtCs12_SwiftObject
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundationP33_41248A53AAFF25D43AFC078A8E61716D11MockService27SigningEditorCapabilityItem : _TtCs12_SwiftObject {
//    id name;
//    id capabilityDescription;
//    id imageURL;
//    id identifier;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * capabilityDescription;
//@property (nonatomic,readonly) NSURL * imageURL;
//@property (nonatomic,readonly) NSString * identifier;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation22IDEBuildNoticeProvider27BlueprintLogSectionObserver : DVTInvalidation_NSObject {
//    id blueprintSection;
//    id blueprintID;
//    id observations;
//    id sectionIDs;
//    id sealedSections;
//    id observer;
//    id completed;
//}
//- (void)primitiveInvalidate;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation26IDESchemeTestPlanReference : _TtC13IDEFoundation22IDESchemeFileReference {
//    id testPlanModifiedObserver;
//    id testPlanFetchResult;
//    id wasMarkedAsDefaultUponDeserialization;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic) char wasMarkedAsDefaultUponDeserialization;
//@property (nonatomic,readonly) _TtC13IDEFoundation11IDETestPlan * testPlan;
//@property (nonatomic,readonly) NSError * testPlanRetrievalError;
//+ (id)keyPathsForValuesAffectingName;
//- (void)dealloc;
//- (char)saveWithError:(id *)v1;
//- (char)validateWithSchemeActionResult:(id)v1 error:(id *)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)setDefaultFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation31ConsolidatedCapabilitiesContext : NSObject<IDESigningEditorCapabilityItemLibraryConsolidatedContextSource,IDESigningEditorCapabilityItemProvisioningConsolidatedContextSource> {
//    id source;
//    id editingDelegate;
//    id libraryDelegate;
//    id provisioningDelegate;
//    id isCachedConfigurationToContextInvalidated;
//    id cachedConfigurationToContext;
//    id isCachedConfigurationToEnabledItemsInvalidated;
//    id cachedConfigurationToEnabledItems;
//    id isCachedConfigurationToIdentifierToDisabledItem;
//    id cachedConfigurationToIdentifierToDisabledItem;
//}
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemEditingConsolidatedContextSourceDelegate> * editingDelegate;
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemLibraryConsolidatedContextSourceDelegate> * libraryDelegate;
//@property (nonatomic) NSObject<IDESigningEditorCapabilityItemProvisioningConsolidatedContextSourceDelegate> * provisioningDelegate;
//@property (nonatomic,readonly) NSDictionary * configurationToContext;
//@property (nonatomic,readonly) NSDictionary * configurationToEnabledItems;
//@property (nonatomic,readonly) NSDictionary * configurationToIdentifierToDisabledItem;
//- (id)initWithSource:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation47SigningEditorCapsuleViewStateRestorationManager : _TtCs12_SwiftObject {
//    id provider;
//    id managerSubscription;
//    id providerSubscription;
//    id logAspect;
//    id projectName;
//    id targetName;
//    id allConfigurations;
//    id manager;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation40DistributionArchiveSelectableReformatter : NSObject {
//    id name;
//    id appTypeDescription;
//    id reformatter;
//    id bundleIdentifier;
//    id sortOrderPreference;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) NSString * appTypeDescription;
//@property (nonatomic,readonly) NSObject<IDEDistributionArchiveReformatter> * reformatter;
//@property (nonatomic,readonly) NSString * bundleIdentifier;
//@property (nonatomic,readonly) long long sortOrderPreference;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation12TicketerTool : NSObject {
//    id logAspect;
//}
//@property (nonatomic,readonly) DVTLogAspect * logAspect;
//- (id)initWithLogAspect:(id)v1;
//- (char)stapleWithAppFilePath:(id)v1 error:(id *)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation35LoggingTestSummariesBuilderDelegate : NSObject {
//    id log;
//}
//- (id)initWithLog:(id)v1;
//- (id)init;
//- (void)builder:(id)v1 didStartTestWithName:(id)v2 identifier:(id)v3;
//- (void)builder:(id)v1 didFinishTestWithSummary:(id)v2;
//- (void)builder:(id)v1 didStartTestSuiteWithSummary:(id)v2;
//- (void)builder:(id)v1 didFinishTestSuiteWithSummary:(id)v2;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation37BroadcastTestSummariesBuilderDelegate : NSObject {
//    id subdelegates;
//}
//- (id)initWithSubdelegates:(id)v1;
//- (void)builder:(id)v1 didStartTestWithName:(id)v2 identifier:(id)v3;
//- (void)builder:(id)v1 didFinishTestWithSummary:(id)v2;
//- (void)builder:(id)v1 didStartTestSuiteWithSummary:(id)v2;
//- (void)builder:(id)v1 didFinishTestSuiteWithSummary:(id)v2;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation35IDETestingDiagnosticReportProcessor : _TtCs12_SwiftObject {
//    id _diagnosticReportConstructor;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation12IssuesStream : _TtCs12_SwiftObject {
//    id streamWriter;
//    id bundleWriter;
//    id resultInfo;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation63SigningEditorCapabilityItemLibraryAssetManagerCoaelescedContext : NSObject {
//    id configuration;
//    id contexts;
//    id $__lazy_storage_$_firstInvalidContextError;
//    id $__lazy_storage_$_firstContextTargetWithoutCapabilitiesSupport;
//}
//@property (nonatomic,readonly) long long hash;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34IDESourceControlCredentialsManager : NSObject<DVTSourceControlSSHKeyCredentialsHandler> {
//    id keychain;
//    id keychainService;
//}
//+ (id)defaultManager;
//- (void)handleSSHKeysAuthStrategyPassphraseRequest:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (void)handleSSHKeysAuthStrategiesPassphrasesRequest:(id)v1 completionBlock:(void (^ /* unknown block signature */)(void))v2;
//- (char)saveAuthenticationFor:(id)v1 error:(id *)v2;
//- (char)savePasswordFor:(id)v1 oldUsername:(id)v2 authenticationStrategy:(id)v3 error:(id *)v4;
//- (id)sshKeyPasswordForURL:(id)v1 error:(id *)v2;
//- (id)sshKeyAuthenticationStrategyForSSHKeyURL:(id)v1 username:(id)v2;
//- (id)basicAuthenticationStrategyFor:(id)v1 username:(id)v2;
//- (id)passwordFor:(id)v1 username:(id)v2;
//- (void)deleteWithAccount:(id)v1;
//- (char)deletePasswordFor:(id)v1 authenticationStrategy:(id)v2 error:(id *)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation41IDEActivityLogTypesSerializationConverter : NSObject {
//    id name;
//}
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation21IDEConsoleOutputGroup : NSObject {
//    id parent;
//    id title;
//    id entries;
//    id closed;
//    id stream;
//}
//@property (nonatomic,readonly) _TtC13IDEFoundation21IDEConsoleOutputGroup * root;
//@property (nonatomic,readonly) NSString * description;
//+ (id)shared;
//- (id)initWithTitle:(id)v1 parent:(id)v2 stream:(struct __sFILE *)v3;
//- (id)addNewSubgroupWithTitle:(id)v1;
//- (void)addText:(id)v1 addNewlineIfNeeded:(char)v2;
//- (void)close;
//- (void)dumpWithDepth:(long long)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation46IDESourceControlHostPrivateTokenAuthentication : _TtC13IDEFoundation34IDESourceControlHostAuthentication {
//    id tokenAuthentication;
//    id tokenKeychainIdentifier;
//    id refreshTokenKeychainIdentifier;
//}
//- (id)initWithHostURL:(id)v1 token:(id)v2 refreshToken:(id)v3;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation24HardenedRuntimeAllowance : NSObject {
//    id key;
//    id entitlement;
//    id enabled;
//    id usageDescriptionKeys;
//}
//@property (nonatomic,readonly) NSString * key;
//@property (nonatomic,readonly) NSString * entitlement;
//@property (nonatomic) char enabled;
//@property (nonatomic,readonly) NSArray * usageDescriptionKeys;
//@property (nonatomic,readonly) long long hash;
//- (id)initWithKey:(id)v1 entitlement:(id)v2 enabled:(char)v3 usageDescriptionKeys:(id)v4;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDELocationScenarioReference : _TtC13IDEFoundation24IDESchemeOptionReference<DVTXMLUnarchiving> {
//    id referenceType;
//}
//@property (readonly) unsigned long long hash;
//@property (readonly) Class superclass;
//@property (readonly,copy) NSString * description;
//@property (readonly,copy) NSString * debugDescription;
//@property (nonatomic) long long referenceType;
//@property (nonatomic,readonly) long long hash;
//- (id)initFromXMLUnarchiver:(id)v1 archiveVersion:(float)v2;
//- (void)setReferenceTypeFromUTF8String:(char *)v1 fromXMLUnarchiver:(id)v2;
//- (void)dvt_encodeAttributesWithXMLArchiver:(id)v1 version:(id)v2;
//- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)v1 version:(id)v2;
//- (id)initWithIdentifier:(id)v1 referenceType:(long long)v2;
//- (id)initWithLocationScenario:(id)v1;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (id)initWithIdentifier:(id)v1;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation34IDESourceControlFingerprintManager : NSObject<DVTSourceControlFingerprintManager> {
//    id shouldLoadKnownHosts;
//    id sourceControlManager;
//    id keyDispatchQueue;
//    id knownHosts;
//}
//- (id)initWithShouldLoadKnownHosts:(char)v1 sourceControlManager:(id)v2;
//- (void)addKnownHost:(id)v1 fingerprint:(id)v2;
//- (id)existingFingerprintForHost:(id)v1;
//- (void)loadKnownHostsFromDictionary:(id)v1;
//- (id)existingFingerprintForRepository:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation20AllSchemesDescriptor : _TtCs12_SwiftObject {
//    id cache;
//}
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation28IDEXCTestRunFileTestPlanInfo : NSObject {
//    id name;
//    id isDefault;
//}
//@property (nonatomic,readonly) NSString * name;
//@property (nonatomic,readonly) char isDefault;
//@property (nonatomic,readonly) long long hash;
//- (id)initWithName:(id)v1 isDefault:(char)v2;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation38IDEStructureEditingFileSystemOperation : _TtC13IDEFoundation35IDEStructureEditingPlannedOperation
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation46IDEStructureEditingFileSystemMoveCopyOperation : _TtC13IDEFoundation38IDEStructureEditingFileSystemOperation
//@end
//
//
///*****************************************************************/
//
//@interface _TtC13IDEFoundation45IDEStructureEditingDirectoryCreationOperation : _TtC13IDEFoundation38IDEStructureEditingFileSystemOperation
//@end
//
//
///*****************************************************************/
//
//@interface IDETestPlanOverrides : IDELaunchTestSchemeActionOverrides {
//    id parallelizable;
//    id testExecutionOrdering;
//    id deviceAppDataReference;
//    id locationScenarioReference;
//    id uiTestingScreenshotsLifetime;
//    id areLocalizationScreenshotsEnabled;
//    id userAttachmentLifetime;
//    id testTimeoutsEnabled;
//    id defaultTestExecutionTimeAllowance;
//    id maximumTestExecutionTimeAllowance;
//}
//@property (nonatomic,readonly) long long hash;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(void *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface _TtCC13IDEFoundation11IDETestPlan15DetailedOptions : _TtCs12_SwiftObject {
//    id options;
//}
//@end
//
//
///*****************************************************************/
//
//@interface IDETestPlanOptions : IDELaunchTestSchemeActionOptions {
//    id parentOptions;
//    id overrides;
//    id isRootLevel;
//    id _details;
//}
//@property (nonatomic,readonly) NSNumber * defaultTestExecutionTimeAllowance;
//@property (nonatomic,readonly) NSNumber * maximumTestExecutionTimeAllowance;
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) char parallelizable;
//@property (nonatomic,readonly) long long testExecutionOrdering;
//@property (nonatomic,readonly) _TtC13IDEFoundation25IDEDeviceAppDataReference * deviceAppDataReference;
//@property (nonatomic,readonly) _TtC13IDEFoundation28IDELocationScenarioReference * locationScenarioReference;
//@property (nonatomic,readonly) long long uiTestingScreenshotsLifetime;
//@property (nonatomic,readonly) char areLocalizationScreenshotsEnabled;
//@property (nonatomic,readonly) long long userAttachmentLifetime;
//@property (nonatomic,readonly) char testTimeoutsEnabled;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(void *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchTestSchemeActionOverrides : NSObject {
//    id commandLineArgumentEntries;
//    id environmentVariableEntries;
//    id buildableReferenceForMacroExpansion;
//    id codeCoverage;
//    id addressSanitizer;
//    id isThreadSanitizerEnabled;
//    id isUndefinedBehaviorSanitizerEnabled;
//    id isMainThreadCheckerEnabled;
//    id language;
//    id region;
//    id isMallocScribbleEnabled;
//    id isMallocGuardEdgesEnabled;
//    id isGuardMallocEnabled;
//    id isNSZombieEnabled;
//    id mallocStackLoggingOptions;
//}
//@property (nonatomic,readonly) long long hash;
//- (id)init;
//- (char)isEqual:(id)v1;
//- (id)copyWithZone:(void *)v1;
//- (void).cxx_destruct;
//@end
//
//
///*****************************************************************/
//
//@interface IDELaunchTestSchemeActionOptions : NSObject {
//    id parentOptions;
//    id overrides;
//}
//@property (nonatomic,readonly) char isAddressSanitizerEnabled;
//@property (nonatomic,readonly) char isAddressSanitizerStackUseAfterReturnEnabled;
//@property (nonatomic,readonly) NSString * mallocStackLoggingType;
//@property (nonatomic,readonly) long long hash;
//@property (nonatomic,readonly) NSArray * commandLineArgumentEntries;
//@property (nonatomic,readonly) NSArray * environmentVariableEntries;
//@property (nonatomic,readonly) _TtC13IDEFoundation21IDEBuildableReference * buildableReferenceForMacroExpansion;
//@property (nonatomic,readonly) char isThreadSanitizerEnabled;
//@property (nonatomic,readonly) char isUndefinedBehaviorSanitizerEnabled;
//@property (nonatomic,readonly) char isMainThreadCheckerEnabled;
//@property (nonatomic,readonly) NSString * language;
//@property (nonatomic,readonly) NSString * region;
//@property (nonatomic,readonly) char isMallocScribbleEnabled;
//@property (nonatomic,readonly) char isMallocGuardEdgesEnabled;
//@property (nonatomic,readonly) char isGuardMallocEnabled;
//@property (nonatomic,readonly) char isNSZombieEnabled;
//- (id)commandLineArgumentsForScheme:(id)v1 expandedUsingBuildParameters:(id)v2;
//- (id)environmentVariablesForScheme:(id)v1 expandedUsingBuildParameters:(id)v2;
//- (id)buildableForMacroExpansionUsing:(id)v1;
//- (char)isEqual:(id)v1;
//- (id)init;
//- (void).cxx_destruct;
//@end
